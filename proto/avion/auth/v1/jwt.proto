syntax = "proto3";

package avion.auth.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

// JWTトークンのタイプ
enum TokenType {
	// 未指定
	TOKEN_TYPE_UNSPECIFIED = 0;
	// アクセストークン
	TOKEN_TYPE_ACCESS = 1;
	// リフレッシュトークン
	TOKEN_TYPE_REFRESH = 2;
	// IDトークン（OpenID Connect）
	TOKEN_TYPE_ID = 3;
}

// JWTクレーム
message JwtClaims {
	// 発行者（iss）
	string issuer = 1;
	// サブジェクト（sub）- ユーザーID
	string subject = 2;
	// オーディエンス（aud）
	repeated string audience = 3;
	// 有効期限（exp）
	google.protobuf.Timestamp expiration = 4;
	// 有効開始時刻（nbf）
	google.protobuf.Timestamp not_before = 5;
	// 発行時刻（iat）
	google.protobuf.Timestamp issued_at = 6;
	// JWT ID（jti）
	string jwt_id = 7;
	// カスタムクレーム
	map<string, string> custom_claims = 8;
}

// JWTトークン情報
message JwtToken {
	// トークン文字列
	string token = 1;
	// トークンタイプ
	TokenType type = 2;
	// クレーム情報
	JwtClaims claims = 3;
	// 署名アルゴリズム（RS256, HS256等）
	string algorithm = 4;
	// キーID（複数の署名キーを管理する場合）
	string key_id = 5;
}

// JWT生成リクエスト
message GenerateJwtRequest {
	// ユーザーID
	string user_id = 1;
	// トークンタイプ
	TokenType token_type = 2;
	// スコープ（権限）
	repeated string scopes = 3;
	// カスタムクレーム
	map<string, string> custom_claims = 4;
	// 有効期限（秒）
	int32 expires_in = 5;
	// オーディエンス
	repeated string audience = 6;
}

// JWT生成レスポンス
message GenerateJwtResponse {
	// 生成されたトークン
	JwtToken token = 1;
	// トークンの有効期限
	google.protobuf.Timestamp expires_at = 2;
}

// JWT検証リクエスト
message VerifyJwtRequest {
	// 検証するトークン
	string token = 1;
	// 期待するトークンタイプ（オプション）
	TokenType expected_type = 2;
	// 期待するオーディエンス（オプション）
	repeated string expected_audience = 3;
	// 期待する発行者（オプション）
	string expected_issuer = 4;
}

// JWT検証レスポンス
message VerifyJwtResponse {
	// 検証結果
	bool is_valid = 1;
	// トークン情報（有効な場合）
	JwtToken token_info = 2;
	// エラーメッセージ（無効な場合）
	string error_message = 3;
	// エラーコード（無効な場合）
	JwtVerificationError error_code = 4;
}

// JWT検証エラーコード
enum JwtVerificationError {
	// 未指定
	JWT_VERIFICATION_ERROR_UNSPECIFIED = 0;
	// 無効な署名
	JWT_VERIFICATION_ERROR_INVALID_SIGNATURE = 1;
	// 期限切れ
	JWT_VERIFICATION_ERROR_EXPIRED = 2;
	// まだ有効でない
	JWT_VERIFICATION_ERROR_NOT_YET_VALID = 3;
	// 無効な発行者
	JWT_VERIFICATION_ERROR_INVALID_ISSUER = 4;
	// 無効なオーディエンス
	JWT_VERIFICATION_ERROR_INVALID_AUDIENCE = 5;
	// 無効なフォーマット
	JWT_VERIFICATION_ERROR_INVALID_FORMAT = 6;
	// 無効なキーID
	JWT_VERIFICATION_ERROR_INVALID_KEY_ID = 7;
	// 失効済み
	JWT_VERIFICATION_ERROR_REVOKED = 8;
}

// JWTリフレッシュリクエスト
message RefreshJwtRequest {
	// リフレッシュトークン
	string refresh_token = 1;
	// 新しいスコープ（オプション、元のスコープ以下である必要がある）
	repeated string scopes = 2;
}

// JWTリフレッシュレスポンス
message RefreshJwtResponse {
	// 新しいアクセストークン
	JwtToken access_token = 1;
	// 新しいリフレッシュトークン（ローテーションする場合）
	JwtToken refresh_token = 2;
	// アクセストークンの有効期限
	google.protobuf.Timestamp access_token_expires_at = 3;
	// リフレッシュトークンの有効期限
	google.protobuf.Timestamp refresh_token_expires_at = 4;
}

// JWT失効リクエスト
message RevokeJwtRequest {
	// 失効させるトークン
	string token = 1;
	// トークンタイプ
	TokenType token_type = 2;
	// 全トークンを失効させる（ユーザーの全セッション終了）
	bool revoke_all = 3;
}

// JWT失効レスポンス
message RevokeJwtResponse {
	// 失効成功フラグ
	bool success = 1;
	// 失効したトークン数
	int32 revoked_count = 2;
}

// JWTイントロスペクションリクエスト（RFC 7662準拠）
message IntrospectJwtRequest {
	// イントロスペクション対象のトークン
	string token = 1;
	// トークンタイプヒント（オプション）
	string token_type_hint = 2;
}

// JWTイントロスペクションレスポンス（RFC 7662準拠）
message IntrospectJwtResponse {
	// トークンがアクティブかどうか
	bool active = 1;
	// スコープ
	string scope = 2;
	// クライアントID
	string client_id = 3;
	// ユーザー名
	string username = 4;
	// トークンタイプ
	string token_type = 5;
	// 有効期限
	google.protobuf.Timestamp exp = 6;
	// 発行時刻
	google.protobuf.Timestamp iat = 7;
	// 有効開始時刻
	google.protobuf.Timestamp nbf = 8;
	// サブジェクト
	string sub = 9;
	// オーディエンス
	repeated string aud = 10;
	// 発行者
	string iss = 11;
	// JWT ID
	string jti = 12;
	// 追加情報
	google.protobuf.Struct extra = 13;
}

// JWT署名キー情報
message JwtSigningKey {
	// キーID
	string key_id = 1;
	// アルゴリズム（RS256, HS256等）
	string algorithm = 2;
	// 公開鍵（RSA等の場合）
	string public_key = 3;
	// キーの用途（sig, enc）
	string use = 4;
	// キータイプ（RSA, EC等）
	string key_type = 5;
	// 作成日時
	google.protobuf.Timestamp created_at = 6;
	// 有効期限
	google.protobuf.Timestamp expires_at = 7;
	// アクティブフラグ
	bool is_active = 8;
}

// JWKS（JSON Web Key Set）取得リクエスト
message GetJwksRequest {
	// 特定のキーIDを指定（オプション）
	string key_id = 1;
}

// JWKS（JSON Web Key Set）取得レスポンス
message GetJwksResponse {
	// JWKSのJSON表現
	google.protobuf.Struct keys = 1;
}

// JWT設定取得リクエスト
message GetJwtConfigRequest {
	// 設定名（オプション）
	string config_name = 1;
}

// JWT設定取得レスポンス
message GetJwtConfigResponse {
	// アクセストークンの有効期限（秒）
	int32 access_token_ttl = 1;
	// リフレッシュトークンの有効期限（秒）
	int32 refresh_token_ttl = 2;
	// IDトークンの有効期限（秒）
	int32 id_token_ttl = 3;
	// 署名アルゴリズム
	string signing_algorithm = 4;
	// 発行者
	string issuer = 5;
	// デフォルトオーディエンス
	repeated string default_audience = 6;
	// リフレッシュトークンのローテーション有効フラグ
	bool refresh_token_rotation = 7;
	// JTI（JWT ID）の使用フラグ
	bool use_jti = 8;
	// クロックスキュー（秒）
	int32 clock_skew = 9;
}