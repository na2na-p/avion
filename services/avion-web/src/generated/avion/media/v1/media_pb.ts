// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file avion/media/v1/media.proto (package avion.media.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file avion/media/v1/media.proto.
 */
export const file_avion_media_v1_media: GenFile = /*@__PURE__*/
  fileDesc("Chphdmlvbi9tZWRpYS92MS9tZWRpYS5wcm90bxIOYXZpb24ubWVkaWEudjEi6gMKBU1lZGlhEgoKAmlkGAEgASgJEhAKCG93bmVyX2lkGAIgASgJEicKBHR5cGUYAyABKA4yGS5hdmlvbi5tZWRpYS52MS5NZWRpYVR5cGUSGQoRb3JpZ2luYWxfZmlsZW5hbWUYBCABKAkSEQoJbWltZV90eXBlGAUgASgJEgwKBHNpemUYBiABKAMSCwoDdXJsGAcgASgJEhUKDXRodW1ibmFpbF91cmwYCCABKAkSNQoGc3RhdHVzGAkgASgOMiUuYXZpb24ubWVkaWEudjEuTWVkaWFQcm9jZXNzaW5nU3RhdHVzEi8KCG1ldGFkYXRhGAogASgLMh0uYXZpb24ubWVkaWEudjEuTWVkaWFNZXRhZGF0YRIuCgpjcmVhdGVkX2F0GAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgp1cGRhdGVkX2F0GAwgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgpleHBpcmVzX2F0GA0gASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIRCglpc19wdWJsaWMYDiABKAgSEwoLZGVzY3JpcHRpb24YDyABKAkSDAoEdGFncxgQIAMoCRIMCgRoYXNoGBEgASgJIvUBCg1NZWRpYU1ldGFkYXRhEiwKBWltYWdlGAEgASgLMh0uYXZpb24ubWVkaWEudjEuSW1hZ2VNZXRhZGF0YRIsCgV2aWRlbxgCIAEoCzIdLmF2aW9uLm1lZGlhLnYxLlZpZGVvTWV0YWRhdGESLAoFYXVkaW8YAyABKAsyHS5hdmlvbi5tZWRpYS52MS5BdWRpb01ldGFkYXRhEi4KCGxvY2F0aW9uGAQgASgLMhwuYXZpb24ubWVkaWEudjEuTG9jYXRpb25JbmZvEioKBmNhbWVyYRgFIAEoCzIaLmF2aW9uLm1lZGlhLnYxLkNhbWVyYUluZm8ipwEKDUltYWdlTWV0YWRhdGESDQoFd2lkdGgYASABKAUSDgoGaGVpZ2h0GAIgASgFEisKBmZvcm1hdBgDIAEoDjIbLmF2aW9uLm1lZGlhLnYxLkltYWdlRm9ybWF0EhMKC2NvbG9yX2RlcHRoGAQgASgFEgsKA2RwaRgFIAEoBRITCgtpc19hbmltYXRlZBgGIAEoCBITCgtmcmFtZV9jb3VudBgHIAEoBSLPAQoNVmlkZW9NZXRhZGF0YRINCgV3aWR0aBgBIAEoBRIOCgZoZWlnaHQYAiABKAUSKwoGZm9ybWF0GAMgASgOMhsuYXZpb24ubWVkaWEudjEuVmlkZW9Gb3JtYXQSKwoIZHVyYXRpb24YBCABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SEgoKZnJhbWVfcmF0ZRgFIAEoAhIPCgdiaXRyYXRlGAYgASgDEg0KBWNvZGVjGAcgASgJEhEKCWhhc19hdWRpbxgIIAEoCCKwAQoNQXVkaW9NZXRhZGF0YRIrCgZmb3JtYXQYASABKA4yGy5hdmlvbi5tZWRpYS52MS5BdWRpb0Zvcm1hdBIrCghkdXJhdGlvbhgCIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhIPCgdiaXRyYXRlGAMgASgDEhMKC3NhbXBsZV9yYXRlGAQgASgFEhAKCGNoYW5uZWxzGAUgASgFEg0KBWNvZGVjGAYgASgJIlkKDExvY2F0aW9uSW5mbxIQCghsYXRpdHVkZRgBIAEoARIRCglsb25naXR1ZGUYAiABKAESEAoIYWx0aXR1ZGUYAyABKAESEgoKcGxhY2VfbmFtZRgEIAEoCSKxAQoKQ2FtZXJhSW5mbxIMCgRtYWtlGAEgASgJEg0KBW1vZGVsGAIgASgJEgsKA2lzbxgDIAEoBRIQCghhcGVydHVyZRgEIAEoAhIVCg1zaHV0dGVyX3NwZWVkGAUgASgJEhQKDGZvY2FsX2xlbmd0aBgGIAEoAhIMCgRsZW5zGAcgASgJEiwKCHRha2VuX2F0GAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJ3CglUaHVtYm5haWwSCwoDdXJsGAEgASgJEisKBHNpemUYAiABKA4yHS5hdmlvbi5tZWRpYS52MS5UaHVtYm5haWxTaXplEg0KBXdpZHRoGAMgASgFEg4KBmhlaWdodBgEIAEoBRIRCglmaWxlX3NpemUYBSABKAMi2QEKDVVwbG9hZFNlc3Npb24SEgoKc2Vzc2lvbl9pZBgBIAEoCRIQCghtZWRpYV9pZBgCIAEoCRISCgp1cGxvYWRfdXJsGAMgASgJEi4KCmV4cGlyZXNfYXQYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhUKDW1heF9maWxlX3NpemUYBSABKAMSGgoSYWxsb3dlZF9taW1lX3R5cGVzGAYgAygJEhYKDnVwbG9hZGVkX2J5dGVzGAcgASgDEhMKC3RvdGFsX2J5dGVzGAggASgDIr0CChJNZWRpYVByb2Nlc3NpbmdKb2ISDgoGam9iX2lkGAEgASgJEhAKCG1lZGlhX2lkGAIgASgJEiwKBHR5cGUYAyABKA4yHi5hdmlvbi5tZWRpYS52MS5Qcm9jZXNzaW5nVHlwZRI1CgZzdGF0dXMYBCABKA4yJS5hdmlvbi5tZWRpYS52MS5NZWRpYVByb2Nlc3NpbmdTdGF0dXMSEgoKcGFyYW1ldGVycxgFIAEoCRIVCg1lcnJvcl9tZXNzYWdlGAYgASgJEi4KCnN0YXJ0ZWRfYXQYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjAKDGNvbXBsZXRlZF9hdBgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEwoLcmV0cnlfY291bnQYCSABKAUi3gIKD01lZGlhVXNhZ2VTdGF0cxIPCgd1c2VyX2lkGAEgASgJEhsKE3RvdGFsX3N0b3JhZ2VfYnl0ZXMYAiABKAMSGQoRdG90YWxfbWVkaWFfY291bnQYAyABKAMSQgoKdHlwZV9zdGF0cxgEIAMoCzIuLmF2aW9uLm1lZGlhLnYxLk1lZGlhVXNhZ2VTdGF0cy5UeXBlU3RhdHNFbnRyeRIcChRtb250aGx5X3VwbG9hZF9ieXRlcxgFIAEoAxIeChZtb250aGx5X2Rvd25sb2FkX2J5dGVzGAYgASgDEi4KCnVwZGF0ZWRfYXQYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wGlAKDlR5cGVTdGF0c0VudHJ5EgsKA2tleRgBIAEoCRItCgV2YWx1ZRgCIAEoCzIeLmF2aW9uLm1lZGlhLnYxLlR5cGVVc2FnZVN0YXRzOgI4ASI2Cg5UeXBlVXNhZ2VTdGF0cxINCgVjb3VudBgBIAEoAxIVCg1zdG9yYWdlX2J5dGVzGAIgASgDIocBCglDRE5Db25maWcSEAoIcHJvdmlkZXIYASABKAkSEAoIYmFzZV91cmwYAiABKAkSFQoNY3VzdG9tX2RvbWFpbhgDIAEoCRIRCgljYWNoZV90dGwYBCABKAUSFwoPdXNlX3NlY3VyZV91cmxzGAUgASgIEhMKC3NpZ25pbmdfa2V5GAYgASgJIpABCgpNZWRpYVF1b3RhEg8KB3VzZXJfaWQYASABKAkSGQoRbWF4X3N0b3JhZ2VfYnl0ZXMYAiABKAMSGwoTbWF4X2ZpbGVfc2l6ZV9ieXRlcxgDIAEoAxIgChhtYXhfbW9udGhseV91cGxvYWRfYnl0ZXMYBCABKAMSFwoPbWF4X21lZGlhX2NvdW50GAUgASgDKoIBCglNZWRpYVR5cGUSGgoWTUVESUFfVFlQRV9VTlNQRUNJRklFRBAAEhQKEE1FRElBX1RZUEVfSU1BR0UQARIUChBNRURJQV9UWVBFX1ZJREVPEAISFAoQTUVESUFfVFlQRV9BVURJTxADEhcKE01FRElBX1RZUEVfRE9DVU1FTlQQBCqjAgoVTWVkaWFQcm9jZXNzaW5nU3RhdHVzEicKI01FRElBX1BST0NFU1NJTkdfU1RBVFVTX1VOU1BFQ0lGSUVEEAASJQohTUVESUFfUFJPQ0VTU0lOR19TVEFUVVNfVVBMT0FESU5HEAESIwofTUVESUFfUFJPQ0VTU0lOR19TVEFUVVNfUEVORElORxACEiYKIk1FRElBX1BST0NFU1NJTkdfU1RBVFVTX1BST0NFU1NJTkcQAxIlCiFNRURJQV9QUk9DRVNTSU5HX1NUQVRVU19DT01QTEVURUQQBBIhCh1NRURJQV9QUk9DRVNTSU5HX1NUQVRVU19FUlJPUhAFEiMKH01FRElBX1BST0NFU1NJTkdfU1RBVFVTX0RFTEVURUQQBiqcAQoLSW1hZ2VGb3JtYXQSHAoYSU1BR0VfRk9STUFUX1VOU1BFQ0lGSUVEEAASFQoRSU1BR0VfRk9STUFUX0pQRUcQARIUChBJTUFHRV9GT1JNQVRfUE5HEAISFQoRSU1BR0VfRk9STUFUX1dFQlAQAxIUChBJTUFHRV9GT1JNQVRfR0lGEAQSFQoRSU1BR0VfRk9STUFUX0FWSUYQBSqaAQoLVmlkZW9Gb3JtYXQSHAoYVklERU9fRk9STUFUX1VOU1BFQ0lGSUVEEAASFAoQVklERU9fRk9STUFUX01QNBABEhUKEVZJREVPX0ZPUk1BVF9XRUJNEAISFAoQVklERU9fRk9STUFUX01PVhADEhQKEFZJREVPX0ZPUk1BVF9BVkkQBBIUChBWSURFT19GT1JNQVRfTUtWEAUqmgEKC0F1ZGlvRm9ybWF0EhwKGEFVRElPX0ZPUk1BVF9VTlNQRUNJRklFRBAAEhQKEEFVRElPX0ZPUk1BVF9NUDMQARIUChBBVURJT19GT1JNQVRfV0FWEAISFAoQQVVESU9fRk9STUFUX09HRxADEhQKEEFVRElPX0ZPUk1BVF9NNEEQBBIVChFBVURJT19GT1JNQVRfRkxBQxAFKpkBCg1UaHVtYm5haWxTaXplEh4KGlRIVU1CTkFJTF9TSVpFX1VOU1BFQ0lGSUVEEAASGAoUVEhVTUJOQUlMX1NJWkVfU01BTEwQARIZChVUSFVNQk5BSUxfU0laRV9NRURJVU0QAhIYChRUSFVNQk5BSUxfU0laRV9MQVJHRRADEhkKFVRIVU1CTkFJTF9TSVpFX0NVU1RPTRAEKq0CCg5Qcm9jZXNzaW5nVHlwZRIfChtQUk9DRVNTSU5HX1RZUEVfVU5TUEVDSUZJRUQQABIdChlQUk9DRVNTSU5HX1RZUEVfVEhVTUJOQUlMEAESGgoWUFJPQ0VTU0lOR19UWVBFX1JFU0laRRACEh0KGVBST0NFU1NJTkdfVFlQRV9UUkFOU0NPREUQAxIbChdQUk9DRVNTSU5HX1RZUEVfQ09OVkVSVBAEEh0KGVBST0NFU1NJTkdfVFlQRV9XQVRFUk1BUksQBRIkCiBQUk9DRVNTSU5HX1RZUEVfRVhUUkFDVF9NRVRBREFUQRAGEh4KGlBST0NFU1NJTkdfVFlQRV9WSVJVU19TQ0FOEAcSHgoaUFJPQ0VTU0lOR19UWVBFX01PREVSQVRJT04QCEKxAQoSY29tLmF2aW9uLm1lZGlhLnYxQgpNZWRpYVByb3RvUAFaNWdpdGh1Yi5jb20vbmEybmEtcC9hdmlvbi9wcm90by9hdmlvbi9tZWRpYS92MTttZWRpYXYxogIDQU1YqgIOQXZpb24uTWVkaWEuVjHKAg5BdmlvblxNZWRpYVxWMeICGkF2aW9uXE1lZGlhXFYxXEdQQk1ldGFkYXRh6gIQQXZpb246Ok1lZGlhOjpWMWIGcHJvdG8z", [file_google_protobuf_timestamp, file_google_protobuf_duration]);

/**
 * メディア情報
 *
 * @generated from message avion.media.v1.Media
 */
export type Media = Message<"avion.media.v1.Media"> & {
  /**
   * メディアID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * 所有者ユーザーID
   *
   * @generated from field: string owner_id = 2;
   */
  ownerId: string;

  /**
   * メディアタイプ
   *
   * @generated from field: avion.media.v1.MediaType type = 3;
   */
  type: MediaType;

  /**
   * オリジナルファイル名
   *
   * @generated from field: string original_filename = 4;
   */
  originalFilename: string;

  /**
   * MIMEタイプ
   *
   * @generated from field: string mime_type = 5;
   */
  mimeType: string;

  /**
   * ファイルサイズ（バイト）
   *
   * @generated from field: int64 size = 6;
   */
  size: bigint;

  /**
   * メディアURL（CDN）
   *
   * @generated from field: string url = 7;
   */
  url: string;

  /**
   * サムネイルURL
   *
   * @generated from field: string thumbnail_url = 8;
   */
  thumbnailUrl: string;

  /**
   * 処理状態
   *
   * @generated from field: avion.media.v1.MediaProcessingStatus status = 9;
   */
  status: MediaProcessingStatus;

  /**
   * メタデータ
   *
   * @generated from field: avion.media.v1.MediaMetadata metadata = 10;
   */
  metadata?: MediaMetadata;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 11;
   */
  createdAt?: Timestamp;

  /**
   * 更新日時
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 12;
   */
  updatedAt?: Timestamp;

  /**
   * 有効期限（一時的なメディアの場合）
   *
   * @generated from field: google.protobuf.Timestamp expires_at = 13;
   */
  expiresAt?: Timestamp;

  /**
   * 公開フラグ
   *
   * @generated from field: bool is_public = 14;
   */
  isPublic: boolean;

  /**
   * 説明文
   *
   * @generated from field: string description = 15;
   */
  description: string;

  /**
   * タグ
   *
   * @generated from field: repeated string tags = 16;
   */
  tags: string[];

  /**
   * ハッシュ値（重複検出用）
   *
   * @generated from field: string hash = 17;
   */
  hash: string;
};

/**
 * Describes the message avion.media.v1.Media.
 * Use `create(MediaSchema)` to create a new message.
 */
export const MediaSchema: GenMessage<Media> = /*@__PURE__*/
  messageDesc(file_avion_media_v1_media, 0);

/**
 * メディアメタデータ
 *
 * @generated from message avion.media.v1.MediaMetadata
 */
export type MediaMetadata = Message<"avion.media.v1.MediaMetadata"> & {
  /**
   * 画像メタデータ
   *
   * @generated from field: avion.media.v1.ImageMetadata image = 1;
   */
  image?: ImageMetadata;

  /**
   * 動画メタデータ
   *
   * @generated from field: avion.media.v1.VideoMetadata video = 2;
   */
  video?: VideoMetadata;

  /**
   * 音声メタデータ
   *
   * @generated from field: avion.media.v1.AudioMetadata audio = 3;
   */
  audio?: AudioMetadata;

  /**
   * 場所情報
   *
   * @generated from field: avion.media.v1.LocationInfo location = 4;
   */
  location?: LocationInfo;

  /**
   * カメラ情報
   *
   * @generated from field: avion.media.v1.CameraInfo camera = 5;
   */
  camera?: CameraInfo;
};

/**
 * Describes the message avion.media.v1.MediaMetadata.
 * Use `create(MediaMetadataSchema)` to create a new message.
 */
export const MediaMetadataSchema: GenMessage<MediaMetadata> = /*@__PURE__*/
  messageDesc(file_avion_media_v1_media, 1);

/**
 * 画像メタデータ
 *
 * @generated from message avion.media.v1.ImageMetadata
 */
export type ImageMetadata = Message<"avion.media.v1.ImageMetadata"> & {
  /**
   * 幅（ピクセル）
   *
   * @generated from field: int32 width = 1;
   */
  width: number;

  /**
   * 高さ（ピクセル）
   *
   * @generated from field: int32 height = 2;
   */
  height: number;

  /**
   * フォーマット
   *
   * @generated from field: avion.media.v1.ImageFormat format = 3;
   */
  format: ImageFormat;

  /**
   * 色深度
   *
   * @generated from field: int32 color_depth = 4;
   */
  colorDepth: number;

  /**
   * DPI
   *
   * @generated from field: int32 dpi = 5;
   */
  dpi: number;

  /**
   * アニメーションフラグ（GIF等）
   *
   * @generated from field: bool is_animated = 6;
   */
  isAnimated: boolean;

  /**
   * フレーム数（アニメーションの場合）
   *
   * @generated from field: int32 frame_count = 7;
   */
  frameCount: number;
};

/**
 * Describes the message avion.media.v1.ImageMetadata.
 * Use `create(ImageMetadataSchema)` to create a new message.
 */
export const ImageMetadataSchema: GenMessage<ImageMetadata> = /*@__PURE__*/
  messageDesc(file_avion_media_v1_media, 2);

/**
 * 動画メタデータ
 *
 * @generated from message avion.media.v1.VideoMetadata
 */
export type VideoMetadata = Message<"avion.media.v1.VideoMetadata"> & {
  /**
   * 幅（ピクセル）
   *
   * @generated from field: int32 width = 1;
   */
  width: number;

  /**
   * 高さ（ピクセル）
   *
   * @generated from field: int32 height = 2;
   */
  height: number;

  /**
   * フォーマット
   *
   * @generated from field: avion.media.v1.VideoFormat format = 3;
   */
  format: VideoFormat;

  /**
   * 再生時間
   *
   * @generated from field: google.protobuf.Duration duration = 4;
   */
  duration?: Duration;

  /**
   * フレームレート
   *
   * @generated from field: float frame_rate = 5;
   */
  frameRate: number;

  /**
   * ビットレート（bps）
   *
   * @generated from field: int64 bitrate = 6;
   */
  bitrate: bigint;

  /**
   * コーデック
   *
   * @generated from field: string codec = 7;
   */
  codec: string;

  /**
   * 音声トラック有無
   *
   * @generated from field: bool has_audio = 8;
   */
  hasAudio: boolean;
};

/**
 * Describes the message avion.media.v1.VideoMetadata.
 * Use `create(VideoMetadataSchema)` to create a new message.
 */
export const VideoMetadataSchema: GenMessage<VideoMetadata> = /*@__PURE__*/
  messageDesc(file_avion_media_v1_media, 3);

/**
 * 音声メタデータ
 *
 * @generated from message avion.media.v1.AudioMetadata
 */
export type AudioMetadata = Message<"avion.media.v1.AudioMetadata"> & {
  /**
   * フォーマット
   *
   * @generated from field: avion.media.v1.AudioFormat format = 1;
   */
  format: AudioFormat;

  /**
   * 再生時間
   *
   * @generated from field: google.protobuf.Duration duration = 2;
   */
  duration?: Duration;

  /**
   * ビットレート（bps）
   *
   * @generated from field: int64 bitrate = 3;
   */
  bitrate: bigint;

  /**
   * サンプリングレート（Hz）
   *
   * @generated from field: int32 sample_rate = 4;
   */
  sampleRate: number;

  /**
   * チャンネル数
   *
   * @generated from field: int32 channels = 5;
   */
  channels: number;

  /**
   * コーデック
   *
   * @generated from field: string codec = 6;
   */
  codec: string;
};

/**
 * Describes the message avion.media.v1.AudioMetadata.
 * Use `create(AudioMetadataSchema)` to create a new message.
 */
export const AudioMetadataSchema: GenMessage<AudioMetadata> = /*@__PURE__*/
  messageDesc(file_avion_media_v1_media, 4);

/**
 * 場所情報
 *
 * @generated from message avion.media.v1.LocationInfo
 */
export type LocationInfo = Message<"avion.media.v1.LocationInfo"> & {
  /**
   * 緯度
   *
   * @generated from field: double latitude = 1;
   */
  latitude: number;

  /**
   * 経度
   *
   * @generated from field: double longitude = 2;
   */
  longitude: number;

  /**
   * 高度（メートル）
   *
   * @generated from field: double altitude = 3;
   */
  altitude: number;

  /**
   * 場所名
   *
   * @generated from field: string place_name = 4;
   */
  placeName: string;
};

/**
 * Describes the message avion.media.v1.LocationInfo.
 * Use `create(LocationInfoSchema)` to create a new message.
 */
export const LocationInfoSchema: GenMessage<LocationInfo> = /*@__PURE__*/
  messageDesc(file_avion_media_v1_media, 5);

/**
 * カメラ情報
 *
 * @generated from message avion.media.v1.CameraInfo
 */
export type CameraInfo = Message<"avion.media.v1.CameraInfo"> & {
  /**
   * カメラメーカー
   *
   * @generated from field: string make = 1;
   */
  make: string;

  /**
   * カメラモデル
   *
   * @generated from field: string model = 2;
   */
  model: string;

  /**
   * ISO感度
   *
   * @generated from field: int32 iso = 3;
   */
  iso: number;

  /**
   * F値
   *
   * @generated from field: float aperture = 4;
   */
  aperture: number;

  /**
   * シャッタースピード
   *
   * @generated from field: string shutter_speed = 5;
   */
  shutterSpeed: string;

  /**
   * 焦点距離（mm）
   *
   * @generated from field: float focal_length = 6;
   */
  focalLength: number;

  /**
   * レンズ情報
   *
   * @generated from field: string lens = 7;
   */
  lens: string;

  /**
   * 撮影日時
   *
   * @generated from field: google.protobuf.Timestamp taken_at = 8;
   */
  takenAt?: Timestamp;
};

/**
 * Describes the message avion.media.v1.CameraInfo.
 * Use `create(CameraInfoSchema)` to create a new message.
 */
export const CameraInfoSchema: GenMessage<CameraInfo> = /*@__PURE__*/
  messageDesc(file_avion_media_v1_media, 6);

/**
 * サムネイル情報
 *
 * @generated from message avion.media.v1.Thumbnail
 */
export type Thumbnail = Message<"avion.media.v1.Thumbnail"> & {
  /**
   * サムネイルURL
   *
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * サイズタイプ
   *
   * @generated from field: avion.media.v1.ThumbnailSize size = 2;
   */
  size: ThumbnailSize;

  /**
   * 幅（ピクセル）
   *
   * @generated from field: int32 width = 3;
   */
  width: number;

  /**
   * 高さ（ピクセル）
   *
   * @generated from field: int32 height = 4;
   */
  height: number;

  /**
   * ファイルサイズ（バイト）
   *
   * @generated from field: int64 file_size = 5;
   */
  fileSize: bigint;
};

/**
 * Describes the message avion.media.v1.Thumbnail.
 * Use `create(ThumbnailSchema)` to create a new message.
 */
export const ThumbnailSchema: GenMessage<Thumbnail> = /*@__PURE__*/
  messageDesc(file_avion_media_v1_media, 7);

/**
 * アップロードセッション
 *
 * @generated from message avion.media.v1.UploadSession
 */
export type UploadSession = Message<"avion.media.v1.UploadSession"> & {
  /**
   * セッションID
   *
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * メディアID
   *
   * @generated from field: string media_id = 2;
   */
  mediaId: string;

  /**
   * アップロードURL
   *
   * @generated from field: string upload_url = 3;
   */
  uploadUrl: string;

  /**
   * 有効期限
   *
   * @generated from field: google.protobuf.Timestamp expires_at = 4;
   */
  expiresAt?: Timestamp;

  /**
   * 最大ファイルサイズ
   *
   * @generated from field: int64 max_file_size = 5;
   */
  maxFileSize: bigint;

  /**
   * 許可されるMIMEタイプ
   *
   * @generated from field: repeated string allowed_mime_types = 6;
   */
  allowedMimeTypes: string[];

  /**
   * アップロード済みバイト数
   *
   * @generated from field: int64 uploaded_bytes = 7;
   */
  uploadedBytes: bigint;

  /**
   * 総バイト数
   *
   * @generated from field: int64 total_bytes = 8;
   */
  totalBytes: bigint;
};

/**
 * Describes the message avion.media.v1.UploadSession.
 * Use `create(UploadSessionSchema)` to create a new message.
 */
export const UploadSessionSchema: GenMessage<UploadSession> = /*@__PURE__*/
  messageDesc(file_avion_media_v1_media, 8);

/**
 * メディア処理ジョブ
 *
 * @generated from message avion.media.v1.MediaProcessingJob
 */
export type MediaProcessingJob = Message<"avion.media.v1.MediaProcessingJob"> & {
  /**
   * ジョブID
   *
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * メディアID
   *
   * @generated from field: string media_id = 2;
   */
  mediaId: string;

  /**
   * 処理タイプ
   *
   * @generated from field: avion.media.v1.ProcessingType type = 3;
   */
  type: ProcessingType;

  /**
   * 処理状態
   *
   * @generated from field: avion.media.v1.MediaProcessingStatus status = 4;
   */
  status: MediaProcessingStatus;

  /**
   * 処理パラメータ（JSON形式）
   *
   * @generated from field: string parameters = 5;
   */
  parameters: string;

  /**
   * エラーメッセージ
   *
   * @generated from field: string error_message = 6;
   */
  errorMessage: string;

  /**
   * 開始日時
   *
   * @generated from field: google.protobuf.Timestamp started_at = 7;
   */
  startedAt?: Timestamp;

  /**
   * 完了日時
   *
   * @generated from field: google.protobuf.Timestamp completed_at = 8;
   */
  completedAt?: Timestamp;

  /**
   * リトライ回数
   *
   * @generated from field: int32 retry_count = 9;
   */
  retryCount: number;
};

/**
 * Describes the message avion.media.v1.MediaProcessingJob.
 * Use `create(MediaProcessingJobSchema)` to create a new message.
 */
export const MediaProcessingJobSchema: GenMessage<MediaProcessingJob> = /*@__PURE__*/
  messageDesc(file_avion_media_v1_media, 9);

/**
 * メディア使用統計
 *
 * @generated from message avion.media.v1.MediaUsageStats
 */
export type MediaUsageStats = Message<"avion.media.v1.MediaUsageStats"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * 総使用容量（バイト）
   *
   * @generated from field: int64 total_storage_bytes = 2;
   */
  totalStorageBytes: bigint;

  /**
   * 総メディア数
   *
   * @generated from field: int64 total_media_count = 3;
   */
  totalMediaCount: bigint;

  /**
   * タイプ別統計
   *
   * @generated from field: map<string, avion.media.v1.TypeUsageStats> type_stats = 4;
   */
  typeStats: { [key: string]: TypeUsageStats };

  /**
   * 月間アップロード容量（バイト）
   *
   * @generated from field: int64 monthly_upload_bytes = 5;
   */
  monthlyUploadBytes: bigint;

  /**
   * 月間ダウンロード容量（バイト）
   *
   * @generated from field: int64 monthly_download_bytes = 6;
   */
  monthlyDownloadBytes: bigint;

  /**
   * 最終更新日時
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 7;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message avion.media.v1.MediaUsageStats.
 * Use `create(MediaUsageStatsSchema)` to create a new message.
 */
export const MediaUsageStatsSchema: GenMessage<MediaUsageStats> = /*@__PURE__*/
  messageDesc(file_avion_media_v1_media, 10);

/**
 * タイプ別使用統計
 *
 * @generated from message avion.media.v1.TypeUsageStats
 */
export type TypeUsageStats = Message<"avion.media.v1.TypeUsageStats"> & {
  /**
   * メディア数
   *
   * @generated from field: int64 count = 1;
   */
  count: bigint;

  /**
   * 使用容量（バイト）
   *
   * @generated from field: int64 storage_bytes = 2;
   */
  storageBytes: bigint;
};

/**
 * Describes the message avion.media.v1.TypeUsageStats.
 * Use `create(TypeUsageStatsSchema)` to create a new message.
 */
export const TypeUsageStatsSchema: GenMessage<TypeUsageStats> = /*@__PURE__*/
  messageDesc(file_avion_media_v1_media, 11);

/**
 * CDN設定
 *
 * @generated from message avion.media.v1.CDNConfig
 */
export type CDNConfig = Message<"avion.media.v1.CDNConfig"> & {
  /**
   * CDNプロバイダー
   *
   * @generated from field: string provider = 1;
   */
  provider: string;

  /**
   * ベースURL
   *
   * @generated from field: string base_url = 2;
   */
  baseUrl: string;

  /**
   * カスタムドメイン
   *
   * @generated from field: string custom_domain = 3;
   */
  customDomain: string;

  /**
   * キャッシュTTL（秒）
   *
   * @generated from field: int32 cache_ttl = 4;
   */
  cacheTtl: number;

  /**
   * セキュアURL生成有無
   *
   * @generated from field: bool use_secure_urls = 5;
   */
  useSecureUrls: boolean;

  /**
   * 署名キー
   *
   * @generated from field: string signing_key = 6;
   */
  signingKey: string;
};

/**
 * Describes the message avion.media.v1.CDNConfig.
 * Use `create(CDNConfigSchema)` to create a new message.
 */
export const CDNConfigSchema: GenMessage<CDNConfig> = /*@__PURE__*/
  messageDesc(file_avion_media_v1_media, 12);

/**
 * メディアクォータ
 *
 * @generated from message avion.media.v1.MediaQuota
 */
export type MediaQuota = Message<"avion.media.v1.MediaQuota"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * 最大ストレージ容量（バイト）
   *
   * @generated from field: int64 max_storage_bytes = 2;
   */
  maxStorageBytes: bigint;

  /**
   * 最大ファイルサイズ（バイト）
   *
   * @generated from field: int64 max_file_size_bytes = 3;
   */
  maxFileSizeBytes: bigint;

  /**
   * 月間最大アップロード容量（バイト）
   *
   * @generated from field: int64 max_monthly_upload_bytes = 4;
   */
  maxMonthlyUploadBytes: bigint;

  /**
   * 最大メディア数
   *
   * @generated from field: int64 max_media_count = 5;
   */
  maxMediaCount: bigint;
};

/**
 * Describes the message avion.media.v1.MediaQuota.
 * Use `create(MediaQuotaSchema)` to create a new message.
 */
export const MediaQuotaSchema: GenMessage<MediaQuota> = /*@__PURE__*/
  messageDesc(file_avion_media_v1_media, 13);

/**
 * メディアタイプ
 *
 * @generated from enum avion.media.v1.MediaType
 */
export enum MediaType {
  /**
   * 未指定
   *
   * @generated from enum value: MEDIA_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 画像
   *
   * @generated from enum value: MEDIA_TYPE_IMAGE = 1;
   */
  IMAGE = 1,

  /**
   * 動画
   *
   * @generated from enum value: MEDIA_TYPE_VIDEO = 2;
   */
  VIDEO = 2,

  /**
   * 音声
   *
   * @generated from enum value: MEDIA_TYPE_AUDIO = 3;
   */
  AUDIO = 3,

  /**
   * ドキュメント
   *
   * @generated from enum value: MEDIA_TYPE_DOCUMENT = 4;
   */
  DOCUMENT = 4,
}

/**
 * Describes the enum avion.media.v1.MediaType.
 */
export const MediaTypeSchema: GenEnum<MediaType> = /*@__PURE__*/
  enumDesc(file_avion_media_v1_media, 0);

/**
 * メディア処理状態
 *
 * @generated from enum avion.media.v1.MediaProcessingStatus
 */
export enum MediaProcessingStatus {
  /**
   * 未指定
   *
   * @generated from enum value: MEDIA_PROCESSING_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * アップロード中
   *
   * @generated from enum value: MEDIA_PROCESSING_STATUS_UPLOADING = 1;
   */
  UPLOADING = 1,

  /**
   * 処理待ち
   *
   * @generated from enum value: MEDIA_PROCESSING_STATUS_PENDING = 2;
   */
  PENDING = 2,

  /**
   * 処理中
   *
   * @generated from enum value: MEDIA_PROCESSING_STATUS_PROCESSING = 3;
   */
  PROCESSING = 3,

  /**
   * 処理完了
   *
   * @generated from enum value: MEDIA_PROCESSING_STATUS_COMPLETED = 4;
   */
  COMPLETED = 4,

  /**
   * エラー
   *
   * @generated from enum value: MEDIA_PROCESSING_STATUS_ERROR = 5;
   */
  ERROR = 5,

  /**
   * 削除済み
   *
   * @generated from enum value: MEDIA_PROCESSING_STATUS_DELETED = 6;
   */
  DELETED = 6,
}

/**
 * Describes the enum avion.media.v1.MediaProcessingStatus.
 */
export const MediaProcessingStatusSchema: GenEnum<MediaProcessingStatus> = /*@__PURE__*/
  enumDesc(file_avion_media_v1_media, 1);

/**
 * 画像フォーマット
 *
 * @generated from enum avion.media.v1.ImageFormat
 */
export enum ImageFormat {
  /**
   * 未指定
   *
   * @generated from enum value: IMAGE_FORMAT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * JPEG
   *
   * @generated from enum value: IMAGE_FORMAT_JPEG = 1;
   */
  JPEG = 1,

  /**
   * PNG
   *
   * @generated from enum value: IMAGE_FORMAT_PNG = 2;
   */
  PNG = 2,

  /**
   * WEBP
   *
   * @generated from enum value: IMAGE_FORMAT_WEBP = 3;
   */
  WEBP = 3,

  /**
   * GIF
   *
   * @generated from enum value: IMAGE_FORMAT_GIF = 4;
   */
  GIF = 4,

  /**
   * AVIF
   *
   * @generated from enum value: IMAGE_FORMAT_AVIF = 5;
   */
  AVIF = 5,
}

/**
 * Describes the enum avion.media.v1.ImageFormat.
 */
export const ImageFormatSchema: GenEnum<ImageFormat> = /*@__PURE__*/
  enumDesc(file_avion_media_v1_media, 2);

/**
 * 動画フォーマット
 *
 * @generated from enum avion.media.v1.VideoFormat
 */
export enum VideoFormat {
  /**
   * 未指定
   *
   * @generated from enum value: VIDEO_FORMAT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * MP4
   *
   * @generated from enum value: VIDEO_FORMAT_MP4 = 1;
   */
  MP4 = 1,

  /**
   * WEBM
   *
   * @generated from enum value: VIDEO_FORMAT_WEBM = 2;
   */
  WEBM = 2,

  /**
   * MOV
   *
   * @generated from enum value: VIDEO_FORMAT_MOV = 3;
   */
  MOV = 3,

  /**
   * AVI
   *
   * @generated from enum value: VIDEO_FORMAT_AVI = 4;
   */
  AVI = 4,

  /**
   * MKV
   *
   * @generated from enum value: VIDEO_FORMAT_MKV = 5;
   */
  MKV = 5,
}

/**
 * Describes the enum avion.media.v1.VideoFormat.
 */
export const VideoFormatSchema: GenEnum<VideoFormat> = /*@__PURE__*/
  enumDesc(file_avion_media_v1_media, 3);

/**
 * 音声フォーマット
 *
 * @generated from enum avion.media.v1.AudioFormat
 */
export enum AudioFormat {
  /**
   * 未指定
   *
   * @generated from enum value: AUDIO_FORMAT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * MP3
   *
   * @generated from enum value: AUDIO_FORMAT_MP3 = 1;
   */
  MP3 = 1,

  /**
   * WAV
   *
   * @generated from enum value: AUDIO_FORMAT_WAV = 2;
   */
  WAV = 2,

  /**
   * OGG
   *
   * @generated from enum value: AUDIO_FORMAT_OGG = 3;
   */
  OGG = 3,

  /**
   * M4A
   *
   * @generated from enum value: AUDIO_FORMAT_M4A = 4;
   */
  M4A = 4,

  /**
   * FLAC
   *
   * @generated from enum value: AUDIO_FORMAT_FLAC = 5;
   */
  FLAC = 5,
}

/**
 * Describes the enum avion.media.v1.AudioFormat.
 */
export const AudioFormatSchema: GenEnum<AudioFormat> = /*@__PURE__*/
  enumDesc(file_avion_media_v1_media, 4);

/**
 * サムネイルサイズ
 *
 * @generated from enum avion.media.v1.ThumbnailSize
 */
export enum ThumbnailSize {
  /**
   * 未指定
   *
   * @generated from enum value: THUMBNAIL_SIZE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 小（150x150）
   *
   * @generated from enum value: THUMBNAIL_SIZE_SMALL = 1;
   */
  SMALL = 1,

  /**
   * 中（300x300）
   *
   * @generated from enum value: THUMBNAIL_SIZE_MEDIUM = 2;
   */
  MEDIUM = 2,

  /**
   * 大（600x600）
   *
   * @generated from enum value: THUMBNAIL_SIZE_LARGE = 3;
   */
  LARGE = 3,

  /**
   * カスタム
   *
   * @generated from enum value: THUMBNAIL_SIZE_CUSTOM = 4;
   */
  CUSTOM = 4,
}

/**
 * Describes the enum avion.media.v1.ThumbnailSize.
 */
export const ThumbnailSizeSchema: GenEnum<ThumbnailSize> = /*@__PURE__*/
  enumDesc(file_avion_media_v1_media, 5);

/**
 * 処理タイプ
 *
 * @generated from enum avion.media.v1.ProcessingType
 */
export enum ProcessingType {
  /**
   * 未指定
   *
   * @generated from enum value: PROCESSING_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * サムネイル生成
   *
   * @generated from enum value: PROCESSING_TYPE_THUMBNAIL = 1;
   */
  THUMBNAIL = 1,

  /**
   * 画像リサイズ
   *
   * @generated from enum value: PROCESSING_TYPE_RESIZE = 2;
   */
  RESIZE = 2,

  /**
   * 動画エンコード
   *
   * @generated from enum value: PROCESSING_TYPE_TRANSCODE = 3;
   */
  TRANSCODE = 3,

  /**
   * 画像フォーマット変換
   *
   * @generated from enum value: PROCESSING_TYPE_CONVERT = 4;
   */
  CONVERT = 4,

  /**
   * ウォーターマーク追加
   *
   * @generated from enum value: PROCESSING_TYPE_WATERMARK = 5;
   */
  WATERMARK = 5,

  /**
   * メタデータ抽出
   *
   * @generated from enum value: PROCESSING_TYPE_EXTRACT_METADATA = 6;
   */
  EXTRACT_METADATA = 6,

  /**
   * ウイルススキャン
   *
   * @generated from enum value: PROCESSING_TYPE_VIRUS_SCAN = 7;
   */
  VIRUS_SCAN = 7,

  /**
   * コンテンツモデレーション
   *
   * @generated from enum value: PROCESSING_TYPE_MODERATION = 8;
   */
  MODERATION = 8,
}

/**
 * Describes the enum avion.media.v1.ProcessingType.
 */
export const ProcessingTypeSchema: GenEnum<ProcessingType> = /*@__PURE__*/
  enumDesc(file_avion_media_v1_media, 6);

