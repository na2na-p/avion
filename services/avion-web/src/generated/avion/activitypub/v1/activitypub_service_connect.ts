// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file avion/activitypub/v1/activitypub_service.proto (package avion.activitypub.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateActorRequest, CreateActorResponse, DeleteActorRequest, DeleteActorResponse, FollowRequest, FollowResponse, GenerateSignatureRequest, GenerateSignatureResponse, GetActorRequest, GetActorResponse, GetCollectionRequest, GetCollectionResponse, GetFollowersRequest, GetFollowersResponse, GetFollowingRequest, GetFollowingResponse, GetInboxRequest, GetInboxResponse, GetOutboxRequest, GetOutboxResponse, ReceiveActivityRequest, ReceiveActivityResponse, SendActivityRequest, SendActivityResponse, SyncRemoteActorRequest, SyncRemoteActorResponse, UnfollowRequest, UnfollowResponse, UpdateActorRequest, UpdateActorResponse, VerifySignatureRequest, VerifySignatureResponse, WebFingerLookupRequest, WebFingerLookupResponse } from "./activitypub_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * ActivityPubサービス
 * ActivityPubプロトコルの実装とフェデレーション機能を提供
 *
 * アクター管理
 *
 * @generated from service avion.activitypub.v1.ActivityPubService
 */
export const ActivityPubService = {
  typeName: "avion.activitypub.v1.ActivityPubService",
  methods: {
    /**
     * アクターを作成
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.CreateActor
     */
    createActor: {
      name: "CreateActor",
      I: CreateActorRequest,
      O: CreateActorResponse,
      kind: MethodKind.Unary,
    },
    /**
     * アクターを取得
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.GetActor
     */
    getActor: {
      name: "GetActor",
      I: GetActorRequest,
      O: GetActorResponse,
      kind: MethodKind.Unary,
    },
    /**
     * アクターを更新
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.UpdateActor
     */
    updateActor: {
      name: "UpdateActor",
      I: UpdateActorRequest,
      O: UpdateActorResponse,
      kind: MethodKind.Unary,
    },
    /**
     * アクターを削除
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.DeleteActor
     */
    deleteActor: {
      name: "DeleteActor",
      I: DeleteActorRequest,
      O: DeleteActorResponse,
      kind: MethodKind.Unary,
    },
    /**
     * アクティビティを送信
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.SendActivity
     */
    sendActivity: {
      name: "SendActivity",
      I: SendActivityRequest,
      O: SendActivityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * アクティビティを受信（外部からの受信処理）
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.ReceiveActivity
     */
    receiveActivity: {
      name: "ReceiveActivity",
      I: ReceiveActivityRequest,
      O: ReceiveActivityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Inboxを取得
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.GetInbox
     */
    getInbox: {
      name: "GetInbox",
      I: GetInboxRequest,
      O: GetInboxResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Outboxを取得
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.GetOutbox
     */
    getOutbox: {
      name: "GetOutbox",
      I: GetOutboxRequest,
      O: GetOutboxResponse,
      kind: MethodKind.Unary,
    },
    /**
     * フォローする
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.Follow
     */
    follow: {
      name: "Follow",
      I: FollowRequest,
      O: FollowResponse,
      kind: MethodKind.Unary,
    },
    /**
     * アンフォローする
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.Unfollow
     */
    unfollow: {
      name: "Unfollow",
      I: UnfollowRequest,
      O: UnfollowResponse,
      kind: MethodKind.Unary,
    },
    /**
     * フォロワーを取得
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.GetFollowers
     */
    getFollowers: {
      name: "GetFollowers",
      I: GetFollowersRequest,
      O: GetFollowersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * フォロー中を取得
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.GetFollowing
     */
    getFollowing: {
      name: "GetFollowing",
      I: GetFollowingRequest,
      O: GetFollowingResponse,
      kind: MethodKind.Unary,
    },
    /**
     * WebFingerで検索
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.WebFingerLookup
     */
    webFingerLookup: {
      name: "WebFingerLookup",
      I: WebFingerLookupRequest,
      O: WebFingerLookupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * HTTPSignatureを検証
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.VerifySignature
     */
    verifySignature: {
      name: "VerifySignature",
      I: VerifySignatureRequest,
      O: VerifySignatureResponse,
      kind: MethodKind.Unary,
    },
    /**
     * HTTPSignatureを生成
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.GenerateSignature
     */
    generateSignature: {
      name: "GenerateSignature",
      I: GenerateSignatureRequest,
      O: GenerateSignatureResponse,
      kind: MethodKind.Unary,
    },
    /**
     * リモートアクターを同期
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.SyncRemoteActor
     */
    syncRemoteActor: {
      name: "SyncRemoteActor",
      I: SyncRemoteActorRequest,
      O: SyncRemoteActorResponse,
      kind: MethodKind.Unary,
    },
    /**
     * コレクションを取得
     *
     * @generated from rpc avion.activitypub.v1.ActivityPubService.GetCollection
     */
    getCollection: {
      name: "GetCollection",
      I: GetCollectionRequest,
      O: GetCollectionResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

