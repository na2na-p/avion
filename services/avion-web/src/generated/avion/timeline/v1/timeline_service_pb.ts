// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file avion/timeline/v1/timeline_service.proto (package avion.timeline.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { PaginationRequest, PaginationResponse } from "../../common/v1/pagination_pb";
import { file_avion_common_v1_pagination } from "../../common/v1/pagination_pb";
import type { FanoutStrategy, TimelineEntry, TimelineEntryType, TimelineFilter, TimelineSettings, TimelineStatistics, TimelineType } from "./timeline_pb";
import { file_avion_timeline_v1_timeline } from "./timeline_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file avion/timeline/v1/timeline_service.proto.
 */
export const file_avion_timeline_v1_timeline_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_avion_common_v1_pagination, file_avion_timeline_v1_timeline, file_google_protobuf_timestamp]);

/**
 * ホームタイムライン取得リクエスト
 *
 * @generated from message avion.timeline.v1.GetHomeTimelineRequest
 */
export type GetHomeTimelineRequest = Message<"avion.timeline.v1.GetHomeTimelineRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * フィルター
   *
   * @generated from field: avion.timeline.v1.TimelineFilter filter = 3;
   */
  filter?: TimelineFilter;
};

/**
 * Describes the message avion.timeline.v1.GetHomeTimelineRequest.
 * Use `create(GetHomeTimelineRequestSchema)` to create a new message.
 */
export const GetHomeTimelineRequestSchema: GenMessage<GetHomeTimelineRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 0);

/**
 * ホームタイムライン取得レスポンス
 *
 * @generated from message avion.timeline.v1.GetHomeTimelineResponse
 */
export type GetHomeTimelineResponse = Message<"avion.timeline.v1.GetHomeTimelineResponse"> & {
  /**
   * タイムラインエントリー
   *
   * @generated from field: repeated avion.timeline.v1.TimelineEntry entries = 1;
   */
  entries: TimelineEntry[];

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.timeline.v1.GetHomeTimelineResponse.
 * Use `create(GetHomeTimelineResponseSchema)` to create a new message.
 */
export const GetHomeTimelineResponseSchema: GenMessage<GetHomeTimelineResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 1);

/**
 * ユーザータイムライン取得リクエスト
 *
 * @generated from message avion.timeline.v1.GetUserTimelineRequest
 */
export type GetUserTimelineRequest = Message<"avion.timeline.v1.GetUserTimelineRequest"> & {
  /**
   * 対象ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * 閲覧者のユーザーID（権限チェック用）
   *
   * @generated from field: string viewer_user_id = 2;
   */
  viewerUserId: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 3;
   */
  pagination?: PaginationRequest;

  /**
   * フィルター
   *
   * @generated from field: avion.timeline.v1.TimelineFilter filter = 4;
   */
  filter?: TimelineFilter;

  /**
   * リプライを含める
   *
   * @generated from field: bool include_replies = 5;
   */
  includeReplies: boolean;

  /**
   * リドロップを含める
   *
   * @generated from field: bool include_redrops = 6;
   */
  includeRedrops: boolean;
};

/**
 * Describes the message avion.timeline.v1.GetUserTimelineRequest.
 * Use `create(GetUserTimelineRequestSchema)` to create a new message.
 */
export const GetUserTimelineRequestSchema: GenMessage<GetUserTimelineRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 2);

/**
 * ユーザータイムライン取得レスポンス
 *
 * @generated from message avion.timeline.v1.GetUserTimelineResponse
 */
export type GetUserTimelineResponse = Message<"avion.timeline.v1.GetUserTimelineResponse"> & {
  /**
   * タイムラインエントリー
   *
   * @generated from field: repeated avion.timeline.v1.TimelineEntry entries = 1;
   */
  entries: TimelineEntry[];

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.timeline.v1.GetUserTimelineResponse.
 * Use `create(GetUserTimelineResponseSchema)` to create a new message.
 */
export const GetUserTimelineResponseSchema: GenMessage<GetUserTimelineResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 3);

/**
 * パブリックタイムライン取得リクエスト
 *
 * @generated from message avion.timeline.v1.GetPublicTimelineRequest
 */
export type GetPublicTimelineRequest = Message<"avion.timeline.v1.GetPublicTimelineRequest"> & {
  /**
   * 閲覧者のユーザーID（オプション）
   *
   * @generated from field: string viewer_user_id = 1;
   */
  viewerUserId: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * フィルター
   *
   * @generated from field: avion.timeline.v1.TimelineFilter filter = 3;
   */
  filter?: TimelineFilter;
};

/**
 * Describes the message avion.timeline.v1.GetPublicTimelineRequest.
 * Use `create(GetPublicTimelineRequestSchema)` to create a new message.
 */
export const GetPublicTimelineRequestSchema: GenMessage<GetPublicTimelineRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 4);

/**
 * パブリックタイムライン取得レスポンス
 *
 * @generated from message avion.timeline.v1.GetPublicTimelineResponse
 */
export type GetPublicTimelineResponse = Message<"avion.timeline.v1.GetPublicTimelineResponse"> & {
  /**
   * タイムラインエントリー
   *
   * @generated from field: repeated avion.timeline.v1.TimelineEntry entries = 1;
   */
  entries: TimelineEntry[];

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.timeline.v1.GetPublicTimelineResponse.
 * Use `create(GetPublicTimelineResponseSchema)` to create a new message.
 */
export const GetPublicTimelineResponseSchema: GenMessage<GetPublicTimelineResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 5);

/**
 * リストタイムライン取得リクエスト
 *
 * @generated from message avion.timeline.v1.GetListTimelineRequest
 */
export type GetListTimelineRequest = Message<"avion.timeline.v1.GetListTimelineRequest"> & {
  /**
   * リストID
   *
   * @generated from field: string list_id = 1;
   */
  listId: string;

  /**
   * 閲覧者のユーザーID
   *
   * @generated from field: string viewer_user_id = 2;
   */
  viewerUserId: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 3;
   */
  pagination?: PaginationRequest;

  /**
   * フィルター
   *
   * @generated from field: avion.timeline.v1.TimelineFilter filter = 4;
   */
  filter?: TimelineFilter;
};

/**
 * Describes the message avion.timeline.v1.GetListTimelineRequest.
 * Use `create(GetListTimelineRequestSchema)` to create a new message.
 */
export const GetListTimelineRequestSchema: GenMessage<GetListTimelineRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 6);

/**
 * リストタイムライン取得レスポンス
 *
 * @generated from message avion.timeline.v1.GetListTimelineResponse
 */
export type GetListTimelineResponse = Message<"avion.timeline.v1.GetListTimelineResponse"> & {
  /**
   * タイムラインエントリー
   *
   * @generated from field: repeated avion.timeline.v1.TimelineEntry entries = 1;
   */
  entries: TimelineEntry[];

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.timeline.v1.GetListTimelineResponse.
 * Use `create(GetListTimelineResponseSchema)` to create a new message.
 */
export const GetListTimelineResponseSchema: GenMessage<GetListTimelineResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 7);

/**
 * ハッシュタグタイムライン取得リクエスト
 *
 * @generated from message avion.timeline.v1.GetHashtagTimelineRequest
 */
export type GetHashtagTimelineRequest = Message<"avion.timeline.v1.GetHashtagTimelineRequest"> & {
  /**
   * ハッシュタグ（#を含む）
   *
   * @generated from field: string hashtag = 1;
   */
  hashtag: string;

  /**
   * 閲覧者のユーザーID（オプション）
   *
   * @generated from field: string viewer_user_id = 2;
   */
  viewerUserId: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 3;
   */
  pagination?: PaginationRequest;

  /**
   * フィルター
   *
   * @generated from field: avion.timeline.v1.TimelineFilter filter = 4;
   */
  filter?: TimelineFilter;
};

/**
 * Describes the message avion.timeline.v1.GetHashtagTimelineRequest.
 * Use `create(GetHashtagTimelineRequestSchema)` to create a new message.
 */
export const GetHashtagTimelineRequestSchema: GenMessage<GetHashtagTimelineRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 8);

/**
 * ハッシュタグタイムライン取得レスポンス
 *
 * @generated from message avion.timeline.v1.GetHashtagTimelineResponse
 */
export type GetHashtagTimelineResponse = Message<"avion.timeline.v1.GetHashtagTimelineResponse"> & {
  /**
   * タイムラインエントリー
   *
   * @generated from field: repeated avion.timeline.v1.TimelineEntry entries = 1;
   */
  entries: TimelineEntry[];

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.timeline.v1.GetHashtagTimelineResponse.
 * Use `create(GetHashtagTimelineResponseSchema)` to create a new message.
 */
export const GetHashtagTimelineResponseSchema: GenMessage<GetHashtagTimelineResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 9);

/**
 * タイムライン追加リクエスト
 *
 * @generated from message avion.timeline.v1.AddToTimelineRequest
 */
export type AddToTimelineRequest = Message<"avion.timeline.v1.AddToTimelineRequest"> & {
  /**
   * DropのID
   *
   * @generated from field: string drop_id = 1;
   */
  dropId: string;

  /**
   * 投稿者のユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 対象タイムラインタイプ
   *
   * @generated from field: avion.timeline.v1.TimelineType timeline_type = 3;
   */
  timelineType: TimelineType;

  /**
   * タイムライン所有者のユーザーID（ホームタイムラインの場合）
   *
   * @generated from field: string owner_user_id = 4;
   */
  ownerUserId: string;

  /**
   * エントリータイプ
   *
   * @generated from field: avion.timeline.v1.TimelineEntryType entry_type = 5;
   */
  entryType: TimelineEntryType;

  /**
   * リドロップしたユーザーID（リドロップの場合）
   *
   * @generated from field: string redropped_by_user_id = 6;
   */
  redroppedByUserId: string;

  /**
   * スコア（オプション、指定しない場合は現在時刻から計算）
   *
   * @generated from field: double score = 7;
   */
  score: number;

  /**
   * ファンアウト戦略
   *
   * @generated from field: avion.timeline.v1.FanoutStrategy fanout_strategy = 8;
   */
  fanoutStrategy: FanoutStrategy;
};

/**
 * Describes the message avion.timeline.v1.AddToTimelineRequest.
 * Use `create(AddToTimelineRequestSchema)` to create a new message.
 */
export const AddToTimelineRequestSchema: GenMessage<AddToTimelineRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 10);

/**
 * タイムライン追加レスポンス
 *
 * @generated from message avion.timeline.v1.AddToTimelineResponse
 */
export type AddToTimelineResponse = Message<"avion.timeline.v1.AddToTimelineResponse"> & {
  /**
   * 作成されたタイムラインエントリー
   *
   * @generated from field: avion.timeline.v1.TimelineEntry entry = 1;
   */
  entry?: TimelineEntry;
};

/**
 * Describes the message avion.timeline.v1.AddToTimelineResponse.
 * Use `create(AddToTimelineResponseSchema)` to create a new message.
 */
export const AddToTimelineResponseSchema: GenMessage<AddToTimelineResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 11);

/**
 * タイムライン削除リクエスト
 *
 * @generated from message avion.timeline.v1.RemoveFromTimelineRequest
 */
export type RemoveFromTimelineRequest = Message<"avion.timeline.v1.RemoveFromTimelineRequest"> & {
  /**
   * DropのID
   *
   * @generated from field: string drop_id = 1;
   */
  dropId: string;

  /**
   * タイムラインタイプ
   *
   * @generated from field: avion.timeline.v1.TimelineType timeline_type = 2;
   */
  timelineType: TimelineType;

  /**
   * タイムライン所有者のユーザーID（ホームタイムラインの場合）
   *
   * @generated from field: string owner_user_id = 3;
   */
  ownerUserId: string;
};

/**
 * Describes the message avion.timeline.v1.RemoveFromTimelineRequest.
 * Use `create(RemoveFromTimelineRequestSchema)` to create a new message.
 */
export const RemoveFromTimelineRequestSchema: GenMessage<RemoveFromTimelineRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 12);

/**
 * タイムライン削除レスポンス
 *
 * @generated from message avion.timeline.v1.RemoveFromTimelineResponse
 */
export type RemoveFromTimelineResponse = Message<"avion.timeline.v1.RemoveFromTimelineResponse"> & {
  /**
   * 処理の成功/失敗
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * 処理結果の詳細メッセージ（オプション）
   *
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message avion.timeline.v1.RemoveFromTimelineResponse.
 * Use `create(RemoveFromTimelineResponseSchema)` to create a new message.
 */
export const RemoveFromTimelineResponseSchema: GenMessage<RemoveFromTimelineResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 13);

/**
 * 既読マークリクエスト
 *
 * @generated from message avion.timeline.v1.MarkAsReadRequest
 */
export type MarkAsReadRequest = Message<"avion.timeline.v1.MarkAsReadRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * タイムラインタイプ
   *
   * @generated from field: avion.timeline.v1.TimelineType timeline_type = 2;
   */
  timelineType: TimelineType;

  /**
   * 既読にするDropのID（複数可）
   *
   * @generated from field: repeated string drop_ids = 3;
   */
  dropIds: string[];

  /**
   * 指定日時以前のすべてを既読にする（drop_idsが空の場合）
   *
   * @generated from field: google.protobuf.Timestamp mark_until = 4;
   */
  markUntil?: Timestamp;
};

/**
 * Describes the message avion.timeline.v1.MarkAsReadRequest.
 * Use `create(MarkAsReadRequestSchema)` to create a new message.
 */
export const MarkAsReadRequestSchema: GenMessage<MarkAsReadRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 14);

/**
 * 既読マークレスポンス
 *
 * @generated from message avion.timeline.v1.MarkAsReadResponse
 */
export type MarkAsReadResponse = Message<"avion.timeline.v1.MarkAsReadResponse"> & {
  /**
   * 処理の成功/失敗
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * 処理結果の詳細メッセージ（オプション）
   *
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message avion.timeline.v1.MarkAsReadResponse.
 * Use `create(MarkAsReadResponseSchema)` to create a new message.
 */
export const MarkAsReadResponseSchema: GenMessage<MarkAsReadResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 15);

/**
 * タイムライン統計情報取得リクエスト
 *
 * @generated from message avion.timeline.v1.GetTimelineStatisticsRequest
 */
export type GetTimelineStatisticsRequest = Message<"avion.timeline.v1.GetTimelineStatisticsRequest"> & {
  /**
   * ユーザーID（ホーム/ユーザータイムラインの場合）
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * タイムラインタイプ
   *
   * @generated from field: avion.timeline.v1.TimelineType timeline_type = 2;
   */
  timelineType: TimelineType;

  /**
   * リストID（リストタイムラインの場合）
   *
   * @generated from field: string list_id = 3;
   */
  listId: string;

  /**
   * ハッシュタグ（ハッシュタグタイムラインの場合）
   *
   * @generated from field: string hashtag = 4;
   */
  hashtag: string;
};

/**
 * Describes the message avion.timeline.v1.GetTimelineStatisticsRequest.
 * Use `create(GetTimelineStatisticsRequestSchema)` to create a new message.
 */
export const GetTimelineStatisticsRequestSchema: GenMessage<GetTimelineStatisticsRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 16);

/**
 * タイムライン統計情報取得レスポンス
 *
 * @generated from message avion.timeline.v1.GetTimelineStatisticsResponse
 */
export type GetTimelineStatisticsResponse = Message<"avion.timeline.v1.GetTimelineStatisticsResponse"> & {
  /**
   * 統計情報
   *
   * @generated from field: avion.timeline.v1.TimelineStatistics statistics = 1;
   */
  statistics?: TimelineStatistics;
};

/**
 * Describes the message avion.timeline.v1.GetTimelineStatisticsResponse.
 * Use `create(GetTimelineStatisticsResponseSchema)` to create a new message.
 */
export const GetTimelineStatisticsResponseSchema: GenMessage<GetTimelineStatisticsResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 17);

/**
 * タイムライン設定取得リクエスト
 *
 * @generated from message avion.timeline.v1.GetTimelineSettingsRequest
 */
export type GetTimelineSettingsRequest = Message<"avion.timeline.v1.GetTimelineSettingsRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * タイムラインタイプ
   *
   * @generated from field: avion.timeline.v1.TimelineType timeline_type = 2;
   */
  timelineType: TimelineType;
};

/**
 * Describes the message avion.timeline.v1.GetTimelineSettingsRequest.
 * Use `create(GetTimelineSettingsRequestSchema)` to create a new message.
 */
export const GetTimelineSettingsRequestSchema: GenMessage<GetTimelineSettingsRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 18);

/**
 * タイムライン設定取得レスポンス
 *
 * @generated from message avion.timeline.v1.GetTimelineSettingsResponse
 */
export type GetTimelineSettingsResponse = Message<"avion.timeline.v1.GetTimelineSettingsResponse"> & {
  /**
   * タイムライン設定
   *
   * @generated from field: avion.timeline.v1.TimelineSettings settings = 1;
   */
  settings?: TimelineSettings;
};

/**
 * Describes the message avion.timeline.v1.GetTimelineSettingsResponse.
 * Use `create(GetTimelineSettingsResponseSchema)` to create a new message.
 */
export const GetTimelineSettingsResponseSchema: GenMessage<GetTimelineSettingsResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 19);

/**
 * タイムライン設定更新リクエスト
 *
 * @generated from message avion.timeline.v1.UpdateTimelineSettingsRequest
 */
export type UpdateTimelineSettingsRequest = Message<"avion.timeline.v1.UpdateTimelineSettingsRequest"> & {
  /**
   * 更新する設定
   *
   * @generated from field: avion.timeline.v1.TimelineSettings settings = 1;
   */
  settings?: TimelineSettings;
};

/**
 * Describes the message avion.timeline.v1.UpdateTimelineSettingsRequest.
 * Use `create(UpdateTimelineSettingsRequestSchema)` to create a new message.
 */
export const UpdateTimelineSettingsRequestSchema: GenMessage<UpdateTimelineSettingsRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 20);

/**
 * タイムライン設定更新レスポンス
 *
 * @generated from message avion.timeline.v1.UpdateTimelineSettingsResponse
 */
export type UpdateTimelineSettingsResponse = Message<"avion.timeline.v1.UpdateTimelineSettingsResponse"> & {
  /**
   * 更新後の設定
   *
   * @generated from field: avion.timeline.v1.TimelineSettings settings = 1;
   */
  settings?: TimelineSettings;
};

/**
 * Describes the message avion.timeline.v1.UpdateTimelineSettingsResponse.
 * Use `create(UpdateTimelineSettingsResponseSchema)` to create a new message.
 */
export const UpdateTimelineSettingsResponseSchema: GenMessage<UpdateTimelineSettingsResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 21);

/**
 * バッチタイムライン追加リクエスト
 *
 * @generated from message avion.timeline.v1.BatchAddToTimelineRequest
 */
export type BatchAddToTimelineRequest = Message<"avion.timeline.v1.BatchAddToTimelineRequest"> & {
  /**
   * 追加するエントリー
   *
   * @generated from field: repeated avion.timeline.v1.AddToTimelineRequest entries = 1;
   */
  entries: AddToTimelineRequest[];
};

/**
 * Describes the message avion.timeline.v1.BatchAddToTimelineRequest.
 * Use `create(BatchAddToTimelineRequestSchema)` to create a new message.
 */
export const BatchAddToTimelineRequestSchema: GenMessage<BatchAddToTimelineRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 22);

/**
 * バッチタイムライン追加レスポンス
 *
 * @generated from message avion.timeline.v1.BatchAddToTimelineResponse
 */
export type BatchAddToTimelineResponse = Message<"avion.timeline.v1.BatchAddToTimelineResponse"> & {
  /**
   * 作成されたエントリー
   *
   * @generated from field: repeated avion.timeline.v1.TimelineEntry entries = 1;
   */
  entries: TimelineEntry[];

  /**
   * 失敗したエントリーのインデックス
   *
   * @generated from field: repeated int32 failed_indices = 2;
   */
  failedIndices: number[];
};

/**
 * Describes the message avion.timeline.v1.BatchAddToTimelineResponse.
 * Use `create(BatchAddToTimelineResponseSchema)` to create a new message.
 */
export const BatchAddToTimelineResponseSchema: GenMessage<BatchAddToTimelineResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 23);

/**
 * タイムラインクリアリクエスト
 *
 * @generated from message avion.timeline.v1.ClearTimelineRequest
 */
export type ClearTimelineRequest = Message<"avion.timeline.v1.ClearTimelineRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * タイムラインタイプ
   *
   * @generated from field: avion.timeline.v1.TimelineType timeline_type = 2;
   */
  timelineType: TimelineType;

  /**
   * 指定日時以前のエントリーのみ削除（オプション）
   *
   * @generated from field: google.protobuf.Timestamp before = 3;
   */
  before?: Timestamp;
};

/**
 * Describes the message avion.timeline.v1.ClearTimelineRequest.
 * Use `create(ClearTimelineRequestSchema)` to create a new message.
 */
export const ClearTimelineRequestSchema: GenMessage<ClearTimelineRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 24);

/**
 * タイムラインクリアレスポンス
 *
 * @generated from message avion.timeline.v1.ClearTimelineResponse
 */
export type ClearTimelineResponse = Message<"avion.timeline.v1.ClearTimelineResponse"> & {
  /**
   * 処理の成功/失敗
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * 処理結果の詳細メッセージ（オプション）
   *
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message avion.timeline.v1.ClearTimelineResponse.
 * Use `create(ClearTimelineResponseSchema)` to create a new message.
 */
export const ClearTimelineResponseSchema: GenMessage<ClearTimelineResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 25);

/**
 * タイムライン再構築リクエスト
 *
 * @generated from message avion.timeline.v1.RebuildTimelineRequest
 */
export type RebuildTimelineRequest = Message<"avion.timeline.v1.RebuildTimelineRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * タイムラインタイプ
   *
   * @generated from field: avion.timeline.v1.TimelineType timeline_type = 2;
   */
  timelineType: TimelineType;

  /**
   * ファンアウト戦略
   *
   * @generated from field: avion.timeline.v1.FanoutStrategy fanout_strategy = 3;
   */
  fanoutStrategy: FanoutStrategy;

  /**
   * 再構築する期間の開始日時
   *
   * @generated from field: google.protobuf.Timestamp since = 4;
   */
  since?: Timestamp;

  /**
   * 再構築する期間の終了日時
   *
   * @generated from field: google.protobuf.Timestamp until = 5;
   */
  until?: Timestamp;
};

/**
 * Describes the message avion.timeline.v1.RebuildTimelineRequest.
 * Use `create(RebuildTimelineRequestSchema)` to create a new message.
 */
export const RebuildTimelineRequestSchema: GenMessage<RebuildTimelineRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 26);

/**
 * タイムライン再構築レスポンス
 *
 * @generated from message avion.timeline.v1.RebuildTimelineResponse
 */
export type RebuildTimelineResponse = Message<"avion.timeline.v1.RebuildTimelineResponse"> & {
  /**
   * 再構築されたエントリー数
   *
   * @generated from field: int32 rebuilt_entries = 1;
   */
  rebuiltEntries: number;

  /**
   * 処理時間（ミリ秒）
   *
   * @generated from field: int64 processing_time_ms = 2;
   */
  processingTimeMs: bigint;
};

/**
 * Describes the message avion.timeline.v1.RebuildTimelineResponse.
 * Use `create(RebuildTimelineResponseSchema)` to create a new message.
 */
export const RebuildTimelineResponseSchema: GenMessage<RebuildTimelineResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 27);

/**
 * タイムライン更新ストリーミングリクエスト
 *
 * @generated from message avion.timeline.v1.StreamTimelineUpdatesRequest
 */
export type StreamTimelineUpdatesRequest = Message<"avion.timeline.v1.StreamTimelineUpdatesRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * タイムラインタイプ
   *
   * @generated from field: avion.timeline.v1.TimelineType timeline_type = 2;
   */
  timelineType: TimelineType;

  /**
   * リストID（リストタイムラインの場合）
   *
   * @generated from field: string list_id = 3;
   */
  listId: string;

  /**
   * ハッシュタグ（ハッシュタグタイムラインの場合）
   *
   * @generated from field: string hashtag = 4;
   */
  hashtag: string;

  /**
   * フィルター（オプション）
   *
   * @generated from field: avion.timeline.v1.TimelineFilter filter = 5;
   */
  filter?: TimelineFilter;

  /**
   * 最初の取得件数（ストリーミング開始時に既存エントリーを送信）
   *
   * @generated from field: int32 initial_fetch_count = 6;
   */
  initialFetchCount: number;
};

/**
 * Describes the message avion.timeline.v1.StreamTimelineUpdatesRequest.
 * Use `create(StreamTimelineUpdatesRequestSchema)` to create a new message.
 */
export const StreamTimelineUpdatesRequestSchema: GenMessage<StreamTimelineUpdatesRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 28);

/**
 * タイムライン更新ストリーミングレスポンス
 *
 * @generated from message avion.timeline.v1.StreamTimelineUpdatesResponse
 */
export type StreamTimelineUpdatesResponse = Message<"avion.timeline.v1.StreamTimelineUpdatesResponse"> & {
  /**
   * イベントタイプ
   *
   * @generated from field: avion.timeline.v1.TimelineUpdateEventType event_type = 1;
   */
  eventType: TimelineUpdateEventType;

  /**
   * タイムラインエントリー（追加/更新の場合）
   *
   * @generated from field: avion.timeline.v1.TimelineEntry entry = 2;
   */
  entry?: TimelineEntry;

  /**
   * 削除されたDropのID（削除の場合）
   *
   * @generated from field: string removed_drop_id = 3;
   */
  removedDropId: string;

  /**
   * イベント発生時刻
   *
   * @generated from field: google.protobuf.Timestamp event_timestamp = 4;
   */
  eventTimestamp?: Timestamp;

  /**
   * シーケンス番号（順序保証用）
   *
   * @generated from field: int64 sequence_number = 5;
   */
  sequenceNumber: bigint;
};

/**
 * Describes the message avion.timeline.v1.StreamTimelineUpdatesResponse.
 * Use `create(StreamTimelineUpdatesResponseSchema)` to create a new message.
 */
export const StreamTimelineUpdatesResponseSchema: GenMessage<StreamTimelineUpdatesResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 29);

/**
 * 複数タイムラインストリーミングリクエスト
 *
 * @generated from message avion.timeline.v1.StreamMultipleTimelinesRequest
 */
export type StreamMultipleTimelinesRequest = Message<"avion.timeline.v1.StreamMultipleTimelinesRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * 購読するタイムライン
   *
   * @generated from field: repeated avion.timeline.v1.TimelineSubscription subscriptions = 2;
   */
  subscriptions: TimelineSubscription[];

  /**
   * グローバルフィルター（すべてのタイムラインに適用）
   *
   * @generated from field: avion.timeline.v1.TimelineFilter global_filter = 3;
   */
  globalFilter?: TimelineFilter;
};

/**
 * Describes the message avion.timeline.v1.StreamMultipleTimelinesRequest.
 * Use `create(StreamMultipleTimelinesRequestSchema)` to create a new message.
 */
export const StreamMultipleTimelinesRequestSchema: GenMessage<StreamMultipleTimelinesRequest> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 30);

/**
 * タイムライン購読設定
 *
 * @generated from message avion.timeline.v1.TimelineSubscription
 */
export type TimelineSubscription = Message<"avion.timeline.v1.TimelineSubscription"> & {
  /**
   * タイムラインタイプ
   *
   * @generated from field: avion.timeline.v1.TimelineType timeline_type = 1;
   */
  timelineType: TimelineType;

  /**
   * リストID（リストタイムラインの場合）
   *
   * @generated from field: string list_id = 2;
   */
  listId: string;

  /**
   * ハッシュタグ（ハッシュタグタイムラインの場合）
   *
   * @generated from field: string hashtag = 3;
   */
  hashtag: string;

  /**
   * タイムライン固有のフィルター（オプション）
   *
   * @generated from field: avion.timeline.v1.TimelineFilter filter = 4;
   */
  filter?: TimelineFilter;

  /**
   * 購読ID（レスポンスでの識別用）
   *
   * @generated from field: string subscription_id = 5;
   */
  subscriptionId: string;
};

/**
 * Describes the message avion.timeline.v1.TimelineSubscription.
 * Use `create(TimelineSubscriptionSchema)` to create a new message.
 */
export const TimelineSubscriptionSchema: GenMessage<TimelineSubscription> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 31);

/**
 * 複数タイムラインストリーミングレスポンス
 *
 * @generated from message avion.timeline.v1.StreamMultipleTimelinesResponse
 */
export type StreamMultipleTimelinesResponse = Message<"avion.timeline.v1.StreamMultipleTimelinesResponse"> & {
  /**
   * 購読ID（どのタイムラインのイベントか識別）
   *
   * @generated from field: string subscription_id = 1;
   */
  subscriptionId: string;

  /**
   * タイムラインタイプ
   *
   * @generated from field: avion.timeline.v1.TimelineType timeline_type = 2;
   */
  timelineType: TimelineType;

  /**
   * イベントタイプ
   *
   * @generated from field: avion.timeline.v1.TimelineUpdateEventType event_type = 3;
   */
  eventType: TimelineUpdateEventType;

  /**
   * タイムラインエントリー（追加/更新の場合）
   *
   * @generated from field: avion.timeline.v1.TimelineEntry entry = 4;
   */
  entry?: TimelineEntry;

  /**
   * 削除されたDropのID（削除の場合）
   *
   * @generated from field: string removed_drop_id = 5;
   */
  removedDropId: string;

  /**
   * イベント発生時刻
   *
   * @generated from field: google.protobuf.Timestamp event_timestamp = 6;
   */
  eventTimestamp?: Timestamp;

  /**
   * シーケンス番号（順序保証用）
   *
   * @generated from field: int64 sequence_number = 7;
   */
  sequenceNumber: bigint;
};

/**
 * Describes the message avion.timeline.v1.StreamMultipleTimelinesResponse.
 * Use `create(StreamMultipleTimelinesResponseSchema)` to create a new message.
 */
export const StreamMultipleTimelinesResponseSchema: GenMessage<StreamMultipleTimelinesResponse> = /*@__PURE__*/
  messageDesc(file_avion_timeline_v1_timeline_service, 32);

/**
 * タイムライン更新イベントタイプ
 *
 * @generated from enum avion.timeline.v1.TimelineUpdateEventType
 */
export enum TimelineUpdateEventType {
  /**
   * 未指定
   *
   * @generated from enum value: TIMELINE_UPDATE_EVENT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 新規エントリー追加
   *
   * @generated from enum value: TIMELINE_UPDATE_EVENT_TYPE_ENTRY_ADDED = 1;
   */
  ENTRY_ADDED = 1,

  /**
   * エントリー削除
   *
   * @generated from enum value: TIMELINE_UPDATE_EVENT_TYPE_ENTRY_REMOVED = 2;
   */
  ENTRY_REMOVED = 2,

  /**
   * エントリー更新（リアクション追加等）
   *
   * @generated from enum value: TIMELINE_UPDATE_EVENT_TYPE_ENTRY_UPDATED = 3;
   */
  ENTRY_UPDATED = 3,

  /**
   * タイムライン全体のリフレッシュ
   *
   * @generated from enum value: TIMELINE_UPDATE_EVENT_TYPE_TIMELINE_REFRESHED = 4;
   */
  TIMELINE_REFRESHED = 4,
}

/**
 * Describes the enum avion.timeline.v1.TimelineUpdateEventType.
 */
export const TimelineUpdateEventTypeSchema: GenEnum<TimelineUpdateEventType> = /*@__PURE__*/
  enumDesc(file_avion_timeline_v1_timeline_service, 0);

/**
 * タイムラインサービス
 *
 * @generated from service avion.timeline.v1.TimelineService
 */
export const TimelineService: GenService<{
  /**
   * ホームタイムラインを取得
   *
   * @generated from rpc avion.timeline.v1.TimelineService.GetHomeTimeline
   */
  getHomeTimeline: {
    methodKind: "unary";
    input: typeof GetHomeTimelineRequestSchema;
    output: typeof GetHomeTimelineResponseSchema;
  },
  /**
   * ユーザータイムラインを取得
   *
   * @generated from rpc avion.timeline.v1.TimelineService.GetUserTimeline
   */
  getUserTimeline: {
    methodKind: "unary";
    input: typeof GetUserTimelineRequestSchema;
    output: typeof GetUserTimelineResponseSchema;
  },
  /**
   * パブリックタイムラインを取得
   *
   * @generated from rpc avion.timeline.v1.TimelineService.GetPublicTimeline
   */
  getPublicTimeline: {
    methodKind: "unary";
    input: typeof GetPublicTimelineRequestSchema;
    output: typeof GetPublicTimelineResponseSchema;
  },
  /**
   * リストタイムラインを取得
   *
   * @generated from rpc avion.timeline.v1.TimelineService.GetListTimeline
   */
  getListTimeline: {
    methodKind: "unary";
    input: typeof GetListTimelineRequestSchema;
    output: typeof GetListTimelineResponseSchema;
  },
  /**
   * ハッシュタグタイムラインを取得
   *
   * @generated from rpc avion.timeline.v1.TimelineService.GetHashtagTimeline
   */
  getHashtagTimeline: {
    methodKind: "unary";
    input: typeof GetHashtagTimelineRequestSchema;
    output: typeof GetHashtagTimelineResponseSchema;
  },
  /**
   * タイムラインに追加
   *
   * @generated from rpc avion.timeline.v1.TimelineService.AddToTimeline
   */
  addToTimeline: {
    methodKind: "unary";
    input: typeof AddToTimelineRequestSchema;
    output: typeof AddToTimelineResponseSchema;
  },
  /**
   * タイムラインから削除
   *
   * @generated from rpc avion.timeline.v1.TimelineService.RemoveFromTimeline
   */
  removeFromTimeline: {
    methodKind: "unary";
    input: typeof RemoveFromTimelineRequestSchema;
    output: typeof RemoveFromTimelineResponseSchema;
  },
  /**
   * 既読マーク
   *
   * @generated from rpc avion.timeline.v1.TimelineService.MarkAsRead
   */
  markAsRead: {
    methodKind: "unary";
    input: typeof MarkAsReadRequestSchema;
    output: typeof MarkAsReadResponseSchema;
  },
  /**
   * タイムライン統計情報を取得
   *
   * @generated from rpc avion.timeline.v1.TimelineService.GetTimelineStatistics
   */
  getTimelineStatistics: {
    methodKind: "unary";
    input: typeof GetTimelineStatisticsRequestSchema;
    output: typeof GetTimelineStatisticsResponseSchema;
  },
  /**
   * タイムライン設定を取得
   *
   * @generated from rpc avion.timeline.v1.TimelineService.GetTimelineSettings
   */
  getTimelineSettings: {
    methodKind: "unary";
    input: typeof GetTimelineSettingsRequestSchema;
    output: typeof GetTimelineSettingsResponseSchema;
  },
  /**
   * タイムライン設定を更新
   *
   * @generated from rpc avion.timeline.v1.TimelineService.UpdateTimelineSettings
   */
  updateTimelineSettings: {
    methodKind: "unary";
    input: typeof UpdateTimelineSettingsRequestSchema;
    output: typeof UpdateTimelineSettingsResponseSchema;
  },
  /**
   * バッチでタイムラインに追加（内部用）
   *
   * @generated from rpc avion.timeline.v1.TimelineService.BatchAddToTimeline
   */
  batchAddToTimeline: {
    methodKind: "unary";
    input: typeof BatchAddToTimelineRequestSchema;
    output: typeof BatchAddToTimelineResponseSchema;
  },
  /**
   * タイムラインをクリア
   *
   * @generated from rpc avion.timeline.v1.TimelineService.ClearTimeline
   */
  clearTimeline: {
    methodKind: "unary";
    input: typeof ClearTimelineRequestSchema;
    output: typeof ClearTimelineResponseSchema;
  },
  /**
   * タイムラインを再構築（内部用）
   *
   * @generated from rpc avion.timeline.v1.TimelineService.RebuildTimeline
   */
  rebuildTimeline: {
    methodKind: "unary";
    input: typeof RebuildTimelineRequestSchema;
    output: typeof RebuildTimelineResponseSchema;
  },
  /**
   * リアルタイムタイムライン更新のストリーミング
   *
   * @generated from rpc avion.timeline.v1.TimelineService.StreamTimelineUpdates
   */
  streamTimelineUpdates: {
    methodKind: "server_streaming";
    input: typeof StreamTimelineUpdatesRequestSchema;
    output: typeof StreamTimelineUpdatesResponseSchema;
  },
  /**
   * 複数タイムラインの同時ストリーミング
   *
   * @generated from rpc avion.timeline.v1.TimelineService.StreamMultipleTimelines
   */
  streamMultipleTimelines: {
    methodKind: "server_streaming";
    input: typeof StreamMultipleTimelinesRequestSchema;
    output: typeof StreamMultipleTimelinesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_avion_timeline_v1_timeline_service, 0);

