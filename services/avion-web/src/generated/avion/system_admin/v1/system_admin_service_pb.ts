// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file avion/system_admin/v1/system_admin_service.proto (package avion.system_admin.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { PaginationRequest, PaginationResponse } from "../../common/v1/pagination_pb";
import { file_avion_common_v1_pagination } from "../../common/v1/pagination_pb";
import type { ActionResult, AdminAction, AdminActionStatus, AdminActionType, Alert, AlertSeverity, AlertStatus, AlertType, AuditLog, BackupInfo, BackupStatus, BackupType, CacheInfo, ConfigType, HealthStatus, MaintenanceWindow, ServiceControl, ServiceStatus, StatsPeriod, SystemConfig, SystemHealth, SystemStats, VerificationStatus } from "./system_admin_pb";
import { file_avion_system_admin_v1_system_admin } from "./system_admin_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file avion/system_admin/v1/system_admin_service.proto.
 */
export const file_avion_system_admin_v1_system_admin_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_avion_common_v1_pagination, file_avion_system_admin_v1_system_admin]);

/**
 * GetSystemHealthRequest はシステムヘルスを取得するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.GetSystemHealthRequest
 */
export type GetSystemHealthRequest = Message<"avion.system_admin.v1.GetSystemHealthRequest"> & {
  /**
   * ヘルス情報を取得するサービスID（オプション、空の場合はすべてを返す）
   *
   * @generated from field: string service_id = 1;
   */
  serviceId: string;

  /**
   * 詳細なメトリクスを含める
   *
   * @generated from field: bool include_details = 2;
   */
  includeDetails: boolean;
};

/**
 * Describes the message avion.system_admin.v1.GetSystemHealthRequest.
 * Use `create(GetSystemHealthRequestSchema)` to create a new message.
 */
export const GetSystemHealthRequestSchema: GenMessage<GetSystemHealthRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 0);

/**
 * GetSystemHealthResponse はシステムヘルスを含むレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.GetSystemHealthResponse
 */
export type GetSystemHealthResponse = Message<"avion.system_admin.v1.GetSystemHealthResponse"> & {
  /**
   * サービスのヘルス状態
   *
   * @generated from field: repeated avion.system_admin.v1.SystemHealth services = 1;
   */
  services: SystemHealth[];

  /**
   * システム全体のステータス
   *
   * @generated from field: avion.system_admin.v1.HealthStatus overall_status = 2;
   */
  overallStatus: HealthStatus;

  /**
   * ヘルスチェックのタイムスタンプ
   *
   * @generated from field: google.protobuf.Timestamp checked_at = 3;
   */
  checkedAt?: Timestamp;
};

/**
 * Describes the message avion.system_admin.v1.GetSystemHealthResponse.
 * Use `create(GetSystemHealthResponseSchema)` to create a new message.
 */
export const GetSystemHealthResponseSchema: GenMessage<GetSystemHealthResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 1);

/**
 * StreamSystemHealthRequest はシステムヘルスをストリーミングするリクエストを表す
 *
 * @generated from message avion.system_admin.v1.StreamSystemHealthRequest
 */
export type StreamSystemHealthRequest = Message<"avion.system_admin.v1.StreamSystemHealthRequest"> & {
  /**
   * 監視するサービスID（すべての場合は空）
   *
   * @generated from field: repeated string service_ids = 1;
   */
  serviceIds: string[];

  /**
   * 更新間隔（秒）
   *
   * @generated from field: int32 interval_seconds = 2;
   */
  intervalSeconds: number;

  /**
   * 詳細なメトリクスを含める
   *
   * @generated from field: bool include_details = 3;
   */
  includeDetails: boolean;
};

/**
 * Describes the message avion.system_admin.v1.StreamSystemHealthRequest.
 * Use `create(StreamSystemHealthRequestSchema)` to create a new message.
 */
export const StreamSystemHealthRequestSchema: GenMessage<StreamSystemHealthRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 2);

/**
 * StreamSystemHealthResponse はストリーミングされたヘルス更新を表す
 *
 * @generated from message avion.system_admin.v1.StreamSystemHealthResponse
 */
export type StreamSystemHealthResponse = Message<"avion.system_admin.v1.StreamSystemHealthResponse"> & {
  /**
   * 更新されたヘルス状態
   *
   * @generated from field: avion.system_admin.v1.SystemHealth health = 1;
   */
  health?: SystemHealth;

  /**
   * 更新タイムスタンプ
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 2;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message avion.system_admin.v1.StreamSystemHealthResponse.
 * Use `create(StreamSystemHealthResponseSchema)` to create a new message.
 */
export const StreamSystemHealthResponseSchema: GenMessage<StreamSystemHealthResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 3);

/**
 * GetSystemConfigRequest はシステム設定を取得するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.GetSystemConfigRequest
 */
export type GetSystemConfigRequest = Message<"avion.system_admin.v1.GetSystemConfigRequest"> & {
  /**
   * 設定キー
   *
   * @generated from field: string key = 1;
   */
  key: string;
};

/**
 * Describes the message avion.system_admin.v1.GetSystemConfigRequest.
 * Use `create(GetSystemConfigRequestSchema)` to create a new message.
 */
export const GetSystemConfigRequestSchema: GenMessage<GetSystemConfigRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 4);

/**
 * GetSystemConfigResponse はシステム設定を含むレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.GetSystemConfigResponse
 */
export type GetSystemConfigResponse = Message<"avion.system_admin.v1.GetSystemConfigResponse"> & {
  /**
   * システム設定
   *
   * @generated from field: avion.system_admin.v1.SystemConfig config = 1;
   */
  config?: SystemConfig;
};

/**
 * Describes the message avion.system_admin.v1.GetSystemConfigResponse.
 * Use `create(GetSystemConfigResponseSchema)` to create a new message.
 */
export const GetSystemConfigResponseSchema: GenMessage<GetSystemConfigResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 5);

/**
 * ListSystemConfigsRequest はシステム設定をリストするリクエストを表す
 *
 * @generated from message avion.system_admin.v1.ListSystemConfigsRequest
 */
export type ListSystemConfigsRequest = Message<"avion.system_admin.v1.ListSystemConfigsRequest"> & {
  /**
   * 設定タイプでフィルタ
   *
   * @generated from field: avion.system_admin.v1.ConfigType type = 1;
   */
  type: ConfigType;

  /**
   * フィーチャーフラグのみでフィルタ
   *
   * @generated from field: bool feature_flags_only = 2;
   */
  featureFlagsOnly: boolean;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 3;
   */
  pagination?: PaginationRequest;
};

/**
 * Describes the message avion.system_admin.v1.ListSystemConfigsRequest.
 * Use `create(ListSystemConfigsRequestSchema)` to create a new message.
 */
export const ListSystemConfigsRequestSchema: GenMessage<ListSystemConfigsRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 6);

/**
 * ListSystemConfigsResponse はシステム設定を含むレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.ListSystemConfigsResponse
 */
export type ListSystemConfigsResponse = Message<"avion.system_admin.v1.ListSystemConfigsResponse"> & {
  /**
   * システム設定
   *
   * @generated from field: repeated avion.system_admin.v1.SystemConfig configs = 1;
   */
  configs: SystemConfig[];

  /**
   * ページネーションレスポンス
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.system_admin.v1.ListSystemConfigsResponse.
 * Use `create(ListSystemConfigsResponseSchema)` to create a new message.
 */
export const ListSystemConfigsResponseSchema: GenMessage<ListSystemConfigsResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 7);

/**
 * UpdateSystemConfigRequest はシステム設定を更新するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.UpdateSystemConfigRequest
 */
export type UpdateSystemConfigRequest = Message<"avion.system_admin.v1.UpdateSystemConfigRequest"> & {
  /**
   * 更新するシステム設定
   *
   * @generated from field: avion.system_admin.v1.SystemConfig config = 1;
   */
  config?: SystemConfig;

  /**
   * 更新マスク
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message avion.system_admin.v1.UpdateSystemConfigRequest.
 * Use `create(UpdateSystemConfigRequestSchema)` to create a new message.
 */
export const UpdateSystemConfigRequestSchema: GenMessage<UpdateSystemConfigRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 8);

/**
 * UpdateSystemConfigResponse は設定更新後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.UpdateSystemConfigResponse
 */
export type UpdateSystemConfigResponse = Message<"avion.system_admin.v1.UpdateSystemConfigResponse"> & {
  /**
   * 更新された設定
   *
   * @generated from field: avion.system_admin.v1.SystemConfig config = 1;
   */
  config?: SystemConfig;

  /**
   * 再起動が必要かどうか
   *
   * @generated from field: bool restart_required = 2;
   */
  restartRequired: boolean;
};

/**
 * Describes the message avion.system_admin.v1.UpdateSystemConfigResponse.
 * Use `create(UpdateSystemConfigResponseSchema)` to create a new message.
 */
export const UpdateSystemConfigResponseSchema: GenMessage<UpdateSystemConfigResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 9);

/**
 * CreateAuditLogRequest は監査ログを作成するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.CreateAuditLogRequest
 */
export type CreateAuditLogRequest = Message<"avion.system_admin.v1.CreateAuditLogRequest"> & {
  /**
   * 監査ログエントリ
   *
   * @generated from field: avion.system_admin.v1.AuditLog audit_log = 1;
   */
  auditLog?: AuditLog;
};

/**
 * Describes the message avion.system_admin.v1.CreateAuditLogRequest.
 * Use `create(CreateAuditLogRequestSchema)` to create a new message.
 */
export const CreateAuditLogRequestSchema: GenMessage<CreateAuditLogRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 10);

/**
 * CreateAuditLogResponse は監査ログ作成後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.CreateAuditLogResponse
 */
export type CreateAuditLogResponse = Message<"avion.system_admin.v1.CreateAuditLogResponse"> & {
  /**
   * 作成された監査ログ
   *
   * @generated from field: avion.system_admin.v1.AuditLog audit_log = 1;
   */
  auditLog?: AuditLog;
};

/**
 * Describes the message avion.system_admin.v1.CreateAuditLogResponse.
 * Use `create(CreateAuditLogResponseSchema)` to create a new message.
 */
export const CreateAuditLogResponseSchema: GenMessage<CreateAuditLogResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 11);

/**
 * SearchAuditLogsRequest は監査ログを検索するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.SearchAuditLogsRequest
 */
export type SearchAuditLogsRequest = Message<"avion.system_admin.v1.SearchAuditLogsRequest"> & {
  /**
   * アクションでフィルタ
   *
   * @generated from field: string action = 1;
   */
  action: string;

  /**
   * アクターIDでフィルタ
   *
   * @generated from field: string actor_id = 2;
   */
  actorId: string;

  /**
   * リソースタイプでフィルタ
   *
   * @generated from field: string resource_type = 3;
   */
  resourceType: string;

  /**
   * リソースIDでフィルタ
   *
   * @generated from field: string resource_id = 4;
   */
  resourceId: string;

  /**
   * サービス名でフィルタ
   *
   * @generated from field: string service_name = 5;
   */
  serviceName: string;

  /**
   * 結果でフィルタ
   *
   * @generated from field: avion.system_admin.v1.ActionResult result = 6;
   */
  result: ActionResult;

  /**
   * 開始時刻フィルタ
   *
   * @generated from field: google.protobuf.Timestamp start_time = 7;
   */
  startTime?: Timestamp;

  /**
   * 終了時刻フィルタ
   *
   * @generated from field: google.protobuf.Timestamp end_time = 8;
   */
  endTime?: Timestamp;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 9;
   */
  pagination?: PaginationRequest;
};

/**
 * Describes the message avion.system_admin.v1.SearchAuditLogsRequest.
 * Use `create(SearchAuditLogsRequestSchema)` to create a new message.
 */
export const SearchAuditLogsRequestSchema: GenMessage<SearchAuditLogsRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 12);

/**
 * SearchAuditLogsResponse は監査ログを含むレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.SearchAuditLogsResponse
 */
export type SearchAuditLogsResponse = Message<"avion.system_admin.v1.SearchAuditLogsResponse"> & {
  /**
   * 監査ログエントリ
   *
   * @generated from field: repeated avion.system_admin.v1.AuditLog audit_logs = 1;
   */
  auditLogs: AuditLog[];

  /**
   * ページネーションレスポンス
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.system_admin.v1.SearchAuditLogsResponse.
 * Use `create(SearchAuditLogsResponseSchema)` to create a new message.
 */
export const SearchAuditLogsResponseSchema: GenMessage<SearchAuditLogsResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 13);

/**
 * CreateBackupRequest はバックアップを作成するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.CreateBackupRequest
 */
export type CreateBackupRequest = Message<"avion.system_admin.v1.CreateBackupRequest"> & {
  /**
   * バックアップ名
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * バックアップの説明
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * バックアップタイプ
   *
   * @generated from field: avion.system_admin.v1.BackupType type = 3;
   */
  type: BackupType;

  /**
   * 含めるサービス（すべての場合は空）
   *
   * @generated from field: repeated string services = 4;
   */
  services: string[];

  /**
   * バックアップを暗号化するかどうか
   *
   * @generated from field: bool encrypt = 5;
   */
  encrypt: boolean;

  /**
   * 圧縮タイプ
   *
   * @generated from field: string compression_type = 6;
   */
  compressionType: string;

  /**
   * 保持期間（日数）
   *
   * @generated from field: int32 retention_days = 7;
   */
  retentionDays: number;
};

/**
 * Describes the message avion.system_admin.v1.CreateBackupRequest.
 * Use `create(CreateBackupRequestSchema)` to create a new message.
 */
export const CreateBackupRequestSchema: GenMessage<CreateBackupRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 14);

/**
 * CreateBackupResponse はバックアップ作成後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.CreateBackupResponse
 */
export type CreateBackupResponse = Message<"avion.system_admin.v1.CreateBackupResponse"> & {
  /**
   * 作成されたバックアップ情報
   *
   * @generated from field: avion.system_admin.v1.BackupInfo backup = 1;
   */
  backup?: BackupInfo;

  /**
   * トラッキング用のバックアップジョブID
   *
   * @generated from field: string job_id = 2;
   */
  jobId: string;
};

/**
 * Describes the message avion.system_admin.v1.CreateBackupResponse.
 * Use `create(CreateBackupResponseSchema)` to create a new message.
 */
export const CreateBackupResponseSchema: GenMessage<CreateBackupResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 15);

/**
 * ListBackupsRequest はバックアップをリストするリクエストを表す
 *
 * @generated from message avion.system_admin.v1.ListBackupsRequest
 */
export type ListBackupsRequest = Message<"avion.system_admin.v1.ListBackupsRequest"> & {
  /**
   * バックアップタイプでフィルタ
   *
   * @generated from field: avion.system_admin.v1.BackupType type = 1;
   */
  type: BackupType;

  /**
   * ステータスでフィルタ
   *
   * @generated from field: avion.system_admin.v1.BackupStatus status = 2;
   */
  status: BackupStatus;

  /**
   * 期限切れのバックアップを含める
   *
   * @generated from field: bool include_expired = 3;
   */
  includeExpired: boolean;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 4;
   */
  pagination?: PaginationRequest;
};

/**
 * Describes the message avion.system_admin.v1.ListBackupsRequest.
 * Use `create(ListBackupsRequestSchema)` to create a new message.
 */
export const ListBackupsRequestSchema: GenMessage<ListBackupsRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 16);

/**
 * ListBackupsResponse はバックアップを含むレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.ListBackupsResponse
 */
export type ListBackupsResponse = Message<"avion.system_admin.v1.ListBackupsResponse"> & {
  /**
   * バックアップ情報
   *
   * @generated from field: repeated avion.system_admin.v1.BackupInfo backups = 1;
   */
  backups: BackupInfo[];

  /**
   * ページネーションレスポンス
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.system_admin.v1.ListBackupsResponse.
 * Use `create(ListBackupsResponseSchema)` to create a new message.
 */
export const ListBackupsResponseSchema: GenMessage<ListBackupsResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 17);

/**
 * RestoreBackupRequest はバックアップから復元するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.RestoreBackupRequest
 */
export type RestoreBackupRequest = Message<"avion.system_admin.v1.RestoreBackupRequest"> & {
  /**
   * 復元元のバックアップID
   *
   * @generated from field: string backup_id = 1;
   */
  backupId: string;

  /**
   * 復元するサービス（すべての場合は空）
   *
   * @generated from field: repeated string services = 2;
   */
  services: string[];

  /**
   * 復元前に検証するかどうか
   *
   * @generated from field: bool verify_first = 3;
   */
  verifyFirst: boolean;

  /**
   * 復元オプション
   *
   * @generated from field: map<string, string> options = 4;
   */
  options: { [key: string]: string };
};

/**
 * Describes the message avion.system_admin.v1.RestoreBackupRequest.
 * Use `create(RestoreBackupRequestSchema)` to create a new message.
 */
export const RestoreBackupRequestSchema: GenMessage<RestoreBackupRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 18);

/**
 * RestoreBackupResponse は復元後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.RestoreBackupResponse
 */
export type RestoreBackupResponse = Message<"avion.system_admin.v1.RestoreBackupResponse"> & {
  /**
   * トラッキング用の復元ジョブID
   *
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * 推定完了時間
   *
   * @generated from field: google.protobuf.Timestamp estimated_completion = 2;
   */
  estimatedCompletion?: Timestamp;

  /**
   * 復元ステータス
   *
   * @generated from field: string status = 3;
   */
  status: string;
};

/**
 * Describes the message avion.system_admin.v1.RestoreBackupResponse.
 * Use `create(RestoreBackupResponseSchema)` to create a new message.
 */
export const RestoreBackupResponseSchema: GenMessage<RestoreBackupResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 19);

/**
 * VerifyBackupRequest はバックアップを検証するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.VerifyBackupRequest
 */
export type VerifyBackupRequest = Message<"avion.system_admin.v1.VerifyBackupRequest"> & {
  /**
   * 検証するバックアップID
   *
   * @generated from field: string backup_id = 1;
   */
  backupId: string;

  /**
   * 検証の深度
   *
   * @generated from field: avion.system_admin.v1.VerificationDepth depth = 2;
   */
  depth: VerificationDepth;
};

/**
 * Describes the message avion.system_admin.v1.VerifyBackupRequest.
 * Use `create(VerifyBackupRequestSchema)` to create a new message.
 */
export const VerifyBackupRequestSchema: GenMessage<VerifyBackupRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 20);

/**
 * VerifyBackupResponse は検証後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.VerifyBackupResponse
 */
export type VerifyBackupResponse = Message<"avion.system_admin.v1.VerifyBackupResponse"> & {
  /**
   * 検証ステータス
   *
   * @generated from field: avion.system_admin.v1.VerificationStatus status = 1;
   */
  status: VerificationStatus;

  /**
   * 検証の詳細
   *
   * @generated from field: map<string, string> details = 2;
   */
  details: { [key: string]: string };

  /**
   * 検証タイムスタンプ
   *
   * @generated from field: google.protobuf.Timestamp verified_at = 3;
   */
  verifiedAt?: Timestamp;
};

/**
 * Describes the message avion.system_admin.v1.VerifyBackupResponse.
 * Use `create(VerifyBackupResponseSchema)` to create a new message.
 */
export const VerifyBackupResponseSchema: GenMessage<VerifyBackupResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 21);

/**
 * CreateMaintenanceWindowRequest はメンテナンスを作成するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.CreateMaintenanceWindowRequest
 */
export type CreateMaintenanceWindowRequest = Message<"avion.system_admin.v1.CreateMaintenanceWindowRequest"> & {
  /**
   * メンテナンスウィンドウの詳細
   *
   * @generated from field: avion.system_admin.v1.MaintenanceWindow maintenance = 1;
   */
  maintenance?: MaintenanceWindow;

  /**
   * 通知を送信するかどうか
   *
   * @generated from field: bool send_notifications = 2;
   */
  sendNotifications: boolean;
};

/**
 * Describes the message avion.system_admin.v1.CreateMaintenanceWindowRequest.
 * Use `create(CreateMaintenanceWindowRequestSchema)` to create a new message.
 */
export const CreateMaintenanceWindowRequestSchema: GenMessage<CreateMaintenanceWindowRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 22);

/**
 * CreateMaintenanceWindowResponse はメンテナンス作成後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.CreateMaintenanceWindowResponse
 */
export type CreateMaintenanceWindowResponse = Message<"avion.system_admin.v1.CreateMaintenanceWindowResponse"> & {
  /**
   * 作成されたメンテナンスウィンドウ
   *
   * @generated from field: avion.system_admin.v1.MaintenanceWindow maintenance = 1;
   */
  maintenance?: MaintenanceWindow;

  /**
   * 通知ステータス
   *
   * @generated from field: bool notifications_sent = 2;
   */
  notificationsSent: boolean;
};

/**
 * Describes the message avion.system_admin.v1.CreateMaintenanceWindowResponse.
 * Use `create(CreateMaintenanceWindowResponseSchema)` to create a new message.
 */
export const CreateMaintenanceWindowResponseSchema: GenMessage<CreateMaintenanceWindowResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 23);

/**
 * UpdateMaintenanceWindowRequest はメンテナンスを更新するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.UpdateMaintenanceWindowRequest
 */
export type UpdateMaintenanceWindowRequest = Message<"avion.system_admin.v1.UpdateMaintenanceWindowRequest"> & {
  /**
   * 更新するメンテナンスウィンドウ
   *
   * @generated from field: avion.system_admin.v1.MaintenanceWindow maintenance = 1;
   */
  maintenance?: MaintenanceWindow;

  /**
   * 更新マスク
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * 更新通知を送信するかどうか
   *
   * @generated from field: bool send_notifications = 3;
   */
  sendNotifications: boolean;
};

/**
 * Describes the message avion.system_admin.v1.UpdateMaintenanceWindowRequest.
 * Use `create(UpdateMaintenanceWindowRequestSchema)` to create a new message.
 */
export const UpdateMaintenanceWindowRequestSchema: GenMessage<UpdateMaintenanceWindowRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 24);

/**
 * UpdateMaintenanceWindowResponse はメンテナンス更新後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.UpdateMaintenanceWindowResponse
 */
export type UpdateMaintenanceWindowResponse = Message<"avion.system_admin.v1.UpdateMaintenanceWindowResponse"> & {
  /**
   * 更新されたメンテナンスウィンドウ
   *
   * @generated from field: avion.system_admin.v1.MaintenanceWindow maintenance = 1;
   */
  maintenance?: MaintenanceWindow;

  /**
   * 通知ステータス
   *
   * @generated from field: bool notifications_sent = 2;
   */
  notificationsSent: boolean;
};

/**
 * Describes the message avion.system_admin.v1.UpdateMaintenanceWindowResponse.
 * Use `create(UpdateMaintenanceWindowResponseSchema)` to create a new message.
 */
export const UpdateMaintenanceWindowResponseSchema: GenMessage<UpdateMaintenanceWindowResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 25);

/**
 * EndMaintenanceRequest はメンテナンスを終了するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.EndMaintenanceRequest
 */
export type EndMaintenanceRequest = Message<"avion.system_admin.v1.EndMaintenanceRequest"> & {
  /**
   * メンテナンスウィンドウID
   *
   * @generated from field: string maintenance_id = 1;
   */
  maintenanceId: string;

  /**
   * 完了メモ
   *
   * @generated from field: string notes = 2;
   */
  notes: string;
};

/**
 * Describes the message avion.system_admin.v1.EndMaintenanceRequest.
 * Use `create(EndMaintenanceRequestSchema)` to create a new message.
 */
export const EndMaintenanceRequestSchema: GenMessage<EndMaintenanceRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 26);

/**
 * EndMaintenanceResponse はメンテナンス終了後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.EndMaintenanceResponse
 */
export type EndMaintenanceResponse = Message<"avion.system_admin.v1.EndMaintenanceResponse"> & {
  /**
   * 更新されたメンテナンスウィンドウ
   *
   * @generated from field: avion.system_admin.v1.MaintenanceWindow maintenance = 1;
   */
  maintenance?: MaintenanceWindow;

  /**
   * 復元されたサービス
   *
   * @generated from field: repeated string restored_services = 2;
   */
  restoredServices: string[];
};

/**
 * Describes the message avion.system_admin.v1.EndMaintenanceResponse.
 * Use `create(EndMaintenanceResponseSchema)` to create a new message.
 */
export const EndMaintenanceResponseSchema: GenMessage<EndMaintenanceResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 27);

/**
 * GetSystemStatsRequest はシステム統計を取得するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.GetSystemStatsRequest
 */
export type GetSystemStatsRequest = Message<"avion.system_admin.v1.GetSystemStatsRequest"> & {
  /**
   * 統計期間
   *
   * @generated from field: avion.system_admin.v1.StatsPeriod period = 1;
   */
  period: StatsPeriod;

  /**
   * カスタム開始時間（CUSTOM期間用）
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * カスタム終了時間（CUSTOM期間用）
   *
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;

  /**
   * 詳細な内訳を含める
   *
   * @generated from field: bool include_details = 4;
   */
  includeDetails: boolean;
};

/**
 * Describes the message avion.system_admin.v1.GetSystemStatsRequest.
 * Use `create(GetSystemStatsRequestSchema)` to create a new message.
 */
export const GetSystemStatsRequestSchema: GenMessage<GetSystemStatsRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 28);

/**
 * GetSystemStatsResponse はシステム統計を含むレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.GetSystemStatsResponse
 */
export type GetSystemStatsResponse = Message<"avion.system_admin.v1.GetSystemStatsResponse"> & {
  /**
   * システム統計
   *
   * @generated from field: avion.system_admin.v1.SystemStats stats = 1;
   */
  stats?: SystemStats;

  /**
   * 比較用の前期間の統計
   *
   * @generated from field: avion.system_admin.v1.SystemStats previous_period = 2;
   */
  previousPeriod?: SystemStats;
};

/**
 * Describes the message avion.system_admin.v1.GetSystemStatsResponse.
 * Use `create(GetSystemStatsResponseSchema)` to create a new message.
 */
export const GetSystemStatsResponseSchema: GenMessage<GetSystemStatsResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 29);

/**
 * GenerateReportRequest はレポートを生成するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.GenerateReportRequest
 */
export type GenerateReportRequest = Message<"avion.system_admin.v1.GenerateReportRequest"> & {
  /**
   * レポートタイプ
   *
   * @generated from field: avion.system_admin.v1.ReportType type = 1;
   */
  type: ReportType;

  /**
   * レポート期間
   *
   * @generated from field: avion.system_admin.v1.StatsPeriod period = 2;
   */
  period: StatsPeriod;

  /**
   * レポートの開始時間
   *
   * @generated from field: google.protobuf.Timestamp start_time = 3;
   */
  startTime?: Timestamp;

  /**
   * レポートの終了時間
   *
   * @generated from field: google.protobuf.Timestamp end_time = 4;
   */
  endTime?: Timestamp;

  /**
   * 出力フォーマット
   *
   * @generated from field: avion.system_admin.v1.ReportFormat format = 5;
   */
  format: ReportFormat;

  /**
   * 含めるセクション
   *
   * @generated from field: repeated string sections = 6;
   */
  sections: string[];
};

/**
 * Describes the message avion.system_admin.v1.GenerateReportRequest.
 * Use `create(GenerateReportRequestSchema)` to create a new message.
 */
export const GenerateReportRequestSchema: GenMessage<GenerateReportRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 30);

/**
 * GenerateReportResponse はレポート生成後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.GenerateReportResponse
 */
export type GenerateReportResponse = Message<"avion.system_admin.v1.GenerateReportResponse"> & {
  /**
   * レポートID
   *
   * @generated from field: string report_id = 1;
   */
  reportId: string;

  /**
   * ダウンロード用のレポートURL
   *
   * @generated from field: string download_url = 2;
   */
  downloadUrl: string;

  /**
   * レポート生成タイムスタンプ
   *
   * @generated from field: google.protobuf.Timestamp generated_at = 3;
   */
  generatedAt?: Timestamp;

  /**
   * レポートサイズ（バイト）
   *
   * @generated from field: int64 size_bytes = 4;
   */
  sizeBytes: bigint;
};

/**
 * Describes the message avion.system_admin.v1.GenerateReportResponse.
 * Use `create(GenerateReportResponseSchema)` to create a new message.
 */
export const GenerateReportResponseSchema: GenMessage<GenerateReportResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 31);

/**
 * ListAlertsRequest はアラートをリストするリクエストを表す
 *
 * @generated from message avion.system_admin.v1.ListAlertsRequest
 */
export type ListAlertsRequest = Message<"avion.system_admin.v1.ListAlertsRequest"> & {
  /**
   * 重要度でフィルタ
   *
   * @generated from field: avion.system_admin.v1.AlertSeverity severity = 1;
   */
  severity: AlertSeverity;

  /**
   * タイプでフィルタ
   *
   * @generated from field: avion.system_admin.v1.AlertType type = 2;
   */
  type: AlertType;

  /**
   * ステータスでフィルタ
   *
   * @generated from field: avion.system_admin.v1.AlertStatus status = 3;
   */
  status: AlertStatus;

  /**
   * サービス名でフィルタ
   *
   * @generated from field: string service_name = 4;
   */
  serviceName: string;

  /**
   * 開始時刻フィルタ
   *
   * @generated from field: google.protobuf.Timestamp start_time = 5;
   */
  startTime?: Timestamp;

  /**
   * 終了時刻フィルタ
   *
   * @generated from field: google.protobuf.Timestamp end_time = 6;
   */
  endTime?: Timestamp;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 7;
   */
  pagination?: PaginationRequest;
};

/**
 * Describes the message avion.system_admin.v1.ListAlertsRequest.
 * Use `create(ListAlertsRequestSchema)` to create a new message.
 */
export const ListAlertsRequestSchema: GenMessage<ListAlertsRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 32);

/**
 * ListAlertsResponse はアラートを含むレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.ListAlertsResponse
 */
export type ListAlertsResponse = Message<"avion.system_admin.v1.ListAlertsResponse"> & {
  /**
   * アラートリスト
   *
   * @generated from field: repeated avion.system_admin.v1.Alert alerts = 1;
   */
  alerts: Alert[];

  /**
   * ページネーションレスポンス
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.system_admin.v1.ListAlertsResponse.
 * Use `create(ListAlertsResponseSchema)` to create a new message.
 */
export const ListAlertsResponseSchema: GenMessage<ListAlertsResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 33);

/**
 * AcknowledgeAlertRequest はアラートを確認するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.AcknowledgeAlertRequest
 */
export type AcknowledgeAlertRequest = Message<"avion.system_admin.v1.AcknowledgeAlertRequest"> & {
  /**
   * 確認するアラートID
   *
   * @generated from field: string alert_id = 1;
   */
  alertId: string;

  /**
   * 確認メモ
   *
   * @generated from field: string notes = 2;
   */
  notes: string;
};

/**
 * Describes the message avion.system_admin.v1.AcknowledgeAlertRequest.
 * Use `create(AcknowledgeAlertRequestSchema)` to create a new message.
 */
export const AcknowledgeAlertRequestSchema: GenMessage<AcknowledgeAlertRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 34);

/**
 * AcknowledgeAlertResponse はアラート確認後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.AcknowledgeAlertResponse
 */
export type AcknowledgeAlertResponse = Message<"avion.system_admin.v1.AcknowledgeAlertResponse"> & {
  /**
   * 更新されたアラート
   *
   * @generated from field: avion.system_admin.v1.Alert alert = 1;
   */
  alert?: Alert;
};

/**
 * Describes the message avion.system_admin.v1.AcknowledgeAlertResponse.
 * Use `create(AcknowledgeAlertResponseSchema)` to create a new message.
 */
export const AcknowledgeAlertResponseSchema: GenMessage<AcknowledgeAlertResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 35);

/**
 * ResolveAlertRequest はアラートを解決するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.ResolveAlertRequest
 */
export type ResolveAlertRequest = Message<"avion.system_admin.v1.ResolveAlertRequest"> & {
  /**
   * 解決するアラートID
   *
   * @generated from field: string alert_id = 1;
   */
  alertId: string;

  /**
   * 解決内容
   *
   * @generated from field: string resolution = 2;
   */
  resolution: string;

  /**
   * 実施したアクション
   *
   * @generated from field: repeated string actions_taken = 3;
   */
  actionsTaken: string[];
};

/**
 * Describes the message avion.system_admin.v1.ResolveAlertRequest.
 * Use `create(ResolveAlertRequestSchema)` to create a new message.
 */
export const ResolveAlertRequestSchema: GenMessage<ResolveAlertRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 36);

/**
 * ResolveAlertResponse はアラート解決後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.ResolveAlertResponse
 */
export type ResolveAlertResponse = Message<"avion.system_admin.v1.ResolveAlertResponse"> & {
  /**
   * 更新されたアラート
   *
   * @generated from field: avion.system_admin.v1.Alert alert = 1;
   */
  alert?: Alert;
};

/**
 * Describes the message avion.system_admin.v1.ResolveAlertResponse.
 * Use `create(ResolveAlertResponseSchema)` to create a new message.
 */
export const ResolveAlertResponseSchema: GenMessage<ResolveAlertResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 37);

/**
 * StreamAlertsRequest はアラートをストリーミングするリクエストを表す
 *
 * @generated from message avion.system_admin.v1.StreamAlertsRequest
 */
export type StreamAlertsRequest = Message<"avion.system_admin.v1.StreamAlertsRequest"> & {
  /**
   * 重要度でフィルタ（すべての場合は空）
   *
   * @generated from field: repeated avion.system_admin.v1.AlertSeverity severities = 1;
   */
  severities: AlertSeverity[];

  /**
   * タイプでフィルタ（すべての場合は空）
   *
   * @generated from field: repeated avion.system_admin.v1.AlertType types = 2;
   */
  types: AlertType[];

  /**
   * サービスでフィルタ（すべての場合は空）
   *
   * @generated from field: repeated string service_names = 3;
   */
  serviceNames: string[];
};

/**
 * Describes the message avion.system_admin.v1.StreamAlertsRequest.
 * Use `create(StreamAlertsRequestSchema)` to create a new message.
 */
export const StreamAlertsRequestSchema: GenMessage<StreamAlertsRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 38);

/**
 * StreamAlertsResponse はストリーミングされたアラートを表す
 *
 * @generated from message avion.system_admin.v1.StreamAlertsResponse
 */
export type StreamAlertsResponse = Message<"avion.system_admin.v1.StreamAlertsResponse"> & {
  /**
   * アラート
   *
   * @generated from field: avion.system_admin.v1.Alert alert = 1;
   */
  alert?: Alert;

  /**
   * イベントタイプ（created、updated、resolved）
   *
   * @generated from field: string event_type = 2;
   */
  eventType: string;
};

/**
 * Describes the message avion.system_admin.v1.StreamAlertsResponse.
 * Use `create(StreamAlertsResponseSchema)` to create a new message.
 */
export const StreamAlertsResponseSchema: GenMessage<StreamAlertsResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 39);

/**
 * ExecuteAdminActionRequest は管理アクションを実行するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.ExecuteAdminActionRequest
 */
export type ExecuteAdminActionRequest = Message<"avion.system_admin.v1.ExecuteAdminActionRequest"> & {
  /**
   * 実行する管理アクション
   *
   * @generated from field: avion.system_admin.v1.AdminAction action = 1;
   */
  action?: AdminAction;

  /**
   * ドライランモードで実行するかどうか
   *
   * @generated from field: bool dry_run = 2;
   */
  dryRun: boolean;
};

/**
 * Describes the message avion.system_admin.v1.ExecuteAdminActionRequest.
 * Use `create(ExecuteAdminActionRequestSchema)` to create a new message.
 */
export const ExecuteAdminActionRequestSchema: GenMessage<ExecuteAdminActionRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 40);

/**
 * ExecuteAdminActionResponse はアクション実行後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.ExecuteAdminActionResponse
 */
export type ExecuteAdminActionResponse = Message<"avion.system_admin.v1.ExecuteAdminActionResponse"> & {
  /**
   * 結果を含む実行されたアクション
   *
   * @generated from field: avion.system_admin.v1.AdminAction action = 1;
   */
  action?: AdminAction;

  /**
   * アクションが成功したかどうか
   *
   * @generated from field: bool success = 2;
   */
  success: boolean;

  /**
   * 影響を受けたリソース
   *
   * @generated from field: repeated string affected_resources = 3;
   */
  affectedResources: string[];
};

/**
 * Describes the message avion.system_admin.v1.ExecuteAdminActionResponse.
 * Use `create(ExecuteAdminActionResponseSchema)` to create a new message.
 */
export const ExecuteAdminActionResponseSchema: GenMessage<ExecuteAdminActionResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 41);

/**
 * ReverseAdminActionRequest は管理アクションを取り消すリクエストを表す
 *
 * @generated from message avion.system_admin.v1.ReverseAdminActionRequest
 */
export type ReverseAdminActionRequest = Message<"avion.system_admin.v1.ReverseAdminActionRequest"> & {
  /**
   * 取り消すアクションID
   *
   * @generated from field: string action_id = 1;
   */
  actionId: string;

  /**
   * 取り消しの理由
   *
   * @generated from field: string reason = 2;
   */
  reason: string;
};

/**
 * Describes the message avion.system_admin.v1.ReverseAdminActionRequest.
 * Use `create(ReverseAdminActionRequestSchema)` to create a new message.
 */
export const ReverseAdminActionRequestSchema: GenMessage<ReverseAdminActionRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 42);

/**
 * ReverseAdminActionResponse はアクション取り消し後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.ReverseAdminActionResponse
 */
export type ReverseAdminActionResponse = Message<"avion.system_admin.v1.ReverseAdminActionResponse"> & {
  /**
   * 更新されたアクション
   *
   * @generated from field: avion.system_admin.v1.AdminAction action = 1;
   */
  action?: AdminAction;

  /**
   * 取り消しが成功したかどうか
   *
   * @generated from field: bool success = 2;
   */
  success: boolean;
};

/**
 * Describes the message avion.system_admin.v1.ReverseAdminActionResponse.
 * Use `create(ReverseAdminActionResponseSchema)` to create a new message.
 */
export const ReverseAdminActionResponseSchema: GenMessage<ReverseAdminActionResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 43);

/**
 * ListAdminActionsRequest は管理アクションをリストするリクエストを表す
 *
 * @generated from message avion.system_admin.v1.ListAdminActionsRequest
 */
export type ListAdminActionsRequest = Message<"avion.system_admin.v1.ListAdminActionsRequest"> & {
  /**
   * アクションタイプでフィルタ
   *
   * @generated from field: avion.system_admin.v1.AdminActionType type = 1;
   */
  type: AdminActionType;

  /**
   * 実行者でフィルタ
   *
   * @generated from field: string performed_by = 2;
   */
  performedBy: string;

  /**
   * ターゲットタイプでフィルタ
   *
   * @generated from field: string target_type = 3;
   */
  targetType: string;

  /**
   * ステータスでフィルタ
   *
   * @generated from field: avion.system_admin.v1.AdminActionStatus status = 4;
   */
  status: AdminActionStatus;

  /**
   * 開始時刻フィルタ
   *
   * @generated from field: google.protobuf.Timestamp start_time = 5;
   */
  startTime?: Timestamp;

  /**
   * 終了時刻フィルタ
   *
   * @generated from field: google.protobuf.Timestamp end_time = 6;
   */
  endTime?: Timestamp;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 7;
   */
  pagination?: PaginationRequest;
};

/**
 * Describes the message avion.system_admin.v1.ListAdminActionsRequest.
 * Use `create(ListAdminActionsRequestSchema)` to create a new message.
 */
export const ListAdminActionsRequestSchema: GenMessage<ListAdminActionsRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 44);

/**
 * ListAdminActionsResponse は管理アクションを含むレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.ListAdminActionsResponse
 */
export type ListAdminActionsResponse = Message<"avion.system_admin.v1.ListAdminActionsResponse"> & {
  /**
   * 管理アクション
   *
   * @generated from field: repeated avion.system_admin.v1.AdminAction actions = 1;
   */
  actions: AdminAction[];

  /**
   * ページネーションレスポンス
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.system_admin.v1.ListAdminActionsResponse.
 * Use `create(ListAdminActionsResponseSchema)` to create a new message.
 */
export const ListAdminActionsResponseSchema: GenMessage<ListAdminActionsResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 45);

/**
 * ControlServiceRequest はサービスを制御するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.ControlServiceRequest
 */
export type ControlServiceRequest = Message<"avion.system_admin.v1.ControlServiceRequest"> & {
  /**
   * サービスID
   *
   * @generated from field: string service_id = 1;
   */
  serviceId: string;

  /**
   * 制御アクション
   *
   * @generated from field: avion.system_admin.v1.ServiceControlAction action = 2;
   */
  action: ServiceControlAction;

  /**
   * アクションを強制する
   *
   * @generated from field: bool force = 3;
   */
  force: boolean;
};

/**
 * Describes the message avion.system_admin.v1.ControlServiceRequest.
 * Use `create(ControlServiceRequestSchema)` to create a new message.
 */
export const ControlServiceRequestSchema: GenMessage<ControlServiceRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 46);

/**
 * ControlServiceResponse はサービス制御後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.ControlServiceResponse
 */
export type ControlServiceResponse = Message<"avion.system_admin.v1.ControlServiceResponse"> & {
  /**
   * 更新されたサービス制御情報
   *
   * @generated from field: avion.system_admin.v1.ServiceControl service = 1;
   */
  service?: ServiceControl;

  /**
   * アクション結果
   *
   * @generated from field: bool success = 2;
   */
  success: boolean;

  /**
   * 結果メッセージ
   *
   * @generated from field: string message = 3;
   */
  message: string;
};

/**
 * Describes the message avion.system_admin.v1.ControlServiceResponse.
 * Use `create(ControlServiceResponseSchema)` to create a new message.
 */
export const ControlServiceResponseSchema: GenMessage<ControlServiceResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 47);

/**
 * ListServicesRequest はサービスをリストするリクエストを表す
 *
 * @generated from message avion.system_admin.v1.ListServicesRequest
 */
export type ListServicesRequest = Message<"avion.system_admin.v1.ListServicesRequest"> & {
  /**
   * ステータスでフィルタ
   *
   * @generated from field: avion.system_admin.v1.ServiceStatus status = 1;
   */
  status: ServiceStatus;

  /**
   * 停止したサービスを含める
   *
   * @generated from field: bool include_stopped = 2;
   */
  includeStopped: boolean;
};

/**
 * Describes the message avion.system_admin.v1.ListServicesRequest.
 * Use `create(ListServicesRequestSchema)` to create a new message.
 */
export const ListServicesRequestSchema: GenMessage<ListServicesRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 48);

/**
 * ListServicesResponse はサービスを含むレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.ListServicesResponse
 */
export type ListServicesResponse = Message<"avion.system_admin.v1.ListServicesResponse"> & {
  /**
   * サービスリスト
   *
   * @generated from field: repeated avion.system_admin.v1.ServiceControl services = 1;
   */
  services: ServiceControl[];
};

/**
 * Describes the message avion.system_admin.v1.ListServicesResponse.
 * Use `create(ListServicesResponseSchema)` to create a new message.
 */
export const ListServicesResponseSchema: GenMessage<ListServicesResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 49);

/**
 * ScaleServiceRequest はサービスをスケールするリクエストを表す
 *
 * @generated from message avion.system_admin.v1.ScaleServiceRequest
 */
export type ScaleServiceRequest = Message<"avion.system_admin.v1.ScaleServiceRequest"> & {
  /**
   * サービスID
   *
   * @generated from field: string service_id = 1;
   */
  serviceId: string;

  /**
   * 希望するレプリカ数
   *
   * @generated from field: int32 replicas = 2;
   */
  replicas: number;

  /**
   * スケーリング完了を待つかどうか
   *
   * @generated from field: bool wait = 3;
   */
  wait: boolean;
};

/**
 * Describes the message avion.system_admin.v1.ScaleServiceRequest.
 * Use `create(ScaleServiceRequestSchema)` to create a new message.
 */
export const ScaleServiceRequestSchema: GenMessage<ScaleServiceRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 50);

/**
 * ScaleServiceResponse はサービススケール後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.ScaleServiceResponse
 */
export type ScaleServiceResponse = Message<"avion.system_admin.v1.ScaleServiceResponse"> & {
  /**
   * 更新されたサービス制御情報
   *
   * @generated from field: avion.system_admin.v1.ServiceControl service = 1;
   */
  service?: ServiceControl;

  /**
   * スケーリングステータス
   *
   * @generated from field: string status = 2;
   */
  status: string;
};

/**
 * Describes the message avion.system_admin.v1.ScaleServiceResponse.
 * Use `create(ScaleServiceResponseSchema)` to create a new message.
 */
export const ScaleServiceResponseSchema: GenMessage<ScaleServiceResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 51);

/**
 * ClearCacheRequest はキャッシュをクリアするリクエストを表す
 *
 * @generated from message avion.system_admin.v1.ClearCacheRequest
 */
export type ClearCacheRequest = Message<"avion.system_admin.v1.ClearCacheRequest"> & {
  /**
   * クリアするキャッシュ名（すべての場合は空）
   *
   * @generated from field: repeated string cache_names = 1;
   */
  cacheNames: string[];

  /**
   * 一致させるキャッシュパターン
   *
   * @generated from field: string pattern = 2;
   */
  pattern: string;

  /**
   * すべてのキャッシュをクリアするかどうか
   *
   * @generated from field: bool clear_all = 3;
   */
  clearAll: boolean;
};

/**
 * Describes the message avion.system_admin.v1.ClearCacheRequest.
 * Use `create(ClearCacheRequestSchema)` to create a new message.
 */
export const ClearCacheRequestSchema: GenMessage<ClearCacheRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 52);

/**
 * ClearCacheResponse はキャッシュクリア後のレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.ClearCacheResponse
 */
export type ClearCacheResponse = Message<"avion.system_admin.v1.ClearCacheResponse"> & {
  /**
   * クリアされたエントリ数
   *
   * @generated from field: int64 entries_cleared = 1;
   */
  entriesCleared: bigint;

  /**
   * クリアされたキャッシュ
   *
   * @generated from field: repeated string cleared_caches = 2;
   */
  clearedCaches: string[];

  /**
   * クリア操作のタイムスタンプ
   *
   * @generated from field: google.protobuf.Timestamp cleared_at = 3;
   */
  clearedAt?: Timestamp;
};

/**
 * Describes the message avion.system_admin.v1.ClearCacheResponse.
 * Use `create(ClearCacheResponseSchema)` to create a new message.
 */
export const ClearCacheResponseSchema: GenMessage<ClearCacheResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 53);

/**
 * GetCacheInfoRequest はキャッシュ情報を取得するリクエストを表す
 *
 * @generated from message avion.system_admin.v1.GetCacheInfoRequest
 */
export type GetCacheInfoRequest = Message<"avion.system_admin.v1.GetCacheInfoRequest"> & {
  /**
   * 情報を取得するキャッシュ名（すべての場合は空）
   *
   * @generated from field: repeated string cache_names = 1;
   */
  cacheNames: string[];

  /**
   * 詳細な統計を含める
   *
   * @generated from field: bool include_stats = 2;
   */
  includeStats: boolean;
};

/**
 * Describes the message avion.system_admin.v1.GetCacheInfoRequest.
 * Use `create(GetCacheInfoRequestSchema)` to create a new message.
 */
export const GetCacheInfoRequestSchema: GenMessage<GetCacheInfoRequest> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 54);

/**
 * GetCacheInfoResponse はキャッシュ情報を含むレスポンスを表す
 *
 * @generated from message avion.system_admin.v1.GetCacheInfoResponse
 */
export type GetCacheInfoResponse = Message<"avion.system_admin.v1.GetCacheInfoResponse"> & {
  /**
   * キャッシュ情報
   *
   * @generated from field: repeated avion.system_admin.v1.CacheInfo caches = 1;
   */
  caches: CacheInfo[];

  /**
   * 合計キャッシュサイズ（バイト）
   *
   * @generated from field: int64 total_size_bytes = 2;
   */
  totalSizeBytes: bigint;

  /**
   * 合計エントリ数
   *
   * @generated from field: int64 total_entries = 3;
   */
  totalEntries: bigint;
};

/**
 * Describes the message avion.system_admin.v1.GetCacheInfoResponse.
 * Use `create(GetCacheInfoResponseSchema)` to create a new message.
 */
export const GetCacheInfoResponseSchema: GenMessage<GetCacheInfoResponse> = /*@__PURE__*/
  messageDesc(file_avion_system_admin_v1_system_admin_service, 55);

/**
 * VerificationDepth は検証の深度を表す
 *
 * @generated from enum avion.system_admin.v1.VerificationDepth
 */
export enum VerificationDepth {
  /**
   * @generated from enum value: VERIFICATION_DEPTH_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: VERIFICATION_DEPTH_BASIC = 1;
   */
  BASIC = 1,

  /**
   * @generated from enum value: VERIFICATION_DEPTH_CHECKSUM = 2;
   */
  CHECKSUM = 2,

  /**
   * @generated from enum value: VERIFICATION_DEPTH_FULL = 3;
   */
  FULL = 3,
}

/**
 * Describes the enum avion.system_admin.v1.VerificationDepth.
 */
export const VerificationDepthSchema: GenEnum<VerificationDepth> = /*@__PURE__*/
  enumDesc(file_avion_system_admin_v1_system_admin_service, 0);

/**
 * ReportType はレポートのタイプを表す
 *
 * @generated from enum avion.system_admin.v1.ReportType
 */
export enum ReportType {
  /**
   * @generated from enum value: REPORT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: REPORT_TYPE_SYSTEM_HEALTH = 1;
   */
  SYSTEM_HEALTH = 1,

  /**
   * @generated from enum value: REPORT_TYPE_USAGE = 2;
   */
  USAGE = 2,

  /**
   * @generated from enum value: REPORT_TYPE_PERFORMANCE = 3;
   */
  PERFORMANCE = 3,

  /**
   * @generated from enum value: REPORT_TYPE_SECURITY = 4;
   */
  SECURITY = 4,

  /**
   * @generated from enum value: REPORT_TYPE_COMPLIANCE = 5;
   */
  COMPLIANCE = 5,

  /**
   * @generated from enum value: REPORT_TYPE_EXECUTIVE = 6;
   */
  EXECUTIVE = 6,
}

/**
 * Describes the enum avion.system_admin.v1.ReportType.
 */
export const ReportTypeSchema: GenEnum<ReportType> = /*@__PURE__*/
  enumDesc(file_avion_system_admin_v1_system_admin_service, 1);

/**
 * ReportFormat はレポートフォーマットを表す
 *
 * @generated from enum avion.system_admin.v1.ReportFormat
 */
export enum ReportFormat {
  /**
   * @generated from enum value: REPORT_FORMAT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: REPORT_FORMAT_JSON = 1;
   */
  JSON = 1,

  /**
   * @generated from enum value: REPORT_FORMAT_PDF = 2;
   */
  PDF = 2,

  /**
   * @generated from enum value: REPORT_FORMAT_CSV = 3;
   */
  CSV = 3,

  /**
   * @generated from enum value: REPORT_FORMAT_HTML = 4;
   */
  HTML = 4,
}

/**
 * Describes the enum avion.system_admin.v1.ReportFormat.
 */
export const ReportFormatSchema: GenEnum<ReportFormat> = /*@__PURE__*/
  enumDesc(file_avion_system_admin_v1_system_admin_service, 2);

/**
 * ServiceControlAction はサービス制御アクションを表す
 *
 * @generated from enum avion.system_admin.v1.ServiceControlAction
 */
export enum ServiceControlAction {
  /**
   * @generated from enum value: SERVICE_CONTROL_ACTION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SERVICE_CONTROL_ACTION_START = 1;
   */
  START = 1,

  /**
   * @generated from enum value: SERVICE_CONTROL_ACTION_STOP = 2;
   */
  STOP = 2,

  /**
   * @generated from enum value: SERVICE_CONTROL_ACTION_RESTART = 3;
   */
  RESTART = 3,

  /**
   * @generated from enum value: SERVICE_CONTROL_ACTION_RELOAD = 4;
   */
  RELOAD = 4,
}

/**
 * Describes the enum avion.system_admin.v1.ServiceControlAction.
 */
export const ServiceControlActionSchema: GenEnum<ServiceControlAction> = /*@__PURE__*/
  enumDesc(file_avion_system_admin_v1_system_admin_service, 3);

/**
 * SystemAdminService はシステム管理機能を提供する
 *
 * @generated from service avion.system_admin.v1.SystemAdminService
 */
export const SystemAdminService: GenService<{
  /**
   * GetSystemHealth はシステムサービスのヘルス状態を取得する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.GetSystemHealth
   */
  getSystemHealth: {
    methodKind: "unary";
    input: typeof GetSystemHealthRequestSchema;
    output: typeof GetSystemHealthResponseSchema;
  },
  /**
   * StreamSystemHealth はリアルタイムのヘルス更新をストリーミングする
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.StreamSystemHealth
   */
  streamSystemHealth: {
    methodKind: "server_streaming";
    input: typeof StreamSystemHealthRequestSchema;
    output: typeof StreamSystemHealthResponseSchema;
  },
  /**
   * GetSystemConfig はシステム設定を取得する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.GetSystemConfig
   */
  getSystemConfig: {
    methodKind: "unary";
    input: typeof GetSystemConfigRequestSchema;
    output: typeof GetSystemConfigResponseSchema;
  },
  /**
   * ListSystemConfigs はすべてのシステム設定をリストする
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.ListSystemConfigs
   */
  listSystemConfigs: {
    methodKind: "unary";
    input: typeof ListSystemConfigsRequestSchema;
    output: typeof ListSystemConfigsResponseSchema;
  },
  /**
   * UpdateSystemConfig はシステム設定を更新する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.UpdateSystemConfig
   */
  updateSystemConfig: {
    methodKind: "unary";
    input: typeof UpdateSystemConfigRequestSchema;
    output: typeof UpdateSystemConfigResponseSchema;
  },
  /**
   * CreateAuditLog は監査ログエントリを作成する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.CreateAuditLog
   */
  createAuditLog: {
    methodKind: "unary";
    input: typeof CreateAuditLogRequestSchema;
    output: typeof CreateAuditLogResponseSchema;
  },
  /**
   * SearchAuditLogs は監査ログを検索する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.SearchAuditLogs
   */
  searchAuditLogs: {
    methodKind: "unary";
    input: typeof SearchAuditLogsRequestSchema;
    output: typeof SearchAuditLogsResponseSchema;
  },
  /**
   * CreateBackup はシステムバックアップを作成する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.CreateBackup
   */
  createBackup: {
    methodKind: "unary";
    input: typeof CreateBackupRequestSchema;
    output: typeof CreateBackupResponseSchema;
  },
  /**
   * ListBackups は利用可能なバックアップをリストする
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.ListBackups
   */
  listBackups: {
    methodKind: "unary";
    input: typeof ListBackupsRequestSchema;
    output: typeof ListBackupsResponseSchema;
  },
  /**
   * RestoreBackup はバックアップから復元する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.RestoreBackup
   */
  restoreBackup: {
    methodKind: "unary";
    input: typeof RestoreBackupRequestSchema;
    output: typeof RestoreBackupResponseSchema;
  },
  /**
   * VerifyBackup はバックアップの整合性を検証する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.VerifyBackup
   */
  verifyBackup: {
    methodKind: "unary";
    input: typeof VerifyBackupRequestSchema;
    output: typeof VerifyBackupResponseSchema;
  },
  /**
   * CreateMaintenanceWindow はメンテナンスウィンドウを作成する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.CreateMaintenanceWindow
   */
  createMaintenanceWindow: {
    methodKind: "unary";
    input: typeof CreateMaintenanceWindowRequestSchema;
    output: typeof CreateMaintenanceWindowResponseSchema;
  },
  /**
   * UpdateMaintenanceWindow はメンテナンスウィンドウを更新する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.UpdateMaintenanceWindow
   */
  updateMaintenanceWindow: {
    methodKind: "unary";
    input: typeof UpdateMaintenanceWindowRequestSchema;
    output: typeof UpdateMaintenanceWindowResponseSchema;
  },
  /**
   * EndMaintenance は現在のメンテナンスを終了する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.EndMaintenance
   */
  endMaintenance: {
    methodKind: "unary";
    input: typeof EndMaintenanceRequestSchema;
    output: typeof EndMaintenanceResponseSchema;
  },
  /**
   * GetSystemStats はシステム統計を取得する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.GetSystemStats
   */
  getSystemStats: {
    methodKind: "unary";
    input: typeof GetSystemStatsRequestSchema;
    output: typeof GetSystemStatsResponseSchema;
  },
  /**
   * GenerateReport はシステムレポートを生成する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.GenerateReport
   */
  generateReport: {
    methodKind: "unary";
    input: typeof GenerateReportRequestSchema;
    output: typeof GenerateReportResponseSchema;
  },
  /**
   * ListAlerts はシステムアラートをリストする
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.ListAlerts
   */
  listAlerts: {
    methodKind: "unary";
    input: typeof ListAlertsRequestSchema;
    output: typeof ListAlertsResponseSchema;
  },
  /**
   * AcknowledgeAlert はアラートを確認する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.AcknowledgeAlert
   */
  acknowledgeAlert: {
    methodKind: "unary";
    input: typeof AcknowledgeAlertRequestSchema;
    output: typeof AcknowledgeAlertResponseSchema;
  },
  /**
   * ResolveAlert はアラートを解決する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.ResolveAlert
   */
  resolveAlert: {
    methodKind: "unary";
    input: typeof ResolveAlertRequestSchema;
    output: typeof ResolveAlertResponseSchema;
  },
  /**
   * StreamAlerts はリアルタイムアラートをストリーミングする
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.StreamAlerts
   */
  streamAlerts: {
    methodKind: "server_streaming";
    input: typeof StreamAlertsRequestSchema;
    output: typeof StreamAlertsResponseSchema;
  },
  /**
   * ExecuteAdminAction は管理アクションを実行する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.ExecuteAdminAction
   */
  executeAdminAction: {
    methodKind: "unary";
    input: typeof ExecuteAdminActionRequestSchema;
    output: typeof ExecuteAdminActionResponseSchema;
  },
  /**
   * ReverseAdminAction は管理アクションを取り消す
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.ReverseAdminAction
   */
  reverseAdminAction: {
    methodKind: "unary";
    input: typeof ReverseAdminActionRequestSchema;
    output: typeof ReverseAdminActionResponseSchema;
  },
  /**
   * ListAdminActions は管理アクションをリストする
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.ListAdminActions
   */
  listAdminActions: {
    methodKind: "unary";
    input: typeof ListAdminActionsRequestSchema;
    output: typeof ListAdminActionsResponseSchema;
  },
  /**
   * ControlService はサービスのライフサイクルを制御する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.ControlService
   */
  controlService: {
    methodKind: "unary";
    input: typeof ControlServiceRequestSchema;
    output: typeof ControlServiceResponseSchema;
  },
  /**
   * ListServices はすべてのサービスをリストする
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.ListServices
   */
  listServices: {
    methodKind: "unary";
    input: typeof ListServicesRequestSchema;
    output: typeof ListServicesResponseSchema;
  },
  /**
   * ScaleService はサービスをスケールする
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.ScaleService
   */
  scaleService: {
    methodKind: "unary";
    input: typeof ScaleServiceRequestSchema;
    output: typeof ScaleServiceResponseSchema;
  },
  /**
   * ClearCache はシステムキャッシュをクリアする
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.ClearCache
   */
  clearCache: {
    methodKind: "unary";
    input: typeof ClearCacheRequestSchema;
    output: typeof ClearCacheResponseSchema;
  },
  /**
   * GetCacheInfo はキャッシュ情報を取得する
   *
   * @generated from rpc avion.system_admin.v1.SystemAdminService.GetCacheInfo
   */
  getCacheInfo: {
    methodKind: "unary";
    input: typeof GetCacheInfoRequestSchema;
    output: typeof GetCacheInfoResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_avion_system_admin_v1_system_admin_service, 0);

