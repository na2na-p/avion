// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file avion/community/v1/community.proto (package avion.community.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { ResourceMetadata } from "../../common/v1/metadata_pb";
import { file_avion_common_v1_metadata } from "../../common/v1/metadata_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file avion/community/v1/community.proto.
 */
export const file_avion_community_v1_community: GenFile = /*@__PURE__*/
  fileDesc("CiJhdmlvbi9jb21tdW5pdHkvdjEvY29tbXVuaXR5LnByb3RvEhJhdmlvbi5jb21tdW5pdHkudjEikwMKBUdyb3VwEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSEwoLZGVzY3JpcHRpb24YAyABKAkSEgoKYXZhdGFyX3VybBgEIAEoCRISCgpoZWFkZXJfdXJsGAUgASgJEhAKCG93bmVyX2lkGAYgASgJEjcKCnZpc2liaWxpdHkYByABKA4yIy5hdmlvbi5jb21tdW5pdHkudjEuR3JvdXBWaXNpYmlsaXR5Ei8KBnN0YXR1cxgIIAEoDjIfLmF2aW9uLmNvbW11bml0eS52MS5Hcm91cFN0YXR1cxIUCgxtZW1iZXJfY291bnQYCSABKAMSLgoKY3JlYXRlZF9hdBgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgLIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDAoEdGFncxgMIAMoCRIzCghtZXRhZGF0YRgNIAEoCzIhLmF2aW9uLmNvbW1vbi52MS5SZXNvdXJjZU1ldGFkYXRhIo8CCg1Hcm91cFNldHRpbmdzEhAKCGdyb3VwX2lkGAEgASgJEhgKEHJlcXVpcmVfYXBwcm92YWwYAiABKAgSEwoLbWF4X21lbWJlcnMYAyABKAUSHQoVcmVxdWlyZV9wb3N0X2FwcHJvdmFsGAQgASgIEhkKEW1lbWJlcnNfb25seV92aWV3GAUgASgIEhsKE2FsbG93X21lbWJlcl9ldmVudHMYBiABKAgSHQoVYWxsb3dfbWVtYmVyX2NoYW5uZWxzGAcgASgIEkcKFW5vdGlmaWNhdGlvbl9zZXR0aW5ncxgIIAEoCzIoLmF2aW9uLmNvbW11bml0eS52MS5Ob3RpZmljYXRpb25TZXR0aW5ncyKEBQoFRXZlbnQSCgoCaWQYASABKAkSEAoIZ3JvdXBfaWQYAiABKAkSDQoFdGl0bGUYAyABKAkSEwoLZGVzY3JpcHRpb24YBCABKAkSFwoPY292ZXJfaW1hZ2VfdXJsGAUgASgJEhQKDG9yZ2FuaXplcl9pZBgGIAEoCRIuCgpzdGFydF90aW1lGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoGZm9ybWF0GAkgASgOMh8uYXZpb24uY29tbXVuaXR5LnYxLkV2ZW50Rm9ybWF0EjMKCGxvY2F0aW9uGAogASgLMiEuYXZpb24uY29tbXVuaXR5LnYxLkV2ZW50TG9jYXRpb24SEgoKb25saW5lX3VybBgLIAEoCRIvCgZzdGF0dXMYDCABKA4yHy5hdmlvbi5jb21tdW5pdHkudjEuRXZlbnRTdGF0dXMSGAoQbWF4X3BhcnRpY2lwYW50cxgNIAEoBRIZChFwYXJ0aWNpcGFudF9jb3VudBgOIAEoBRIpCgNmZWUYDyABKAsyHC5hdmlvbi5jb21tdW5pdHkudjEuRXZlbnRGZWUSLgoKY3JlYXRlZF9hdBgQIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgRIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDAoEdGFncxgSIAMoCRIzCghtZXRhZGF0YRgTIAEoCzIhLmF2aW9uLmNvbW1vbi52MS5SZXNvdXJjZU1ldGFkYXRhImQKDUV2ZW50TG9jYXRpb24SDAoEbmFtZRgBIAEoCRIPCgdhZGRyZXNzGAIgASgJEhAKCGxhdGl0dWRlGAMgASgBEhEKCWxvbmdpdHVkZRgEIAEoARIPCgdkZXRhaWxzGAUgASgJIkEKCEV2ZW50RmVlEhAKCGN1cnJlbmN5GAEgASgJEg4KBmFtb3VudBgCIAEoAxITCgtkZXNjcmlwdGlvbhgDIAEoCSKXAwoHQ2hhbm5lbBIKCgJpZBgBIAEoCRIQCghncm91cF9pZBgCIAEoCRIMCgRuYW1lGAMgASgJEhMKC2Rlc2NyaXB0aW9uGAQgASgJEi0KBHR5cGUYBSABKA4yHy5hdmlvbi5jb21tdW5pdHkudjEuQ2hhbm5lbFR5cGUSEAoIcG9zaXRpb24YBiABKAUSEwoLaXNfYXJjaGl2ZWQYByABKAgSEgoKY3JlYXRvcl9pZBgIIAEoCRIuCgpjcmVhdGVkX2F0GAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgp1cGRhdGVkX2F0GAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIzCg9sYXN0X21lc3NhZ2VfYXQYCyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhUKDW1lc3NhZ2VfY291bnQYDCABKAMSNQoIc2V0dGluZ3MYDSABKAsyIy5hdmlvbi5jb21tdW5pdHkudjEuQ2hhbm5lbFNldHRpbmdzIpcBCg9DaGFubmVsU2V0dGluZ3MSGQoRbWVtYmVyc19vbmx5X3Bvc3QYASABKAgSFQoNYWxsb3dfdGhyZWFkcxgCIAEoCBIZChFhdXRvX2RlbGV0ZV9hZnRlchgDIAEoBRIaChJzbG93X21vZGVfaW50ZXJ2YWwYBCABKAUSGwoTbWF4X3Bpbm5lZF9tZXNzYWdlcxgFIAEoBSL1AgoGTWVtYmVyEgoKAmlkGAEgASgJEhAKCGdyb3VwX2lkGAIgASgJEg8KB3VzZXJfaWQYAyABKAkSLAoEcm9sZRgEIAEoDjIeLmF2aW9uLmNvbW11bml0eS52MS5NZW1iZXJSb2xlEjAKBnN0YXR1cxgFIAEoDjIgLmF2aW9uLmNvbW11bml0eS52MS5NZW1iZXJTdGF0dXMSLQoJam9pbmVkX2F0GAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBISCgppbnZpdGVkX2J5GAcgASgJEhYKDmN1c3RvbV9yb2xlX2lkGAggASgJEjIKDmxhc3RfYWN0aXZlX2F0GAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJNChVub3RpZmljYXRpb25fc2V0dGluZ3MYCiABKAsyLi5hdmlvbi5jb21tdW5pdHkudjEuTWVtYmVyTm90aWZpY2F0aW9uU2V0dGluZ3Mi/AEKC1BhcnRpY2lwYW50EgoKAmlkGAEgASgJEhAKCGV2ZW50X2lkGAIgASgJEg8KB3VzZXJfaWQYAyABKAkSNQoGc3RhdHVzGAQgASgOMiUuYXZpb24uY29tbXVuaXR5LnYxLlBhcnRpY2lwYW50U3RhdHVzEjEKDXJlZ2lzdGVyZWRfYXQYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEg8KB2NvbW1lbnQYByABKAkSEwoLZ3Vlc3RfY291bnQYCCABKAUikgIKBFJvbGUSCgoCaWQYASABKAkSEAoIZ3JvdXBfaWQYAiABKAkSDAoEbmFtZRgDIAEoCRITCgtkZXNjcmlwdGlvbhgEIAEoCRINCgVjb2xvchgFIAEoCRIQCghwb3NpdGlvbhgGIAEoBRIzCgtwZXJtaXNzaW9ucxgHIAMoDjIeLmF2aW9uLmNvbW11bml0eS52MS5QZXJtaXNzaW9uEhMKC21lbnRpb25hYmxlGAggASgIEi4KCmNyZWF0ZWRfYXQYCSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYCiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIngKFE5vdGlmaWNhdGlvblNldHRpbmdzEhIKCm5ld19tZW1iZXIYASABKAgSEAoIbmV3X3Bvc3QYAiABKAgSEQoJbmV3X2V2ZW50GAMgASgIEhAKCG1lbnRpb25zGAQgASgIEhUKDWFubm91bmNlbWVudHMYBSABKAgiigEKGk1lbWJlck5vdGlmaWNhdGlvblNldHRpbmdzEg0KBW11dGVkGAEgASgIEhEKCW5ld19wb3N0cxgCIAEoCBIOCgZldmVudHMYAyABKAgSEAoIbWVudGlvbnMYBCABKAgSFQoNYW5ub3VuY2VtZW50cxgFIAEoCBIRCglmcmVxdWVuY3kYBiABKAkizQEKC0dyb3VwSW52aXRlEgoKAmlkGAEgASgJEhAKCGdyb3VwX2lkGAIgASgJEgwKBGNvZGUYAyABKAkSEgoKY3JlYXRvcl9pZBgEIAEoCRIuCgpleHBpcmVzX2F0GAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIQCghtYXhfdXNlcxgGIAEoBRIMCgR1c2VzGAcgASgFEi4KCmNyZWF0ZWRfYXQYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIscBCgpHcm91cFN0YXRzEhAKCGdyb3VwX2lkGAEgASgJEhUKDXRvdGFsX21lbWJlcnMYAiABKAMSFgoOYWN0aXZlX21lbWJlcnMYAyABKAMSEwoLdG90YWxfcG9zdHMYBCABKAMSFAoMdG90YWxfZXZlbnRzGAUgASgDEh4KFm5ld19tZW1iZXJzX3RoaXNfbW9udGgYBiABKAMSGAoQcG9zdHNfdGhpc19tb250aBgHIAEoAxITCgtncm93dGhfcmF0ZRgIIAEoASqPAQoPR3JvdXBWaXNpYmlsaXR5EiAKHEdST1VQX1ZJU0lCSUxJVFlfVU5TUEVDSUZJRUQQABIbChdHUk9VUF9WSVNJQklMSVRZX1BVQkxJQxABEh8KG0dST1VQX1ZJU0lCSUxJVFlfUkVTVFJJQ1RFRBACEhwKGEdST1VQX1ZJU0lCSUxJVFlfUFJJVkFURRADKpUBCgtHcm91cFN0YXR1cxIcChhHUk9VUF9TVEFUVVNfVU5TUEVDSUZJRUQQABIXChNHUk9VUF9TVEFUVVNfQUNUSVZFEAESGgoWR1JPVVBfU1RBVFVTX1NVU1BFTkRFRBACEhkKFUdST1VQX1NUQVRVU19BUkNISVZFRBADEhgKFEdST1VQX1NUQVRVU19ERUxFVEVEEAQqrQEKC0V2ZW50U3RhdHVzEhwKGEVWRU5UX1NUQVRVU19VTlNQRUNJRklFRBAAEhYKEkVWRU5UX1NUQVRVU19EUkFGVBABEhoKFkVWRU5UX1NUQVRVU19QVUJMSVNIRUQQAhIYChRFVkVOVF9TVEFUVVNfT05HT0lORxADEhYKEkVWRU5UX1NUQVRVU19FTkRFRBAEEhoKFkVWRU5UX1NUQVRVU19DQU5DRUxMRUQQBSp3CgtFdmVudEZvcm1hdBIcChhFVkVOVF9GT1JNQVRfVU5TUEVDSUZJRUQQABIYChRFVkVOVF9GT1JNQVRfT0ZGTElORRABEhcKE0VWRU5UX0ZPUk1BVF9PTkxJTkUQAhIXChNFVkVOVF9GT1JNQVRfSFlCUklEEAMqkQEKC0NoYW5uZWxUeXBlEhwKGENIQU5ORUxfVFlQRV9VTlNQRUNJRklFRBAAEhUKEUNIQU5ORUxfVFlQRV9URVhUEAESHQoZQ0hBTk5FTF9UWVBFX0FOTk9VTkNFTUVOVBACEhYKEkNIQU5ORUxfVFlQRV9WT0lDRRADEhYKEkNIQU5ORUxfVFlQRV9WSURFTxAEKqEBCgpNZW1iZXJSb2xlEhsKF01FTUJFUl9ST0xFX1VOU1BFQ0lGSUVEEAASFQoRTUVNQkVSX1JPTEVfT1dORVIQARIVChFNRU1CRVJfUk9MRV9BRE1JThACEhkKFU1FTUJFUl9ST0xFX01PREVSQVRPUhADEhYKEk1FTUJFUl9ST0xFX01FTUJFUhAEEhUKEU1FTUJFUl9ST0xFX0dVRVNUEAUqzAEKDE1lbWJlclN0YXR1cxIdChlNRU1CRVJfU1RBVFVTX1VOU1BFQ0lGSUVEEAASGAoUTUVNQkVSX1NUQVRVU19BQ1RJVkUQARIZChVNRU1CRVJfU1RBVFVTX0lOVklURUQQAhIZChVNRU1CRVJfU1RBVFVTX1BFTkRJTkcQAxIbChdNRU1CRVJfU1RBVFVTX1NVU1BFTkRFRBAEEhYKEk1FTUJFUl9TVEFUVVNfTEVGVBAFEhgKFE1FTUJFUl9TVEFUVVNfQkFOTkVEEAYqxAEKEVBhcnRpY2lwYW50U3RhdHVzEiIKHlBBUlRJQ0lQQU5UX1NUQVRVU19VTlNQRUNJRklFRBAAEiAKHFBBUlRJQ0lQQU5UX1NUQVRVU19BVFRFTkRJTkcQARIhCh1QQVJUSUNJUEFOVF9TVEFUVVNfSU5URVJFU1RFRBACEiQKIFBBUlRJQ0lQQU5UX1NUQVRVU19OT1RfQVRURU5ESU5HEAMSIAocUEFSVElDSVBBTlRfU1RBVFVTX0NBTkNFTExFRBAEKtgCCgpQZXJtaXNzaW9uEhoKFlBFUk1JU1NJT05fVU5TUEVDSUZJRUQQABIbChdQRVJNSVNTSU9OX01BTkFHRV9HUk9VUBABEh0KGVBFUk1JU1NJT05fTUFOQUdFX01FTUJFUlMQAhIeChpQRVJNSVNTSU9OX01BTkFHRV9DSEFOTkVMUxADEhwKGFBFUk1JU1NJT05fTUFOQUdFX0VWRU5UUxAEEhsKF1BFUk1JU1NJT05fTUFOQUdFX1JPTEVTEAUSGwoXUEVSTUlTU0lPTl9QT1NUX01FU1NBR0UQBhIdChlQRVJNSVNTSU9OX0RFTEVURV9NRVNTQUdFEAcSHQoZUEVSTUlTU0lPTl9JTlZJVEVfTUVNQkVSUxAIEhoKFlBFUk1JU1NJT05fQkFOX01FTUJFUlMQCRIgChxQRVJNSVNTSU9OX1BPU1RfQU5OT1VOQ0VNRU5UEApC0QEKFmNvbS5hdmlvbi5jb21tdW5pdHkudjFCDkNvbW11bml0eVByb3RvUAFaPWdpdGh1Yi5jb20vbmEybmEtcC9hdmlvbi9wcm90by9hdmlvbi9jb21tdW5pdHkvdjE7Y29tbXVuaXR5djGiAgNBQ1iqAhJBdmlvbi5Db21tdW5pdHkuVjHKAhJBdmlvblxDb21tdW5pdHlcVjHiAh5BdmlvblxDb21tdW5pdHlcVjFcR1BCTWV0YWRhdGHqAhRBdmlvbjo6Q29tbXVuaXR5OjpWMWIGcHJvdG8z", [file_google_protobuf_timestamp, file_avion_common_v1_metadata]);

/**
 * グループ情報
 *
 * @generated from message avion.community.v1.Group
 */
export type Group = Message<"avion.community.v1.Group"> & {
  /**
   * グループID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * グループ名
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * グループの説明
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * アバター画像URL
   *
   * @generated from field: string avatar_url = 4;
   */
  avatarUrl: string;

  /**
   * ヘッダー画像URL
   *
   * @generated from field: string header_url = 5;
   */
  headerUrl: string;

  /**
   * オーナーID
   *
   * @generated from field: string owner_id = 6;
   */
  ownerId: string;

  /**
   * 可視性設定
   *
   * @generated from field: avion.community.v1.GroupVisibility visibility = 7;
   */
  visibility: GroupVisibility;

  /**
   * ステータス
   *
   * @generated from field: avion.community.v1.GroupStatus status = 8;
   */
  status: GroupStatus;

  /**
   * メンバー数
   *
   * @generated from field: int64 member_count = 9;
   */
  memberCount: bigint;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;

  /**
   * 更新日時
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 11;
   */
  updatedAt?: Timestamp;

  /**
   * カテゴリタグ
   *
   * @generated from field: repeated string tags = 12;
   */
  tags: string[];

  /**
   * メタデータ
   *
   * @generated from field: avion.common.v1.ResourceMetadata metadata = 13;
   */
  metadata?: ResourceMetadata;
};

/**
 * Describes the message avion.community.v1.Group.
 * Use `create(GroupSchema)` to create a new message.
 */
export const GroupSchema: GenMessage<Group> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community, 0);

/**
 * グループ設定
 *
 * @generated from message avion.community.v1.GroupSettings
 */
export type GroupSettings = Message<"avion.community.v1.GroupSettings"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * 新規メンバーの承認が必要か
   *
   * @generated from field: bool require_approval = 2;
   */
  requireApproval: boolean;

  /**
   * メンバー上限数
   *
   * @generated from field: int32 max_members = 3;
   */
  maxMembers: number;

  /**
   * 投稿の事前承認が必要か
   *
   * @generated from field: bool require_post_approval = 4;
   */
  requirePostApproval: boolean;

  /**
   * メンバーのみ閲覧可能か
   *
   * @generated from field: bool members_only_view = 5;
   */
  membersOnlyView: boolean;

  /**
   * メンバーがイベントを作成可能か
   *
   * @generated from field: bool allow_member_events = 6;
   */
  allowMemberEvents: boolean;

  /**
   * メンバーがチャンネルを作成可能か
   *
   * @generated from field: bool allow_member_channels = 7;
   */
  allowMemberChannels: boolean;

  /**
   * 通知設定
   *
   * @generated from field: avion.community.v1.NotificationSettings notification_settings = 8;
   */
  notificationSettings?: NotificationSettings;
};

/**
 * Describes the message avion.community.v1.GroupSettings.
 * Use `create(GroupSettingsSchema)` to create a new message.
 */
export const GroupSettingsSchema: GenMessage<GroupSettings> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community, 1);

/**
 * イベント情報
 *
 * @generated from message avion.community.v1.Event
 */
export type Event = Message<"avion.community.v1.Event"> & {
  /**
   * イベントID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * グループID
   *
   * @generated from field: string group_id = 2;
   */
  groupId: string;

  /**
   * イベントタイトル
   *
   * @generated from field: string title = 3;
   */
  title: string;

  /**
   * イベントの説明
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * カバー画像URL
   *
   * @generated from field: string cover_image_url = 5;
   */
  coverImageUrl: string;

  /**
   * 開催者ID
   *
   * @generated from field: string organizer_id = 6;
   */
  organizerId: string;

  /**
   * 開始日時
   *
   * @generated from field: google.protobuf.Timestamp start_time = 7;
   */
  startTime?: Timestamp;

  /**
   * 終了日時
   *
   * @generated from field: google.protobuf.Timestamp end_time = 8;
   */
  endTime?: Timestamp;

  /**
   * 開催形式
   *
   * @generated from field: avion.community.v1.EventFormat format = 9;
   */
  format: EventFormat;

  /**
   * 開催場所（オフラインの場合）
   *
   * @generated from field: avion.community.v1.EventLocation location = 10;
   */
  location?: EventLocation;

  /**
   * オンラインURL（オンラインの場合）
   *
   * @generated from field: string online_url = 11;
   */
  onlineUrl: string;

  /**
   * ステータス
   *
   * @generated from field: avion.community.v1.EventStatus status = 12;
   */
  status: EventStatus;

  /**
   * 参加者数上限
   *
   * @generated from field: int32 max_participants = 13;
   */
  maxParticipants: number;

  /**
   * 現在の参加者数
   *
   * @generated from field: int32 participant_count = 14;
   */
  participantCount: number;

  /**
   * 参加費（任意）
   *
   * @generated from field: avion.community.v1.EventFee fee = 15;
   */
  fee?: EventFee;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 16;
   */
  createdAt?: Timestamp;

  /**
   * 更新日時
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 17;
   */
  updatedAt?: Timestamp;

  /**
   * タグ
   *
   * @generated from field: repeated string tags = 18;
   */
  tags: string[];

  /**
   * メタデータ
   *
   * @generated from field: avion.common.v1.ResourceMetadata metadata = 19;
   */
  metadata?: ResourceMetadata;
};

/**
 * Describes the message avion.community.v1.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export const EventSchema: GenMessage<Event> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community, 2);

/**
 * イベント開催場所
 *
 * @generated from message avion.community.v1.EventLocation
 */
export type EventLocation = Message<"avion.community.v1.EventLocation"> & {
  /**
   * 場所名
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * 住所
   *
   * @generated from field: string address = 2;
   */
  address: string;

  /**
   * 緯度
   *
   * @generated from field: double latitude = 3;
   */
  latitude: number;

  /**
   * 経度
   *
   * @generated from field: double longitude = 4;
   */
  longitude: number;

  /**
   * 詳細情報
   *
   * @generated from field: string details = 5;
   */
  details: string;
};

/**
 * Describes the message avion.community.v1.EventLocation.
 * Use `create(EventLocationSchema)` to create a new message.
 */
export const EventLocationSchema: GenMessage<EventLocation> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community, 3);

/**
 * イベント参加費
 *
 * @generated from message avion.community.v1.EventFee
 */
export type EventFee = Message<"avion.community.v1.EventFee"> & {
  /**
   * 通貨コード（ISO 4217）
   *
   * @generated from field: string currency = 1;
   */
  currency: string;

  /**
   * 金額（最小単位）
   *
   * @generated from field: int64 amount = 2;
   */
  amount: bigint;

  /**
   * 説明
   *
   * @generated from field: string description = 3;
   */
  description: string;
};

/**
 * Describes the message avion.community.v1.EventFee.
 * Use `create(EventFeeSchema)` to create a new message.
 */
export const EventFeeSchema: GenMessage<EventFee> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community, 4);

/**
 * チャンネル情報
 *
 * @generated from message avion.community.v1.Channel
 */
export type Channel = Message<"avion.community.v1.Channel"> & {
  /**
   * チャンネルID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * グループID
   *
   * @generated from field: string group_id = 2;
   */
  groupId: string;

  /**
   * チャンネル名
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * チャンネルの説明
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * チャンネルタイプ
   *
   * @generated from field: avion.community.v1.ChannelType type = 5;
   */
  type: ChannelType;

  /**
   * 表示順序
   *
   * @generated from field: int32 position = 6;
   */
  position: number;

  /**
   * アーカイブフラグ
   *
   * @generated from field: bool is_archived = 7;
   */
  isArchived: boolean;

  /**
   * 作成者ID
   *
   * @generated from field: string creator_id = 8;
   */
  creatorId: string;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 9;
   */
  createdAt?: Timestamp;

  /**
   * 更新日時
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 10;
   */
  updatedAt?: Timestamp;

  /**
   * 最後のメッセージ日時
   *
   * @generated from field: google.protobuf.Timestamp last_message_at = 11;
   */
  lastMessageAt?: Timestamp;

  /**
   * メッセージ数
   *
   * @generated from field: int64 message_count = 12;
   */
  messageCount: bigint;

  /**
   * チャンネル設定
   *
   * @generated from field: avion.community.v1.ChannelSettings settings = 13;
   */
  settings?: ChannelSettings;
};

/**
 * Describes the message avion.community.v1.Channel.
 * Use `create(ChannelSchema)` to create a new message.
 */
export const ChannelSchema: GenMessage<Channel> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community, 5);

/**
 * チャンネル設定
 *
 * @generated from message avion.community.v1.ChannelSettings
 */
export type ChannelSettings = Message<"avion.community.v1.ChannelSettings"> & {
  /**
   * メンバーのみ投稿可能か
   *
   * @generated from field: bool members_only_post = 1;
   */
  membersOnlyPost: boolean;

  /**
   * スレッド作成を許可するか
   *
   * @generated from field: bool allow_threads = 2;
   */
  allowThreads: boolean;

  /**
   * メッセージの自動削除期間（秒）
   *
   * @generated from field: int32 auto_delete_after = 3;
   */
  autoDeleteAfter: number;

  /**
   * スローモード間隔（秒）
   *
   * @generated from field: int32 slow_mode_interval = 4;
   */
  slowModeInterval: number;

  /**
   * ピン留めメッセージ上限
   *
   * @generated from field: int32 max_pinned_messages = 5;
   */
  maxPinnedMessages: number;
};

/**
 * Describes the message avion.community.v1.ChannelSettings.
 * Use `create(ChannelSettingsSchema)` to create a new message.
 */
export const ChannelSettingsSchema: GenMessage<ChannelSettings> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community, 6);

/**
 * メンバー情報
 *
 * @generated from message avion.community.v1.Member
 */
export type Member = Message<"avion.community.v1.Member"> & {
  /**
   * メンバーID（複合キー: group_id + user_id）
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * グループID
   *
   * @generated from field: string group_id = 2;
   */
  groupId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 3;
   */
  userId: string;

  /**
   * 役割
   *
   * @generated from field: avion.community.v1.MemberRole role = 4;
   */
  role: MemberRole;

  /**
   * ステータス
   *
   * @generated from field: avion.community.v1.MemberStatus status = 5;
   */
  status: MemberStatus;

  /**
   * 参加日時
   *
   * @generated from field: google.protobuf.Timestamp joined_at = 6;
   */
  joinedAt?: Timestamp;

  /**
   * 招待者ID
   *
   * @generated from field: string invited_by = 7;
   */
  invitedBy: string;

  /**
   * カスタム役割ID（任意）
   *
   * @generated from field: string custom_role_id = 8;
   */
  customRoleId: string;

  /**
   * 最終活動日時
   *
   * @generated from field: google.protobuf.Timestamp last_active_at = 9;
   */
  lastActiveAt?: Timestamp;

  /**
   * 通知設定
   *
   * @generated from field: avion.community.v1.MemberNotificationSettings notification_settings = 10;
   */
  notificationSettings?: MemberNotificationSettings;
};

/**
 * Describes the message avion.community.v1.Member.
 * Use `create(MemberSchema)` to create a new message.
 */
export const MemberSchema: GenMessage<Member> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community, 7);

/**
 * イベント参加者
 *
 * @generated from message avion.community.v1.Participant
 */
export type Participant = Message<"avion.community.v1.Participant"> & {
  /**
   * 参加者ID（複合キー: event_id + user_id）
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * イベントID
   *
   * @generated from field: string event_id = 2;
   */
  eventId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 3;
   */
  userId: string;

  /**
   * 参加ステータス
   *
   * @generated from field: avion.community.v1.ParticipantStatus status = 4;
   */
  status: ParticipantStatus;

  /**
   * 登録日時
   *
   * @generated from field: google.protobuf.Timestamp registered_at = 5;
   */
  registeredAt?: Timestamp;

  /**
   * 更新日時
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 6;
   */
  updatedAt?: Timestamp;

  /**
   * コメント
   *
   * @generated from field: string comment = 7;
   */
  comment: string;

  /**
   * 同伴者数
   *
   * @generated from field: int32 guest_count = 8;
   */
  guestCount: number;
};

/**
 * Describes the message avion.community.v1.Participant.
 * Use `create(ParticipantSchema)` to create a new message.
 */
export const ParticipantSchema: GenMessage<Participant> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community, 8);

/**
 * 役割情報
 *
 * @generated from message avion.community.v1.Role
 */
export type Role = Message<"avion.community.v1.Role"> & {
  /**
   * 役割ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * グループID
   *
   * @generated from field: string group_id = 2;
   */
  groupId: string;

  /**
   * 役割名
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * 役割の説明
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * 色（16進数カラーコード）
   *
   * @generated from field: string color = 5;
   */
  color: string;

  /**
   * 表示順序（高い方が上位）
   *
   * @generated from field: int32 position = 6;
   */
  position: number;

  /**
   * 権限リスト
   *
   * @generated from field: repeated avion.community.v1.Permission permissions = 7;
   */
  permissions: Permission[];

  /**
   * メンション可能か
   *
   * @generated from field: bool mentionable = 8;
   */
  mentionable: boolean;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 9;
   */
  createdAt?: Timestamp;

  /**
   * 更新日時
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 10;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message avion.community.v1.Role.
 * Use `create(RoleSchema)` to create a new message.
 */
export const RoleSchema: GenMessage<Role> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community, 9);

/**
 * 通知設定
 *
 * @generated from message avion.community.v1.NotificationSettings
 */
export type NotificationSettings = Message<"avion.community.v1.NotificationSettings"> & {
  /**
   * 新規メンバー参加
   *
   * @generated from field: bool new_member = 1;
   */
  newMember: boolean;

  /**
   * 新規投稿
   *
   * @generated from field: bool new_post = 2;
   */
  newPost: boolean;

  /**
   * 新規イベント
   *
   * @generated from field: bool new_event = 3;
   */
  newEvent: boolean;

  /**
   * メンション
   *
   * @generated from field: bool mentions = 4;
   */
  mentions: boolean;

  /**
   * アナウンス
   *
   * @generated from field: bool announcements = 5;
   */
  announcements: boolean;
};

/**
 * Describes the message avion.community.v1.NotificationSettings.
 * Use `create(NotificationSettingsSchema)` to create a new message.
 */
export const NotificationSettingsSchema: GenMessage<NotificationSettings> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community, 10);

/**
 * メンバーの通知設定
 *
 * @generated from message avion.community.v1.MemberNotificationSettings
 */
export type MemberNotificationSettings = Message<"avion.community.v1.MemberNotificationSettings"> & {
  /**
   * 通知ミュート
   *
   * @generated from field: bool muted = 1;
   */
  muted: boolean;

  /**
   * 新規投稿通知
   *
   * @generated from field: bool new_posts = 2;
   */
  newPosts: boolean;

  /**
   * イベント通知
   *
   * @generated from field: bool events = 3;
   */
  events: boolean;

  /**
   * メンション通知
   *
   * @generated from field: bool mentions = 4;
   */
  mentions: boolean;

  /**
   * アナウンス通知
   *
   * @generated from field: bool announcements = 5;
   */
  announcements: boolean;

  /**
   * 通知頻度（immediate, daily, weekly）
   *
   * @generated from field: string frequency = 6;
   */
  frequency: string;
};

/**
 * Describes the message avion.community.v1.MemberNotificationSettings.
 * Use `create(MemberNotificationSettingsSchema)` to create a new message.
 */
export const MemberNotificationSettingsSchema: GenMessage<MemberNotificationSettings> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community, 11);

/**
 * グループ招待
 *
 * @generated from message avion.community.v1.GroupInvite
 */
export type GroupInvite = Message<"avion.community.v1.GroupInvite"> & {
  /**
   * 招待ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * グループID
   *
   * @generated from field: string group_id = 2;
   */
  groupId: string;

  /**
   * 招待コード
   *
   * @generated from field: string code = 3;
   */
  code: string;

  /**
   * 作成者ID
   *
   * @generated from field: string creator_id = 4;
   */
  creatorId: string;

  /**
   * 有効期限
   *
   * @generated from field: google.protobuf.Timestamp expires_at = 5;
   */
  expiresAt?: Timestamp;

  /**
   * 使用回数上限
   *
   * @generated from field: int32 max_uses = 6;
   */
  maxUses: number;

  /**
   * 現在の使用回数
   *
   * @generated from field: int32 uses = 7;
   */
  uses: number;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 8;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message avion.community.v1.GroupInvite.
 * Use `create(GroupInviteSchema)` to create a new message.
 */
export const GroupInviteSchema: GenMessage<GroupInvite> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community, 12);

/**
 * グループ統計
 *
 * @generated from message avion.community.v1.GroupStats
 */
export type GroupStats = Message<"avion.community.v1.GroupStats"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * 総メンバー数
   *
   * @generated from field: int64 total_members = 2;
   */
  totalMembers: bigint;

  /**
   * アクティブメンバー数（30日以内）
   *
   * @generated from field: int64 active_members = 3;
   */
  activeMembers: bigint;

  /**
   * 総投稿数
   *
   * @generated from field: int64 total_posts = 4;
   */
  totalPosts: bigint;

  /**
   * 総イベント数
   *
   * @generated from field: int64 total_events = 5;
   */
  totalEvents: bigint;

  /**
   * 今月の新規メンバー数
   *
   * @generated from field: int64 new_members_this_month = 6;
   */
  newMembersThisMonth: bigint;

  /**
   * 今月の投稿数
   *
   * @generated from field: int64 posts_this_month = 7;
   */
  postsThisMonth: bigint;

  /**
   * 成長率（前月比）
   *
   * @generated from field: double growth_rate = 8;
   */
  growthRate: number;
};

/**
 * Describes the message avion.community.v1.GroupStats.
 * Use `create(GroupStatsSchema)` to create a new message.
 */
export const GroupStatsSchema: GenMessage<GroupStats> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community, 13);

/**
 * グループの可視性設定
 *
 * @generated from enum avion.community.v1.GroupVisibility
 */
export enum GroupVisibility {
  /**
   * 未指定
   *
   * @generated from enum value: GROUP_VISIBILITY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 公開（誰でも参加可能）
   *
   * @generated from enum value: GROUP_VISIBILITY_PUBLIC = 1;
   */
  PUBLIC = 1,

  /**
   * 限定公開（承認制）
   *
   * @generated from enum value: GROUP_VISIBILITY_RESTRICTED = 2;
   */
  RESTRICTED = 2,

  /**
   * 非公開（招待制）
   *
   * @generated from enum value: GROUP_VISIBILITY_PRIVATE = 3;
   */
  PRIVATE = 3,
}

/**
 * Describes the enum avion.community.v1.GroupVisibility.
 */
export const GroupVisibilitySchema: GenEnum<GroupVisibility> = /*@__PURE__*/
  enumDesc(file_avion_community_v1_community, 0);

/**
 * グループのステータス
 *
 * @generated from enum avion.community.v1.GroupStatus
 */
export enum GroupStatus {
  /**
   * 未指定
   *
   * @generated from enum value: GROUP_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * アクティブ
   *
   * @generated from enum value: GROUP_STATUS_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * 一時停止
   *
   * @generated from enum value: GROUP_STATUS_SUSPENDED = 2;
   */
  SUSPENDED = 2,

  /**
   * アーカイブ済み
   *
   * @generated from enum value: GROUP_STATUS_ARCHIVED = 3;
   */
  ARCHIVED = 3,

  /**
   * 削除済み
   *
   * @generated from enum value: GROUP_STATUS_DELETED = 4;
   */
  DELETED = 4,
}

/**
 * Describes the enum avion.community.v1.GroupStatus.
 */
export const GroupStatusSchema: GenEnum<GroupStatus> = /*@__PURE__*/
  enumDesc(file_avion_community_v1_community, 1);

/**
 * イベントのステータス
 *
 * @generated from enum avion.community.v1.EventStatus
 */
export enum EventStatus {
  /**
   * 未指定
   *
   * @generated from enum value: EVENT_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 下書き
   *
   * @generated from enum value: EVENT_STATUS_DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * 公開済み
   *
   * @generated from enum value: EVENT_STATUS_PUBLISHED = 2;
   */
  PUBLISHED = 2,

  /**
   * 進行中
   *
   * @generated from enum value: EVENT_STATUS_ONGOING = 3;
   */
  ONGOING = 3,

  /**
   * 終了
   *
   * @generated from enum value: EVENT_STATUS_ENDED = 4;
   */
  ENDED = 4,

  /**
   * キャンセル
   *
   * @generated from enum value: EVENT_STATUS_CANCELLED = 5;
   */
  CANCELLED = 5,
}

/**
 * Describes the enum avion.community.v1.EventStatus.
 */
export const EventStatusSchema: GenEnum<EventStatus> = /*@__PURE__*/
  enumDesc(file_avion_community_v1_community, 2);

/**
 * イベントの形式
 *
 * @generated from enum avion.community.v1.EventFormat
 */
export enum EventFormat {
  /**
   * 未指定
   *
   * @generated from enum value: EVENT_FORMAT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * オフライン（対面）
   *
   * @generated from enum value: EVENT_FORMAT_OFFLINE = 1;
   */
  OFFLINE = 1,

  /**
   * オンライン
   *
   * @generated from enum value: EVENT_FORMAT_ONLINE = 2;
   */
  ONLINE = 2,

  /**
   * ハイブリッド
   *
   * @generated from enum value: EVENT_FORMAT_HYBRID = 3;
   */
  HYBRID = 3,
}

/**
 * Describes the enum avion.community.v1.EventFormat.
 */
export const EventFormatSchema: GenEnum<EventFormat> = /*@__PURE__*/
  enumDesc(file_avion_community_v1_community, 3);

/**
 * チャンネルのタイプ
 *
 * @generated from enum avion.community.v1.ChannelType
 */
export enum ChannelType {
  /**
   * 未指定
   *
   * @generated from enum value: CHANNEL_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * テキストチャンネル
   *
   * @generated from enum value: CHANNEL_TYPE_TEXT = 1;
   */
  TEXT = 1,

  /**
   * アナウンスチャンネル（管理者のみ投稿可能）
   *
   * @generated from enum value: CHANNEL_TYPE_ANNOUNCEMENT = 2;
   */
  ANNOUNCEMENT = 2,

  /**
   * ボイスチャンネル
   *
   * @generated from enum value: CHANNEL_TYPE_VOICE = 3;
   */
  VOICE = 3,

  /**
   * ビデオチャンネル
   *
   * @generated from enum value: CHANNEL_TYPE_VIDEO = 4;
   */
  VIDEO = 4,
}

/**
 * Describes the enum avion.community.v1.ChannelType.
 */
export const ChannelTypeSchema: GenEnum<ChannelType> = /*@__PURE__*/
  enumDesc(file_avion_community_v1_community, 4);

/**
 * メンバーの役割
 *
 * @generated from enum avion.community.v1.MemberRole
 */
export enum MemberRole {
  /**
   * 未指定
   *
   * @generated from enum value: MEMBER_ROLE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * オーナー（グループ作成者）
   *
   * @generated from enum value: MEMBER_ROLE_OWNER = 1;
   */
  OWNER = 1,

  /**
   * 管理者
   *
   * @generated from enum value: MEMBER_ROLE_ADMIN = 2;
   */
  ADMIN = 2,

  /**
   * モデレーター
   *
   * @generated from enum value: MEMBER_ROLE_MODERATOR = 3;
   */
  MODERATOR = 3,

  /**
   * 一般メンバー
   *
   * @generated from enum value: MEMBER_ROLE_MEMBER = 4;
   */
  MEMBER = 4,

  /**
   * ゲスト
   *
   * @generated from enum value: MEMBER_ROLE_GUEST = 5;
   */
  GUEST = 5,
}

/**
 * Describes the enum avion.community.v1.MemberRole.
 */
export const MemberRoleSchema: GenEnum<MemberRole> = /*@__PURE__*/
  enumDesc(file_avion_community_v1_community, 5);

/**
 * メンバーのステータス
 *
 * @generated from enum avion.community.v1.MemberStatus
 */
export enum MemberStatus {
  /**
   * 未指定
   *
   * @generated from enum value: MEMBER_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * アクティブ
   *
   * @generated from enum value: MEMBER_STATUS_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * 招待中
   *
   * @generated from enum value: MEMBER_STATUS_INVITED = 2;
   */
  INVITED = 2,

  /**
   * 申請中
   *
   * @generated from enum value: MEMBER_STATUS_PENDING = 3;
   */
  PENDING = 3,

  /**
   * 停止中
   *
   * @generated from enum value: MEMBER_STATUS_SUSPENDED = 4;
   */
  SUSPENDED = 4,

  /**
   * 退出済み
   *
   * @generated from enum value: MEMBER_STATUS_LEFT = 5;
   */
  LEFT = 5,

  /**
   * 追放済み
   *
   * @generated from enum value: MEMBER_STATUS_BANNED = 6;
   */
  BANNED = 6,
}

/**
 * Describes the enum avion.community.v1.MemberStatus.
 */
export const MemberStatusSchema: GenEnum<MemberStatus> = /*@__PURE__*/
  enumDesc(file_avion_community_v1_community, 6);

/**
 * 参加者のステータス
 *
 * @generated from enum avion.community.v1.ParticipantStatus
 */
export enum ParticipantStatus {
  /**
   * 未指定
   *
   * @generated from enum value: PARTICIPANT_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 参加予定
   *
   * @generated from enum value: PARTICIPANT_STATUS_ATTENDING = 1;
   */
  ATTENDING = 1,

  /**
   * 興味あり
   *
   * @generated from enum value: PARTICIPANT_STATUS_INTERESTED = 2;
   */
  INTERESTED = 2,

  /**
   * 不参加
   *
   * @generated from enum value: PARTICIPANT_STATUS_NOT_ATTENDING = 3;
   */
  NOT_ATTENDING = 3,

  /**
   * キャンセル
   *
   * @generated from enum value: PARTICIPANT_STATUS_CANCELLED = 4;
   */
  CANCELLED = 4,
}

/**
 * Describes the enum avion.community.v1.ParticipantStatus.
 */
export const ParticipantStatusSchema: GenEnum<ParticipantStatus> = /*@__PURE__*/
  enumDesc(file_avion_community_v1_community, 7);

/**
 * 権限の種類
 *
 * @generated from enum avion.community.v1.Permission
 */
export enum Permission {
  /**
   * 未指定
   *
   * @generated from enum value: PERMISSION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * グループ設定の変更
   *
   * @generated from enum value: PERMISSION_MANAGE_GROUP = 1;
   */
  MANAGE_GROUP = 1,

  /**
   * メンバー管理
   *
   * @generated from enum value: PERMISSION_MANAGE_MEMBERS = 2;
   */
  MANAGE_MEMBERS = 2,

  /**
   * チャンネル管理
   *
   * @generated from enum value: PERMISSION_MANAGE_CHANNELS = 3;
   */
  MANAGE_CHANNELS = 3,

  /**
   * イベント管理
   *
   * @generated from enum value: PERMISSION_MANAGE_EVENTS = 4;
   */
  MANAGE_EVENTS = 4,

  /**
   * 役割管理
   *
   * @generated from enum value: PERMISSION_MANAGE_ROLES = 5;
   */
  MANAGE_ROLES = 5,

  /**
   * メッセージ投稿
   *
   * @generated from enum value: PERMISSION_POST_MESSAGE = 6;
   */
  POST_MESSAGE = 6,

  /**
   * メッセージ削除
   *
   * @generated from enum value: PERMISSION_DELETE_MESSAGE = 7;
   */
  DELETE_MESSAGE = 7,

  /**
   * メンバー招待
   *
   * @generated from enum value: PERMISSION_INVITE_MEMBERS = 8;
   */
  INVITE_MEMBERS = 8,

  /**
   * メンバー追放
   *
   * @generated from enum value: PERMISSION_BAN_MEMBERS = 9;
   */
  BAN_MEMBERS = 9,

  /**
   * アナウンス投稿
   *
   * @generated from enum value: PERMISSION_POST_ANNOUNCEMENT = 10;
   */
  POST_ANNOUNCEMENT = 10,
}

/**
 * Describes the enum avion.community.v1.Permission.
 */
export const PermissionSchema: GenEnum<Permission> = /*@__PURE__*/
  enumDesc(file_avion_community_v1_community, 8);

