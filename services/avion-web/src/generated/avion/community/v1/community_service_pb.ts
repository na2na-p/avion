// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file avion/community/v1/community_service.proto (package avion.community.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { PaginationRequest, PaginationResponse } from "../../common/v1/pagination_pb";
import { file_avion_common_v1_pagination } from "../../common/v1/pagination_pb";
import type { Channel, ChannelSettings, ChannelType, Event, EventFee, EventFormat, EventLocation, EventStatus, Group, GroupInvite, GroupSettings, GroupStats, GroupStatus, GroupVisibility, Member, MemberRole, MemberStatus, Participant, ParticipantStatus, Permission, Role } from "./community_pb";
import { file_avion_community_v1_community } from "./community_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file avion/community/v1/community_service.proto.
 */
export const file_avion_community_v1_community_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_avion_common_v1_pagination, file_avion_community_v1_community, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * グループ作成リクエスト
 *
 * @generated from message avion.community.v1.CreateGroupRequest
 */
export type CreateGroupRequest = Message<"avion.community.v1.CreateGroupRequest"> & {
  /**
   * グループ名
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * グループの説明
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * アバター画像URL
   *
   * @generated from field: string avatar_url = 3;
   */
  avatarUrl: string;

  /**
   * ヘッダー画像URL
   *
   * @generated from field: string header_url = 4;
   */
  headerUrl: string;

  /**
   * 可視性設定
   *
   * @generated from field: avion.community.v1.GroupVisibility visibility = 5;
   */
  visibility: GroupVisibility;

  /**
   * カテゴリタグ
   *
   * @generated from field: repeated string tags = 6;
   */
  tags: string[];

  /**
   * グループ設定
   *
   * @generated from field: avion.community.v1.GroupSettings settings = 7;
   */
  settings?: GroupSettings;
};

/**
 * Describes the message avion.community.v1.CreateGroupRequest.
 * Use `create(CreateGroupRequestSchema)` to create a new message.
 */
export const CreateGroupRequestSchema: GenMessage<CreateGroupRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 0);

/**
 * グループ作成レスポンス
 *
 * @generated from message avion.community.v1.CreateGroupResponse
 */
export type CreateGroupResponse = Message<"avion.community.v1.CreateGroupResponse"> & {
  /**
   * 作成されたグループ
   *
   * @generated from field: avion.community.v1.Group group = 1;
   */
  group?: Group;
};

/**
 * Describes the message avion.community.v1.CreateGroupResponse.
 * Use `create(CreateGroupResponseSchema)` to create a new message.
 */
export const CreateGroupResponseSchema: GenMessage<CreateGroupResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 1);

/**
 * グループ取得リクエスト
 *
 * @generated from message avion.community.v1.GetGroupRequest
 */
export type GetGroupRequest = Message<"avion.community.v1.GetGroupRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;
};

/**
 * Describes the message avion.community.v1.GetGroupRequest.
 * Use `create(GetGroupRequestSchema)` to create a new message.
 */
export const GetGroupRequestSchema: GenMessage<GetGroupRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 2);

/**
 * グループ取得レスポンス
 *
 * @generated from message avion.community.v1.GetGroupResponse
 */
export type GetGroupResponse = Message<"avion.community.v1.GetGroupResponse"> & {
  /**
   * グループ情報
   *
   * @generated from field: avion.community.v1.Group group = 1;
   */
  group?: Group;

  /**
   * グループ設定
   *
   * @generated from field: avion.community.v1.GroupSettings settings = 2;
   */
  settings?: GroupSettings;

  /**
   * リクエスターのメンバー情報（メンバーの場合）
   *
   * @generated from field: avion.community.v1.Member requester_member = 3;
   */
  requesterMember?: Member;
};

/**
 * Describes the message avion.community.v1.GetGroupResponse.
 * Use `create(GetGroupResponseSchema)` to create a new message.
 */
export const GetGroupResponseSchema: GenMessage<GetGroupResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 3);

/**
 * グループ更新リクエスト
 *
 * @generated from message avion.community.v1.UpdateGroupRequest
 */
export type UpdateGroupRequest = Message<"avion.community.v1.UpdateGroupRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * 更新するフィールドのマスク
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * グループ情報
   *
   * @generated from field: avion.community.v1.Group group = 3;
   */
  group?: Group;

  /**
   * グループ設定
   *
   * @generated from field: avion.community.v1.GroupSettings settings = 4;
   */
  settings?: GroupSettings;
};

/**
 * Describes the message avion.community.v1.UpdateGroupRequest.
 * Use `create(UpdateGroupRequestSchema)` to create a new message.
 */
export const UpdateGroupRequestSchema: GenMessage<UpdateGroupRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 4);

/**
 * グループ更新レスポンス
 *
 * @generated from message avion.community.v1.UpdateGroupResponse
 */
export type UpdateGroupResponse = Message<"avion.community.v1.UpdateGroupResponse"> & {
  /**
   * 更新されたグループ
   *
   * @generated from field: avion.community.v1.Group group = 1;
   */
  group?: Group;

  /**
   * 更新されたグループ設定
   *
   * @generated from field: avion.community.v1.GroupSettings settings = 2;
   */
  settings?: GroupSettings;
};

/**
 * Describes the message avion.community.v1.UpdateGroupResponse.
 * Use `create(UpdateGroupResponseSchema)` to create a new message.
 */
export const UpdateGroupResponseSchema: GenMessage<UpdateGroupResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 5);

/**
 * グループ削除リクエスト
 *
 * @generated from message avion.community.v1.DeleteGroupRequest
 */
export type DeleteGroupRequest = Message<"avion.community.v1.DeleteGroupRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;
};

/**
 * Describes the message avion.community.v1.DeleteGroupRequest.
 * Use `create(DeleteGroupRequestSchema)` to create a new message.
 */
export const DeleteGroupRequestSchema: GenMessage<DeleteGroupRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 6);

/**
 * グループ削除レスポンス
 *
 * @generated from message avion.community.v1.DeleteGroupResponse
 */
export type DeleteGroupResponse = Message<"avion.community.v1.DeleteGroupResponse"> & {
  /**
   * 削除成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.community.v1.DeleteGroupResponse.
 * Use `create(DeleteGroupResponseSchema)` to create a new message.
 */
export const DeleteGroupResponseSchema: GenMessage<DeleteGroupResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 7);

/**
 * グループ一覧取得リクエスト
 *
 * @generated from message avion.community.v1.ListGroupsRequest
 */
export type ListGroupsRequest = Message<"avion.community.v1.ListGroupsRequest"> & {
  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  /**
   * フィルター条件
   *
   * @generated from field: avion.community.v1.ListGroupsFilter filter = 2;
   */
  filter?: ListGroupsFilter;

  /**
   * ソート条件
   *
   * @generated from field: avion.community.v1.ListGroupsSort sort = 3;
   */
  sort?: ListGroupsSort;
};

/**
 * Describes the message avion.community.v1.ListGroupsRequest.
 * Use `create(ListGroupsRequestSchema)` to create a new message.
 */
export const ListGroupsRequestSchema: GenMessage<ListGroupsRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 8);

/**
 * グループ一覧フィルター
 *
 * @generated from message avion.community.v1.ListGroupsFilter
 */
export type ListGroupsFilter = Message<"avion.community.v1.ListGroupsFilter"> & {
  /**
   * オーナーIDでフィルター
   *
   * @generated from field: string owner_id = 1;
   */
  ownerId: string;

  /**
   * メンバーIDでフィルター（該当ユーザーが参加しているグループ）
   *
   * @generated from field: string member_id = 2;
   */
  memberId: string;

  /**
   * 可視性でフィルター
   *
   * @generated from field: avion.community.v1.GroupVisibility visibility = 3;
   */
  visibility: GroupVisibility;

  /**
   * ステータスでフィルター
   *
   * @generated from field: avion.community.v1.GroupStatus status = 4;
   */
  status: GroupStatus;

  /**
   * タグでフィルター
   *
   * @generated from field: repeated string tags = 5;
   */
  tags: string[];
};

/**
 * Describes the message avion.community.v1.ListGroupsFilter.
 * Use `create(ListGroupsFilterSchema)` to create a new message.
 */
export const ListGroupsFilterSchema: GenMessage<ListGroupsFilter> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 9);

/**
 * グループ一覧ソート
 *
 * @generated from message avion.community.v1.ListGroupsSort
 */
export type ListGroupsSort = Message<"avion.community.v1.ListGroupsSort"> & {
  /**
   * ソートフィールド（created_at, updated_at, member_count, name）
   *
   * @generated from field: string field = 1;
   */
  field: string;

  /**
   * 降順フラグ
   *
   * @generated from field: bool descending = 2;
   */
  descending: boolean;
};

/**
 * Describes the message avion.community.v1.ListGroupsSort.
 * Use `create(ListGroupsSortSchema)` to create a new message.
 */
export const ListGroupsSortSchema: GenMessage<ListGroupsSort> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 10);

/**
 * グループ一覧取得レスポンス
 *
 * @generated from message avion.community.v1.ListGroupsResponse
 */
export type ListGroupsResponse = Message<"avion.community.v1.ListGroupsResponse"> & {
  /**
   * グループリスト
   *
   * @generated from field: repeated avion.community.v1.Group groups = 1;
   */
  groups: Group[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.community.v1.ListGroupsResponse.
 * Use `create(ListGroupsResponseSchema)` to create a new message.
 */
export const ListGroupsResponseSchema: GenMessage<ListGroupsResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 11);

/**
 * グループ検索リクエスト
 *
 * @generated from message avion.community.v1.SearchGroupsRequest
 */
export type SearchGroupsRequest = Message<"avion.community.v1.SearchGroupsRequest"> & {
  /**
   * 検索クエリ
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * フィルター条件
   *
   * @generated from field: avion.community.v1.SearchGroupsFilter filter = 3;
   */
  filter?: SearchGroupsFilter;
};

/**
 * Describes the message avion.community.v1.SearchGroupsRequest.
 * Use `create(SearchGroupsRequestSchema)` to create a new message.
 */
export const SearchGroupsRequestSchema: GenMessage<SearchGroupsRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 12);

/**
 * グループ検索フィルター
 *
 * @generated from message avion.community.v1.SearchGroupsFilter
 */
export type SearchGroupsFilter = Message<"avion.community.v1.SearchGroupsFilter"> & {
  /**
   * 可視性でフィルター
   *
   * @generated from field: avion.community.v1.GroupVisibility visibility = 1;
   */
  visibility: GroupVisibility;

  /**
   * タグでフィルター
   *
   * @generated from field: repeated string tags = 2;
   */
  tags: string[];

  /**
   * 最小メンバー数
   *
   * @generated from field: int32 min_members = 3;
   */
  minMembers: number;

  /**
   * 最大メンバー数
   *
   * @generated from field: int32 max_members = 4;
   */
  maxMembers: number;
};

/**
 * Describes the message avion.community.v1.SearchGroupsFilter.
 * Use `create(SearchGroupsFilterSchema)` to create a new message.
 */
export const SearchGroupsFilterSchema: GenMessage<SearchGroupsFilter> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 13);

/**
 * グループ検索レスポンス
 *
 * @generated from message avion.community.v1.SearchGroupsResponse
 */
export type SearchGroupsResponse = Message<"avion.community.v1.SearchGroupsResponse"> & {
  /**
   * 検索結果
   *
   * @generated from field: repeated avion.community.v1.Group groups = 1;
   */
  groups: Group[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.community.v1.SearchGroupsResponse.
 * Use `create(SearchGroupsResponseSchema)` to create a new message.
 */
export const SearchGroupsResponseSchema: GenMessage<SearchGroupsResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 14);

/**
 * グループ統計取得リクエスト
 *
 * @generated from message avion.community.v1.GetGroupStatsRequest
 */
export type GetGroupStatsRequest = Message<"avion.community.v1.GetGroupStatsRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;
};

/**
 * Describes the message avion.community.v1.GetGroupStatsRequest.
 * Use `create(GetGroupStatsRequestSchema)` to create a new message.
 */
export const GetGroupStatsRequestSchema: GenMessage<GetGroupStatsRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 15);

/**
 * グループ統計取得レスポンス
 *
 * @generated from message avion.community.v1.GetGroupStatsResponse
 */
export type GetGroupStatsResponse = Message<"avion.community.v1.GetGroupStatsResponse"> & {
  /**
   * グループ統計
   *
   * @generated from field: avion.community.v1.GroupStats stats = 1;
   */
  stats?: GroupStats;
};

/**
 * Describes the message avion.community.v1.GetGroupStatsResponse.
 * Use `create(GetGroupStatsResponseSchema)` to create a new message.
 */
export const GetGroupStatsResponseSchema: GenMessage<GetGroupStatsResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 16);

/**
 * グループ参加リクエスト
 *
 * @generated from message avion.community.v1.JoinGroupRequest
 */
export type JoinGroupRequest = Message<"avion.community.v1.JoinGroupRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 参加メッセージ（承認制の場合）
   *
   * @generated from field: string message = 3;
   */
  message: string;
};

/**
 * Describes the message avion.community.v1.JoinGroupRequest.
 * Use `create(JoinGroupRequestSchema)` to create a new message.
 */
export const JoinGroupRequestSchema: GenMessage<JoinGroupRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 17);

/**
 * グループ参加レスポンス
 *
 * @generated from message avion.community.v1.JoinGroupResponse
 */
export type JoinGroupResponse = Message<"avion.community.v1.JoinGroupResponse"> & {
  /**
   * メンバー情報
   *
   * @generated from field: avion.community.v1.Member member = 1;
   */
  member?: Member;

  /**
   * 承認待ちフラグ
   *
   * @generated from field: bool pending_approval = 2;
   */
  pendingApproval: boolean;
};

/**
 * Describes the message avion.community.v1.JoinGroupResponse.
 * Use `create(JoinGroupResponseSchema)` to create a new message.
 */
export const JoinGroupResponseSchema: GenMessage<JoinGroupResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 18);

/**
 * グループ退出リクエスト
 *
 * @generated from message avion.community.v1.LeaveGroupRequest
 */
export type LeaveGroupRequest = Message<"avion.community.v1.LeaveGroupRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;
};

/**
 * Describes the message avion.community.v1.LeaveGroupRequest.
 * Use `create(LeaveGroupRequestSchema)` to create a new message.
 */
export const LeaveGroupRequestSchema: GenMessage<LeaveGroupRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 19);

/**
 * グループ退出レスポンス
 *
 * @generated from message avion.community.v1.LeaveGroupResponse
 */
export type LeaveGroupResponse = Message<"avion.community.v1.LeaveGroupResponse"> & {
  /**
   * 退出成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.community.v1.LeaveGroupResponse.
 * Use `create(LeaveGroupResponseSchema)` to create a new message.
 */
export const LeaveGroupResponseSchema: GenMessage<LeaveGroupResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 20);

/**
 * メンバー招待リクエスト
 *
 * @generated from message avion.community.v1.InviteMemberRequest
 */
export type InviteMemberRequest = Message<"avion.community.v1.InviteMemberRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * 招待するユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 招待者ID
   *
   * @generated from field: string inviter_id = 3;
   */
  inviterId: string;

  /**
   * 招待メッセージ
   *
   * @generated from field: string message = 4;
   */
  message: string;
};

/**
 * Describes the message avion.community.v1.InviteMemberRequest.
 * Use `create(InviteMemberRequestSchema)` to create a new message.
 */
export const InviteMemberRequestSchema: GenMessage<InviteMemberRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 21);

/**
 * メンバー招待レスポンス
 *
 * @generated from message avion.community.v1.InviteMemberResponse
 */
export type InviteMemberResponse = Message<"avion.community.v1.InviteMemberResponse"> & {
  /**
   * メンバー情報
   *
   * @generated from field: avion.community.v1.Member member = 1;
   */
  member?: Member;
};

/**
 * Describes the message avion.community.v1.InviteMemberResponse.
 * Use `create(InviteMemberResponseSchema)` to create a new message.
 */
export const InviteMemberResponseSchema: GenMessage<InviteMemberResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 22);

/**
 * メンバー削除リクエスト
 *
 * @generated from message avion.community.v1.RemoveMemberRequest
 */
export type RemoveMemberRequest = Message<"avion.community.v1.RemoveMemberRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * 削除するメンバーのユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 削除理由
   *
   * @generated from field: string reason = 3;
   */
  reason: string;
};

/**
 * Describes the message avion.community.v1.RemoveMemberRequest.
 * Use `create(RemoveMemberRequestSchema)` to create a new message.
 */
export const RemoveMemberRequestSchema: GenMessage<RemoveMemberRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 23);

/**
 * メンバー削除レスポンス
 *
 * @generated from message avion.community.v1.RemoveMemberResponse
 */
export type RemoveMemberResponse = Message<"avion.community.v1.RemoveMemberResponse"> & {
  /**
   * 削除成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.community.v1.RemoveMemberResponse.
 * Use `create(RemoveMemberResponseSchema)` to create a new message.
 */
export const RemoveMemberResponseSchema: GenMessage<RemoveMemberResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 24);

/**
 * メンバー役割更新リクエスト
 *
 * @generated from message avion.community.v1.UpdateMemberRoleRequest
 */
export type UpdateMemberRoleRequest = Message<"avion.community.v1.UpdateMemberRoleRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * 対象メンバーのユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 新しい役割
   *
   * @generated from field: avion.community.v1.MemberRole role = 3;
   */
  role: MemberRole;

  /**
   * カスタム役割ID（任意）
   *
   * @generated from field: string custom_role_id = 4;
   */
  customRoleId: string;
};

/**
 * Describes the message avion.community.v1.UpdateMemberRoleRequest.
 * Use `create(UpdateMemberRoleRequestSchema)` to create a new message.
 */
export const UpdateMemberRoleRequestSchema: GenMessage<UpdateMemberRoleRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 25);

/**
 * メンバー役割更新レスポンス
 *
 * @generated from message avion.community.v1.UpdateMemberRoleResponse
 */
export type UpdateMemberRoleResponse = Message<"avion.community.v1.UpdateMemberRoleResponse"> & {
  /**
   * 更新されたメンバー情報
   *
   * @generated from field: avion.community.v1.Member member = 1;
   */
  member?: Member;
};

/**
 * Describes the message avion.community.v1.UpdateMemberRoleResponse.
 * Use `create(UpdateMemberRoleResponseSchema)` to create a new message.
 */
export const UpdateMemberRoleResponseSchema: GenMessage<UpdateMemberRoleResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 26);

/**
 * メンバー一覧取得リクエスト
 *
 * @generated from message avion.community.v1.ListMembersRequest
 */
export type ListMembersRequest = Message<"avion.community.v1.ListMembersRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * フィルター条件
   *
   * @generated from field: avion.community.v1.ListMembersFilter filter = 3;
   */
  filter?: ListMembersFilter;
};

/**
 * Describes the message avion.community.v1.ListMembersRequest.
 * Use `create(ListMembersRequestSchema)` to create a new message.
 */
export const ListMembersRequestSchema: GenMessage<ListMembersRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 27);

/**
 * メンバー一覧フィルター
 *
 * @generated from message avion.community.v1.ListMembersFilter
 */
export type ListMembersFilter = Message<"avion.community.v1.ListMembersFilter"> & {
  /**
   * 役割でフィルター
   *
   * @generated from field: avion.community.v1.MemberRole role = 1;
   */
  role: MemberRole;

  /**
   * ステータスでフィルター
   *
   * @generated from field: avion.community.v1.MemberStatus status = 2;
   */
  status: MemberStatus;

  /**
   * カスタム役割IDでフィルター
   *
   * @generated from field: string custom_role_id = 3;
   */
  customRoleId: string;
};

/**
 * Describes the message avion.community.v1.ListMembersFilter.
 * Use `create(ListMembersFilterSchema)` to create a new message.
 */
export const ListMembersFilterSchema: GenMessage<ListMembersFilter> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 28);

/**
 * メンバー一覧取得レスポンス
 *
 * @generated from message avion.community.v1.ListMembersResponse
 */
export type ListMembersResponse = Message<"avion.community.v1.ListMembersResponse"> & {
  /**
   * メンバーリスト
   *
   * @generated from field: repeated avion.community.v1.Member members = 1;
   */
  members: Member[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.community.v1.ListMembersResponse.
 * Use `create(ListMembersResponseSchema)` to create a new message.
 */
export const ListMembersResponseSchema: GenMessage<ListMembersResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 29);

/**
 * メンバー取得リクエスト
 *
 * @generated from message avion.community.v1.GetMemberRequest
 */
export type GetMemberRequest = Message<"avion.community.v1.GetMemberRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;
};

/**
 * Describes the message avion.community.v1.GetMemberRequest.
 * Use `create(GetMemberRequestSchema)` to create a new message.
 */
export const GetMemberRequestSchema: GenMessage<GetMemberRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 30);

/**
 * メンバー取得レスポンス
 *
 * @generated from message avion.community.v1.GetMemberResponse
 */
export type GetMemberResponse = Message<"avion.community.v1.GetMemberResponse"> & {
  /**
   * メンバー情報
   *
   * @generated from field: avion.community.v1.Member member = 1;
   */
  member?: Member;
};

/**
 * Describes the message avion.community.v1.GetMemberResponse.
 * Use `create(GetMemberResponseSchema)` to create a new message.
 */
export const GetMemberResponseSchema: GenMessage<GetMemberResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 31);

/**
 * メンバー承認リクエスト
 *
 * @generated from message avion.community.v1.ApproveMemberRequest
 */
export type ApproveMemberRequest = Message<"avion.community.v1.ApproveMemberRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * 承認するユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 承認者ID
   *
   * @generated from field: string approver_id = 3;
   */
  approverId: string;
};

/**
 * Describes the message avion.community.v1.ApproveMemberRequest.
 * Use `create(ApproveMemberRequestSchema)` to create a new message.
 */
export const ApproveMemberRequestSchema: GenMessage<ApproveMemberRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 32);

/**
 * メンバー承認レスポンス
 *
 * @generated from message avion.community.v1.ApproveMemberResponse
 */
export type ApproveMemberResponse = Message<"avion.community.v1.ApproveMemberResponse"> & {
  /**
   * 承認されたメンバー情報
   *
   * @generated from field: avion.community.v1.Member member = 1;
   */
  member?: Member;
};

/**
 * Describes the message avion.community.v1.ApproveMemberResponse.
 * Use `create(ApproveMemberResponseSchema)` to create a new message.
 */
export const ApproveMemberResponseSchema: GenMessage<ApproveMemberResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 33);

/**
 * メンバー拒否リクエスト
 *
 * @generated from message avion.community.v1.RejectMemberRequest
 */
export type RejectMemberRequest = Message<"avion.community.v1.RejectMemberRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * 拒否するユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 拒否理由
   *
   * @generated from field: string reason = 3;
   */
  reason: string;
};

/**
 * Describes the message avion.community.v1.RejectMemberRequest.
 * Use `create(RejectMemberRequestSchema)` to create a new message.
 */
export const RejectMemberRequestSchema: GenMessage<RejectMemberRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 34);

/**
 * メンバー拒否レスポンス
 *
 * @generated from message avion.community.v1.RejectMemberResponse
 */
export type RejectMemberResponse = Message<"avion.community.v1.RejectMemberResponse"> & {
  /**
   * 拒否成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.community.v1.RejectMemberResponse.
 * Use `create(RejectMemberResponseSchema)` to create a new message.
 */
export const RejectMemberResponseSchema: GenMessage<RejectMemberResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 35);

/**
 * イベント作成リクエスト
 *
 * @generated from message avion.community.v1.CreateEventRequest
 */
export type CreateEventRequest = Message<"avion.community.v1.CreateEventRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * イベントタイトル
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * イベントの説明
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * カバー画像URL
   *
   * @generated from field: string cover_image_url = 4;
   */
  coverImageUrl: string;

  /**
   * 開始日時
   *
   * @generated from field: google.protobuf.Timestamp start_time = 5;
   */
  startTime?: Timestamp;

  /**
   * 終了日時
   *
   * @generated from field: google.protobuf.Timestamp end_time = 6;
   */
  endTime?: Timestamp;

  /**
   * 開催形式
   *
   * @generated from field: avion.community.v1.EventFormat format = 7;
   */
  format: EventFormat;

  /**
   * 開催場所（オフラインの場合）
   *
   * @generated from field: avion.community.v1.EventLocation location = 8;
   */
  location?: EventLocation;

  /**
   * オンラインURL（オンラインの場合）
   *
   * @generated from field: string online_url = 9;
   */
  onlineUrl: string;

  /**
   * 参加者数上限
   *
   * @generated from field: int32 max_participants = 10;
   */
  maxParticipants: number;

  /**
   * 参加費
   *
   * @generated from field: avion.community.v1.EventFee fee = 11;
   */
  fee?: EventFee;

  /**
   * タグ
   *
   * @generated from field: repeated string tags = 12;
   */
  tags: string[];
};

/**
 * Describes the message avion.community.v1.CreateEventRequest.
 * Use `create(CreateEventRequestSchema)` to create a new message.
 */
export const CreateEventRequestSchema: GenMessage<CreateEventRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 36);

/**
 * イベント作成レスポンス
 *
 * @generated from message avion.community.v1.CreateEventResponse
 */
export type CreateEventResponse = Message<"avion.community.v1.CreateEventResponse"> & {
  /**
   * 作成されたイベント
   *
   * @generated from field: avion.community.v1.Event event = 1;
   */
  event?: Event;
};

/**
 * Describes the message avion.community.v1.CreateEventResponse.
 * Use `create(CreateEventResponseSchema)` to create a new message.
 */
export const CreateEventResponseSchema: GenMessage<CreateEventResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 37);

/**
 * イベント取得リクエスト
 *
 * @generated from message avion.community.v1.GetEventRequest
 */
export type GetEventRequest = Message<"avion.community.v1.GetEventRequest"> & {
  /**
   * イベントID
   *
   * @generated from field: string event_id = 1;
   */
  eventId: string;
};

/**
 * Describes the message avion.community.v1.GetEventRequest.
 * Use `create(GetEventRequestSchema)` to create a new message.
 */
export const GetEventRequestSchema: GenMessage<GetEventRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 38);

/**
 * イベント取得レスポンス
 *
 * @generated from message avion.community.v1.GetEventResponse
 */
export type GetEventResponse = Message<"avion.community.v1.GetEventResponse"> & {
  /**
   * イベント情報
   *
   * @generated from field: avion.community.v1.Event event = 1;
   */
  event?: Event;

  /**
   * リクエスターの参加情報（参加者の場合）
   *
   * @generated from field: avion.community.v1.Participant requester_participant = 2;
   */
  requesterParticipant?: Participant;
};

/**
 * Describes the message avion.community.v1.GetEventResponse.
 * Use `create(GetEventResponseSchema)` to create a new message.
 */
export const GetEventResponseSchema: GenMessage<GetEventResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 39);

/**
 * イベント更新リクエスト
 *
 * @generated from message avion.community.v1.UpdateEventRequest
 */
export type UpdateEventRequest = Message<"avion.community.v1.UpdateEventRequest"> & {
  /**
   * イベントID
   *
   * @generated from field: string event_id = 1;
   */
  eventId: string;

  /**
   * 更新するフィールドのマスク
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * イベント情報
   *
   * @generated from field: avion.community.v1.Event event = 3;
   */
  event?: Event;
};

/**
 * Describes the message avion.community.v1.UpdateEventRequest.
 * Use `create(UpdateEventRequestSchema)` to create a new message.
 */
export const UpdateEventRequestSchema: GenMessage<UpdateEventRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 40);

/**
 * イベント更新レスポンス
 *
 * @generated from message avion.community.v1.UpdateEventResponse
 */
export type UpdateEventResponse = Message<"avion.community.v1.UpdateEventResponse"> & {
  /**
   * 更新されたイベント
   *
   * @generated from field: avion.community.v1.Event event = 1;
   */
  event?: Event;
};

/**
 * Describes the message avion.community.v1.UpdateEventResponse.
 * Use `create(UpdateEventResponseSchema)` to create a new message.
 */
export const UpdateEventResponseSchema: GenMessage<UpdateEventResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 41);

/**
 * イベント削除リクエスト
 *
 * @generated from message avion.community.v1.DeleteEventRequest
 */
export type DeleteEventRequest = Message<"avion.community.v1.DeleteEventRequest"> & {
  /**
   * イベントID
   *
   * @generated from field: string event_id = 1;
   */
  eventId: string;

  /**
   * 削除理由
   *
   * @generated from field: string reason = 2;
   */
  reason: string;
};

/**
 * Describes the message avion.community.v1.DeleteEventRequest.
 * Use `create(DeleteEventRequestSchema)` to create a new message.
 */
export const DeleteEventRequestSchema: GenMessage<DeleteEventRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 42);

/**
 * イベント削除レスポンス
 *
 * @generated from message avion.community.v1.DeleteEventResponse
 */
export type DeleteEventResponse = Message<"avion.community.v1.DeleteEventResponse"> & {
  /**
   * 削除成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.community.v1.DeleteEventResponse.
 * Use `create(DeleteEventResponseSchema)` to create a new message.
 */
export const DeleteEventResponseSchema: GenMessage<DeleteEventResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 43);

/**
 * イベント一覧取得リクエスト
 *
 * @generated from message avion.community.v1.ListEventsRequest
 */
export type ListEventsRequest = Message<"avion.community.v1.ListEventsRequest"> & {
  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  /**
   * フィルター条件
   *
   * @generated from field: avion.community.v1.ListEventsFilter filter = 2;
   */
  filter?: ListEventsFilter;

  /**
   * ソート条件
   *
   * @generated from field: avion.community.v1.ListEventsSort sort = 3;
   */
  sort?: ListEventsSort;
};

/**
 * Describes the message avion.community.v1.ListEventsRequest.
 * Use `create(ListEventsRequestSchema)` to create a new message.
 */
export const ListEventsRequestSchema: GenMessage<ListEventsRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 44);

/**
 * イベント一覧フィルター
 *
 * @generated from message avion.community.v1.ListEventsFilter
 */
export type ListEventsFilter = Message<"avion.community.v1.ListEventsFilter"> & {
  /**
   * グループIDでフィルター
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * 開催者IDでフィルター
   *
   * @generated from field: string organizer_id = 2;
   */
  organizerId: string;

  /**
   * ステータスでフィルター
   *
   * @generated from field: avion.community.v1.EventStatus status = 3;
   */
  status: EventStatus;

  /**
   * 開催形式でフィルター
   *
   * @generated from field: avion.community.v1.EventFormat format = 4;
   */
  format: EventFormat;

  /**
   * 開始日時の範囲（開始）
   *
   * @generated from field: google.protobuf.Timestamp start_time_from = 5;
   */
  startTimeFrom?: Timestamp;

  /**
   * 開始日時の範囲（終了）
   *
   * @generated from field: google.protobuf.Timestamp start_time_to = 6;
   */
  startTimeTo?: Timestamp;

  /**
   * タグでフィルター
   *
   * @generated from field: repeated string tags = 7;
   */
  tags: string[];
};

/**
 * Describes the message avion.community.v1.ListEventsFilter.
 * Use `create(ListEventsFilterSchema)` to create a new message.
 */
export const ListEventsFilterSchema: GenMessage<ListEventsFilter> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 45);

/**
 * イベント一覧ソート
 *
 * @generated from message avion.community.v1.ListEventsSort
 */
export type ListEventsSort = Message<"avion.community.v1.ListEventsSort"> & {
  /**
   * ソートフィールド（start_time, created_at, participant_count）
   *
   * @generated from field: string field = 1;
   */
  field: string;

  /**
   * 降順フラグ
   *
   * @generated from field: bool descending = 2;
   */
  descending: boolean;
};

/**
 * Describes the message avion.community.v1.ListEventsSort.
 * Use `create(ListEventsSortSchema)` to create a new message.
 */
export const ListEventsSortSchema: GenMessage<ListEventsSort> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 46);

/**
 * イベント一覧取得レスポンス
 *
 * @generated from message avion.community.v1.ListEventsResponse
 */
export type ListEventsResponse = Message<"avion.community.v1.ListEventsResponse"> & {
  /**
   * イベントリスト
   *
   * @generated from field: repeated avion.community.v1.Event events = 1;
   */
  events: Event[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.community.v1.ListEventsResponse.
 * Use `create(ListEventsResponseSchema)` to create a new message.
 */
export const ListEventsResponseSchema: GenMessage<ListEventsResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 47);

/**
 * イベント検索リクエスト
 *
 * @generated from message avion.community.v1.SearchEventsRequest
 */
export type SearchEventsRequest = Message<"avion.community.v1.SearchEventsRequest"> & {
  /**
   * 検索クエリ
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * フィルター条件
   *
   * @generated from field: avion.community.v1.SearchEventsFilter filter = 3;
   */
  filter?: SearchEventsFilter;
};

/**
 * Describes the message avion.community.v1.SearchEventsRequest.
 * Use `create(SearchEventsRequestSchema)` to create a new message.
 */
export const SearchEventsRequestSchema: GenMessage<SearchEventsRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 48);

/**
 * イベント検索フィルター
 *
 * @generated from message avion.community.v1.SearchEventsFilter
 */
export type SearchEventsFilter = Message<"avion.community.v1.SearchEventsFilter"> & {
  /**
   * 開催形式でフィルター
   *
   * @generated from field: avion.community.v1.EventFormat format = 1;
   */
  format: EventFormat;

  /**
   * 日付範囲（開始）
   *
   * @generated from field: google.protobuf.Timestamp date_from = 2;
   */
  dateFrom?: Timestamp;

  /**
   * 日付範囲（終了）
   *
   * @generated from field: google.protobuf.Timestamp date_to = 3;
   */
  dateTo?: Timestamp;

  /**
   * 場所（都市名など）
   *
   * @generated from field: string location = 4;
   */
  location: string;

  /**
   * 無料イベントのみ
   *
   * @generated from field: bool free_only = 5;
   */
  freeOnly: boolean;

  /**
   * タグでフィルター
   *
   * @generated from field: repeated string tags = 6;
   */
  tags: string[];
};

/**
 * Describes the message avion.community.v1.SearchEventsFilter.
 * Use `create(SearchEventsFilterSchema)` to create a new message.
 */
export const SearchEventsFilterSchema: GenMessage<SearchEventsFilter> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 49);

/**
 * イベント検索レスポンス
 *
 * @generated from message avion.community.v1.SearchEventsResponse
 */
export type SearchEventsResponse = Message<"avion.community.v1.SearchEventsResponse"> & {
  /**
   * 検索結果
   *
   * @generated from field: repeated avion.community.v1.Event events = 1;
   */
  events: Event[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.community.v1.SearchEventsResponse.
 * Use `create(SearchEventsResponseSchema)` to create a new message.
 */
export const SearchEventsResponseSchema: GenMessage<SearchEventsResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 50);

/**
 * イベント参加リクエスト
 *
 * @generated from message avion.community.v1.JoinEventRequest
 */
export type JoinEventRequest = Message<"avion.community.v1.JoinEventRequest"> & {
  /**
   * イベントID
   *
   * @generated from field: string event_id = 1;
   */
  eventId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 参加ステータス
   *
   * @generated from field: avion.community.v1.ParticipantStatus status = 3;
   */
  status: ParticipantStatus;

  /**
   * コメント
   *
   * @generated from field: string comment = 4;
   */
  comment: string;

  /**
   * 同伴者数
   *
   * @generated from field: int32 guest_count = 5;
   */
  guestCount: number;
};

/**
 * Describes the message avion.community.v1.JoinEventRequest.
 * Use `create(JoinEventRequestSchema)` to create a new message.
 */
export const JoinEventRequestSchema: GenMessage<JoinEventRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 51);

/**
 * イベント参加レスポンス
 *
 * @generated from message avion.community.v1.JoinEventResponse
 */
export type JoinEventResponse = Message<"avion.community.v1.JoinEventResponse"> & {
  /**
   * 参加者情報
   *
   * @generated from field: avion.community.v1.Participant participant = 1;
   */
  participant?: Participant;
};

/**
 * Describes the message avion.community.v1.JoinEventResponse.
 * Use `create(JoinEventResponseSchema)` to create a new message.
 */
export const JoinEventResponseSchema: GenMessage<JoinEventResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 52);

/**
 * イベント参加キャンセルリクエスト
 *
 * @generated from message avion.community.v1.LeaveEventRequest
 */
export type LeaveEventRequest = Message<"avion.community.v1.LeaveEventRequest"> & {
  /**
   * イベントID
   *
   * @generated from field: string event_id = 1;
   */
  eventId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * キャンセル理由
   *
   * @generated from field: string reason = 3;
   */
  reason: string;
};

/**
 * Describes the message avion.community.v1.LeaveEventRequest.
 * Use `create(LeaveEventRequestSchema)` to create a new message.
 */
export const LeaveEventRequestSchema: GenMessage<LeaveEventRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 53);

/**
 * イベント参加キャンセルレスポンス
 *
 * @generated from message avion.community.v1.LeaveEventResponse
 */
export type LeaveEventResponse = Message<"avion.community.v1.LeaveEventResponse"> & {
  /**
   * キャンセル成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.community.v1.LeaveEventResponse.
 * Use `create(LeaveEventResponseSchema)` to create a new message.
 */
export const LeaveEventResponseSchema: GenMessage<LeaveEventResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 54);

/**
 * イベント参加者一覧取得リクエスト
 *
 * @generated from message avion.community.v1.ListParticipantsRequest
 */
export type ListParticipantsRequest = Message<"avion.community.v1.ListParticipantsRequest"> & {
  /**
   * イベントID
   *
   * @generated from field: string event_id = 1;
   */
  eventId: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * フィルター条件
   *
   * @generated from field: avion.community.v1.ListParticipantsFilter filter = 3;
   */
  filter?: ListParticipantsFilter;
};

/**
 * Describes the message avion.community.v1.ListParticipantsRequest.
 * Use `create(ListParticipantsRequestSchema)` to create a new message.
 */
export const ListParticipantsRequestSchema: GenMessage<ListParticipantsRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 55);

/**
 * イベント参加者一覧フィルター
 *
 * @generated from message avion.community.v1.ListParticipantsFilter
 */
export type ListParticipantsFilter = Message<"avion.community.v1.ListParticipantsFilter"> & {
  /**
   * ステータスでフィルター
   *
   * @generated from field: avion.community.v1.ParticipantStatus status = 1;
   */
  status: ParticipantStatus;
};

/**
 * Describes the message avion.community.v1.ListParticipantsFilter.
 * Use `create(ListParticipantsFilterSchema)` to create a new message.
 */
export const ListParticipantsFilterSchema: GenMessage<ListParticipantsFilter> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 56);

/**
 * イベント参加者一覧取得レスポンス
 *
 * @generated from message avion.community.v1.ListParticipantsResponse
 */
export type ListParticipantsResponse = Message<"avion.community.v1.ListParticipantsResponse"> & {
  /**
   * 参加者リスト
   *
   * @generated from field: repeated avion.community.v1.Participant participants = 1;
   */
  participants: Participant[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.community.v1.ListParticipantsResponse.
 * Use `create(ListParticipantsResponseSchema)` to create a new message.
 */
export const ListParticipantsResponseSchema: GenMessage<ListParticipantsResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 57);

/**
 * イベント参加者ステータス更新リクエスト
 *
 * @generated from message avion.community.v1.UpdateParticipantStatusRequest
 */
export type UpdateParticipantStatusRequest = Message<"avion.community.v1.UpdateParticipantStatusRequest"> & {
  /**
   * イベントID
   *
   * @generated from field: string event_id = 1;
   */
  eventId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 新しいステータス
   *
   * @generated from field: avion.community.v1.ParticipantStatus status = 3;
   */
  status: ParticipantStatus;

  /**
   * コメント
   *
   * @generated from field: string comment = 4;
   */
  comment: string;
};

/**
 * Describes the message avion.community.v1.UpdateParticipantStatusRequest.
 * Use `create(UpdateParticipantStatusRequestSchema)` to create a new message.
 */
export const UpdateParticipantStatusRequestSchema: GenMessage<UpdateParticipantStatusRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 58);

/**
 * イベント参加者ステータス更新レスポンス
 *
 * @generated from message avion.community.v1.UpdateParticipantStatusResponse
 */
export type UpdateParticipantStatusResponse = Message<"avion.community.v1.UpdateParticipantStatusResponse"> & {
  /**
   * 更新された参加者情報
   *
   * @generated from field: avion.community.v1.Participant participant = 1;
   */
  participant?: Participant;
};

/**
 * Describes the message avion.community.v1.UpdateParticipantStatusResponse.
 * Use `create(UpdateParticipantStatusResponseSchema)` to create a new message.
 */
export const UpdateParticipantStatusResponseSchema: GenMessage<UpdateParticipantStatusResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 59);

/**
 * チャンネル作成リクエスト
 *
 * @generated from message avion.community.v1.CreateChannelRequest
 */
export type CreateChannelRequest = Message<"avion.community.v1.CreateChannelRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * チャンネル名
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * チャンネルの説明
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * チャンネルタイプ
   *
   * @generated from field: avion.community.v1.ChannelType type = 4;
   */
  type: ChannelType;

  /**
   * 表示順序
   *
   * @generated from field: int32 position = 5;
   */
  position: number;

  /**
   * チャンネル設定
   *
   * @generated from field: avion.community.v1.ChannelSettings settings = 6;
   */
  settings?: ChannelSettings;
};

/**
 * Describes the message avion.community.v1.CreateChannelRequest.
 * Use `create(CreateChannelRequestSchema)` to create a new message.
 */
export const CreateChannelRequestSchema: GenMessage<CreateChannelRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 60);

/**
 * チャンネル作成レスポンス
 *
 * @generated from message avion.community.v1.CreateChannelResponse
 */
export type CreateChannelResponse = Message<"avion.community.v1.CreateChannelResponse"> & {
  /**
   * 作成されたチャンネル
   *
   * @generated from field: avion.community.v1.Channel channel = 1;
   */
  channel?: Channel;
};

/**
 * Describes the message avion.community.v1.CreateChannelResponse.
 * Use `create(CreateChannelResponseSchema)` to create a new message.
 */
export const CreateChannelResponseSchema: GenMessage<CreateChannelResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 61);

/**
 * チャンネル取得リクエスト
 *
 * @generated from message avion.community.v1.GetChannelRequest
 */
export type GetChannelRequest = Message<"avion.community.v1.GetChannelRequest"> & {
  /**
   * チャンネルID
   *
   * @generated from field: string channel_id = 1;
   */
  channelId: string;
};

/**
 * Describes the message avion.community.v1.GetChannelRequest.
 * Use `create(GetChannelRequestSchema)` to create a new message.
 */
export const GetChannelRequestSchema: GenMessage<GetChannelRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 62);

/**
 * チャンネル取得レスポンス
 *
 * @generated from message avion.community.v1.GetChannelResponse
 */
export type GetChannelResponse = Message<"avion.community.v1.GetChannelResponse"> & {
  /**
   * チャンネル情報
   *
   * @generated from field: avion.community.v1.Channel channel = 1;
   */
  channel?: Channel;
};

/**
 * Describes the message avion.community.v1.GetChannelResponse.
 * Use `create(GetChannelResponseSchema)` to create a new message.
 */
export const GetChannelResponseSchema: GenMessage<GetChannelResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 63);

/**
 * チャンネル更新リクエスト
 *
 * @generated from message avion.community.v1.UpdateChannelRequest
 */
export type UpdateChannelRequest = Message<"avion.community.v1.UpdateChannelRequest"> & {
  /**
   * チャンネルID
   *
   * @generated from field: string channel_id = 1;
   */
  channelId: string;

  /**
   * 更新するフィールドのマスク
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * チャンネル情報
   *
   * @generated from field: avion.community.v1.Channel channel = 3;
   */
  channel?: Channel;

  /**
   * チャンネル設定
   *
   * @generated from field: avion.community.v1.ChannelSettings settings = 4;
   */
  settings?: ChannelSettings;
};

/**
 * Describes the message avion.community.v1.UpdateChannelRequest.
 * Use `create(UpdateChannelRequestSchema)` to create a new message.
 */
export const UpdateChannelRequestSchema: GenMessage<UpdateChannelRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 64);

/**
 * チャンネル更新レスポンス
 *
 * @generated from message avion.community.v1.UpdateChannelResponse
 */
export type UpdateChannelResponse = Message<"avion.community.v1.UpdateChannelResponse"> & {
  /**
   * 更新されたチャンネル
   *
   * @generated from field: avion.community.v1.Channel channel = 1;
   */
  channel?: Channel;
};

/**
 * Describes the message avion.community.v1.UpdateChannelResponse.
 * Use `create(UpdateChannelResponseSchema)` to create a new message.
 */
export const UpdateChannelResponseSchema: GenMessage<UpdateChannelResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 65);

/**
 * チャンネル削除リクエスト
 *
 * @generated from message avion.community.v1.DeleteChannelRequest
 */
export type DeleteChannelRequest = Message<"avion.community.v1.DeleteChannelRequest"> & {
  /**
   * チャンネルID
   *
   * @generated from field: string channel_id = 1;
   */
  channelId: string;
};

/**
 * Describes the message avion.community.v1.DeleteChannelRequest.
 * Use `create(DeleteChannelRequestSchema)` to create a new message.
 */
export const DeleteChannelRequestSchema: GenMessage<DeleteChannelRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 66);

/**
 * チャンネル削除レスポンス
 *
 * @generated from message avion.community.v1.DeleteChannelResponse
 */
export type DeleteChannelResponse = Message<"avion.community.v1.DeleteChannelResponse"> & {
  /**
   * 削除成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.community.v1.DeleteChannelResponse.
 * Use `create(DeleteChannelResponseSchema)` to create a new message.
 */
export const DeleteChannelResponseSchema: GenMessage<DeleteChannelResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 67);

/**
 * チャンネル一覧取得リクエスト
 *
 * @generated from message avion.community.v1.ListChannelsRequest
 */
export type ListChannelsRequest = Message<"avion.community.v1.ListChannelsRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * フィルター条件
   *
   * @generated from field: avion.community.v1.ListChannelsFilter filter = 2;
   */
  filter?: ListChannelsFilter;
};

/**
 * Describes the message avion.community.v1.ListChannelsRequest.
 * Use `create(ListChannelsRequestSchema)` to create a new message.
 */
export const ListChannelsRequestSchema: GenMessage<ListChannelsRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 68);

/**
 * チャンネル一覧フィルター
 *
 * @generated from message avion.community.v1.ListChannelsFilter
 */
export type ListChannelsFilter = Message<"avion.community.v1.ListChannelsFilter"> & {
  /**
   * チャンネルタイプでフィルター
   *
   * @generated from field: avion.community.v1.ChannelType type = 1;
   */
  type: ChannelType;

  /**
   * アーカイブ済みを含むか
   *
   * @generated from field: bool include_archived = 2;
   */
  includeArchived: boolean;
};

/**
 * Describes the message avion.community.v1.ListChannelsFilter.
 * Use `create(ListChannelsFilterSchema)` to create a new message.
 */
export const ListChannelsFilterSchema: GenMessage<ListChannelsFilter> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 69);

/**
 * チャンネル一覧取得レスポンス
 *
 * @generated from message avion.community.v1.ListChannelsResponse
 */
export type ListChannelsResponse = Message<"avion.community.v1.ListChannelsResponse"> & {
  /**
   * チャンネルリスト
   *
   * @generated from field: repeated avion.community.v1.Channel channels = 1;
   */
  channels: Channel[];
};

/**
 * Describes the message avion.community.v1.ListChannelsResponse.
 * Use `create(ListChannelsResponseSchema)` to create a new message.
 */
export const ListChannelsResponseSchema: GenMessage<ListChannelsResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 70);

/**
 * チャンネル並び替えリクエスト
 *
 * @generated from message avion.community.v1.ReorderChannelsRequest
 */
export type ReorderChannelsRequest = Message<"avion.community.v1.ReorderChannelsRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * チャンネルIDと新しい位置のマッピング
   *
   * @generated from field: map<string, int32> channel_positions = 2;
   */
  channelPositions: { [key: string]: number };
};

/**
 * Describes the message avion.community.v1.ReorderChannelsRequest.
 * Use `create(ReorderChannelsRequestSchema)` to create a new message.
 */
export const ReorderChannelsRequestSchema: GenMessage<ReorderChannelsRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 71);

/**
 * チャンネル並び替えレスポンス
 *
 * @generated from message avion.community.v1.ReorderChannelsResponse
 */
export type ReorderChannelsResponse = Message<"avion.community.v1.ReorderChannelsResponse"> & {
  /**
   * 並び替え後のチャンネルリスト
   *
   * @generated from field: repeated avion.community.v1.Channel channels = 1;
   */
  channels: Channel[];
};

/**
 * Describes the message avion.community.v1.ReorderChannelsResponse.
 * Use `create(ReorderChannelsResponseSchema)` to create a new message.
 */
export const ReorderChannelsResponseSchema: GenMessage<ReorderChannelsResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 72);

/**
 * 役割作成リクエスト
 *
 * @generated from message avion.community.v1.CreateRoleRequest
 */
export type CreateRoleRequest = Message<"avion.community.v1.CreateRoleRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * 役割名
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * 役割の説明
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * 色（16進数カラーコード）
   *
   * @generated from field: string color = 4;
   */
  color: string;

  /**
   * 表示順序
   *
   * @generated from field: int32 position = 5;
   */
  position: number;

  /**
   * 権限リスト
   *
   * @generated from field: repeated avion.community.v1.Permission permissions = 6;
   */
  permissions: Permission[];

  /**
   * メンション可能か
   *
   * @generated from field: bool mentionable = 7;
   */
  mentionable: boolean;
};

/**
 * Describes the message avion.community.v1.CreateRoleRequest.
 * Use `create(CreateRoleRequestSchema)` to create a new message.
 */
export const CreateRoleRequestSchema: GenMessage<CreateRoleRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 73);

/**
 * 役割作成レスポンス
 *
 * @generated from message avion.community.v1.CreateRoleResponse
 */
export type CreateRoleResponse = Message<"avion.community.v1.CreateRoleResponse"> & {
  /**
   * 作成された役割
   *
   * @generated from field: avion.community.v1.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message avion.community.v1.CreateRoleResponse.
 * Use `create(CreateRoleResponseSchema)` to create a new message.
 */
export const CreateRoleResponseSchema: GenMessage<CreateRoleResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 74);

/**
 * 役割取得リクエスト
 *
 * @generated from message avion.community.v1.GetRoleRequest
 */
export type GetRoleRequest = Message<"avion.community.v1.GetRoleRequest"> & {
  /**
   * 役割ID
   *
   * @generated from field: string role_id = 1;
   */
  roleId: string;
};

/**
 * Describes the message avion.community.v1.GetRoleRequest.
 * Use `create(GetRoleRequestSchema)` to create a new message.
 */
export const GetRoleRequestSchema: GenMessage<GetRoleRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 75);

/**
 * 役割取得レスポンス
 *
 * @generated from message avion.community.v1.GetRoleResponse
 */
export type GetRoleResponse = Message<"avion.community.v1.GetRoleResponse"> & {
  /**
   * 役割情報
   *
   * @generated from field: avion.community.v1.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message avion.community.v1.GetRoleResponse.
 * Use `create(GetRoleResponseSchema)` to create a new message.
 */
export const GetRoleResponseSchema: GenMessage<GetRoleResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 76);

/**
 * 役割更新リクエスト
 *
 * @generated from message avion.community.v1.UpdateRoleRequest
 */
export type UpdateRoleRequest = Message<"avion.community.v1.UpdateRoleRequest"> & {
  /**
   * 役割ID
   *
   * @generated from field: string role_id = 1;
   */
  roleId: string;

  /**
   * 更新するフィールドのマスク
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * 役割情報
   *
   * @generated from field: avion.community.v1.Role role = 3;
   */
  role?: Role;
};

/**
 * Describes the message avion.community.v1.UpdateRoleRequest.
 * Use `create(UpdateRoleRequestSchema)` to create a new message.
 */
export const UpdateRoleRequestSchema: GenMessage<UpdateRoleRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 77);

/**
 * 役割更新レスポンス
 *
 * @generated from message avion.community.v1.UpdateRoleResponse
 */
export type UpdateRoleResponse = Message<"avion.community.v1.UpdateRoleResponse"> & {
  /**
   * 更新された役割
   *
   * @generated from field: avion.community.v1.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message avion.community.v1.UpdateRoleResponse.
 * Use `create(UpdateRoleResponseSchema)` to create a new message.
 */
export const UpdateRoleResponseSchema: GenMessage<UpdateRoleResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 78);

/**
 * 役割削除リクエスト
 *
 * @generated from message avion.community.v1.DeleteRoleRequest
 */
export type DeleteRoleRequest = Message<"avion.community.v1.DeleteRoleRequest"> & {
  /**
   * 役割ID
   *
   * @generated from field: string role_id = 1;
   */
  roleId: string;
};

/**
 * Describes the message avion.community.v1.DeleteRoleRequest.
 * Use `create(DeleteRoleRequestSchema)` to create a new message.
 */
export const DeleteRoleRequestSchema: GenMessage<DeleteRoleRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 79);

/**
 * 役割削除レスポンス
 *
 * @generated from message avion.community.v1.DeleteRoleResponse
 */
export type DeleteRoleResponse = Message<"avion.community.v1.DeleteRoleResponse"> & {
  /**
   * 削除成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.community.v1.DeleteRoleResponse.
 * Use `create(DeleteRoleResponseSchema)` to create a new message.
 */
export const DeleteRoleResponseSchema: GenMessage<DeleteRoleResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 80);

/**
 * 役割一覧取得リクエスト
 *
 * @generated from message avion.community.v1.ListRolesRequest
 */
export type ListRolesRequest = Message<"avion.community.v1.ListRolesRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;
};

/**
 * Describes the message avion.community.v1.ListRolesRequest.
 * Use `create(ListRolesRequestSchema)` to create a new message.
 */
export const ListRolesRequestSchema: GenMessage<ListRolesRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 81);

/**
 * 役割一覧取得レスポンス
 *
 * @generated from message avion.community.v1.ListRolesResponse
 */
export type ListRolesResponse = Message<"avion.community.v1.ListRolesResponse"> & {
  /**
   * 役割リスト（表示順序でソート済み）
   *
   * @generated from field: repeated avion.community.v1.Role roles = 1;
   */
  roles: Role[];
};

/**
 * Describes the message avion.community.v1.ListRolesResponse.
 * Use `create(ListRolesResponseSchema)` to create a new message.
 */
export const ListRolesResponseSchema: GenMessage<ListRolesResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 82);

/**
 * 役割メンバー一覧取得リクエスト
 *
 * @generated from message avion.community.v1.ListRoleMembersRequest
 */
export type ListRoleMembersRequest = Message<"avion.community.v1.ListRoleMembersRequest"> & {
  /**
   * 役割ID
   *
   * @generated from field: string role_id = 1;
   */
  roleId: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;
};

/**
 * Describes the message avion.community.v1.ListRoleMembersRequest.
 * Use `create(ListRoleMembersRequestSchema)` to create a new message.
 */
export const ListRoleMembersRequestSchema: GenMessage<ListRoleMembersRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 83);

/**
 * 役割メンバー一覧取得レスポンス
 *
 * @generated from message avion.community.v1.ListRoleMembersResponse
 */
export type ListRoleMembersResponse = Message<"avion.community.v1.ListRoleMembersResponse"> & {
  /**
   * メンバーリスト
   *
   * @generated from field: repeated avion.community.v1.Member members = 1;
   */
  members: Member[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.community.v1.ListRoleMembersResponse.
 * Use `create(ListRoleMembersResponseSchema)` to create a new message.
 */
export const ListRoleMembersResponseSchema: GenMessage<ListRoleMembersResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 84);

/**
 * 招待作成リクエスト
 *
 * @generated from message avion.community.v1.CreateInviteRequest
 */
export type CreateInviteRequest = Message<"avion.community.v1.CreateInviteRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * 作成者ID
   *
   * @generated from field: string creator_id = 2;
   */
  creatorId: string;

  /**
   * 有効期限（秒）
   *
   * @generated from field: int32 expires_in = 3;
   */
  expiresIn: number;

  /**
   * 使用回数上限
   *
   * @generated from field: int32 max_uses = 4;
   */
  maxUses: number;
};

/**
 * Describes the message avion.community.v1.CreateInviteRequest.
 * Use `create(CreateInviteRequestSchema)` to create a new message.
 */
export const CreateInviteRequestSchema: GenMessage<CreateInviteRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 85);

/**
 * 招待作成レスポンス
 *
 * @generated from message avion.community.v1.CreateInviteResponse
 */
export type CreateInviteResponse = Message<"avion.community.v1.CreateInviteResponse"> & {
  /**
   * 作成された招待
   *
   * @generated from field: avion.community.v1.GroupInvite invite = 1;
   */
  invite?: GroupInvite;
};

/**
 * Describes the message avion.community.v1.CreateInviteResponse.
 * Use `create(CreateInviteResponseSchema)` to create a new message.
 */
export const CreateInviteResponseSchema: GenMessage<CreateInviteResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 86);

/**
 * 招待取得リクエスト
 *
 * @generated from message avion.community.v1.GetInviteRequest
 */
export type GetInviteRequest = Message<"avion.community.v1.GetInviteRequest"> & {
  /**
   * 招待コード
   *
   * @generated from field: string code = 1;
   */
  code: string;
};

/**
 * Describes the message avion.community.v1.GetInviteRequest.
 * Use `create(GetInviteRequestSchema)` to create a new message.
 */
export const GetInviteRequestSchema: GenMessage<GetInviteRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 87);

/**
 * 招待取得レスポンス
 *
 * @generated from message avion.community.v1.GetInviteResponse
 */
export type GetInviteResponse = Message<"avion.community.v1.GetInviteResponse"> & {
  /**
   * 招待情報
   *
   * @generated from field: avion.community.v1.GroupInvite invite = 1;
   */
  invite?: GroupInvite;

  /**
   * グループ情報
   *
   * @generated from field: avion.community.v1.Group group = 2;
   */
  group?: Group;
};

/**
 * Describes the message avion.community.v1.GetInviteResponse.
 * Use `create(GetInviteResponseSchema)` to create a new message.
 */
export const GetInviteResponseSchema: GenMessage<GetInviteResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 88);

/**
 * 招待削除リクエスト
 *
 * @generated from message avion.community.v1.RevokeInviteRequest
 */
export type RevokeInviteRequest = Message<"avion.community.v1.RevokeInviteRequest"> & {
  /**
   * 招待ID
   *
   * @generated from field: string invite_id = 1;
   */
  inviteId: string;
};

/**
 * Describes the message avion.community.v1.RevokeInviteRequest.
 * Use `create(RevokeInviteRequestSchema)` to create a new message.
 */
export const RevokeInviteRequestSchema: GenMessage<RevokeInviteRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 89);

/**
 * 招待削除レスポンス
 *
 * @generated from message avion.community.v1.RevokeInviteResponse
 */
export type RevokeInviteResponse = Message<"avion.community.v1.RevokeInviteResponse"> & {
  /**
   * 削除成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.community.v1.RevokeInviteResponse.
 * Use `create(RevokeInviteResponseSchema)` to create a new message.
 */
export const RevokeInviteResponseSchema: GenMessage<RevokeInviteResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 90);

/**
 * 招待一覧取得リクエスト
 *
 * @generated from message avion.community.v1.ListInvitesRequest
 */
export type ListInvitesRequest = Message<"avion.community.v1.ListInvitesRequest"> & {
  /**
   * グループID
   *
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * アクティブな招待のみ
   *
   * @generated from field: bool active_only = 3;
   */
  activeOnly: boolean;
};

/**
 * Describes the message avion.community.v1.ListInvitesRequest.
 * Use `create(ListInvitesRequestSchema)` to create a new message.
 */
export const ListInvitesRequestSchema: GenMessage<ListInvitesRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 91);

/**
 * 招待一覧取得レスポンス
 *
 * @generated from message avion.community.v1.ListInvitesResponse
 */
export type ListInvitesResponse = Message<"avion.community.v1.ListInvitesResponse"> & {
  /**
   * 招待リスト
   *
   * @generated from field: repeated avion.community.v1.GroupInvite invites = 1;
   */
  invites: GroupInvite[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.community.v1.ListInvitesResponse.
 * Use `create(ListInvitesResponseSchema)` to create a new message.
 */
export const ListInvitesResponseSchema: GenMessage<ListInvitesResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 92);

/**
 * 招待使用リクエスト
 *
 * @generated from message avion.community.v1.UseInviteRequest
 */
export type UseInviteRequest = Message<"avion.community.v1.UseInviteRequest"> & {
  /**
   * 招待コード
   *
   * @generated from field: string code = 1;
   */
  code: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;
};

/**
 * Describes the message avion.community.v1.UseInviteRequest.
 * Use `create(UseInviteRequestSchema)` to create a new message.
 */
export const UseInviteRequestSchema: GenMessage<UseInviteRequest> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 93);

/**
 * 招待使用レスポンス
 *
 * @generated from message avion.community.v1.UseInviteResponse
 */
export type UseInviteResponse = Message<"avion.community.v1.UseInviteResponse"> & {
  /**
   * グループ情報
   *
   * @generated from field: avion.community.v1.Group group = 1;
   */
  group?: Group;

  /**
   * メンバー情報
   *
   * @generated from field: avion.community.v1.Member member = 2;
   */
  member?: Member;
};

/**
 * Describes the message avion.community.v1.UseInviteResponse.
 * Use `create(UseInviteResponseSchema)` to create a new message.
 */
export const UseInviteResponseSchema: GenMessage<UseInviteResponse> = /*@__PURE__*/
  messageDesc(file_avion_community_v1_community_service, 94);

/**
 * コミュニティサービス
 *
 * @generated from service avion.community.v1.CommunityService
 */
export const CommunityService: GenService<{
  /**
   * グループ管理
   * グループ作成
   *
   * @generated from rpc avion.community.v1.CommunityService.CreateGroup
   */
  createGroup: {
    methodKind: "unary";
    input: typeof CreateGroupRequestSchema;
    output: typeof CreateGroupResponseSchema;
  },
  /**
   * グループ取得
   *
   * @generated from rpc avion.community.v1.CommunityService.GetGroup
   */
  getGroup: {
    methodKind: "unary";
    input: typeof GetGroupRequestSchema;
    output: typeof GetGroupResponseSchema;
  },
  /**
   * グループ更新
   *
   * @generated from rpc avion.community.v1.CommunityService.UpdateGroup
   */
  updateGroup: {
    methodKind: "unary";
    input: typeof UpdateGroupRequestSchema;
    output: typeof UpdateGroupResponseSchema;
  },
  /**
   * グループ削除
   *
   * @generated from rpc avion.community.v1.CommunityService.DeleteGroup
   */
  deleteGroup: {
    methodKind: "unary";
    input: typeof DeleteGroupRequestSchema;
    output: typeof DeleteGroupResponseSchema;
  },
  /**
   * グループ一覧取得
   *
   * @generated from rpc avion.community.v1.CommunityService.ListGroups
   */
  listGroups: {
    methodKind: "unary";
    input: typeof ListGroupsRequestSchema;
    output: typeof ListGroupsResponseSchema;
  },
  /**
   * グループ検索
   *
   * @generated from rpc avion.community.v1.CommunityService.SearchGroups
   */
  searchGroups: {
    methodKind: "unary";
    input: typeof SearchGroupsRequestSchema;
    output: typeof SearchGroupsResponseSchema;
  },
  /**
   * グループ統計取得
   *
   * @generated from rpc avion.community.v1.CommunityService.GetGroupStats
   */
  getGroupStats: {
    methodKind: "unary";
    input: typeof GetGroupStatsRequestSchema;
    output: typeof GetGroupStatsResponseSchema;
  },
  /**
   * メンバー管理
   * メンバー追加（参加）
   *
   * @generated from rpc avion.community.v1.CommunityService.JoinGroup
   */
  joinGroup: {
    methodKind: "unary";
    input: typeof JoinGroupRequestSchema;
    output: typeof JoinGroupResponseSchema;
  },
  /**
   * メンバー削除（退出）
   *
   * @generated from rpc avion.community.v1.CommunityService.LeaveGroup
   */
  leaveGroup: {
    methodKind: "unary";
    input: typeof LeaveGroupRequestSchema;
    output: typeof LeaveGroupResponseSchema;
  },
  /**
   * メンバー招待
   *
   * @generated from rpc avion.community.v1.CommunityService.InviteMember
   */
  inviteMember: {
    methodKind: "unary";
    input: typeof InviteMemberRequestSchema;
    output: typeof InviteMemberResponseSchema;
  },
  /**
   * メンバー追放
   *
   * @generated from rpc avion.community.v1.CommunityService.RemoveMember
   */
  removeMember: {
    methodKind: "unary";
    input: typeof RemoveMemberRequestSchema;
    output: typeof RemoveMemberResponseSchema;
  },
  /**
   * メンバー役割更新
   *
   * @generated from rpc avion.community.v1.CommunityService.UpdateMemberRole
   */
  updateMemberRole: {
    methodKind: "unary";
    input: typeof UpdateMemberRoleRequestSchema;
    output: typeof UpdateMemberRoleResponseSchema;
  },
  /**
   * メンバー一覧取得
   *
   * @generated from rpc avion.community.v1.CommunityService.ListMembers
   */
  listMembers: {
    methodKind: "unary";
    input: typeof ListMembersRequestSchema;
    output: typeof ListMembersResponseSchema;
  },
  /**
   * メンバー取得
   *
   * @generated from rpc avion.community.v1.CommunityService.GetMember
   */
  getMember: {
    methodKind: "unary";
    input: typeof GetMemberRequestSchema;
    output: typeof GetMemberResponseSchema;
  },
  /**
   * 参加申請承認
   *
   * @generated from rpc avion.community.v1.CommunityService.ApproveMember
   */
  approveMember: {
    methodKind: "unary";
    input: typeof ApproveMemberRequestSchema;
    output: typeof ApproveMemberResponseSchema;
  },
  /**
   * 参加申請拒否
   *
   * @generated from rpc avion.community.v1.CommunityService.RejectMember
   */
  rejectMember: {
    methodKind: "unary";
    input: typeof RejectMemberRequestSchema;
    output: typeof RejectMemberResponseSchema;
  },
  /**
   * イベント管理
   * イベント作成
   *
   * @generated from rpc avion.community.v1.CommunityService.CreateEvent
   */
  createEvent: {
    methodKind: "unary";
    input: typeof CreateEventRequestSchema;
    output: typeof CreateEventResponseSchema;
  },
  /**
   * イベント取得
   *
   * @generated from rpc avion.community.v1.CommunityService.GetEvent
   */
  getEvent: {
    methodKind: "unary";
    input: typeof GetEventRequestSchema;
    output: typeof GetEventResponseSchema;
  },
  /**
   * イベント更新
   *
   * @generated from rpc avion.community.v1.CommunityService.UpdateEvent
   */
  updateEvent: {
    methodKind: "unary";
    input: typeof UpdateEventRequestSchema;
    output: typeof UpdateEventResponseSchema;
  },
  /**
   * イベント削除
   *
   * @generated from rpc avion.community.v1.CommunityService.DeleteEvent
   */
  deleteEvent: {
    methodKind: "unary";
    input: typeof DeleteEventRequestSchema;
    output: typeof DeleteEventResponseSchema;
  },
  /**
   * イベント一覧取得
   *
   * @generated from rpc avion.community.v1.CommunityService.ListEvents
   */
  listEvents: {
    methodKind: "unary";
    input: typeof ListEventsRequestSchema;
    output: typeof ListEventsResponseSchema;
  },
  /**
   * イベント検索
   *
   * @generated from rpc avion.community.v1.CommunityService.SearchEvents
   */
  searchEvents: {
    methodKind: "unary";
    input: typeof SearchEventsRequestSchema;
    output: typeof SearchEventsResponseSchema;
  },
  /**
   * イベント参加
   *
   * @generated from rpc avion.community.v1.CommunityService.JoinEvent
   */
  joinEvent: {
    methodKind: "unary";
    input: typeof JoinEventRequestSchema;
    output: typeof JoinEventResponseSchema;
  },
  /**
   * イベント参加キャンセル
   *
   * @generated from rpc avion.community.v1.CommunityService.LeaveEvent
   */
  leaveEvent: {
    methodKind: "unary";
    input: typeof LeaveEventRequestSchema;
    output: typeof LeaveEventResponseSchema;
  },
  /**
   * イベント参加者一覧取得
   *
   * @generated from rpc avion.community.v1.CommunityService.ListParticipants
   */
  listParticipants: {
    methodKind: "unary";
    input: typeof ListParticipantsRequestSchema;
    output: typeof ListParticipantsResponseSchema;
  },
  /**
   * イベント参加者ステータス更新
   *
   * @generated from rpc avion.community.v1.CommunityService.UpdateParticipantStatus
   */
  updateParticipantStatus: {
    methodKind: "unary";
    input: typeof UpdateParticipantStatusRequestSchema;
    output: typeof UpdateParticipantStatusResponseSchema;
  },
  /**
   * チャンネル管理
   * チャンネル作成
   *
   * @generated from rpc avion.community.v1.CommunityService.CreateChannel
   */
  createChannel: {
    methodKind: "unary";
    input: typeof CreateChannelRequestSchema;
    output: typeof CreateChannelResponseSchema;
  },
  /**
   * チャンネル取得
   *
   * @generated from rpc avion.community.v1.CommunityService.GetChannel
   */
  getChannel: {
    methodKind: "unary";
    input: typeof GetChannelRequestSchema;
    output: typeof GetChannelResponseSchema;
  },
  /**
   * チャンネル更新
   *
   * @generated from rpc avion.community.v1.CommunityService.UpdateChannel
   */
  updateChannel: {
    methodKind: "unary";
    input: typeof UpdateChannelRequestSchema;
    output: typeof UpdateChannelResponseSchema;
  },
  /**
   * チャンネル削除
   *
   * @generated from rpc avion.community.v1.CommunityService.DeleteChannel
   */
  deleteChannel: {
    methodKind: "unary";
    input: typeof DeleteChannelRequestSchema;
    output: typeof DeleteChannelResponseSchema;
  },
  /**
   * チャンネル一覧取得
   *
   * @generated from rpc avion.community.v1.CommunityService.ListChannels
   */
  listChannels: {
    methodKind: "unary";
    input: typeof ListChannelsRequestSchema;
    output: typeof ListChannelsResponseSchema;
  },
  /**
   * チャンネル並び替え
   *
   * @generated from rpc avion.community.v1.CommunityService.ReorderChannels
   */
  reorderChannels: {
    methodKind: "unary";
    input: typeof ReorderChannelsRequestSchema;
    output: typeof ReorderChannelsResponseSchema;
  },
  /**
   * 役割管理
   * 役割作成
   *
   * @generated from rpc avion.community.v1.CommunityService.CreateRole
   */
  createRole: {
    methodKind: "unary";
    input: typeof CreateRoleRequestSchema;
    output: typeof CreateRoleResponseSchema;
  },
  /**
   * 役割取得
   *
   * @generated from rpc avion.community.v1.CommunityService.GetRole
   */
  getRole: {
    methodKind: "unary";
    input: typeof GetRoleRequestSchema;
    output: typeof GetRoleResponseSchema;
  },
  /**
   * 役割更新
   *
   * @generated from rpc avion.community.v1.CommunityService.UpdateRole
   */
  updateRole: {
    methodKind: "unary";
    input: typeof UpdateRoleRequestSchema;
    output: typeof UpdateRoleResponseSchema;
  },
  /**
   * 役割削除
   *
   * @generated from rpc avion.community.v1.CommunityService.DeleteRole
   */
  deleteRole: {
    methodKind: "unary";
    input: typeof DeleteRoleRequestSchema;
    output: typeof DeleteRoleResponseSchema;
  },
  /**
   * 役割一覧取得
   *
   * @generated from rpc avion.community.v1.CommunityService.ListRoles
   */
  listRoles: {
    methodKind: "unary";
    input: typeof ListRolesRequestSchema;
    output: typeof ListRolesResponseSchema;
  },
  /**
   * 役割メンバー一覧取得
   *
   * @generated from rpc avion.community.v1.CommunityService.ListRoleMembers
   */
  listRoleMembers: {
    methodKind: "unary";
    input: typeof ListRoleMembersRequestSchema;
    output: typeof ListRoleMembersResponseSchema;
  },
  /**
   * 招待管理
   * 招待作成
   *
   * @generated from rpc avion.community.v1.CommunityService.CreateInvite
   */
  createInvite: {
    methodKind: "unary";
    input: typeof CreateInviteRequestSchema;
    output: typeof CreateInviteResponseSchema;
  },
  /**
   * 招待取得
   *
   * @generated from rpc avion.community.v1.CommunityService.GetInvite
   */
  getInvite: {
    methodKind: "unary";
    input: typeof GetInviteRequestSchema;
    output: typeof GetInviteResponseSchema;
  },
  /**
   * 招待削除
   *
   * @generated from rpc avion.community.v1.CommunityService.RevokeInvite
   */
  revokeInvite: {
    methodKind: "unary";
    input: typeof RevokeInviteRequestSchema;
    output: typeof RevokeInviteResponseSchema;
  },
  /**
   * 招待一覧取得
   *
   * @generated from rpc avion.community.v1.CommunityService.ListInvites
   */
  listInvites: {
    methodKind: "unary";
    input: typeof ListInvitesRequestSchema;
    output: typeof ListInvitesResponseSchema;
  },
  /**
   * 招待使用
   *
   * @generated from rpc avion.community.v1.CommunityService.UseInvite
   */
  useInvite: {
    methodKind: "unary";
    input: typeof UseInviteRequestSchema;
    output: typeof UseInviteResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_avion_community_v1_community_service, 0);

