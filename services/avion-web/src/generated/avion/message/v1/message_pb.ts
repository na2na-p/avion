// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file avion/message/v1/message.proto (package avion.message.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message as Message$1 } from "@bufbuild/protobuf";

/**
 * Describes the file avion/message/v1/message.proto.
 */
export const file_avion_message_v1_message: GenFile = /*@__PURE__*/
  fileDesc("Ch5hdmlvbi9tZXNzYWdlL3YxL21lc3NhZ2UucHJvdG8SEGF2aW9uLm1lc3NhZ2UudjEiwwYKB01lc3NhZ2USCgoCaWQYASABKAkSFwoPY29udmVyc2F0aW9uX2lkGAIgASgJEhEKCXNlbmRlcl9pZBgDIAEoCRIPCgdjb250ZW50GAQgASgJEi8KBnN0YXR1cxgFIAEoDjIfLmF2aW9uLm1lc3NhZ2UudjEuTWVzc2FnZVN0YXR1cxIuCgpjcmVhdGVkX2F0GAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgp1cGRhdGVkX2F0GAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgpkZWxldGVkX2F0GAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIRCglpc19lZGl0ZWQYCSABKAgSLQoJZWRpdGVkX2F0GAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIbChNyZXBseV90b19tZXNzYWdlX2lkGAsgASgJEiEKGWZvcndhcmRlZF9mcm9tX21lc3NhZ2VfaWQYDCABKAkSOAoLYXR0YWNobWVudHMYDSADKAsyIy5hdmlvbi5tZXNzYWdlLnYxLk1lc3NhZ2VBdHRhY2htZW50EhoKEm1lbnRpb25lZF91c2VyX2lkcxgOIAMoCRI5Cg9lbmNyeXB0aW9uX3R5cGUYDyABKA4yIC5hdmlvbi5tZXNzYWdlLnYxLkVuY3J5cHRpb25UeXBlEkEKE2VuY3J5cHRpb25fbWV0YWRhdGEYECABKAsyJC5hdmlvbi5tZXNzYWdlLnYxLkVuY3J5cHRpb25NZXRhZGF0YRI0CglyZWFjdGlvbnMYESADKAsyIS5hdmlvbi5tZXNzYWdlLnYxLk1lc3NhZ2VSZWFjdGlvbhIZChFpc19zeXN0ZW1fbWVzc2FnZRgSIAEoCBIbChNzeXN0ZW1fbWVzc2FnZV90eXBlGBMgASgJEjkKCG1ldGFkYXRhGBQgAygLMicuYXZpb24ubWVzc2FnZS52MS5NZXNzYWdlLk1ldGFkYXRhRW50cnkaLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIuwFCgxDb252ZXJzYXRpb24SCgoCaWQYASABKAkSMAoEdHlwZRgCIAEoDjIiLmF2aW9uLm1lc3NhZ2UudjEuQ29udmVyc2F0aW9uVHlwZRINCgV0aXRsZRgDIAEoCRITCgtkZXNjcmlwdGlvbhgEIAEoCRIQCghpY29uX3VybBgFIAEoCRIXCg9wYXJ0aWNpcGFudF9pZHMYBiADKAkSPwoMcGFydGljaXBhbnRzGAcgAygLMikuYXZpb24ubWVzc2FnZS52MS5Db252ZXJzYXRpb25QYXJ0aWNpcGFudBISCgpjcmVhdG9yX2lkGAggASgJEi8KDGxhc3RfbWVzc2FnZRgJIAEoCzIZLmF2aW9uLm1lc3NhZ2UudjEuTWVzc2FnZRIzCg9sYXN0X21lc3NhZ2VfYXQYCiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhQKDHVucmVhZF9jb3VudBgLIAEoBRIuCgpjcmVhdGVkX2F0GAwgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgp1cGRhdGVkX2F0GA0gASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBITCgtpc19hcmNoaXZlZBgOIAEoCBIQCghpc19tdXRlZBgPIAEoCBIRCglpc19waW5uZWQYECABKAgSOQoPZW5jcnlwdGlvbl90eXBlGBEgASgOMiAuYXZpb24ubWVzc2FnZS52MS5FbmNyeXB0aW9uVHlwZRI4CghzZXR0aW5ncxgSIAEoCzImLmF2aW9uLm1lc3NhZ2UudjEuQ29udmVyc2F0aW9uU2V0dGluZ3MSPgoIbWV0YWRhdGEYEyADKAsyLC5hdmlvbi5tZXNzYWdlLnYxLkNvbnZlcnNhdGlvbi5NZXRhZGF0YUVudHJ5Gi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLNAgoXQ29udmVyc2F0aW9uUGFydGljaXBhbnQSDwoHdXNlcl9pZBgBIAEoCRIQCgh1c2VybmFtZRgCIAEoCRIUCgxkaXNwbGF5X25hbWUYAyABKAkSEgoKYXZhdGFyX3VybBgEIAEoCRIMCgRyb2xlGAUgASgJEi0KCWpvaW5lZF9hdBgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASHAoUbGFzdF9yZWFkX21lc3NhZ2VfaWQYByABKAkSMAoMbGFzdF9yZWFkX2F0GAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIRCglpc19vbmxpbmUYCSABKAgSMgoObGFzdF9hY3RpdmVfYXQYCiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhEKCWlzX3R5cGluZxgLIAEoCCKZAgoUQ29udmVyc2F0aW9uU2V0dGluZ3MSGAoQYWxsb3dfbWVtYmVyX2FkZBgBIAEoCBIbChNhbGxvd19tZW1iZXJfcmVtb3ZlGAIgASgIEhoKEmFsbG93X21lc3NhZ2VfZWRpdBgDIAEoCBIcChRhbGxvd19tZXNzYWdlX2RlbGV0ZRgEIAEoCBIXCg9hbGxvd19yZWFjdGlvbnMYBSABKAgSGgoSYWxsb3dfZmlsZV9zaGFyaW5nGAYgASgIEhgKEG1heF9wYXJ0aWNpcGFudHMYByABKAUSHgoWbWVzc2FnZV9yZXRlbnRpb25fZGF5cxgIIAEoBRIhChlhdXRvX2RlbGV0ZV90aW1lcl9zZWNvbmRzGAkgASgFIpIDChFNZXNzYWdlQXR0YWNobWVudBIKCgJpZBgBIAEoCRISCgptZXNzYWdlX2lkGAIgASgJEi4KBHR5cGUYAyABKA4yIC5hdmlvbi5tZXNzYWdlLnYxLkF0dGFjaG1lbnRUeXBlEhAKCGZpbGVuYW1lGAQgASgJEhEKCW1pbWVfdHlwZRgFIAEoCRIMCgRzaXplGAYgASgDEgsKA3VybBgHIAEoCRIVCg10aHVtYm5haWxfdXJsGAggASgJEg0KBXdpZHRoGAkgASgFEg4KBmhlaWdodBgKIAEoBRIQCghkdXJhdGlvbhgLIAEoBRIvCgt1cGxvYWRlZF9hdBgMIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASQwoIbWV0YWRhdGEYDSADKAsyMS5hdmlvbi5tZXNzYWdlLnYxLk1lc3NhZ2VBdHRhY2htZW50Lk1ldGFkYXRhRW50cnkaLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBInIKC1JlYWRSZWNlaXB0EhIKCm1lc3NhZ2VfaWQYASABKAkSDwoHdXNlcl9pZBgCIAEoCRIrCgdyZWFkX2F0GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIRCglkZXZpY2VfaWQYBCABKAkifgoPVHlwaW5nSW5kaWNhdG9yEhcKD2NvbnZlcnNhdGlvbl9pZBgBIAEoCRIPCgd1c2VyX2lkGAIgASgJEi4KCnN0YXJ0ZWRfYXQYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhEKCWlzX3R5cGluZxgEIAEoCCK2AQoPTWVzc2FnZVJlYWN0aW9uEgoKAmlkGAEgASgJEhIKCm1lc3NhZ2VfaWQYAiABKAkSDwoHdXNlcl9pZBgDIAEoCRIsCgR0eXBlGAQgASgOMh4uYXZpb24ubWVzc2FnZS52MS5SZWFjdGlvblR5cGUSFAoMY3VzdG9tX2Vtb2ppGAUgASgJEi4KCmNyZWF0ZWRfYXQYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIrMCChJFbmNyeXB0aW9uTWV0YWRhdGESEQoJYWxnb3JpdGhtGAEgASgJEhUKDXB1YmxpY19rZXlfaWQYAiABKAkSEgoKc2Vzc2lvbl9pZBgDIAEoCRJeChZlbmNyeXB0ZWRfc2Vzc2lvbl9rZXlzGAQgAygLMj4uYXZpb24ubWVzc2FnZS52MS5FbmNyeXB0aW9uTWV0YWRhdGEuRW5jcnlwdGVkU2Vzc2lvbktleXNFbnRyeRIdChVpbml0aWFsaXphdGlvbl92ZWN0b3IYBSABKAkSIwobbWVzc2FnZV9hdXRoZW50aWNhdGlvbl9jb2RlGAYgASgJGjsKGUVuY3J5cHRlZFNlc3Npb25LZXlzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASKfAgoTTWVzc2FnZVNlYXJjaEZpbHRlchINCgVxdWVyeRgBIAEoCRIXCg9jb252ZXJzYXRpb25faWQYAiABKAkSEQoJc2VuZGVyX2lkGAMgASgJEi4KCnN0YXJ0X3RpbWUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiwKCGVuZF90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIXCg9oYXNfYXR0YWNobWVudHMYBiABKAgSOgoQYXR0YWNobWVudF90eXBlcxgHIAMoDjIgLmF2aW9uLm1lc3NhZ2UudjEuQXR0YWNobWVudFR5cGUSGgoSbWVudGlvbmVkX3VzZXJfaWRzGAggAygJIscBChFNZXNzYWdlU3RhdGlzdGljcxIXCg9jb252ZXJzYXRpb25faWQYASABKAkSFgoOdG90YWxfbWVzc2FnZXMYAiABKAMSGQoRdG90YWxfYXR0YWNobWVudHMYAyABKAMSFwoPdG90YWxfZmlsZV9zaXplGAQgASgDEhsKE2FjdGl2ZV9wYXJ0aWNpcGFudHMYBSABKAUSEQoJcGVha19ob3VyGAYgASgFEh0KFWF2ZXJhZ2VfcmVzcG9uc2VfdGltZRgHIAEoAyKCAgobTWVzc2FnZU5vdGlmaWNhdGlvblNldHRpbmdzEg8KB3VzZXJfaWQYASABKAkSGwoTbm90aWZ5X2FsbF9tZXNzYWdlcxgCIAEoCBIcChRub3RpZnlfbWVudGlvbnNfb25seRgDIAEoCBIeChZub3RpZnlfZGlyZWN0X21lc3NhZ2VzGAQgASgIEh0KFW5vdGlmeV9ncm91cF9tZXNzYWdlcxgFIAEoCBIeChZtdXRlZF9jb252ZXJzYXRpb25faWRzGAYgAygJEjgKCHNjaGVkdWxlGAcgASgLMiYuYXZpb24ubWVzc2FnZS52MS5Ob3RpZmljYXRpb25TY2hlZHVsZSJ1ChROb3RpZmljYXRpb25TY2hlZHVsZRIPCgdlbmFibGVkGAEgASgIEhIKCnN0YXJ0X3RpbWUYAiABKAkSEAoIZW5kX3RpbWUYAyABKAkSFAoMZGF5c19vZl93ZWVrGAQgAygFEhAKCHRpbWV6b25lGAUgASgJKrYBCg1NZXNzYWdlU3RhdHVzEh4KGk1FU1NBR0VfU1RBVFVTX1VOU1BFQ0lGSUVEEAASGgoWTUVTU0FHRV9TVEFUVVNfU0VORElORxABEhcKE01FU1NBR0VfU1RBVFVTX1NFTlQQAhIcChhNRVNTQUdFX1NUQVRVU19ERUxJVkVSRUQQAxIXChNNRVNTQUdFX1NUQVRVU19SRUFEEAQSGQoVTUVTU0FHRV9TVEFUVVNfRkFJTEVEEAUqjgEKEENvbnZlcnNhdGlvblR5cGUSIQodQ09OVkVSU0FUSU9OX1RZUEVfVU5TUEVDSUZJRUQQABIcChhDT05WRVJTQVRJT05fVFlQRV9ESVJFQ1QQARIbChdDT05WRVJTQVRJT05fVFlQRV9HUk9VUBACEhwKGENPTlZFUlNBVElPTl9UWVBFX1NZU1RFTRADKr4BCg5BdHRhY2htZW50VHlwZRIfChtBVFRBQ0hNRU5UX1RZUEVfVU5TUEVDSUZJRUQQABIZChVBVFRBQ0hNRU5UX1RZUEVfSU1BR0UQARIZChVBVFRBQ0hNRU5UX1RZUEVfVklERU8QAhIZChVBVFRBQ0hNRU5UX1RZUEVfQVVESU8QAxIYChRBVFRBQ0hNRU5UX1RZUEVfRklMRRAEEiAKHEFUVEFDSE1FTlRfVFlQRV9MSU5LX1BSRVZJRVcQBSqDAQoORW5jcnlwdGlvblR5cGUSHwobRU5DUllQVElPTl9UWVBFX1VOU1BFQ0lGSUVEEAASGAoURU5DUllQVElPTl9UWVBFX05PTkUQARIdChlFTkNSWVBUSU9OX1RZUEVfVFJBTlNQT1JUEAISFwoTRU5DUllQVElPTl9UWVBFX0UyRRADKt0BCgxSZWFjdGlvblR5cGUSHQoZUkVBQ1RJT05fVFlQRV9VTlNQRUNJRklFRBAAEhYKElJFQUNUSU9OX1RZUEVfTElLRRABEhcKE1JFQUNUSU9OX1RZUEVfSEVBUlQQAhIXChNSRUFDVElPTl9UWVBFX0xBVUdIEAMSGgoWUkVBQ1RJT05fVFlQRV9TVVJQUklTRRAEEhUKEVJFQUNUSU9OX1RZUEVfU0FEEAUSFwoTUkVBQ1RJT05fVFlQRV9BTkdSWRAGEhgKFFJFQUNUSU9OX1RZUEVfQ1VTVE9NEGNCwQEKFGNvbS5hdmlvbi5tZXNzYWdlLnYxQgxNZXNzYWdlUHJvdG9QAVo5Z2l0aHViLmNvbS9uYTJuYS1wL2F2aW9uL3Byb3RvL2F2aW9uL21lc3NhZ2UvdjE7bWVzc2FnZXYxogIDQU1YqgIQQXZpb24uTWVzc2FnZS5WMcoCEEF2aW9uXE1lc3NhZ2VcVjHiAhxBdmlvblxNZXNzYWdlXFYxXEdQQk1ldGFkYXRh6gISQXZpb246Ok1lc3NhZ2U6OlYxYgZwcm90bzM", [file_google_protobuf_timestamp]);

/**
 * メッセージ
 *
 * @generated from message avion.message.v1.Message
 */
export type Message = Message$1<"avion.message.v1.Message"> & {
  /**
   * メッセージID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 2;
   */
  conversationId: string;

  /**
   * 送信者ID
   *
   * @generated from field: string sender_id = 3;
   */
  senderId: string;

  /**
   * メッセージ本文
   *
   * @generated from field: string content = 4;
   */
  content: string;

  /**
   * メッセージステータス
   *
   * @generated from field: avion.message.v1.MessageStatus status = 5;
   */
  status: MessageStatus;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 6;
   */
  createdAt?: Timestamp;

  /**
   * 更新日時
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 7;
   */
  updatedAt?: Timestamp;

  /**
   * 削除日時
   *
   * @generated from field: google.protobuf.Timestamp deleted_at = 8;
   */
  deletedAt?: Timestamp;

  /**
   * 編集済みフラグ
   *
   * @generated from field: bool is_edited = 9;
   */
  isEdited: boolean;

  /**
   * 編集日時
   *
   * @generated from field: google.protobuf.Timestamp edited_at = 10;
   */
  editedAt?: Timestamp;

  /**
   * 返信先メッセージID
   *
   * @generated from field: string reply_to_message_id = 11;
   */
  replyToMessageId: string;

  /**
   * 転送元メッセージID
   *
   * @generated from field: string forwarded_from_message_id = 12;
   */
  forwardedFromMessageId: string;

  /**
   * 添付ファイル
   *
   * @generated from field: repeated avion.message.v1.MessageAttachment attachments = 13;
   */
  attachments: MessageAttachment[];

  /**
   * メンション対象ユーザーID
   *
   * @generated from field: repeated string mentioned_user_ids = 14;
   */
  mentionedUserIds: string[];

  /**
   * 暗号化タイプ
   *
   * @generated from field: avion.message.v1.EncryptionType encryption_type = 15;
   */
  encryptionType: EncryptionType;

  /**
   * 暗号化メタデータ（E2E暗号化時のキー情報等）
   *
   * @generated from field: avion.message.v1.EncryptionMetadata encryption_metadata = 16;
   */
  encryptionMetadata?: EncryptionMetadata;

  /**
   * リアクション
   *
   * @generated from field: repeated avion.message.v1.MessageReaction reactions = 17;
   */
  reactions: MessageReaction[];

  /**
   * システムメッセージフラグ
   *
   * @generated from field: bool is_system_message = 18;
   */
  isSystemMessage: boolean;

  /**
   * システムメッセージタイプ（参加、退出、タイトル変更等）
   *
   * @generated from field: string system_message_type = 19;
   */
  systemMessageType: string;

  /**
   * メタデータ（拡張用）
   *
   * @generated from field: map<string, string> metadata = 20;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message avion.message.v1.Message.
 * Use `create(MessageSchema)` to create a new message.
 */
export const MessageSchema: GenMessage<Message> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message, 0);

/**
 * 会話
 *
 * @generated from message avion.message.v1.Conversation
 */
export type Conversation = Message$1<"avion.message.v1.Conversation"> & {
  /**
   * 会話ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * 会話タイプ
   *
   * @generated from field: avion.message.v1.ConversationType type = 2;
   */
  type: ConversationType;

  /**
   * 会話タイトル（グループの場合）
   *
   * @generated from field: string title = 3;
   */
  title: string;

  /**
   * 会話の説明
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * アイコンURL
   *
   * @generated from field: string icon_url = 5;
   */
  iconUrl: string;

  /**
   * 参加者IDリスト
   *
   * @generated from field: repeated string participant_ids = 6;
   */
  participantIds: string[];

  /**
   * 参加者情報
   *
   * @generated from field: repeated avion.message.v1.ConversationParticipant participants = 7;
   */
  participants: ConversationParticipant[];

  /**
   * 作成者ID
   *
   * @generated from field: string creator_id = 8;
   */
  creatorId: string;

  /**
   * 最新メッセージ
   *
   * @generated from field: avion.message.v1.Message last_message = 9;
   */
  lastMessage?: Message;

  /**
   * 最新メッセージ日時
   *
   * @generated from field: google.protobuf.Timestamp last_message_at = 10;
   */
  lastMessageAt?: Timestamp;

  /**
   * 未読メッセージ数（リクエストユーザー視点）
   *
   * @generated from field: int32 unread_count = 11;
   */
  unreadCount: number;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 12;
   */
  createdAt?: Timestamp;

  /**
   * 更新日時
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 13;
   */
  updatedAt?: Timestamp;

  /**
   * アーカイブフラグ（リクエストユーザー視点）
   *
   * @generated from field: bool is_archived = 14;
   */
  isArchived: boolean;

  /**
   * ミュートフラグ（リクエストユーザー視点）
   *
   * @generated from field: bool is_muted = 15;
   */
  isMuted: boolean;

  /**
   * ピン留めフラグ（リクエストユーザー視点）
   *
   * @generated from field: bool is_pinned = 16;
   */
  isPinned: boolean;

  /**
   * 暗号化設定
   *
   * @generated from field: avion.message.v1.EncryptionType encryption_type = 17;
   */
  encryptionType: EncryptionType;

  /**
   * 会話設定
   *
   * @generated from field: avion.message.v1.ConversationSettings settings = 18;
   */
  settings?: ConversationSettings;

  /**
   * メタデータ
   *
   * @generated from field: map<string, string> metadata = 19;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message avion.message.v1.Conversation.
 * Use `create(ConversationSchema)` to create a new message.
 */
export const ConversationSchema: GenMessage<Conversation> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message, 1);

/**
 * 会話参加者
 *
 * @generated from message avion.message.v1.ConversationParticipant
 */
export type ConversationParticipant = Message$1<"avion.message.v1.ConversationParticipant"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * ユーザー名
   *
   * @generated from field: string username = 2;
   */
  username: string;

  /**
   * 表示名
   *
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * アバターURL
   *
   * @generated from field: string avatar_url = 4;
   */
  avatarUrl: string;

  /**
   * ロール（admin, member等）
   *
   * @generated from field: string role = 5;
   */
  role: string;

  /**
   * 参加日時
   *
   * @generated from field: google.protobuf.Timestamp joined_at = 6;
   */
  joinedAt?: Timestamp;

  /**
   * 最終既読メッセージID
   *
   * @generated from field: string last_read_message_id = 7;
   */
  lastReadMessageId: string;

  /**
   * 最終既読日時
   *
   * @generated from field: google.protobuf.Timestamp last_read_at = 8;
   */
  lastReadAt?: Timestamp;

  /**
   * オンライン状態
   *
   * @generated from field: bool is_online = 9;
   */
  isOnline: boolean;

  /**
   * 最終アクティブ日時
   *
   * @generated from field: google.protobuf.Timestamp last_active_at = 10;
   */
  lastActiveAt?: Timestamp;

  /**
   * タイピング中フラグ
   *
   * @generated from field: bool is_typing = 11;
   */
  isTyping: boolean;
};

/**
 * Describes the message avion.message.v1.ConversationParticipant.
 * Use `create(ConversationParticipantSchema)` to create a new message.
 */
export const ConversationParticipantSchema: GenMessage<ConversationParticipant> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message, 2);

/**
 * 会話設定
 *
 * @generated from message avion.message.v1.ConversationSettings
 */
export type ConversationSettings = Message$1<"avion.message.v1.ConversationSettings"> & {
  /**
   * メンバー追加可能フラグ
   *
   * @generated from field: bool allow_member_add = 1;
   */
  allowMemberAdd: boolean;

  /**
   * メンバー削除可能フラグ
   *
   * @generated from field: bool allow_member_remove = 2;
   */
  allowMemberRemove: boolean;

  /**
   * メッセージ編集可能フラグ
   *
   * @generated from field: bool allow_message_edit = 3;
   */
  allowMessageEdit: boolean;

  /**
   * メッセージ削除可能フラグ
   *
   * @generated from field: bool allow_message_delete = 4;
   */
  allowMessageDelete: boolean;

  /**
   * リアクション可能フラグ
   *
   * @generated from field: bool allow_reactions = 5;
   */
  allowReactions: boolean;

  /**
   * ファイル共有可能フラグ
   *
   * @generated from field: bool allow_file_sharing = 6;
   */
  allowFileSharing: boolean;

  /**
   * 最大参加者数（グループの場合）
   *
   * @generated from field: int32 max_participants = 7;
   */
  maxParticipants: number;

  /**
   * メッセージ保持期間（日数、0は無期限）
   *
   * @generated from field: int32 message_retention_days = 8;
   */
  messageRetentionDays: number;

  /**
   * 自動削除タイマー（秒、0は無効）
   *
   * @generated from field: int32 auto_delete_timer_seconds = 9;
   */
  autoDeleteTimerSeconds: number;
};

/**
 * Describes the message avion.message.v1.ConversationSettings.
 * Use `create(ConversationSettingsSchema)` to create a new message.
 */
export const ConversationSettingsSchema: GenMessage<ConversationSettings> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message, 3);

/**
 * メッセージ添付ファイル
 *
 * @generated from message avion.message.v1.MessageAttachment
 */
export type MessageAttachment = Message$1<"avion.message.v1.MessageAttachment"> & {
  /**
   * 添付ファイルID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * メッセージID
   *
   * @generated from field: string message_id = 2;
   */
  messageId: string;

  /**
   * ファイルタイプ
   *
   * @generated from field: avion.message.v1.AttachmentType type = 3;
   */
  type: AttachmentType;

  /**
   * ファイル名
   *
   * @generated from field: string filename = 4;
   */
  filename: string;

  /**
   * MIMEタイプ
   *
   * @generated from field: string mime_type = 5;
   */
  mimeType: string;

  /**
   * ファイルサイズ（バイト）
   *
   * @generated from field: int64 size = 6;
   */
  size: bigint;

  /**
   * ファイルURL
   *
   * @generated from field: string url = 7;
   */
  url: string;

  /**
   * サムネイルURL
   *
   * @generated from field: string thumbnail_url = 8;
   */
  thumbnailUrl: string;

  /**
   * 幅（画像・動画の場合）
   *
   * @generated from field: int32 width = 9;
   */
  width: number;

  /**
   * 高さ（画像・動画の場合）
   *
   * @generated from field: int32 height = 10;
   */
  height: number;

  /**
   * 再生時間（動画・音声の場合、秒）
   *
   * @generated from field: int32 duration = 11;
   */
  duration: number;

  /**
   * アップロード日時
   *
   * @generated from field: google.protobuf.Timestamp uploaded_at = 12;
   */
  uploadedAt?: Timestamp;

  /**
   * メタデータ
   *
   * @generated from field: map<string, string> metadata = 13;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message avion.message.v1.MessageAttachment.
 * Use `create(MessageAttachmentSchema)` to create a new message.
 */
export const MessageAttachmentSchema: GenMessage<MessageAttachment> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message, 4);

/**
 * 既読レシート
 *
 * @generated from message avion.message.v1.ReadReceipt
 */
export type ReadReceipt = Message$1<"avion.message.v1.ReadReceipt"> & {
  /**
   * メッセージID
   *
   * @generated from field: string message_id = 1;
   */
  messageId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 既読日時
   *
   * @generated from field: google.protobuf.Timestamp read_at = 3;
   */
  readAt?: Timestamp;

  /**
   * デバイスID
   *
   * @generated from field: string device_id = 4;
   */
  deviceId: string;
};

/**
 * Describes the message avion.message.v1.ReadReceipt.
 * Use `create(ReadReceiptSchema)` to create a new message.
 */
export const ReadReceiptSchema: GenMessage<ReadReceipt> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message, 5);

/**
 * タイピングインジケーター
 *
 * @generated from message avion.message.v1.TypingIndicator
 */
export type TypingIndicator = Message$1<"avion.message.v1.TypingIndicator"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * タイピング開始日時
   *
   * @generated from field: google.protobuf.Timestamp started_at = 3;
   */
  startedAt?: Timestamp;

  /**
   * タイピング中フラグ
   *
   * @generated from field: bool is_typing = 4;
   */
  isTyping: boolean;
};

/**
 * Describes the message avion.message.v1.TypingIndicator.
 * Use `create(TypingIndicatorSchema)` to create a new message.
 */
export const TypingIndicatorSchema: GenMessage<TypingIndicator> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message, 6);

/**
 * メッセージリアクション
 *
 * @generated from message avion.message.v1.MessageReaction
 */
export type MessageReaction = Message$1<"avion.message.v1.MessageReaction"> & {
  /**
   * リアクションID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * メッセージID
   *
   * @generated from field: string message_id = 2;
   */
  messageId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 3;
   */
  userId: string;

  /**
   * リアクションタイプ
   *
   * @generated from field: avion.message.v1.ReactionType type = 4;
   */
  type: ReactionType;

  /**
   * カスタム絵文字（REACTION_TYPE_CUSTOMの場合）
   *
   * @generated from field: string custom_emoji = 5;
   */
  customEmoji: string;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 6;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message avion.message.v1.MessageReaction.
 * Use `create(MessageReactionSchema)` to create a new message.
 */
export const MessageReactionSchema: GenMessage<MessageReaction> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message, 7);

/**
 * 暗号化メタデータ
 *
 * @generated from message avion.message.v1.EncryptionMetadata
 */
export type EncryptionMetadata = Message$1<"avion.message.v1.EncryptionMetadata"> & {
  /**
   * 暗号化アルゴリズム
   *
   * @generated from field: string algorithm = 1;
   */
  algorithm: string;

  /**
   * 公開鍵ID
   *
   * @generated from field: string public_key_id = 2;
   */
  publicKeyId: string;

  /**
   * セッションID（E2E暗号化セッション）
   *
   * @generated from field: string session_id = 3;
   */
  sessionId: string;

  /**
   * 暗号化されたセッションキー（受信者ごと）
   *
   * @generated from field: map<string, string> encrypted_session_keys = 4;
   */
  encryptedSessionKeys: { [key: string]: string };

  /**
   * 初期化ベクトル
   *
   * @generated from field: string initialization_vector = 5;
   */
  initializationVector: string;

  /**
   * メッセージ認証コード
   *
   * @generated from field: string message_authentication_code = 6;
   */
  messageAuthenticationCode: string;
};

/**
 * Describes the message avion.message.v1.EncryptionMetadata.
 * Use `create(EncryptionMetadataSchema)` to create a new message.
 */
export const EncryptionMetadataSchema: GenMessage<EncryptionMetadata> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message, 8);

/**
 * メッセージ検索フィルター
 *
 * @generated from message avion.message.v1.MessageSearchFilter
 */
export type MessageSearchFilter = Message$1<"avion.message.v1.MessageSearchFilter"> & {
  /**
   * 検索クエリ
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * 会話ID（特定の会話内検索）
   *
   * @generated from field: string conversation_id = 2;
   */
  conversationId: string;

  /**
   * 送信者ID
   *
   * @generated from field: string sender_id = 3;
   */
  senderId: string;

  /**
   * 期間（開始）
   *
   * @generated from field: google.protobuf.Timestamp start_time = 4;
   */
  startTime?: Timestamp;

  /**
   * 期間（終了）
   *
   * @generated from field: google.protobuf.Timestamp end_time = 5;
   */
  endTime?: Timestamp;

  /**
   * 添付ファイルありフラグ
   *
   * @generated from field: bool has_attachments = 6;
   */
  hasAttachments: boolean;

  /**
   * メディアタイプフィルター
   *
   * @generated from field: repeated avion.message.v1.AttachmentType attachment_types = 7;
   */
  attachmentTypes: AttachmentType[];

  /**
   * メンション対象ユーザーID
   *
   * @generated from field: repeated string mentioned_user_ids = 8;
   */
  mentionedUserIds: string[];
};

/**
 * Describes the message avion.message.v1.MessageSearchFilter.
 * Use `create(MessageSearchFilterSchema)` to create a new message.
 */
export const MessageSearchFilterSchema: GenMessage<MessageSearchFilter> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message, 9);

/**
 * メッセージ統計
 *
 * @generated from message avion.message.v1.MessageStatistics
 */
export type MessageStatistics = Message$1<"avion.message.v1.MessageStatistics"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;

  /**
   * 総メッセージ数
   *
   * @generated from field: int64 total_messages = 2;
   */
  totalMessages: bigint;

  /**
   * 総添付ファイル数
   *
   * @generated from field: int64 total_attachments = 3;
   */
  totalAttachments: bigint;

  /**
   * 総ファイルサイズ（バイト）
   *
   * @generated from field: int64 total_file_size = 4;
   */
  totalFileSize: bigint;

  /**
   * アクティブ参加者数
   *
   * @generated from field: int32 active_participants = 5;
   */
  activeParticipants: number;

  /**
   * 最も活発な時間帯
   *
   * @generated from field: int32 peak_hour = 6;
   */
  peakHour: number;

  /**
   * 平均応答時間（秒）
   *
   * @generated from field: int64 average_response_time = 7;
   */
  averageResponseTime: bigint;
};

/**
 * Describes the message avion.message.v1.MessageStatistics.
 * Use `create(MessageStatisticsSchema)` to create a new message.
 */
export const MessageStatisticsSchema: GenMessage<MessageStatistics> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message, 10);

/**
 * プッシュ通知設定
 *
 * @generated from message avion.message.v1.MessageNotificationSettings
 */
export type MessageNotificationSettings = Message$1<"avion.message.v1.MessageNotificationSettings"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * すべてのメッセージ通知
   *
   * @generated from field: bool notify_all_messages = 2;
   */
  notifyAllMessages: boolean;

  /**
   * メンションのみ通知
   *
   * @generated from field: bool notify_mentions_only = 3;
   */
  notifyMentionsOnly: boolean;

  /**
   * ダイレクトメッセージ通知
   *
   * @generated from field: bool notify_direct_messages = 4;
   */
  notifyDirectMessages: boolean;

  /**
   * グループメッセージ通知
   *
   * @generated from field: bool notify_group_messages = 5;
   */
  notifyGroupMessages: boolean;

  /**
   * ミュート中の会話ID
   *
   * @generated from field: repeated string muted_conversation_ids = 6;
   */
  mutedConversationIds: string[];

  /**
   * 通知スケジュール（勤務時間中のみ等）
   *
   * @generated from field: avion.message.v1.NotificationSchedule schedule = 7;
   */
  schedule?: NotificationSchedule;
};

/**
 * Describes the message avion.message.v1.MessageNotificationSettings.
 * Use `create(MessageNotificationSettingsSchema)` to create a new message.
 */
export const MessageNotificationSettingsSchema: GenMessage<MessageNotificationSettings> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message, 11);

/**
 * 通知スケジュール
 *
 * @generated from message avion.message.v1.NotificationSchedule
 */
export type NotificationSchedule = Message$1<"avion.message.v1.NotificationSchedule"> & {
  /**
   * 有効フラグ
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * 開始時刻（HH:MM形式）
   *
   * @generated from field: string start_time = 2;
   */
  startTime: string;

  /**
   * 終了時刻（HH:MM形式）
   *
   * @generated from field: string end_time = 3;
   */
  endTime: string;

  /**
   * 有効な曜日（0=日曜、6=土曜）
   *
   * @generated from field: repeated int32 days_of_week = 4;
   */
  daysOfWeek: number[];

  /**
   * タイムゾーン
   *
   * @generated from field: string timezone = 5;
   */
  timezone: string;
};

/**
 * Describes the message avion.message.v1.NotificationSchedule.
 * Use `create(NotificationScheduleSchema)` to create a new message.
 */
export const NotificationScheduleSchema: GenMessage<NotificationSchedule> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message, 12);

/**
 * メッセージステータス
 *
 * @generated from enum avion.message.v1.MessageStatus
 */
export enum MessageStatus {
  /**
   * 未指定
   *
   * @generated from enum value: MESSAGE_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 送信中
   *
   * @generated from enum value: MESSAGE_STATUS_SENDING = 1;
   */
  SENDING = 1,

  /**
   * 送信済み
   *
   * @generated from enum value: MESSAGE_STATUS_SENT = 2;
   */
  SENT = 2,

  /**
   * 配信済み
   *
   * @generated from enum value: MESSAGE_STATUS_DELIVERED = 3;
   */
  DELIVERED = 3,

  /**
   * 既読
   *
   * @generated from enum value: MESSAGE_STATUS_READ = 4;
   */
  READ = 4,

  /**
   * 送信失敗
   *
   * @generated from enum value: MESSAGE_STATUS_FAILED = 5;
   */
  FAILED = 5,
}

/**
 * Describes the enum avion.message.v1.MessageStatus.
 */
export const MessageStatusSchema: GenEnum<MessageStatus> = /*@__PURE__*/
  enumDesc(file_avion_message_v1_message, 0);

/**
 * 会話タイプ
 *
 * @generated from enum avion.message.v1.ConversationType
 */
export enum ConversationType {
  /**
   * 未指定
   *
   * @generated from enum value: CONVERSATION_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * ダイレクトメッセージ（1対1）
   *
   * @generated from enum value: CONVERSATION_TYPE_DIRECT = 1;
   */
  DIRECT = 1,

  /**
   * グループメッセージ
   *
   * @generated from enum value: CONVERSATION_TYPE_GROUP = 2;
   */
  GROUP = 2,

  /**
   * システムメッセージ
   *
   * @generated from enum value: CONVERSATION_TYPE_SYSTEM = 3;
   */
  SYSTEM = 3,
}

/**
 * Describes the enum avion.message.v1.ConversationType.
 */
export const ConversationTypeSchema: GenEnum<ConversationType> = /*@__PURE__*/
  enumDesc(file_avion_message_v1_message, 1);

/**
 * 添付ファイルタイプ
 *
 * @generated from enum avion.message.v1.AttachmentType
 */
export enum AttachmentType {
  /**
   * 未指定
   *
   * @generated from enum value: ATTACHMENT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 画像
   *
   * @generated from enum value: ATTACHMENT_TYPE_IMAGE = 1;
   */
  IMAGE = 1,

  /**
   * 動画
   *
   * @generated from enum value: ATTACHMENT_TYPE_VIDEO = 2;
   */
  VIDEO = 2,

  /**
   * 音声
   *
   * @generated from enum value: ATTACHMENT_TYPE_AUDIO = 3;
   */
  AUDIO = 3,

  /**
   * ファイル
   *
   * @generated from enum value: ATTACHMENT_TYPE_FILE = 4;
   */
  FILE = 4,

  /**
   * リンクプレビュー
   *
   * @generated from enum value: ATTACHMENT_TYPE_LINK_PREVIEW = 5;
   */
  LINK_PREVIEW = 5,
}

/**
 * Describes the enum avion.message.v1.AttachmentType.
 */
export const AttachmentTypeSchema: GenEnum<AttachmentType> = /*@__PURE__*/
  enumDesc(file_avion_message_v1_message, 2);

/**
 * 暗号化タイプ
 *
 * @generated from enum avion.message.v1.EncryptionType
 */
export enum EncryptionType {
  /**
   * 未指定
   *
   * @generated from enum value: ENCRYPTION_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 暗号化なし
   *
   * @generated from enum value: ENCRYPTION_TYPE_NONE = 1;
   */
  NONE = 1,

  /**
   * トランスポート層暗号化のみ
   *
   * @generated from enum value: ENCRYPTION_TYPE_TRANSPORT = 2;
   */
  TRANSPORT = 2,

  /**
   * End-to-End暗号化
   *
   * @generated from enum value: ENCRYPTION_TYPE_E2E = 3;
   */
  E2E = 3,
}

/**
 * Describes the enum avion.message.v1.EncryptionType.
 */
export const EncryptionTypeSchema: GenEnum<EncryptionType> = /*@__PURE__*/
  enumDesc(file_avion_message_v1_message, 3);

/**
 * リアクションタイプ
 *
 * @generated from enum avion.message.v1.ReactionType
 */
export enum ReactionType {
  /**
   * 未指定
   *
   * @generated from enum value: REACTION_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * いいね
   *
   * @generated from enum value: REACTION_TYPE_LIKE = 1;
   */
  LIKE = 1,

  /**
   * ハート
   *
   * @generated from enum value: REACTION_TYPE_HEART = 2;
   */
  HEART = 2,

  /**
   * 笑顔
   *
   * @generated from enum value: REACTION_TYPE_LAUGH = 3;
   */
  LAUGH = 3,

  /**
   * 驚き
   *
   * @generated from enum value: REACTION_TYPE_SURPRISE = 4;
   */
  SURPRISE = 4,

  /**
   * 悲しい
   *
   * @generated from enum value: REACTION_TYPE_SAD = 5;
   */
  SAD = 5,

  /**
   * 怒り
   *
   * @generated from enum value: REACTION_TYPE_ANGRY = 6;
   */
  ANGRY = 6,

  /**
   * カスタム絵文字
   *
   * @generated from enum value: REACTION_TYPE_CUSTOM = 99;
   */
  CUSTOM = 99,
}

/**
 * Describes the enum avion.message.v1.ReactionType.
 */
export const ReactionTypeSchema: GenEnum<ReactionType> = /*@__PURE__*/
  enumDesc(file_avion_message_v1_message, 4);

