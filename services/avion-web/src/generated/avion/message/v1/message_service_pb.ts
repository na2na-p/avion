// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file avion/message/v1/message_service.proto (package avion.message.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Conversation, ConversationSettings, ConversationType, EncryptionType, Message as Message$1, MessageAttachment, MessageNotificationSettings, MessageReaction, MessageSearchFilter, MessageStatistics, ReactionType, ReadReceipt, TypingIndicator } from "./message_pb";
import { file_avion_message_v1_message } from "./message_pb";
import type { PaginationRequest, PaginationResponse } from "../../common/v1/pagination_pb";
import { file_avion_common_v1_pagination } from "../../common/v1/pagination_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file avion/message/v1/message_service.proto.
 */
export const file_avion_message_v1_message_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_avion_message_v1_message, file_avion_common_v1_pagination, file_google_protobuf_timestamp, file_google_protobuf_field_mask]);

/**
 * メッセージ送信リクエスト
 *
 * @generated from message avion.message.v1.SendMessageRequest
 */
export type SendMessageRequest = Message<"avion.message.v1.SendMessageRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;

  /**
   * メッセージ本文
   *
   * @generated from field: string content = 2;
   */
  content: string;

  /**
   * 返信先メッセージID
   *
   * @generated from field: string reply_to_message_id = 3;
   */
  replyToMessageId: string;

  /**
   * 転送元メッセージID
   *
   * @generated from field: string forwarded_from_message_id = 4;
   */
  forwardedFromMessageId: string;

  /**
   * 添付ファイルID
   *
   * @generated from field: repeated string attachment_ids = 5;
   */
  attachmentIds: string[];

  /**
   * メンション対象ユーザーID
   *
   * @generated from field: repeated string mentioned_user_ids = 6;
   */
  mentionedUserIds: string[];

  /**
   * 一時的なメッセージID（クライアント側で生成）
   *
   * @generated from field: string client_message_id = 7;
   */
  clientMessageId: string;

  /**
   * メタデータ
   *
   * @generated from field: map<string, string> metadata = 8;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message avion.message.v1.SendMessageRequest.
 * Use `create(SendMessageRequestSchema)` to create a new message.
 */
export const SendMessageRequestSchema: GenMessage<SendMessageRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 0);

/**
 * メッセージ送信レスポンス
 *
 * @generated from message avion.message.v1.SendMessageResponse
 */
export type SendMessageResponse = Message<"avion.message.v1.SendMessageResponse"> & {
  /**
   * 送信されたメッセージ
   *
   * @generated from field: avion.message.v1.Message message = 1;
   */
  message?: Message$1;
};

/**
 * Describes the message avion.message.v1.SendMessageResponse.
 * Use `create(SendMessageResponseSchema)` to create a new message.
 */
export const SendMessageResponseSchema: GenMessage<SendMessageResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 1);

/**
 * メッセージ取得リクエスト
 *
 * @generated from message avion.message.v1.GetMessageRequest
 */
export type GetMessageRequest = Message<"avion.message.v1.GetMessageRequest"> & {
  /**
   * メッセージID
   *
   * @generated from field: string message_id = 1;
   */
  messageId: string;
};

/**
 * Describes the message avion.message.v1.GetMessageRequest.
 * Use `create(GetMessageRequestSchema)` to create a new message.
 */
export const GetMessageRequestSchema: GenMessage<GetMessageRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 2);

/**
 * メッセージ取得レスポンス
 *
 * @generated from message avion.message.v1.GetMessageResponse
 */
export type GetMessageResponse = Message<"avion.message.v1.GetMessageResponse"> & {
  /**
   * メッセージ
   *
   * @generated from field: avion.message.v1.Message message = 1;
   */
  message?: Message$1;
};

/**
 * Describes the message avion.message.v1.GetMessageResponse.
 * Use `create(GetMessageResponseSchema)` to create a new message.
 */
export const GetMessageResponseSchema: GenMessage<GetMessageResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 3);

/**
 * メッセージ更新リクエスト
 *
 * @generated from message avion.message.v1.UpdateMessageRequest
 */
export type UpdateMessageRequest = Message<"avion.message.v1.UpdateMessageRequest"> & {
  /**
   * メッセージID
   *
   * @generated from field: string message_id = 1;
   */
  messageId: string;

  /**
   * 更新内容
   *
   * @generated from field: string content = 2;
   */
  content: string;

  /**
   * 更新フィールドマスク
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message avion.message.v1.UpdateMessageRequest.
 * Use `create(UpdateMessageRequestSchema)` to create a new message.
 */
export const UpdateMessageRequestSchema: GenMessage<UpdateMessageRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 4);

/**
 * メッセージ更新レスポンス
 *
 * @generated from message avion.message.v1.UpdateMessageResponse
 */
export type UpdateMessageResponse = Message<"avion.message.v1.UpdateMessageResponse"> & {
  /**
   * 更新されたメッセージ
   *
   * @generated from field: avion.message.v1.Message message = 1;
   */
  message?: Message$1;
};

/**
 * Describes the message avion.message.v1.UpdateMessageResponse.
 * Use `create(UpdateMessageResponseSchema)` to create a new message.
 */
export const UpdateMessageResponseSchema: GenMessage<UpdateMessageResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 5);

/**
 * メッセージ削除リクエスト
 *
 * @generated from message avion.message.v1.DeleteMessageRequest
 */
export type DeleteMessageRequest = Message<"avion.message.v1.DeleteMessageRequest"> & {
  /**
   * メッセージID
   *
   * @generated from field: string message_id = 1;
   */
  messageId: string;

  /**
   * 全員から削除（送信者のみ可能）
   *
   * @generated from field: bool delete_for_everyone = 2;
   */
  deleteForEveryone: boolean;
};

/**
 * Describes the message avion.message.v1.DeleteMessageRequest.
 * Use `create(DeleteMessageRequestSchema)` to create a new message.
 */
export const DeleteMessageRequestSchema: GenMessage<DeleteMessageRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 6);

/**
 * メッセージ削除レスポンス
 *
 * @generated from message avion.message.v1.DeleteMessageResponse
 */
export type DeleteMessageResponse = Message<"avion.message.v1.DeleteMessageResponse"> & {
  /**
   * 削除成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.message.v1.DeleteMessageResponse.
 * Use `create(DeleteMessageResponseSchema)` to create a new message.
 */
export const DeleteMessageResponseSchema: GenMessage<DeleteMessageResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 7);

/**
 * メッセージ一覧取得リクエスト
 *
 * @generated from message avion.message.v1.ListMessagesRequest
 */
export type ListMessagesRequest = Message<"avion.message.v1.ListMessagesRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * 期間フィルター（開始）
   *
   * @generated from field: google.protobuf.Timestamp start_time = 3;
   */
  startTime?: Timestamp;

  /**
   * 期間フィルター（終了）
   *
   * @generated from field: google.protobuf.Timestamp end_time = 4;
   */
  endTime?: Timestamp;

  /**
   * ソート順（asc/desc）
   *
   * @generated from field: string sort_order = 5;
   */
  sortOrder: string;
};

/**
 * Describes the message avion.message.v1.ListMessagesRequest.
 * Use `create(ListMessagesRequestSchema)` to create a new message.
 */
export const ListMessagesRequestSchema: GenMessage<ListMessagesRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 8);

/**
 * メッセージ一覧取得レスポンス
 *
 * @generated from message avion.message.v1.ListMessagesResponse
 */
export type ListMessagesResponse = Message<"avion.message.v1.ListMessagesResponse"> & {
  /**
   * メッセージリスト
   *
   * @generated from field: repeated avion.message.v1.Message messages = 1;
   */
  messages: Message$1[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.message.v1.ListMessagesResponse.
 * Use `create(ListMessagesResponseSchema)` to create a new message.
 */
export const ListMessagesResponseSchema: GenMessage<ListMessagesResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 9);

/**
 * メッセージ検索リクエスト
 *
 * @generated from message avion.message.v1.SearchMessagesRequest
 */
export type SearchMessagesRequest = Message<"avion.message.v1.SearchMessagesRequest"> & {
  /**
   * 検索フィルター
   *
   * @generated from field: avion.message.v1.MessageSearchFilter filter = 1;
   */
  filter?: MessageSearchFilter;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;
};

/**
 * Describes the message avion.message.v1.SearchMessagesRequest.
 * Use `create(SearchMessagesRequestSchema)` to create a new message.
 */
export const SearchMessagesRequestSchema: GenMessage<SearchMessagesRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 10);

/**
 * メッセージ検索レスポンス
 *
 * @generated from message avion.message.v1.SearchMessagesResponse
 */
export type SearchMessagesResponse = Message<"avion.message.v1.SearchMessagesResponse"> & {
  /**
   * 検索結果
   *
   * @generated from field: repeated avion.message.v1.Message messages = 1;
   */
  messages: Message$1[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;

  /**
   * 検索ヒット数
   *
   * @generated from field: int32 total_hits = 3;
   */
  totalHits: number;
};

/**
 * Describes the message avion.message.v1.SearchMessagesResponse.
 * Use `create(SearchMessagesResponseSchema)` to create a new message.
 */
export const SearchMessagesResponseSchema: GenMessage<SearchMessagesResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 11);

/**
 * 会話作成リクエスト
 *
 * @generated from message avion.message.v1.CreateConversationRequest
 */
export type CreateConversationRequest = Message<"avion.message.v1.CreateConversationRequest"> & {
  /**
   * 会話タイプ
   *
   * @generated from field: avion.message.v1.ConversationType type = 1;
   */
  type: ConversationType;

  /**
   * 会話タイトル（グループの場合）
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * 会話の説明
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * 参加者ID（ダイレクトメッセージの場合は相手のID）
   *
   * @generated from field: repeated string participant_ids = 4;
   */
  participantIds: string[];

  /**
   * アイコンURL
   *
   * @generated from field: string icon_url = 5;
   */
  iconUrl: string;

  /**
   * 暗号化タイプ
   *
   * @generated from field: avion.message.v1.EncryptionType encryption_type = 6;
   */
  encryptionType: EncryptionType;

  /**
   * 会話設定
   *
   * @generated from field: avion.message.v1.ConversationSettings settings = 7;
   */
  settings?: ConversationSettings;

  /**
   * メタデータ
   *
   * @generated from field: map<string, string> metadata = 8;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message avion.message.v1.CreateConversationRequest.
 * Use `create(CreateConversationRequestSchema)` to create a new message.
 */
export const CreateConversationRequestSchema: GenMessage<CreateConversationRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 12);

/**
 * 会話作成レスポンス
 *
 * @generated from message avion.message.v1.CreateConversationResponse
 */
export type CreateConversationResponse = Message<"avion.message.v1.CreateConversationResponse"> & {
  /**
   * 作成された会話
   *
   * @generated from field: avion.message.v1.Conversation conversation = 1;
   */
  conversation?: Conversation;
};

/**
 * Describes the message avion.message.v1.CreateConversationResponse.
 * Use `create(CreateConversationResponseSchema)` to create a new message.
 */
export const CreateConversationResponseSchema: GenMessage<CreateConversationResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 13);

/**
 * 会話取得リクエスト
 *
 * @generated from message avion.message.v1.GetConversationRequest
 */
export type GetConversationRequest = Message<"avion.message.v1.GetConversationRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;

  /**
   * 参加者情報を含めるか
   *
   * @generated from field: bool include_participants = 2;
   */
  includeParticipants: boolean;

  /**
   * 最新メッセージを含めるか
   *
   * @generated from field: bool include_last_message = 3;
   */
  includeLastMessage: boolean;
};

/**
 * Describes the message avion.message.v1.GetConversationRequest.
 * Use `create(GetConversationRequestSchema)` to create a new message.
 */
export const GetConversationRequestSchema: GenMessage<GetConversationRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 14);

/**
 * 会話取得レスポンス
 *
 * @generated from message avion.message.v1.GetConversationResponse
 */
export type GetConversationResponse = Message<"avion.message.v1.GetConversationResponse"> & {
  /**
   * 会話
   *
   * @generated from field: avion.message.v1.Conversation conversation = 1;
   */
  conversation?: Conversation;
};

/**
 * Describes the message avion.message.v1.GetConversationResponse.
 * Use `create(GetConversationResponseSchema)` to create a new message.
 */
export const GetConversationResponseSchema: GenMessage<GetConversationResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 15);

/**
 * 会話更新リクエスト
 *
 * @generated from message avion.message.v1.UpdateConversationRequest
 */
export type UpdateConversationRequest = Message<"avion.message.v1.UpdateConversationRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;

  /**
   * タイトル
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * 説明
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * アイコンURL
   *
   * @generated from field: string icon_url = 4;
   */
  iconUrl: string;

  /**
   * 設定
   *
   * @generated from field: avion.message.v1.ConversationSettings settings = 5;
   */
  settings?: ConversationSettings;

  /**
   * 更新フィールドマスク
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 6;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message avion.message.v1.UpdateConversationRequest.
 * Use `create(UpdateConversationRequestSchema)` to create a new message.
 */
export const UpdateConversationRequestSchema: GenMessage<UpdateConversationRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 16);

/**
 * 会話更新レスポンス
 *
 * @generated from message avion.message.v1.UpdateConversationResponse
 */
export type UpdateConversationResponse = Message<"avion.message.v1.UpdateConversationResponse"> & {
  /**
   * 更新された会話
   *
   * @generated from field: avion.message.v1.Conversation conversation = 1;
   */
  conversation?: Conversation;
};

/**
 * Describes the message avion.message.v1.UpdateConversationResponse.
 * Use `create(UpdateConversationResponseSchema)` to create a new message.
 */
export const UpdateConversationResponseSchema: GenMessage<UpdateConversationResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 17);

/**
 * 会話削除リクエスト
 *
 * @generated from message avion.message.v1.DeleteConversationRequest
 */
export type DeleteConversationRequest = Message<"avion.message.v1.DeleteConversationRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;
};

/**
 * Describes the message avion.message.v1.DeleteConversationRequest.
 * Use `create(DeleteConversationRequestSchema)` to create a new message.
 */
export const DeleteConversationRequestSchema: GenMessage<DeleteConversationRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 18);

/**
 * 会話削除レスポンス
 *
 * @generated from message avion.message.v1.DeleteConversationResponse
 */
export type DeleteConversationResponse = Message<"avion.message.v1.DeleteConversationResponse"> & {
  /**
   * 削除成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.message.v1.DeleteConversationResponse.
 * Use `create(DeleteConversationResponseSchema)` to create a new message.
 */
export const DeleteConversationResponseSchema: GenMessage<DeleteConversationResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 19);

/**
 * 会話一覧取得リクエスト
 *
 * @generated from message avion.message.v1.ListConversationsRequest
 */
export type ListConversationsRequest = Message<"avion.message.v1.ListConversationsRequest"> & {
  /**
   * フィルター（active, archived, all）
   *
   * @generated from field: string filter = 1;
   */
  filter: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * ソート基準（last_message, created_at）
   *
   * @generated from field: string sort_by = 3;
   */
  sortBy: string;

  /**
   * ソート順（asc/desc）
   *
   * @generated from field: string sort_order = 4;
   */
  sortOrder: string;

  /**
   * 参加者情報を含めるか
   *
   * @generated from field: bool include_participants = 5;
   */
  includeParticipants: boolean;

  /**
   * 最新メッセージを含めるか
   *
   * @generated from field: bool include_last_message = 6;
   */
  includeLastMessage: boolean;
};

/**
 * Describes the message avion.message.v1.ListConversationsRequest.
 * Use `create(ListConversationsRequestSchema)` to create a new message.
 */
export const ListConversationsRequestSchema: GenMessage<ListConversationsRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 20);

/**
 * 会話一覧取得レスポンス
 *
 * @generated from message avion.message.v1.ListConversationsResponse
 */
export type ListConversationsResponse = Message<"avion.message.v1.ListConversationsResponse"> & {
  /**
   * 会話リスト
   *
   * @generated from field: repeated avion.message.v1.Conversation conversations = 1;
   */
  conversations: Conversation[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.message.v1.ListConversationsResponse.
 * Use `create(ListConversationsResponseSchema)` to create a new message.
 */
export const ListConversationsResponseSchema: GenMessage<ListConversationsResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 21);

/**
 * 参加者追加リクエスト
 *
 * @generated from message avion.message.v1.AddParticipantsRequest
 */
export type AddParticipantsRequest = Message<"avion.message.v1.AddParticipantsRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;

  /**
   * 追加する参加者ID
   *
   * @generated from field: repeated string participant_ids = 2;
   */
  participantIds: string[];
};

/**
 * Describes the message avion.message.v1.AddParticipantsRequest.
 * Use `create(AddParticipantsRequestSchema)` to create a new message.
 */
export const AddParticipantsRequestSchema: GenMessage<AddParticipantsRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 22);

/**
 * 参加者追加レスポンス
 *
 * @generated from message avion.message.v1.AddParticipantsResponse
 */
export type AddParticipantsResponse = Message<"avion.message.v1.AddParticipantsResponse"> & {
  /**
   * 更新された会話
   *
   * @generated from field: avion.message.v1.Conversation conversation = 1;
   */
  conversation?: Conversation;
};

/**
 * Describes the message avion.message.v1.AddParticipantsResponse.
 * Use `create(AddParticipantsResponseSchema)` to create a new message.
 */
export const AddParticipantsResponseSchema: GenMessage<AddParticipantsResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 23);

/**
 * 参加者削除リクエスト
 *
 * @generated from message avion.message.v1.RemoveParticipantsRequest
 */
export type RemoveParticipantsRequest = Message<"avion.message.v1.RemoveParticipantsRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;

  /**
   * 削除する参加者ID
   *
   * @generated from field: repeated string participant_ids = 2;
   */
  participantIds: string[];
};

/**
 * Describes the message avion.message.v1.RemoveParticipantsRequest.
 * Use `create(RemoveParticipantsRequestSchema)` to create a new message.
 */
export const RemoveParticipantsRequestSchema: GenMessage<RemoveParticipantsRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 24);

/**
 * 参加者削除レスポンス
 *
 * @generated from message avion.message.v1.RemoveParticipantsResponse
 */
export type RemoveParticipantsResponse = Message<"avion.message.v1.RemoveParticipantsResponse"> & {
  /**
   * 更新された会話
   *
   * @generated from field: avion.message.v1.Conversation conversation = 1;
   */
  conversation?: Conversation;
};

/**
 * Describes the message avion.message.v1.RemoveParticipantsResponse.
 * Use `create(RemoveParticipantsResponseSchema)` to create a new message.
 */
export const RemoveParticipantsResponseSchema: GenMessage<RemoveParticipantsResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 25);

/**
 * 会話退出リクエスト
 *
 * @generated from message avion.message.v1.LeaveConversationRequest
 */
export type LeaveConversationRequest = Message<"avion.message.v1.LeaveConversationRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;
};

/**
 * Describes the message avion.message.v1.LeaveConversationRequest.
 * Use `create(LeaveConversationRequestSchema)` to create a new message.
 */
export const LeaveConversationRequestSchema: GenMessage<LeaveConversationRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 26);

/**
 * 会話退出レスポンス
 *
 * @generated from message avion.message.v1.LeaveConversationResponse
 */
export type LeaveConversationResponse = Message<"avion.message.v1.LeaveConversationResponse"> & {
  /**
   * 退出成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.message.v1.LeaveConversationResponse.
 * Use `create(LeaveConversationResponseSchema)` to create a new message.
 */
export const LeaveConversationResponseSchema: GenMessage<LeaveConversationResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 27);

/**
 * 既読マークリクエスト
 *
 * @generated from message avion.message.v1.MarkAsReadRequest
 */
export type MarkAsReadRequest = Message<"avion.message.v1.MarkAsReadRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;

  /**
   * 最新既読メッセージID
   *
   * @generated from field: string message_id = 2;
   */
  messageId: string;
};

/**
 * Describes the message avion.message.v1.MarkAsReadRequest.
 * Use `create(MarkAsReadRequestSchema)` to create a new message.
 */
export const MarkAsReadRequestSchema: GenMessage<MarkAsReadRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 28);

/**
 * 既読マークレスポンス
 *
 * @generated from message avion.message.v1.MarkAsReadResponse
 */
export type MarkAsReadResponse = Message<"avion.message.v1.MarkAsReadResponse"> & {
  /**
   * 更新された未読数
   *
   * @generated from field: int32 unread_count = 1;
   */
  unreadCount: number;
};

/**
 * Describes the message avion.message.v1.MarkAsReadResponse.
 * Use `create(MarkAsReadResponseSchema)` to create a new message.
 */
export const MarkAsReadResponseSchema: GenMessage<MarkAsReadResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 29);

/**
 * 既読レシート取得リクエスト
 *
 * @generated from message avion.message.v1.GetReadReceiptsRequest
 */
export type GetReadReceiptsRequest = Message<"avion.message.v1.GetReadReceiptsRequest"> & {
  /**
   * メッセージID
   *
   * @generated from field: string message_id = 1;
   */
  messageId: string;
};

/**
 * Describes the message avion.message.v1.GetReadReceiptsRequest.
 * Use `create(GetReadReceiptsRequestSchema)` to create a new message.
 */
export const GetReadReceiptsRequestSchema: GenMessage<GetReadReceiptsRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 30);

/**
 * 既読レシート取得レスポンス
 *
 * @generated from message avion.message.v1.GetReadReceiptsResponse
 */
export type GetReadReceiptsResponse = Message<"avion.message.v1.GetReadReceiptsResponse"> & {
  /**
   * 既読レシート
   *
   * @generated from field: repeated avion.message.v1.ReadReceipt read_receipts = 1;
   */
  readReceipts: ReadReceipt[];
};

/**
 * Describes the message avion.message.v1.GetReadReceiptsResponse.
 * Use `create(GetReadReceiptsResponseSchema)` to create a new message.
 */
export const GetReadReceiptsResponseSchema: GenMessage<GetReadReceiptsResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 31);

/**
 * タイピングインジケーター送信リクエスト
 *
 * @generated from message avion.message.v1.SendTypingIndicatorRequest
 */
export type SendTypingIndicatorRequest = Message<"avion.message.v1.SendTypingIndicatorRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;

  /**
   * タイピング中フラグ
   *
   * @generated from field: bool is_typing = 2;
   */
  isTyping: boolean;
};

/**
 * Describes the message avion.message.v1.SendTypingIndicatorRequest.
 * Use `create(SendTypingIndicatorRequestSchema)` to create a new message.
 */
export const SendTypingIndicatorRequestSchema: GenMessage<SendTypingIndicatorRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 32);

/**
 * タイピングインジケーター送信レスポンス
 *
 * @generated from message avion.message.v1.SendTypingIndicatorResponse
 */
export type SendTypingIndicatorResponse = Message<"avion.message.v1.SendTypingIndicatorResponse"> & {
  /**
   * 送信成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.message.v1.SendTypingIndicatorResponse.
 * Use `create(SendTypingIndicatorResponseSchema)` to create a new message.
 */
export const SendTypingIndicatorResponseSchema: GenMessage<SendTypingIndicatorResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 33);

/**
 * タイピングインジケーターストリームリクエスト
 *
 * @generated from message avion.message.v1.StreamTypingIndicatorsRequest
 */
export type StreamTypingIndicatorsRequest = Message<"avion.message.v1.StreamTypingIndicatorsRequest"> & {
  /**
   * 会話ID（複数指定可能）
   *
   * @generated from field: repeated string conversation_ids = 1;
   */
  conversationIds: string[];
};

/**
 * Describes the message avion.message.v1.StreamTypingIndicatorsRequest.
 * Use `create(StreamTypingIndicatorsRequestSchema)` to create a new message.
 */
export const StreamTypingIndicatorsRequestSchema: GenMessage<StreamTypingIndicatorsRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 34);

/**
 * タイピングインジケーターストリームレスポンス
 *
 * @generated from message avion.message.v1.StreamTypingIndicatorsResponse
 */
export type StreamTypingIndicatorsResponse = Message<"avion.message.v1.StreamTypingIndicatorsResponse"> & {
  /**
   * タイピングインジケーター
   *
   * @generated from field: avion.message.v1.TypingIndicator indicator = 1;
   */
  indicator?: TypingIndicator;
};

/**
 * Describes the message avion.message.v1.StreamTypingIndicatorsResponse.
 * Use `create(StreamTypingIndicatorsResponseSchema)` to create a new message.
 */
export const StreamTypingIndicatorsResponseSchema: GenMessage<StreamTypingIndicatorsResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 35);

/**
 * リアクション追加リクエスト
 *
 * @generated from message avion.message.v1.AddReactionRequest
 */
export type AddReactionRequest = Message<"avion.message.v1.AddReactionRequest"> & {
  /**
   * メッセージID
   *
   * @generated from field: string message_id = 1;
   */
  messageId: string;

  /**
   * リアクションタイプ
   *
   * @generated from field: avion.message.v1.ReactionType type = 2;
   */
  type: ReactionType;

  /**
   * カスタム絵文字（REACTION_TYPE_CUSTOMの場合）
   *
   * @generated from field: string custom_emoji = 3;
   */
  customEmoji: string;
};

/**
 * Describes the message avion.message.v1.AddReactionRequest.
 * Use `create(AddReactionRequestSchema)` to create a new message.
 */
export const AddReactionRequestSchema: GenMessage<AddReactionRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 36);

/**
 * リアクション追加レスポンス
 *
 * @generated from message avion.message.v1.AddReactionResponse
 */
export type AddReactionResponse = Message<"avion.message.v1.AddReactionResponse"> & {
  /**
   * 追加されたリアクション
   *
   * @generated from field: avion.message.v1.MessageReaction reaction = 1;
   */
  reaction?: MessageReaction;
};

/**
 * Describes the message avion.message.v1.AddReactionResponse.
 * Use `create(AddReactionResponseSchema)` to create a new message.
 */
export const AddReactionResponseSchema: GenMessage<AddReactionResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 37);

/**
 * リアクション削除リクエスト
 *
 * @generated from message avion.message.v1.RemoveReactionRequest
 */
export type RemoveReactionRequest = Message<"avion.message.v1.RemoveReactionRequest"> & {
  /**
   * リアクションID
   *
   * @generated from field: string reaction_id = 1;
   */
  reactionId: string;
};

/**
 * Describes the message avion.message.v1.RemoveReactionRequest.
 * Use `create(RemoveReactionRequestSchema)` to create a new message.
 */
export const RemoveReactionRequestSchema: GenMessage<RemoveReactionRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 38);

/**
 * リアクション削除レスポンス
 *
 * @generated from message avion.message.v1.RemoveReactionResponse
 */
export type RemoveReactionResponse = Message<"avion.message.v1.RemoveReactionResponse"> & {
  /**
   * 削除成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.message.v1.RemoveReactionResponse.
 * Use `create(RemoveReactionResponseSchema)` to create a new message.
 */
export const RemoveReactionResponseSchema: GenMessage<RemoveReactionResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 39);

/**
 * リアクション一覧取得リクエスト
 *
 * @generated from message avion.message.v1.ListReactionsRequest
 */
export type ListReactionsRequest = Message<"avion.message.v1.ListReactionsRequest"> & {
  /**
   * メッセージID
   *
   * @generated from field: string message_id = 1;
   */
  messageId: string;

  /**
   * リアクションタイプフィルター
   *
   * @generated from field: avion.message.v1.ReactionType type = 2;
   */
  type: ReactionType;
};

/**
 * Describes the message avion.message.v1.ListReactionsRequest.
 * Use `create(ListReactionsRequestSchema)` to create a new message.
 */
export const ListReactionsRequestSchema: GenMessage<ListReactionsRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 40);

/**
 * リアクション一覧取得レスポンス
 *
 * @generated from message avion.message.v1.ListReactionsResponse
 */
export type ListReactionsResponse = Message<"avion.message.v1.ListReactionsResponse"> & {
  /**
   * リアクションリスト
   *
   * @generated from field: repeated avion.message.v1.MessageReaction reactions = 1;
   */
  reactions: MessageReaction[];

  /**
   * リアクションサマリー（タイプごとのカウント）
   *
   * @generated from field: map<string, int32> reaction_counts = 2;
   */
  reactionCounts: { [key: string]: number };
};

/**
 * Describes the message avion.message.v1.ListReactionsResponse.
 * Use `create(ListReactionsResponseSchema)` to create a new message.
 */
export const ListReactionsResponseSchema: GenMessage<ListReactionsResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 41);

/**
 * 添付ファイルアップロードリクエスト
 *
 * @generated from message avion.message.v1.UploadAttachmentRequest
 */
export type UploadAttachmentRequest = Message<"avion.message.v1.UploadAttachmentRequest"> & {
  /**
   * @generated from oneof avion.message.v1.UploadAttachmentRequest.data
   */
  data: {
    /**
     * メタデータ（最初のメッセージ）
     *
     * @generated from field: avion.message.v1.AttachmentMetadata metadata = 1;
     */
    value: AttachmentMetadata;
    case: "metadata";
  } | {
    /**
     * ファイルデータチャンク
     *
     * @generated from field: bytes chunk = 2;
     */
    value: Uint8Array;
    case: "chunk";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message avion.message.v1.UploadAttachmentRequest.
 * Use `create(UploadAttachmentRequestSchema)` to create a new message.
 */
export const UploadAttachmentRequestSchema: GenMessage<UploadAttachmentRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 42);

/**
 * 添付ファイルメタデータ
 *
 * @generated from message avion.message.v1.AttachmentMetadata
 */
export type AttachmentMetadata = Message<"avion.message.v1.AttachmentMetadata"> & {
  /**
   * ファイル名
   *
   * @generated from field: string filename = 1;
   */
  filename: string;

  /**
   * MIMEタイプ
   *
   * @generated from field: string mime_type = 2;
   */
  mimeType: string;

  /**
   * ファイルサイズ
   *
   * @generated from field: int64 size = 3;
   */
  size: bigint;

  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 4;
   */
  conversationId: string;
};

/**
 * Describes the message avion.message.v1.AttachmentMetadata.
 * Use `create(AttachmentMetadataSchema)` to create a new message.
 */
export const AttachmentMetadataSchema: GenMessage<AttachmentMetadata> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 43);

/**
 * 添付ファイルアップロードレスポンス
 *
 * @generated from message avion.message.v1.UploadAttachmentResponse
 */
export type UploadAttachmentResponse = Message<"avion.message.v1.UploadAttachmentResponse"> & {
  /**
   * アップロードされた添付ファイル
   *
   * @generated from field: avion.message.v1.MessageAttachment attachment = 1;
   */
  attachment?: MessageAttachment;
};

/**
 * Describes the message avion.message.v1.UploadAttachmentResponse.
 * Use `create(UploadAttachmentResponseSchema)` to create a new message.
 */
export const UploadAttachmentResponseSchema: GenMessage<UploadAttachmentResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 44);

/**
 * 添付ファイルダウンロードリクエスト
 *
 * @generated from message avion.message.v1.DownloadAttachmentRequest
 */
export type DownloadAttachmentRequest = Message<"avion.message.v1.DownloadAttachmentRequest"> & {
  /**
   * 添付ファイルID
   *
   * @generated from field: string attachment_id = 1;
   */
  attachmentId: string;

  /**
   * サムネイルのみダウンロード
   *
   * @generated from field: bool thumbnail_only = 2;
   */
  thumbnailOnly: boolean;
};

/**
 * Describes the message avion.message.v1.DownloadAttachmentRequest.
 * Use `create(DownloadAttachmentRequestSchema)` to create a new message.
 */
export const DownloadAttachmentRequestSchema: GenMessage<DownloadAttachmentRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 45);

/**
 * 添付ファイルダウンロードレスポンス
 *
 * @generated from message avion.message.v1.DownloadAttachmentResponse
 */
export type DownloadAttachmentResponse = Message<"avion.message.v1.DownloadAttachmentResponse"> & {
  /**
   * @generated from oneof avion.message.v1.DownloadAttachmentResponse.data
   */
  data: {
    /**
     * メタデータ（最初のメッセージ）
     *
     * @generated from field: avion.message.v1.MessageAttachment metadata = 1;
     */
    value: MessageAttachment;
    case: "metadata";
  } | {
    /**
     * ファイルデータチャンク
     *
     * @generated from field: bytes chunk = 2;
     */
    value: Uint8Array;
    case: "chunk";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message avion.message.v1.DownloadAttachmentResponse.
 * Use `create(DownloadAttachmentResponseSchema)` to create a new message.
 */
export const DownloadAttachmentResponseSchema: GenMessage<DownloadAttachmentResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 46);

/**
 * メッセージ統計取得リクエスト
 *
 * @generated from message avion.message.v1.GetMessageStatisticsRequest
 */
export type GetMessageStatisticsRequest = Message<"avion.message.v1.GetMessageStatisticsRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;

  /**
   * 期間（開始）
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * 期間（終了）
   *
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message avion.message.v1.GetMessageStatisticsRequest.
 * Use `create(GetMessageStatisticsRequestSchema)` to create a new message.
 */
export const GetMessageStatisticsRequestSchema: GenMessage<GetMessageStatisticsRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 47);

/**
 * メッセージ統計取得レスポンス
 *
 * @generated from message avion.message.v1.GetMessageStatisticsResponse
 */
export type GetMessageStatisticsResponse = Message<"avion.message.v1.GetMessageStatisticsResponse"> & {
  /**
   * 統計情報
   *
   * @generated from field: avion.message.v1.MessageStatistics statistics = 1;
   */
  statistics?: MessageStatistics;
};

/**
 * Describes the message avion.message.v1.GetMessageStatisticsResponse.
 * Use `create(GetMessageStatisticsResponseSchema)` to create a new message.
 */
export const GetMessageStatisticsResponseSchema: GenMessage<GetMessageStatisticsResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 48);

/**
 * 通知設定取得リクエスト
 *
 * @generated from message avion.message.v1.GetNotificationSettingsRequest
 */
export type GetNotificationSettingsRequest = Message<"avion.message.v1.GetNotificationSettingsRequest"> & {
  /**
   * ユーザーID（省略時は認証ユーザー）
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * Describes the message avion.message.v1.GetNotificationSettingsRequest.
 * Use `create(GetNotificationSettingsRequestSchema)` to create a new message.
 */
export const GetNotificationSettingsRequestSchema: GenMessage<GetNotificationSettingsRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 49);

/**
 * 通知設定取得レスポンス
 *
 * @generated from message avion.message.v1.GetNotificationSettingsResponse
 */
export type GetNotificationSettingsResponse = Message<"avion.message.v1.GetNotificationSettingsResponse"> & {
  /**
   * 通知設定
   *
   * @generated from field: avion.message.v1.MessageNotificationSettings settings = 1;
   */
  settings?: MessageNotificationSettings;
};

/**
 * Describes the message avion.message.v1.GetNotificationSettingsResponse.
 * Use `create(GetNotificationSettingsResponseSchema)` to create a new message.
 */
export const GetNotificationSettingsResponseSchema: GenMessage<GetNotificationSettingsResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 50);

/**
 * 通知設定更新リクエスト
 *
 * @generated from message avion.message.v1.UpdateNotificationSettingsRequest
 */
export type UpdateNotificationSettingsRequest = Message<"avion.message.v1.UpdateNotificationSettingsRequest"> & {
  /**
   * 通知設定
   *
   * @generated from field: avion.message.v1.MessageNotificationSettings settings = 1;
   */
  settings?: MessageNotificationSettings;

  /**
   * 更新フィールドマスク
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message avion.message.v1.UpdateNotificationSettingsRequest.
 * Use `create(UpdateNotificationSettingsRequestSchema)` to create a new message.
 */
export const UpdateNotificationSettingsRequestSchema: GenMessage<UpdateNotificationSettingsRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 51);

/**
 * 通知設定更新レスポンス
 *
 * @generated from message avion.message.v1.UpdateNotificationSettingsResponse
 */
export type UpdateNotificationSettingsResponse = Message<"avion.message.v1.UpdateNotificationSettingsResponse"> & {
  /**
   * 更新された通知設定
   *
   * @generated from field: avion.message.v1.MessageNotificationSettings settings = 1;
   */
  settings?: MessageNotificationSettings;
};

/**
 * Describes the message avion.message.v1.UpdateNotificationSettingsResponse.
 * Use `create(UpdateNotificationSettingsResponseSchema)` to create a new message.
 */
export const UpdateNotificationSettingsResponseSchema: GenMessage<UpdateNotificationSettingsResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 52);

/**
 * メッセージストリームリクエスト
 *
 * @generated from message avion.message.v1.StreamMessagesRequest
 */
export type StreamMessagesRequest = Message<"avion.message.v1.StreamMessagesRequest"> & {
  /**
   * 購読する会話ID
   *
   * @generated from field: repeated string conversation_ids = 1;
   */
  conversationIds: string[];

  /**
   * イベントタイプフィルター
   *
   * @generated from field: repeated avion.message.v1.MessageEventType event_types = 2;
   */
  eventTypes: MessageEventType[];
};

/**
 * Describes the message avion.message.v1.StreamMessagesRequest.
 * Use `create(StreamMessagesRequestSchema)` to create a new message.
 */
export const StreamMessagesRequestSchema: GenMessage<StreamMessagesRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 53);

/**
 * メッセージストリームレスポンス
 *
 * @generated from message avion.message.v1.StreamMessagesResponse
 */
export type StreamMessagesResponse = Message<"avion.message.v1.StreamMessagesResponse"> & {
  /**
   * メッセージイベント
   *
   * @generated from field: avion.message.v1.MessageEvent event = 1;
   */
  event?: MessageEvent;
};

/**
 * Describes the message avion.message.v1.StreamMessagesResponse.
 * Use `create(StreamMessagesResponseSchema)` to create a new message.
 */
export const StreamMessagesResponseSchema: GenMessage<StreamMessagesResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 54);

/**
 * メッセージイベント
 *
 * @generated from message avion.message.v1.MessageEvent
 */
export type MessageEvent = Message<"avion.message.v1.MessageEvent"> & {
  /**
   * イベントタイプ
   *
   * @generated from field: avion.message.v1.MessageEventType type = 1;
   */
  type: MessageEventType;

  /**
   * イベント発生時刻
   *
   * @generated from field: google.protobuf.Timestamp timestamp = 2;
   */
  timestamp?: Timestamp;

  /**
   * イベントペイロード
   *
   * @generated from oneof avion.message.v1.MessageEvent.payload
   */
  payload: {
    /**
     * 新規メッセージ
     *
     * @generated from field: avion.message.v1.Message new_message = 3;
     */
    value: Message$1;
    case: "newMessage";
  } | {
    /**
     * 更新されたメッセージ
     *
     * @generated from field: avion.message.v1.Message updated_message = 4;
     */
    value: Message$1;
    case: "updatedMessage";
  } | {
    /**
     * 削除されたメッセージID
     *
     * @generated from field: string deleted_message_id = 5;
     */
    value: string;
    case: "deletedMessageId";
  } | {
    /**
     * タイピングインジケーター
     *
     * @generated from field: avion.message.v1.TypingIndicator typing_indicator = 6;
     */
    value: TypingIndicator;
    case: "typingIndicator";
  } | {
    /**
     * 既読レシート
     *
     * @generated from field: avion.message.v1.ReadReceipt read_receipt = 7;
     */
    value: ReadReceipt;
    case: "readReceipt";
  } | {
    /**
     * リアクションイベント
     *
     * @generated from field: avion.message.v1.ReactionEvent reaction_event = 8;
     */
    value: ReactionEvent;
    case: "reactionEvent";
  } | {
    /**
     * 会話更新
     *
     * @generated from field: avion.message.v1.Conversation conversation_update = 9;
     */
    value: Conversation;
    case: "conversationUpdate";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message avion.message.v1.MessageEvent.
 * Use `create(MessageEventSchema)` to create a new message.
 */
export const MessageEventSchema: GenMessage<MessageEvent> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 55);

/**
 * リアクションイベント
 *
 * @generated from message avion.message.v1.ReactionEvent
 */
export type ReactionEvent = Message<"avion.message.v1.ReactionEvent"> & {
  /**
   * アクション（added/removed）
   *
   * @generated from field: string action = 1;
   */
  action: string;

  /**
   * リアクション
   *
   * @generated from field: avion.message.v1.MessageReaction reaction = 2;
   */
  reaction?: MessageReaction;
};

/**
 * Describes the message avion.message.v1.ReactionEvent.
 * Use `create(ReactionEventSchema)` to create a new message.
 */
export const ReactionEventSchema: GenMessage<ReactionEvent> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 56);

/**
 * 会話アーカイブリクエスト
 *
 * @generated from message avion.message.v1.ArchiveConversationRequest
 */
export type ArchiveConversationRequest = Message<"avion.message.v1.ArchiveConversationRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;
};

/**
 * Describes the message avion.message.v1.ArchiveConversationRequest.
 * Use `create(ArchiveConversationRequestSchema)` to create a new message.
 */
export const ArchiveConversationRequestSchema: GenMessage<ArchiveConversationRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 57);

/**
 * 会話アーカイブレスポンス
 *
 * @generated from message avion.message.v1.ArchiveConversationResponse
 */
export type ArchiveConversationResponse = Message<"avion.message.v1.ArchiveConversationResponse"> & {
  /**
   * 成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.message.v1.ArchiveConversationResponse.
 * Use `create(ArchiveConversationResponseSchema)` to create a new message.
 */
export const ArchiveConversationResponseSchema: GenMessage<ArchiveConversationResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 58);

/**
 * 会話アーカイブ解除リクエスト
 *
 * @generated from message avion.message.v1.UnarchiveConversationRequest
 */
export type UnarchiveConversationRequest = Message<"avion.message.v1.UnarchiveConversationRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;
};

/**
 * Describes the message avion.message.v1.UnarchiveConversationRequest.
 * Use `create(UnarchiveConversationRequestSchema)` to create a new message.
 */
export const UnarchiveConversationRequestSchema: GenMessage<UnarchiveConversationRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 59);

/**
 * 会話アーカイブ解除レスポンス
 *
 * @generated from message avion.message.v1.UnarchiveConversationResponse
 */
export type UnarchiveConversationResponse = Message<"avion.message.v1.UnarchiveConversationResponse"> & {
  /**
   * 成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.message.v1.UnarchiveConversationResponse.
 * Use `create(UnarchiveConversationResponseSchema)` to create a new message.
 */
export const UnarchiveConversationResponseSchema: GenMessage<UnarchiveConversationResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 60);

/**
 * 会話ミュートリクエスト
 *
 * @generated from message avion.message.v1.MuteConversationRequest
 */
export type MuteConversationRequest = Message<"avion.message.v1.MuteConversationRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;

  /**
   * ミュート期限（省略時は無期限）
   *
   * @generated from field: google.protobuf.Timestamp until = 2;
   */
  until?: Timestamp;
};

/**
 * Describes the message avion.message.v1.MuteConversationRequest.
 * Use `create(MuteConversationRequestSchema)` to create a new message.
 */
export const MuteConversationRequestSchema: GenMessage<MuteConversationRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 61);

/**
 * 会話ミュートレスポンス
 *
 * @generated from message avion.message.v1.MuteConversationResponse
 */
export type MuteConversationResponse = Message<"avion.message.v1.MuteConversationResponse"> & {
  /**
   * 成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.message.v1.MuteConversationResponse.
 * Use `create(MuteConversationResponseSchema)` to create a new message.
 */
export const MuteConversationResponseSchema: GenMessage<MuteConversationResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 62);

/**
 * 会話ミュート解除リクエスト
 *
 * @generated from message avion.message.v1.UnmuteConversationRequest
 */
export type UnmuteConversationRequest = Message<"avion.message.v1.UnmuteConversationRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;
};

/**
 * Describes the message avion.message.v1.UnmuteConversationRequest.
 * Use `create(UnmuteConversationRequestSchema)` to create a new message.
 */
export const UnmuteConversationRequestSchema: GenMessage<UnmuteConversationRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 63);

/**
 * 会話ミュート解除レスポンス
 *
 * @generated from message avion.message.v1.UnmuteConversationResponse
 */
export type UnmuteConversationResponse = Message<"avion.message.v1.UnmuteConversationResponse"> & {
  /**
   * 成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.message.v1.UnmuteConversationResponse.
 * Use `create(UnmuteConversationResponseSchema)` to create a new message.
 */
export const UnmuteConversationResponseSchema: GenMessage<UnmuteConversationResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 64);

/**
 * 会話ピン留めリクエスト
 *
 * @generated from message avion.message.v1.PinConversationRequest
 */
export type PinConversationRequest = Message<"avion.message.v1.PinConversationRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;
};

/**
 * Describes the message avion.message.v1.PinConversationRequest.
 * Use `create(PinConversationRequestSchema)` to create a new message.
 */
export const PinConversationRequestSchema: GenMessage<PinConversationRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 65);

/**
 * 会話ピン留めレスポンス
 *
 * @generated from message avion.message.v1.PinConversationResponse
 */
export type PinConversationResponse = Message<"avion.message.v1.PinConversationResponse"> & {
  /**
   * 成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.message.v1.PinConversationResponse.
 * Use `create(PinConversationResponseSchema)` to create a new message.
 */
export const PinConversationResponseSchema: GenMessage<PinConversationResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 66);

/**
 * 会話ピン留め解除リクエスト
 *
 * @generated from message avion.message.v1.UnpinConversationRequest
 */
export type UnpinConversationRequest = Message<"avion.message.v1.UnpinConversationRequest"> & {
  /**
   * 会話ID
   *
   * @generated from field: string conversation_id = 1;
   */
  conversationId: string;
};

/**
 * Describes the message avion.message.v1.UnpinConversationRequest.
 * Use `create(UnpinConversationRequestSchema)` to create a new message.
 */
export const UnpinConversationRequestSchema: GenMessage<UnpinConversationRequest> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 67);

/**
 * 会話ピン留め解除レスポンス
 *
 * @generated from message avion.message.v1.UnpinConversationResponse
 */
export type UnpinConversationResponse = Message<"avion.message.v1.UnpinConversationResponse"> & {
  /**
   * 成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.message.v1.UnpinConversationResponse.
 * Use `create(UnpinConversationResponseSchema)` to create a new message.
 */
export const UnpinConversationResponseSchema: GenMessage<UnpinConversationResponse> = /*@__PURE__*/
  messageDesc(file_avion_message_v1_message_service, 68);

/**
 * メッセージイベントタイプ
 *
 * @generated from enum avion.message.v1.MessageEventType
 */
export enum MessageEventType {
  /**
   * 未指定
   *
   * @generated from enum value: MESSAGE_EVENT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 新規メッセージ
   *
   * @generated from enum value: MESSAGE_EVENT_TYPE_NEW_MESSAGE = 1;
   */
  NEW_MESSAGE = 1,

  /**
   * メッセージ更新
   *
   * @generated from enum value: MESSAGE_EVENT_TYPE_MESSAGE_UPDATED = 2;
   */
  MESSAGE_UPDATED = 2,

  /**
   * メッセージ削除
   *
   * @generated from enum value: MESSAGE_EVENT_TYPE_MESSAGE_DELETED = 3;
   */
  MESSAGE_DELETED = 3,

  /**
   * タイピング状態
   *
   * @generated from enum value: MESSAGE_EVENT_TYPE_TYPING = 4;
   */
  TYPING = 4,

  /**
   * 既読状態
   *
   * @generated from enum value: MESSAGE_EVENT_TYPE_READ = 5;
   */
  READ = 5,

  /**
   * リアクション追加
   *
   * @generated from enum value: MESSAGE_EVENT_TYPE_REACTION_ADDED = 6;
   */
  REACTION_ADDED = 6,

  /**
   * リアクション削除
   *
   * @generated from enum value: MESSAGE_EVENT_TYPE_REACTION_REMOVED = 7;
   */
  REACTION_REMOVED = 7,

  /**
   * 会話更新
   *
   * @generated from enum value: MESSAGE_EVENT_TYPE_CONVERSATION_UPDATED = 8;
   */
  CONVERSATION_UPDATED = 8,

  /**
   * 参加者追加
   *
   * @generated from enum value: MESSAGE_EVENT_TYPE_PARTICIPANT_ADDED = 9;
   */
  PARTICIPANT_ADDED = 9,

  /**
   * 参加者削除
   *
   * @generated from enum value: MESSAGE_EVENT_TYPE_PARTICIPANT_REMOVED = 10;
   */
  PARTICIPANT_REMOVED = 10,
}

/**
 * Describes the enum avion.message.v1.MessageEventType.
 */
export const MessageEventTypeSchema: GenEnum<MessageEventType> = /*@__PURE__*/
  enumDesc(file_avion_message_v1_message_service, 0);

/**
 * メッセージサービス
 *
 * @generated from service avion.message.v1.MessageService
 */
export const MessageService: GenService<{
  /**
   * メッセージ送信
   *
   * @generated from rpc avion.message.v1.MessageService.SendMessage
   */
  sendMessage: {
    methodKind: "unary";
    input: typeof SendMessageRequestSchema;
    output: typeof SendMessageResponseSchema;
  },
  /**
   * メッセージ取得
   *
   * @generated from rpc avion.message.v1.MessageService.GetMessage
   */
  getMessage: {
    methodKind: "unary";
    input: typeof GetMessageRequestSchema;
    output: typeof GetMessageResponseSchema;
  },
  /**
   * メッセージ更新（編集）
   *
   * @generated from rpc avion.message.v1.MessageService.UpdateMessage
   */
  updateMessage: {
    methodKind: "unary";
    input: typeof UpdateMessageRequestSchema;
    output: typeof UpdateMessageResponseSchema;
  },
  /**
   * メッセージ削除
   *
   * @generated from rpc avion.message.v1.MessageService.DeleteMessage
   */
  deleteMessage: {
    methodKind: "unary";
    input: typeof DeleteMessageRequestSchema;
    output: typeof DeleteMessageResponseSchema;
  },
  /**
   * メッセージ一覧取得
   *
   * @generated from rpc avion.message.v1.MessageService.ListMessages
   */
  listMessages: {
    methodKind: "unary";
    input: typeof ListMessagesRequestSchema;
    output: typeof ListMessagesResponseSchema;
  },
  /**
   * メッセージ検索
   *
   * @generated from rpc avion.message.v1.MessageService.SearchMessages
   */
  searchMessages: {
    methodKind: "unary";
    input: typeof SearchMessagesRequestSchema;
    output: typeof SearchMessagesResponseSchema;
  },
  /**
   * 会話作成
   *
   * @generated from rpc avion.message.v1.MessageService.CreateConversation
   */
  createConversation: {
    methodKind: "unary";
    input: typeof CreateConversationRequestSchema;
    output: typeof CreateConversationResponseSchema;
  },
  /**
   * 会話取得
   *
   * @generated from rpc avion.message.v1.MessageService.GetConversation
   */
  getConversation: {
    methodKind: "unary";
    input: typeof GetConversationRequestSchema;
    output: typeof GetConversationResponseSchema;
  },
  /**
   * 会話更新
   *
   * @generated from rpc avion.message.v1.MessageService.UpdateConversation
   */
  updateConversation: {
    methodKind: "unary";
    input: typeof UpdateConversationRequestSchema;
    output: typeof UpdateConversationResponseSchema;
  },
  /**
   * 会話削除
   *
   * @generated from rpc avion.message.v1.MessageService.DeleteConversation
   */
  deleteConversation: {
    methodKind: "unary";
    input: typeof DeleteConversationRequestSchema;
    output: typeof DeleteConversationResponseSchema;
  },
  /**
   * 会話一覧取得
   *
   * @generated from rpc avion.message.v1.MessageService.ListConversations
   */
  listConversations: {
    methodKind: "unary";
    input: typeof ListConversationsRequestSchema;
    output: typeof ListConversationsResponseSchema;
  },
  /**
   * 会話参加者追加
   *
   * @generated from rpc avion.message.v1.MessageService.AddParticipants
   */
  addParticipants: {
    methodKind: "unary";
    input: typeof AddParticipantsRequestSchema;
    output: typeof AddParticipantsResponseSchema;
  },
  /**
   * 会話参加者削除
   *
   * @generated from rpc avion.message.v1.MessageService.RemoveParticipants
   */
  removeParticipants: {
    methodKind: "unary";
    input: typeof RemoveParticipantsRequestSchema;
    output: typeof RemoveParticipantsResponseSchema;
  },
  /**
   * 会話から退出
   *
   * @generated from rpc avion.message.v1.MessageService.LeaveConversation
   */
  leaveConversation: {
    methodKind: "unary";
    input: typeof LeaveConversationRequestSchema;
    output: typeof LeaveConversationResponseSchema;
  },
  /**
   * 既読状態更新
   *
   * @generated from rpc avion.message.v1.MessageService.MarkAsRead
   */
  markAsRead: {
    methodKind: "unary";
    input: typeof MarkAsReadRequestSchema;
    output: typeof MarkAsReadResponseSchema;
  },
  /**
   * 既読レシート取得
   *
   * @generated from rpc avion.message.v1.MessageService.GetReadReceipts
   */
  getReadReceipts: {
    methodKind: "unary";
    input: typeof GetReadReceiptsRequestSchema;
    output: typeof GetReadReceiptsResponseSchema;
  },
  /**
   * タイピング状態送信
   *
   * @generated from rpc avion.message.v1.MessageService.SendTypingIndicator
   */
  sendTypingIndicator: {
    methodKind: "unary";
    input: typeof SendTypingIndicatorRequestSchema;
    output: typeof SendTypingIndicatorResponseSchema;
  },
  /**
   * タイピング状態受信（ストリーミング）
   *
   * @generated from rpc avion.message.v1.MessageService.StreamTypingIndicators
   */
  streamTypingIndicators: {
    methodKind: "server_streaming";
    input: typeof StreamTypingIndicatorsRequestSchema;
    output: typeof StreamTypingIndicatorsResponseSchema;
  },
  /**
   * リアクション追加
   *
   * @generated from rpc avion.message.v1.MessageService.AddReaction
   */
  addReaction: {
    methodKind: "unary";
    input: typeof AddReactionRequestSchema;
    output: typeof AddReactionResponseSchema;
  },
  /**
   * リアクション削除
   *
   * @generated from rpc avion.message.v1.MessageService.RemoveReaction
   */
  removeReaction: {
    methodKind: "unary";
    input: typeof RemoveReactionRequestSchema;
    output: typeof RemoveReactionResponseSchema;
  },
  /**
   * リアクション一覧取得
   *
   * @generated from rpc avion.message.v1.MessageService.ListReactions
   */
  listReactions: {
    methodKind: "unary";
    input: typeof ListReactionsRequestSchema;
    output: typeof ListReactionsResponseSchema;
  },
  /**
   * 添付ファイルアップロード
   *
   * @generated from rpc avion.message.v1.MessageService.UploadAttachment
   */
  uploadAttachment: {
    methodKind: "client_streaming";
    input: typeof UploadAttachmentRequestSchema;
    output: typeof UploadAttachmentResponseSchema;
  },
  /**
   * 添付ファイルダウンロード
   *
   * @generated from rpc avion.message.v1.MessageService.DownloadAttachment
   */
  downloadAttachment: {
    methodKind: "server_streaming";
    input: typeof DownloadAttachmentRequestSchema;
    output: typeof DownloadAttachmentResponseSchema;
  },
  /**
   * メッセージ統計取得
   *
   * @generated from rpc avion.message.v1.MessageService.GetMessageStatistics
   */
  getMessageStatistics: {
    methodKind: "unary";
    input: typeof GetMessageStatisticsRequestSchema;
    output: typeof GetMessageStatisticsResponseSchema;
  },
  /**
   * 通知設定取得
   *
   * @generated from rpc avion.message.v1.MessageService.GetNotificationSettings
   */
  getNotificationSettings: {
    methodKind: "unary";
    input: typeof GetNotificationSettingsRequestSchema;
    output: typeof GetNotificationSettingsResponseSchema;
  },
  /**
   * 通知設定更新
   *
   * @generated from rpc avion.message.v1.MessageService.UpdateNotificationSettings
   */
  updateNotificationSettings: {
    methodKind: "unary";
    input: typeof UpdateNotificationSettingsRequestSchema;
    output: typeof UpdateNotificationSettingsResponseSchema;
  },
  /**
   * リアルタイムメッセージストリーム
   *
   * @generated from rpc avion.message.v1.MessageService.StreamMessages
   */
  streamMessages: {
    methodKind: "server_streaming";
    input: typeof StreamMessagesRequestSchema;
    output: typeof StreamMessagesResponseSchema;
  },
  /**
   * 会話のアーカイブ
   *
   * @generated from rpc avion.message.v1.MessageService.ArchiveConversation
   */
  archiveConversation: {
    methodKind: "unary";
    input: typeof ArchiveConversationRequestSchema;
    output: typeof ArchiveConversationResponseSchema;
  },
  /**
   * 会話のアーカイブ解除
   *
   * @generated from rpc avion.message.v1.MessageService.UnarchiveConversation
   */
  unarchiveConversation: {
    methodKind: "unary";
    input: typeof UnarchiveConversationRequestSchema;
    output: typeof UnarchiveConversationResponseSchema;
  },
  /**
   * 会話のミュート
   *
   * @generated from rpc avion.message.v1.MessageService.MuteConversation
   */
  muteConversation: {
    methodKind: "unary";
    input: typeof MuteConversationRequestSchema;
    output: typeof MuteConversationResponseSchema;
  },
  /**
   * 会話のミュート解除
   *
   * @generated from rpc avion.message.v1.MessageService.UnmuteConversation
   */
  unmuteConversation: {
    methodKind: "unary";
    input: typeof UnmuteConversationRequestSchema;
    output: typeof UnmuteConversationResponseSchema;
  },
  /**
   * 会話のピン留め
   *
   * @generated from rpc avion.message.v1.MessageService.PinConversation
   */
  pinConversation: {
    methodKind: "unary";
    input: typeof PinConversationRequestSchema;
    output: typeof PinConversationResponseSchema;
  },
  /**
   * 会話のピン留め解除
   *
   * @generated from rpc avion.message.v1.MessageService.UnpinConversation
   */
  unpinConversation: {
    methodKind: "unary";
    input: typeof UnpinConversationRequestSchema;
    output: typeof UnpinConversationResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_avion_message_v1_message_service, 0);

