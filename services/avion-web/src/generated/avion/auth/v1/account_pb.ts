// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file avion/auth/v1/account.proto (package avion.auth.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Any, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { User } from "./auth_pb";
import { file_avion_auth_v1_auth } from "./auth_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file avion/auth/v1/account.proto.
 */
export const file_avion_auth_v1_account: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_timestamp, file_google_protobuf_any, file_avion_auth_v1_auth]);

/**
 * アカウント復旧リクエスト
 *
 * @generated from message avion.auth.v1.RecoverAccountRequest
 */
export type RecoverAccountRequest = Message<"avion.auth.v1.RecoverAccountRequest"> & {
  /**
   * 復旧対象のメールアドレス
   *
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * 復旧コード（削除時に発行された復旧コード）
   *
   * @generated from field: string recovery_code = 2;
   */
  recoveryCode: string;

  /**
   * 本人確認のための追加情報
   *
   * @generated from field: avion.auth.v1.RecoveryVerification verification = 3;
   */
  verification?: RecoveryVerification;
};

/**
 * Describes the message avion.auth.v1.RecoverAccountRequest.
 * Use `create(RecoverAccountRequestSchema)` to create a new message.
 */
export const RecoverAccountRequestSchema: GenMessage<RecoverAccountRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 0);

/**
 * 本人確認情報
 *
 * @generated from message avion.auth.v1.RecoveryVerification
 */
export type RecoveryVerification = Message<"avion.auth.v1.RecoveryVerification"> & {
  /**
   * 登録時のユーザー名
   *
   * @generated from field: string original_username = 1;
   */
  originalUsername: string;

  /**
   * 最後にログインした時期（おおよその日付）
   *
   * @generated from field: google.protobuf.Timestamp last_login_approximate = 2;
   */
  lastLoginApproximate?: Timestamp;

  /**
   * セキュリティ質問の回答（設定されている場合）
   *
   * @generated from field: repeated avion.auth.v1.SecurityAnswer security_answers = 3;
   */
  securityAnswers: SecurityAnswer[];
};

/**
 * Describes the message avion.auth.v1.RecoveryVerification.
 * Use `create(RecoveryVerificationSchema)` to create a new message.
 */
export const RecoveryVerificationSchema: GenMessage<RecoveryVerification> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 1);

/**
 * セキュリティ質問の回答
 *
 * @generated from message avion.auth.v1.SecurityAnswer
 */
export type SecurityAnswer = Message<"avion.auth.v1.SecurityAnswer"> & {
  /**
   * 質問ID
   *
   * @generated from field: string question_id = 1;
   */
  questionId: string;

  /**
   * 回答
   *
   * @generated from field: string answer = 2;
   */
  answer: string;
};

/**
 * Describes the message avion.auth.v1.SecurityAnswer.
 * Use `create(SecurityAnswerSchema)` to create a new message.
 */
export const SecurityAnswerSchema: GenMessage<SecurityAnswer> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 2);

/**
 * アカウント復旧レスポンス
 *
 * @generated from message avion.auth.v1.RecoverAccountResponse
 */
export type RecoverAccountResponse = Message<"avion.auth.v1.RecoverAccountResponse"> & {
  /**
   * 復旧成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * 復旧されたユーザー情報
   *
   * @generated from field: avion.auth.v1.User recovered_user = 2;
   */
  recoveredUser?: User;

  /**
   * 新しいアクセストークン
   *
   * @generated from field: string access_token = 3;
   */
  accessToken: string;

  /**
   * 新しいリフレッシュトークン
   *
   * @generated from field: string refresh_token = 4;
   */
  refreshToken: string;

  /**
   * パスワードリセットが必要かどうか
   *
   * @generated from field: bool password_reset_required = 5;
   */
  passwordResetRequired: boolean;

  /**
   * エラーメッセージ（失敗時）
   *
   * @generated from field: string error_message = 6;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.auth.v1.RecoverAccountResponse.
 * Use `create(RecoverAccountResponseSchema)` to create a new message.
 */
export const RecoverAccountResponseSchema: GenMessage<RecoverAccountResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 3);

/**
 * アカウントエクスポートリクエスト
 *
 * @generated from message avion.auth.v1.ExportAccountDataRequest
 */
export type ExportAccountDataRequest = Message<"avion.auth.v1.ExportAccountDataRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * エクスポート形式
   *
   * @generated from field: avion.auth.v1.ExportFormat format = 2;
   */
  format: ExportFormat;

  /**
   * エクスポート範囲
   *
   * @generated from field: avion.auth.v1.ExportScope scope = 3;
   */
  scope: ExportScope;

  /**
   * データカテゴリのフィルタ（空の場合は全て）
   *
   * @generated from field: repeated avion.auth.v1.DataCategory categories = 4;
   */
  categories: DataCategory[];

  /**
   * 期間指定（オプション）
   *
   * @generated from field: avion.auth.v1.DateRange date_range = 5;
   */
  dateRange?: DateRange;
};

/**
 * Describes the message avion.auth.v1.ExportAccountDataRequest.
 * Use `create(ExportAccountDataRequestSchema)` to create a new message.
 */
export const ExportAccountDataRequestSchema: GenMessage<ExportAccountDataRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 4);

/**
 * 日付範囲
 *
 * @generated from message avion.auth.v1.DateRange
 */
export type DateRange = Message<"avion.auth.v1.DateRange"> & {
  /**
   * @generated from field: google.protobuf.Timestamp start = 1;
   */
  start?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end = 2;
   */
  end?: Timestamp;
};

/**
 * Describes the message avion.auth.v1.DateRange.
 * Use `create(DateRangeSchema)` to create a new message.
 */
export const DateRangeSchema: GenMessage<DateRange> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 5);

/**
 * アカウントエクスポートレスポンス
 *
 * @generated from message avion.auth.v1.ExportAccountDataResponse
 */
export type ExportAccountDataResponse = Message<"avion.auth.v1.ExportAccountDataResponse"> & {
  /**
   * エクスポート成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * エクスポートジョブID（非同期処理用）
   *
   * @generated from field: string export_job_id = 2;
   */
  exportJobId: string;

  /**
   * ダウンロードURL（同期処理の場合）
   *
   * @generated from field: string download_url = 3;
   */
  downloadUrl: string;

  /**
   * ダウンロードURL有効期限
   *
   * @generated from field: google.protobuf.Timestamp download_expires_at = 4;
   */
  downloadExpiresAt?: Timestamp;

  /**
   * エクスポートファイルサイズ（バイト）
   *
   * @generated from field: int64 file_size_bytes = 5;
   */
  fileSizeBytes: bigint;

  /**
   * 処理ステータス
   *
   * @generated from field: avion.auth.v1.ExportStatus status = 6;
   */
  status: ExportStatus;

  /**
   * エラーメッセージ（失敗時）
   *
   * @generated from field: string error_message = 7;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.auth.v1.ExportAccountDataResponse.
 * Use `create(ExportAccountDataResponseSchema)` to create a new message.
 */
export const ExportAccountDataResponseSchema: GenMessage<ExportAccountDataResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 6);

/**
 * エクスポートジョブステータス取得リクエスト
 *
 * @generated from message avion.auth.v1.GetExportStatusRequest
 */
export type GetExportStatusRequest = Message<"avion.auth.v1.GetExportStatusRequest"> & {
  /**
   * エクスポートジョブID
   *
   * @generated from field: string export_job_id = 1;
   */
  exportJobId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;
};

/**
 * Describes the message avion.auth.v1.GetExportStatusRequest.
 * Use `create(GetExportStatusRequestSchema)` to create a new message.
 */
export const GetExportStatusRequestSchema: GenMessage<GetExportStatusRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 7);

/**
 * エクスポートジョブステータス取得レスポンス
 *
 * @generated from message avion.auth.v1.GetExportStatusResponse
 */
export type GetExportStatusResponse = Message<"avion.auth.v1.GetExportStatusResponse"> & {
  /**
   * ジョブID
   *
   * @generated from field: string export_job_id = 1;
   */
  exportJobId: string;

  /**
   * 現在のステータス
   *
   * @generated from field: avion.auth.v1.ExportStatus status = 2;
   */
  status: ExportStatus;

  /**
   * 進捗率（0-100）
   *
   * @generated from field: int32 progress_percentage = 3;
   */
  progressPercentage: number;

  /**
   * ダウンロードURL（完了時）
   *
   * @generated from field: string download_url = 4;
   */
  downloadUrl: string;

  /**
   * エラーメッセージ（失敗時）
   *
   * @generated from field: string error_message = 5;
   */
  errorMessage: string;

  /**
   * 推定完了時刻
   *
   * @generated from field: google.protobuf.Timestamp estimated_completion_at = 6;
   */
  estimatedCompletionAt?: Timestamp;
};

/**
 * Describes the message avion.auth.v1.GetExportStatusResponse.
 * Use `create(GetExportStatusResponseSchema)` to create a new message.
 */
export const GetExportStatusResponseSchema: GenMessage<GetExportStatusResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 8);

/**
 * アカウントインポートリクエスト
 *
 * @generated from message avion.auth.v1.ImportAccountDataRequest
 */
export type ImportAccountDataRequest = Message<"avion.auth.v1.ImportAccountDataRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * インポートファイルURL（事前にアップロード済み）
   *
   * @generated from field: string file_url = 2;
   */
  fileUrl: string;

  /**
   * インポート形式
   *
   * @generated from field: avion.auth.v1.ImportFormat format = 3;
   */
  format: ImportFormat;

  /**
   * インポートオプション
   *
   * @generated from field: avion.auth.v1.ImportOptions options = 4;
   */
  options?: ImportOptions;
};

/**
 * Describes the message avion.auth.v1.ImportAccountDataRequest.
 * Use `create(ImportAccountDataRequestSchema)` to create a new message.
 */
export const ImportAccountDataRequestSchema: GenMessage<ImportAccountDataRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 9);

/**
 * インポートオプション
 *
 * @generated from message avion.auth.v1.ImportOptions
 */
export type ImportOptions = Message<"avion.auth.v1.ImportOptions"> & {
  /**
   * 既存データの処理方法
   *
   * @generated from field: avion.auth.v1.MergeStrategy merge_strategy = 1;
   */
  mergeStrategy: MergeStrategy;

  /**
   * インポートするデータカテゴリ
   *
   * @generated from field: repeated avion.auth.v1.DataCategory categories = 2;
   */
  categories: DataCategory[];

  /**
   * 重複チェックを行うか
   *
   * @generated from field: bool check_duplicates = 3;
   */
  checkDuplicates: boolean;

  /**
   * プライバシー設定の適用
   *
   * @generated from field: bool apply_privacy_settings = 4;
   */
  applyPrivacySettings: boolean;
};

/**
 * Describes the message avion.auth.v1.ImportOptions.
 * Use `create(ImportOptionsSchema)` to create a new message.
 */
export const ImportOptionsSchema: GenMessage<ImportOptions> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 10);

/**
 * アカウントインポートレスポンス
 *
 * @generated from message avion.auth.v1.ImportAccountDataResponse
 */
export type ImportAccountDataResponse = Message<"avion.auth.v1.ImportAccountDataResponse"> & {
  /**
   * インポート開始成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * インポートジョブID
   *
   * @generated from field: string import_job_id = 2;
   */
  importJobId: string;

  /**
   * 処理ステータス
   *
   * @generated from field: avion.auth.v1.ImportStatus status = 3;
   */
  status: ImportStatus;

  /**
   * インポート統計
   *
   * @generated from field: avion.auth.v1.ImportStatistics statistics = 4;
   */
  statistics?: ImportStatistics;

  /**
   * エラーメッセージ（失敗時）
   *
   * @generated from field: string error_message = 5;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.auth.v1.ImportAccountDataResponse.
 * Use `create(ImportAccountDataResponseSchema)` to create a new message.
 */
export const ImportAccountDataResponseSchema: GenMessage<ImportAccountDataResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 11);

/**
 * インポート統計
 *
 * @generated from message avion.auth.v1.ImportStatistics
 */
export type ImportStatistics = Message<"avion.auth.v1.ImportStatistics"> & {
  /**
   * 処理済みアイテム数
   *
   * @generated from field: int32 processed_items = 1;
   */
  processedItems: number;

  /**
   * 成功したアイテム数
   *
   * @generated from field: int32 successful_items = 2;
   */
  successfulItems: number;

  /**
   * 失敗したアイテム数
   *
   * @generated from field: int32 failed_items = 3;
   */
  failedItems: number;

  /**
   * スキップしたアイテム数
   *
   * @generated from field: int32 skipped_items = 4;
   */
  skippedItems: number;

  /**
   * カテゴリ別統計
   *
   * @generated from field: map<string, int32> category_counts = 5;
   */
  categoryCounts: { [key: string]: number };
};

/**
 * Describes the message avion.auth.v1.ImportStatistics.
 * Use `create(ImportStatisticsSchema)` to create a new message.
 */
export const ImportStatisticsSchema: GenMessage<ImportStatistics> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 12);

/**
 * 不審なログイン検知設定
 *
 * @generated from message avion.auth.v1.SuspiciousLoginDetectionSettings
 */
export type SuspiciousLoginDetectionSettings = Message<"avion.auth.v1.SuspiciousLoginDetectionSettings"> & {
  /**
   * 検知を有効にするか
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * 新しい場所からのログイン時に通知
   *
   * @generated from field: bool notify_new_location = 2;
   */
  notifyNewLocation: boolean;

  /**
   * 新しいデバイスからのログイン時に通知
   *
   * @generated from field: bool notify_new_device = 3;
   */
  notifyNewDevice: boolean;

  /**
   * 異常なパターン検出時に通知
   *
   * @generated from field: bool notify_unusual_pattern = 4;
   */
  notifyUnusualPattern: boolean;

  /**
   * 自動ブロックを有効にするか
   *
   * @generated from field: bool auto_block_suspicious = 5;
   */
  autoBlockSuspicious: boolean;
};

/**
 * Describes the message avion.auth.v1.SuspiciousLoginDetectionSettings.
 * Use `create(SuspiciousLoginDetectionSettingsSchema)` to create a new message.
 */
export const SuspiciousLoginDetectionSettingsSchema: GenMessage<SuspiciousLoginDetectionSettings> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 13);

/**
 * ログイン履歴エントリ
 *
 * @generated from message avion.auth.v1.LoginHistoryEntry
 */
export type LoginHistoryEntry = Message<"avion.auth.v1.LoginHistoryEntry"> & {
  /**
   * エントリID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * ログイン時刻
   *
   * @generated from field: google.protobuf.Timestamp logged_in_at = 2;
   */
  loggedInAt?: Timestamp;

  /**
   * IPアドレス
   *
   * @generated from field: string ip_address = 3;
   */
  ipAddress: string;

  /**
   * 位置情報
   *
   * @generated from field: avion.auth.v1.LocationInfo location = 4;
   */
  location?: LocationInfo;

  /**
   * デバイス情報
   *
   * @generated from field: avion.auth.v1.DeviceInfo device = 5;
   */
  device?: DeviceInfo;

  /**
   * ログイン方法
   *
   * @generated from field: avion.auth.v1.LoginMethod method = 6;
   */
  method: LoginMethod;

  /**
   * 成功/失敗
   *
   * @generated from field: bool success = 7;
   */
  success: boolean;

  /**
   * 不審フラグ
   *
   * @generated from field: bool suspicious = 8;
   */
  suspicious: boolean;

  /**
   * ブロックされたか
   *
   * @generated from field: bool blocked = 9;
   */
  blocked: boolean;
};

/**
 * Describes the message avion.auth.v1.LoginHistoryEntry.
 * Use `create(LoginHistoryEntrySchema)` to create a new message.
 */
export const LoginHistoryEntrySchema: GenMessage<LoginHistoryEntry> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 14);

/**
 * 位置情報
 *
 * @generated from message avion.auth.v1.LocationInfo
 */
export type LocationInfo = Message<"avion.auth.v1.LocationInfo"> & {
  /**
   * 国コード
   *
   * @generated from field: string country_code = 1;
   */
  countryCode: string;

  /**
   * 国名
   *
   * @generated from field: string country_name = 2;
   */
  countryName: string;

  /**
   * 都市名
   *
   * @generated from field: string city = 3;
   */
  city: string;

  /**
   * 地域/州
   *
   * @generated from field: string region = 4;
   */
  region: string;

  /**
   * 緯度
   *
   * @generated from field: double latitude = 5;
   */
  latitude: number;

  /**
   * 経度
   *
   * @generated from field: double longitude = 6;
   */
  longitude: number;
};

/**
 * Describes the message avion.auth.v1.LocationInfo.
 * Use `create(LocationInfoSchema)` to create a new message.
 */
export const LocationInfoSchema: GenMessage<LocationInfo> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 15);

/**
 * デバイス情報
 *
 * @generated from message avion.auth.v1.DeviceInfo
 */
export type DeviceInfo = Message<"avion.auth.v1.DeviceInfo"> & {
  /**
   * デバイスID
   *
   * @generated from field: string device_id = 1;
   */
  deviceId: string;

  /**
   * デバイスタイプ
   *
   * @generated from field: avion.auth.v1.DeviceType type = 2;
   */
  type: DeviceType;

  /**
   * OS
   *
   * @generated from field: string os = 3;
   */
  os: string;

  /**
   * OSバージョン
   *
   * @generated from field: string os_version = 4;
   */
  osVersion: string;

  /**
   * ブラウザ
   *
   * @generated from field: string browser = 5;
   */
  browser: string;

  /**
   * ブラウザバージョン
   *
   * @generated from field: string browser_version = 6;
   */
  browserVersion: string;

  /**
   * ユーザーエージェント
   *
   * @generated from field: string user_agent = 7;
   */
  userAgent: string;
};

/**
 * Describes the message avion.auth.v1.DeviceInfo.
 * Use `create(DeviceInfoSchema)` to create a new message.
 */
export const DeviceInfoSchema: GenMessage<DeviceInfo> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 16);

/**
 * ログイン履歴取得リクエスト
 *
 * @generated from message avion.auth.v1.GetLoginHistoryRequest
 */
export type GetLoginHistoryRequest = Message<"avion.auth.v1.GetLoginHistoryRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * ページサイズ
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * ページトークン
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * フィルタオプション
   *
   * @generated from field: avion.auth.v1.LoginHistoryFilter filter = 4;
   */
  filter?: LoginHistoryFilter;
};

/**
 * Describes the message avion.auth.v1.GetLoginHistoryRequest.
 * Use `create(GetLoginHistoryRequestSchema)` to create a new message.
 */
export const GetLoginHistoryRequestSchema: GenMessage<GetLoginHistoryRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 17);

/**
 * ログイン履歴フィルタ
 *
 * @generated from message avion.auth.v1.LoginHistoryFilter
 */
export type LoginHistoryFilter = Message<"avion.auth.v1.LoginHistoryFilter"> & {
  /**
   * 期間指定
   *
   * @generated from field: avion.auth.v1.DateRange date_range = 1;
   */
  dateRange?: DateRange;

  /**
   * 成功のみ/失敗のみ
   *
   * @generated from field: optional bool success_only = 2;
   */
  successOnly?: boolean;

  /**
   * 不審なもののみ
   *
   * @generated from field: bool suspicious_only = 3;
   */
  suspiciousOnly: boolean;

  /**
   * デバイスタイプ
   *
   * @generated from field: avion.auth.v1.DeviceType device_type = 4;
   */
  deviceType: DeviceType;

  /**
   * ログイン方法
   *
   * @generated from field: avion.auth.v1.LoginMethod login_method = 5;
   */
  loginMethod: LoginMethod;
};

/**
 * Describes the message avion.auth.v1.LoginHistoryFilter.
 * Use `create(LoginHistoryFilterSchema)` to create a new message.
 */
export const LoginHistoryFilterSchema: GenMessage<LoginHistoryFilter> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 18);

/**
 * ログイン履歴取得レスポンス
 *
 * @generated from message avion.auth.v1.GetLoginHistoryResponse
 */
export type GetLoginHistoryResponse = Message<"avion.auth.v1.GetLoginHistoryResponse"> & {
  /**
   * 履歴エントリ
   *
   * @generated from field: repeated avion.auth.v1.LoginHistoryEntry entries = 1;
   */
  entries: LoginHistoryEntry[];

  /**
   * 次ページトークン
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * 総件数
   *
   * @generated from field: int32 total_count = 3;
   */
  totalCount: number;
};

/**
 * Describes the message avion.auth.v1.GetLoginHistoryResponse.
 * Use `create(GetLoginHistoryResponseSchema)` to create a new message.
 */
export const GetLoginHistoryResponseSchema: GenMessage<GetLoginHistoryResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 19);

/**
 * IPアドレス制限設定
 *
 * @generated from message avion.auth.v1.IpRestrictionSettings
 */
export type IpRestrictionSettings = Message<"avion.auth.v1.IpRestrictionSettings"> & {
  /**
   * IP制限を有効にするか
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * ホワイトリストモード（true）/ ブラックリストモード（false）
   *
   * @generated from field: bool whitelist_mode = 2;
   */
  whitelistMode: boolean;

  /**
   * 許可/拒否するIPアドレス/範囲
   *
   * @generated from field: repeated avion.auth.v1.IpRule rules = 3;
   */
  rules: IpRule[];

  /**
   * 地理的制限
   *
   * @generated from field: avion.auth.v1.GeographicRestriction geographic_restriction = 4;
   */
  geographicRestriction?: GeographicRestriction;
};

/**
 * Describes the message avion.auth.v1.IpRestrictionSettings.
 * Use `create(IpRestrictionSettingsSchema)` to create a new message.
 */
export const IpRestrictionSettingsSchema: GenMessage<IpRestrictionSettings> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 20);

/**
 * IPルール
 *
 * @generated from message avion.auth.v1.IpRule
 */
export type IpRule = Message<"avion.auth.v1.IpRule"> & {
  /**
   * ルールID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * IPアドレスまたはCIDR範囲
   *
   * @generated from field: string ip_or_cidr = 2;
   */
  ipOrCidr: string;

  /**
   * 説明
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * 有効期限（オプション）
   *
   * @generated from field: google.protobuf.Timestamp expires_at = 4;
   */
  expiresAt?: Timestamp;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message avion.auth.v1.IpRule.
 * Use `create(IpRuleSchema)` to create a new message.
 */
export const IpRuleSchema: GenMessage<IpRule> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 21);

/**
 * 地理的制限
 *
 * @generated from message avion.auth.v1.GeographicRestriction
 */
export type GeographicRestriction = Message<"avion.auth.v1.GeographicRestriction"> & {
  /**
   * 制限を有効にするか
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * ホワイトリストモード（true）/ ブラックリストモード（false）
   *
   * @generated from field: bool whitelist_mode = 2;
   */
  whitelistMode: boolean;

  /**
   * 国コードリスト（ISO 3166-1 alpha-2）
   *
   * @generated from field: repeated string country_codes = 3;
   */
  countryCodes: string[];
};

/**
 * Describes the message avion.auth.v1.GeographicRestriction.
 * Use `create(GeographicRestrictionSchema)` to create a new message.
 */
export const GeographicRestrictionSchema: GenMessage<GeographicRestriction> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 22);

/**
 * セキュリティ監査ログエントリ
 *
 * @generated from message avion.auth.v1.SecurityAuditLogEntry
 */
export type SecurityAuditLogEntry = Message<"avion.auth.v1.SecurityAuditLogEntry"> & {
  /**
   * エントリID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * タイムスタンプ
   *
   * @generated from field: google.protobuf.Timestamp timestamp = 2;
   */
  timestamp?: Timestamp;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 3;
   */
  userId: string;

  /**
   * アクション
   *
   * @generated from field: avion.auth.v1.SecurityAction action = 4;
   */
  action: SecurityAction;

  /**
   * リソースタイプ
   *
   * @generated from field: string resource_type = 5;
   */
  resourceType: string;

  /**
   * リソースID
   *
   * @generated from field: string resource_id = 6;
   */
  resourceId: string;

  /**
   * IPアドレス
   *
   * @generated from field: string ip_address = 7;
   */
  ipAddress: string;

  /**
   * デバイス情報
   *
   * @generated from field: avion.auth.v1.DeviceInfo device = 8;
   */
  device?: DeviceInfo;

  /**
   * 結果（成功/失敗）
   *
   * @generated from field: bool success = 9;
   */
  success: boolean;

  /**
   * 詳細情報
   *
   * @generated from field: google.protobuf.Any details = 10;
   */
  details?: Any;

  /**
   * リスクスコア（0-100）
   *
   * @generated from field: int32 risk_score = 11;
   */
  riskScore: number;
};

/**
 * Describes the message avion.auth.v1.SecurityAuditLogEntry.
 * Use `create(SecurityAuditLogEntrySchema)` to create a new message.
 */
export const SecurityAuditLogEntrySchema: GenMessage<SecurityAuditLogEntry> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 23);

/**
 * セキュリティ監査ログ取得リクエスト
 *
 * @generated from message avion.auth.v1.GetSecurityAuditLogRequest
 */
export type GetSecurityAuditLogRequest = Message<"avion.auth.v1.GetSecurityAuditLogRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * ページサイズ
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * ページトークン
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * フィルタオプション
   *
   * @generated from field: avion.auth.v1.AuditLogFilter filter = 4;
   */
  filter?: AuditLogFilter;
};

/**
 * Describes the message avion.auth.v1.GetSecurityAuditLogRequest.
 * Use `create(GetSecurityAuditLogRequestSchema)` to create a new message.
 */
export const GetSecurityAuditLogRequestSchema: GenMessage<GetSecurityAuditLogRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 24);

/**
 * 監査ログフィルタ
 *
 * @generated from message avion.auth.v1.AuditLogFilter
 */
export type AuditLogFilter = Message<"avion.auth.v1.AuditLogFilter"> & {
  /**
   * 期間指定
   *
   * @generated from field: avion.auth.v1.DateRange date_range = 1;
   */
  dateRange?: DateRange;

  /**
   * アクションタイプ
   *
   * @generated from field: repeated avion.auth.v1.SecurityAction actions = 2;
   */
  actions: SecurityAction[];

  /**
   * リソースタイプ
   *
   * @generated from field: string resource_type = 3;
   */
  resourceType: string;

  /**
   * 成功のみ/失敗のみ
   *
   * @generated from field: optional bool success_only = 4;
   */
  successOnly?: boolean;

  /**
   * 最小リスクスコア
   *
   * @generated from field: int32 min_risk_score = 5;
   */
  minRiskScore: number;
};

/**
 * Describes the message avion.auth.v1.AuditLogFilter.
 * Use `create(AuditLogFilterSchema)` to create a new message.
 */
export const AuditLogFilterSchema: GenMessage<AuditLogFilter> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 25);

/**
 * セキュリティ監査ログ取得レスポンス
 *
 * @generated from message avion.auth.v1.GetSecurityAuditLogResponse
 */
export type GetSecurityAuditLogResponse = Message<"avion.auth.v1.GetSecurityAuditLogResponse"> & {
  /**
   * ログエントリ
   *
   * @generated from field: repeated avion.auth.v1.SecurityAuditLogEntry entries = 1;
   */
  entries: SecurityAuditLogEntry[];

  /**
   * 次ページトークン
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * 総件数
   *
   * @generated from field: int32 total_count = 3;
   */
  totalCount: number;
};

/**
 * Describes the message avion.auth.v1.GetSecurityAuditLogResponse.
 * Use `create(GetSecurityAuditLogResponseSchema)` to create a new message.
 */
export const GetSecurityAuditLogResponseSchema: GenMessage<GetSecurityAuditLogResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 26);

/**
 * ユーザー設定
 *
 * @generated from message avion.auth.v1.UserPreferences
 */
export type UserPreferences = Message<"avion.auth.v1.UserPreferences"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * 言語設定
   *
   * @generated from field: avion.auth.v1.LanguageSettings language = 2;
   */
  language?: LanguageSettings;

  /**
   * タイムゾーン設定
   *
   * @generated from field: avion.auth.v1.TimezoneSettings timezone = 3;
   */
  timezone?: TimezoneSettings;

  /**
   * 通知設定
   *
   * @generated from field: avion.auth.v1.NotificationSettings notifications = 4;
   */
  notifications?: NotificationSettings;

  /**
   * プライバシー設定
   *
   * @generated from field: avion.auth.v1.PrivacySettings privacy = 5;
   */
  privacy?: PrivacySettings;

  /**
   * アクセシビリティ設定
   *
   * @generated from field: avion.auth.v1.AccessibilitySettings accessibility = 6;
   */
  accessibility?: AccessibilitySettings;

  /**
   * 更新日時
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 7;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message avion.auth.v1.UserPreferences.
 * Use `create(UserPreferencesSchema)` to create a new message.
 */
export const UserPreferencesSchema: GenMessage<UserPreferences> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 27);

/**
 * 言語設定
 *
 * @generated from message avion.auth.v1.LanguageSettings
 */
export type LanguageSettings = Message<"avion.auth.v1.LanguageSettings"> & {
  /**
   * 主言語（BCP 47形式: ja-JP, en-US等）
   *
   * @generated from field: string primary_language = 1;
   */
  primaryLanguage: string;

  /**
   * フォールバック言語
   *
   * @generated from field: repeated string fallback_languages = 2;
   */
  fallbackLanguages: string[];

  /**
   * 日付フォーマット
   *
   * @generated from field: avion.auth.v1.DateFormat date_format = 3;
   */
  dateFormat: DateFormat;

  /**
   * 時刻フォーマット
   *
   * @generated from field: avion.auth.v1.TimeFormat time_format = 4;
   */
  timeFormat: TimeFormat;

  /**
   * 数値フォーマット
   *
   * @generated from field: avion.auth.v1.NumberFormat number_format = 5;
   */
  numberFormat?: NumberFormat;
};

/**
 * Describes the message avion.auth.v1.LanguageSettings.
 * Use `create(LanguageSettingsSchema)` to create a new message.
 */
export const LanguageSettingsSchema: GenMessage<LanguageSettings> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 28);

/**
 * 数値フォーマット
 *
 * @generated from message avion.auth.v1.NumberFormat
 */
export type NumberFormat = Message<"avion.auth.v1.NumberFormat"> & {
  /**
   * 小数点記号
   *
   * @generated from field: string decimal_separator = 1;
   */
  decimalSeparator: string;

  /**
   * 千位区切り記号
   *
   * @generated from field: string thousands_separator = 2;
   */
  thousandsSeparator: string;

  /**
   * 通貨記号の位置
   *
   * @generated from field: avion.auth.v1.CurrencyPosition currency_position = 3;
   */
  currencyPosition: CurrencyPosition;
};

/**
 * Describes the message avion.auth.v1.NumberFormat.
 * Use `create(NumberFormatSchema)` to create a new message.
 */
export const NumberFormatSchema: GenMessage<NumberFormat> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 29);

/**
 * タイムゾーン設定
 *
 * @generated from message avion.auth.v1.TimezoneSettings
 */
export type TimezoneSettings = Message<"avion.auth.v1.TimezoneSettings"> & {
  /**
   * タイムゾーン（IANA形式: Asia/Tokyo, America/New_York等）
   *
   * @generated from field: string timezone = 1;
   */
  timezone: string;

  /**
   * 自動検出を使用するか
   *
   * @generated from field: bool auto_detect = 2;
   */
  autoDetect: boolean;

  /**
   * サマータイム自動調整
   *
   * @generated from field: bool auto_adjust_dst = 3;
   */
  autoAdjustDst: boolean;
};

/**
 * Describes the message avion.auth.v1.TimezoneSettings.
 * Use `create(TimezoneSettingsSchema)` to create a new message.
 */
export const TimezoneSettingsSchema: GenMessage<TimezoneSettings> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 30);

/**
 * 通知設定
 *
 * @generated from message avion.auth.v1.NotificationSettings
 */
export type NotificationSettings = Message<"avion.auth.v1.NotificationSettings"> & {
  /**
   * メール通知全般
   *
   * @generated from field: avion.auth.v1.EmailNotificationSettings email = 1;
   */
  email?: EmailNotificationSettings;

  /**
   * プッシュ通知設定
   *
   * @generated from field: avion.auth.v1.PushNotificationSettings push = 2;
   */
  push?: PushNotificationSettings;

  /**
   * アプリ内通知設定
   *
   * @generated from field: avion.auth.v1.InAppNotificationSettings in_app = 3;
   */
  inApp?: InAppNotificationSettings;

  /**
   * 通知スケジュール
   *
   * @generated from field: avion.auth.v1.NotificationSchedule schedule = 4;
   */
  schedule?: NotificationSchedule;
};

/**
 * Describes the message avion.auth.v1.NotificationSettings.
 * Use `create(NotificationSettingsSchema)` to create a new message.
 */
export const NotificationSettingsSchema: GenMessage<NotificationSettings> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 31);

/**
 * メール通知設定
 *
 * @generated from message avion.auth.v1.EmailNotificationSettings
 */
export type EmailNotificationSettings = Message<"avion.auth.v1.EmailNotificationSettings"> & {
  /**
   * メール通知を有効にするか
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * 通知カテゴリ別設定
   *
   * @generated from field: map<string, bool> categories = 2;
   */
  categories: { [key: string]: boolean };

  /**
   * ダイジェスト配信
   *
   * @generated from field: avion.auth.v1.DigestSettings digest = 3;
   */
  digest?: DigestSettings;

  /**
   * 配信停止トークン
   *
   * @generated from field: string unsubscribe_token = 4;
   */
  unsubscribeToken: string;
};

/**
 * Describes the message avion.auth.v1.EmailNotificationSettings.
 * Use `create(EmailNotificationSettingsSchema)` to create a new message.
 */
export const EmailNotificationSettingsSchema: GenMessage<EmailNotificationSettings> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 32);

/**
 * ダイジェスト設定
 *
 * @generated from message avion.auth.v1.DigestSettings
 */
export type DigestSettings = Message<"avion.auth.v1.DigestSettings"> & {
  /**
   * ダイジェストを有効にするか
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * 配信頻度
   *
   * @generated from field: avion.auth.v1.DigestFrequency frequency = 2;
   */
  frequency: DigestFrequency;

  /**
   * 配信時刻（ユーザーのタイムゾーンで）
   *
   * HH:MM形式
   *
   * @generated from field: string preferred_time = 3;
   */
  preferredTime: string;
};

/**
 * Describes the message avion.auth.v1.DigestSettings.
 * Use `create(DigestSettingsSchema)` to create a new message.
 */
export const DigestSettingsSchema: GenMessage<DigestSettings> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 33);

/**
 * プッシュ通知設定
 *
 * @generated from message avion.auth.v1.PushNotificationSettings
 */
export type PushNotificationSettings = Message<"avion.auth.v1.PushNotificationSettings"> & {
  /**
   * プッシュ通知を有効にするか
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * デバイス別設定
   *
   * @generated from field: repeated avion.auth.v1.DeviceNotificationSettings devices = 2;
   */
  devices: DeviceNotificationSettings[];
};

/**
 * Describes the message avion.auth.v1.PushNotificationSettings.
 * Use `create(PushNotificationSettingsSchema)` to create a new message.
 */
export const PushNotificationSettingsSchema: GenMessage<PushNotificationSettings> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 34);

/**
 * デバイス別通知設定
 *
 * @generated from message avion.auth.v1.DeviceNotificationSettings
 */
export type DeviceNotificationSettings = Message<"avion.auth.v1.DeviceNotificationSettings"> & {
  /**
   * デバイスID
   *
   * @generated from field: string device_id = 1;
   */
  deviceId: string;

  /**
   * デバイス名
   *
   * @generated from field: string device_name = 2;
   */
  deviceName: string;

  /**
   * 通知を有効にするか
   *
   * @generated from field: bool enabled = 3;
   */
  enabled: boolean;

  /**
   * カテゴリ別設定
   *
   * @generated from field: map<string, bool> categories = 4;
   */
  categories: { [key: string]: boolean };
};

/**
 * Describes the message avion.auth.v1.DeviceNotificationSettings.
 * Use `create(DeviceNotificationSettingsSchema)` to create a new message.
 */
export const DeviceNotificationSettingsSchema: GenMessage<DeviceNotificationSettings> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 35);

/**
 * アプリ内通知設定
 *
 * @generated from message avion.auth.v1.InAppNotificationSettings
 */
export type InAppNotificationSettings = Message<"avion.auth.v1.InAppNotificationSettings"> & {
  /**
   * アプリ内通知を有効にするか
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * サウンドを有効にするか
   *
   * @generated from field: bool sound_enabled = 2;
   */
  soundEnabled: boolean;

  /**
   * バイブレーションを有効にするか
   *
   * @generated from field: bool vibration_enabled = 3;
   */
  vibrationEnabled: boolean;

  /**
   * デスクトップ通知を有効にするか
   *
   * @generated from field: bool desktop_enabled = 4;
   */
  desktopEnabled: boolean;
};

/**
 * Describes the message avion.auth.v1.InAppNotificationSettings.
 * Use `create(InAppNotificationSettingsSchema)` to create a new message.
 */
export const InAppNotificationSettingsSchema: GenMessage<InAppNotificationSettings> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 36);

/**
 * 通知スケジュール
 *
 * @generated from message avion.auth.v1.NotificationSchedule
 */
export type NotificationSchedule = Message<"avion.auth.v1.NotificationSchedule"> & {
  /**
   * スケジュールを有効にするか
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * 通知を受け取らない時間帯
   *
   * @generated from field: repeated avion.auth.v1.QuietHours quiet_hours = 2;
   */
  quietHours: QuietHours[];

  /**
   * 週末の設定
   *
   * @generated from field: avion.auth.v1.WeekendSettings weekend = 3;
   */
  weekend?: WeekendSettings;
};

/**
 * Describes the message avion.auth.v1.NotificationSchedule.
 * Use `create(NotificationScheduleSchema)` to create a new message.
 */
export const NotificationScheduleSchema: GenMessage<NotificationSchedule> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 37);

/**
 * 通知を受け取らない時間帯
 *
 * @generated from message avion.auth.v1.QuietHours
 */
export type QuietHours = Message<"avion.auth.v1.QuietHours"> & {
  /**
   * 曜日（0=日曜日, 6=土曜日）
   *
   * @generated from field: repeated int32 days_of_week = 1;
   */
  daysOfWeek: number[];

  /**
   * 開始時刻（HH:MM）
   *
   * @generated from field: string start_time = 2;
   */
  startTime: string;

  /**
   * 終了時刻（HH:MM）
   *
   * @generated from field: string end_time = 3;
   */
  endTime: string;
};

/**
 * Describes the message avion.auth.v1.QuietHours.
 * Use `create(QuietHoursSchema)` to create a new message.
 */
export const QuietHoursSchema: GenMessage<QuietHours> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 38);

/**
 * 週末設定
 *
 * @generated from message avion.auth.v1.WeekendSettings
 */
export type WeekendSettings = Message<"avion.auth.v1.WeekendSettings"> & {
  /**
   * 週末は通知を無効にする
   *
   * @generated from field: bool disable_on_weekends = 1;
   */
  disableOnWeekends: boolean;

  /**
   * カスタム週末定義（デフォルトは土日）
   *
   * @generated from field: repeated int32 weekend_days = 2;
   */
  weekendDays: number[];
};

/**
 * Describes the message avion.auth.v1.WeekendSettings.
 * Use `create(WeekendSettingsSchema)` to create a new message.
 */
export const WeekendSettingsSchema: GenMessage<WeekendSettings> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 39);

/**
 * プライバシー設定
 *
 * @generated from message avion.auth.v1.PrivacySettings
 */
export type PrivacySettings = Message<"avion.auth.v1.PrivacySettings"> & {
  /**
   * プロフィールの公開範囲
   *
   * @generated from field: avion.auth.v1.VisibilityLevel profile_visibility = 1;
   */
  profileVisibility: VisibilityLevel;

  /**
   * 投稿のデフォルト公開範囲
   *
   * @generated from field: avion.auth.v1.VisibilityLevel default_post_visibility = 2;
   */
  defaultPostVisibility: VisibilityLevel;

  /**
   * フォローリストの公開
   *
   * @generated from field: bool show_followers = 3;
   */
  showFollowers: boolean;

  /**
   * オンラインステータスの表示
   *
   * @generated from field: bool show_online_status = 4;
   */
  showOnlineStatus: boolean;

  /**
   * 既読ステータスの送信
   *
   * @generated from field: bool send_read_receipts = 5;
   */
  sendReadReceipts: boolean;

  /**
   * 検索エンジンへの露出
   *
   * @generated from field: bool searchable = 6;
   */
  searchable: boolean;

  /**
   * データ収集への同意
   *
   * @generated from field: avion.auth.v1.DataCollectionConsent data_collection = 7;
   */
  dataCollection?: DataCollectionConsent;
};

/**
 * Describes the message avion.auth.v1.PrivacySettings.
 * Use `create(PrivacySettingsSchema)` to create a new message.
 */
export const PrivacySettingsSchema: GenMessage<PrivacySettings> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 40);

/**
 * データ収集同意
 *
 * @generated from message avion.auth.v1.DataCollectionConsent
 */
export type DataCollectionConsent = Message<"avion.auth.v1.DataCollectionConsent"> & {
  /**
   * 分析データの収集
   *
   * @generated from field: bool analytics = 1;
   */
  analytics: boolean;

  /**
   * パーソナライゼーション
   *
   * @generated from field: bool personalization = 2;
   */
  personalization: boolean;

  /**
   * 広告ターゲティング
   *
   * @generated from field: bool advertising = 3;
   */
  advertising: boolean;

  /**
   * 第三者との共有
   *
   * @generated from field: bool third_party_sharing = 4;
   */
  thirdPartySharing: boolean;
};

/**
 * Describes the message avion.auth.v1.DataCollectionConsent.
 * Use `create(DataCollectionConsentSchema)` to create a new message.
 */
export const DataCollectionConsentSchema: GenMessage<DataCollectionConsent> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 41);

/**
 * アクセシビリティ設定
 *
 * @generated from message avion.auth.v1.AccessibilitySettings
 */
export type AccessibilitySettings = Message<"avion.auth.v1.AccessibilitySettings"> & {
  /**
   * ハイコントラストモード
   *
   * @generated from field: bool high_contrast = 1;
   */
  highContrast: boolean;

  /**
   * フォントサイズ調整（%）
   *
   * @generated from field: int32 font_size_adjustment = 2;
   */
  fontSizeAdjustment: number;

  /**
   * アニメーションを減らす
   *
   * @generated from field: bool reduce_motion = 3;
   */
  reduceMotion: boolean;

  /**
   * スクリーンリーダー最適化
   *
   * @generated from field: bool screen_reader_optimization = 4;
   */
  screenReaderOptimization: boolean;

  /**
   * キーボードナビゲーション
   *
   * @generated from field: bool keyboard_navigation = 5;
   */
  keyboardNavigation: boolean;

  /**
   * カラーブラインドモード
   *
   * @generated from field: avion.auth.v1.ColorBlindMode color_blind_mode = 6;
   */
  colorBlindMode: ColorBlindMode;
};

/**
 * Describes the message avion.auth.v1.AccessibilitySettings.
 * Use `create(AccessibilitySettingsSchema)` to create a new message.
 */
export const AccessibilitySettingsSchema: GenMessage<AccessibilitySettings> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 42);

/**
 * ユーザー設定取得リクエスト
 *
 * @generated from message avion.auth.v1.GetUserPreferencesRequest
 */
export type GetUserPreferencesRequest = Message<"avion.auth.v1.GetUserPreferencesRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * 取得するカテゴリ（空の場合は全て）
   *
   * @generated from field: repeated avion.auth.v1.PreferenceCategory categories = 2;
   */
  categories: PreferenceCategory[];
};

/**
 * Describes the message avion.auth.v1.GetUserPreferencesRequest.
 * Use `create(GetUserPreferencesRequestSchema)` to create a new message.
 */
export const GetUserPreferencesRequestSchema: GenMessage<GetUserPreferencesRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 43);

/**
 * ユーザー設定取得レスポンス
 *
 * @generated from message avion.auth.v1.GetUserPreferencesResponse
 */
export type GetUserPreferencesResponse = Message<"avion.auth.v1.GetUserPreferencesResponse"> & {
  /**
   * ユーザー設定
   *
   * @generated from field: avion.auth.v1.UserPreferences preferences = 1;
   */
  preferences?: UserPreferences;
};

/**
 * Describes the message avion.auth.v1.GetUserPreferencesResponse.
 * Use `create(GetUserPreferencesResponseSchema)` to create a new message.
 */
export const GetUserPreferencesResponseSchema: GenMessage<GetUserPreferencesResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 44);

/**
 * ユーザー設定更新リクエスト
 *
 * @generated from message avion.auth.v1.UpdateUserPreferencesRequest
 */
export type UpdateUserPreferencesRequest = Message<"avion.auth.v1.UpdateUserPreferencesRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * 更新する設定
   *
   * @generated from field: avion.auth.v1.UserPreferences preferences = 2;
   */
  preferences?: UserPreferences;

  /**
   * 更新するフィールドマスク
   *
   * @generated from field: repeated string update_mask = 3;
   */
  updateMask: string[];
};

/**
 * Describes the message avion.auth.v1.UpdateUserPreferencesRequest.
 * Use `create(UpdateUserPreferencesRequestSchema)` to create a new message.
 */
export const UpdateUserPreferencesRequestSchema: GenMessage<UpdateUserPreferencesRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 45);

/**
 * ユーザー設定更新レスポンス
 *
 * @generated from message avion.auth.v1.UpdateUserPreferencesResponse
 */
export type UpdateUserPreferencesResponse = Message<"avion.auth.v1.UpdateUserPreferencesResponse"> & {
  /**
   * 更新成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * 更新後の設定
   *
   * @generated from field: avion.auth.v1.UserPreferences preferences = 2;
   */
  preferences?: UserPreferences;

  /**
   * エラーメッセージ（失敗時）
   *
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.auth.v1.UpdateUserPreferencesResponse.
 * Use `create(UpdateUserPreferencesResponseSchema)` to create a new message.
 */
export const UpdateUserPreferencesResponseSchema: GenMessage<UpdateUserPreferencesResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 46);

/**
 * ユーザー設定リセットリクエスト
 *
 * @generated from message avion.auth.v1.ResetUserPreferencesRequest
 */
export type ResetUserPreferencesRequest = Message<"avion.auth.v1.ResetUserPreferencesRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * リセットするカテゴリ（空の場合は全て）
   *
   * @generated from field: repeated avion.auth.v1.PreferenceCategory categories = 2;
   */
  categories: PreferenceCategory[];
};

/**
 * Describes the message avion.auth.v1.ResetUserPreferencesRequest.
 * Use `create(ResetUserPreferencesRequestSchema)` to create a new message.
 */
export const ResetUserPreferencesRequestSchema: GenMessage<ResetUserPreferencesRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 47);

/**
 * ユーザー設定リセットレスポンス
 *
 * @generated from message avion.auth.v1.ResetUserPreferencesResponse
 */
export type ResetUserPreferencesResponse = Message<"avion.auth.v1.ResetUserPreferencesResponse"> & {
  /**
   * リセット成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * リセット後の設定（デフォルト値）
   *
   * @generated from field: avion.auth.v1.UserPreferences preferences = 2;
   */
  preferences?: UserPreferences;
};

/**
 * Describes the message avion.auth.v1.ResetUserPreferencesResponse.
 * Use `create(ResetUserPreferencesResponseSchema)` to create a new message.
 */
export const ResetUserPreferencesResponseSchema: GenMessage<ResetUserPreferencesResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_account, 48);

/**
 * エクスポート形式
 *
 * @generated from enum avion.auth.v1.ExportFormat
 */
export enum ExportFormat {
  /**
   * @generated from enum value: EXPORT_FORMAT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * JSON形式
   *
   * @generated from enum value: EXPORT_FORMAT_JSON = 1;
   */
  JSON = 1,

  /**
   * CSV形式（構造化データのみ）
   *
   * @generated from enum value: EXPORT_FORMAT_CSV = 2;
   */
  CSV = 2,

  /**
   * ZIP/TARアーカイブ（メディア含む）
   *
   * @generated from enum value: EXPORT_FORMAT_ARCHIVE = 3;
   */
  ARCHIVE = 3,
}

/**
 * Describes the enum avion.auth.v1.ExportFormat.
 */
export const ExportFormatSchema: GenEnum<ExportFormat> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 0);

/**
 * エクスポート範囲
 *
 * @generated from enum avion.auth.v1.ExportScope
 */
export enum ExportScope {
  /**
   * @generated from enum value: EXPORT_SCOPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 基本情報のみ
   *
   * @generated from enum value: EXPORT_SCOPE_BASIC = 1;
   */
  BASIC = 1,

  /**
   * 全データ
   *
   * @generated from enum value: EXPORT_SCOPE_FULL = 2;
   */
  FULL = 2,

  /**
   * GDPR準拠形式
   *
   * @generated from enum value: EXPORT_SCOPE_GDPR_COMPLIANT = 3;
   */
  GDPR_COMPLIANT = 3,
}

/**
 * Describes the enum avion.auth.v1.ExportScope.
 */
export const ExportScopeSchema: GenEnum<ExportScope> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 1);

/**
 * データカテゴリ
 *
 * @generated from enum avion.auth.v1.DataCategory
 */
export enum DataCategory {
  /**
   * @generated from enum value: DATA_CATEGORY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * プロフィール情報
   *
   * @generated from enum value: DATA_CATEGORY_PROFILE = 1;
   */
  PROFILE = 1,

  /**
   * 投稿データ
   *
   * @generated from enum value: DATA_CATEGORY_POSTS = 2;
   */
  POSTS = 2,

  /**
   * メッセージ
   *
   * @generated from enum value: DATA_CATEGORY_MESSAGES = 3;
   */
  MESSAGES = 3,

  /**
   * フォロー/フォロワー
   *
   * @generated from enum value: DATA_CATEGORY_CONNECTIONS = 4;
   */
  CONNECTIONS = 4,

  /**
   * 設定情報
   *
   * @generated from enum value: DATA_CATEGORY_SETTINGS = 5;
   */
  SETTINGS = 5,

  /**
   * セキュリティ情報
   *
   * @generated from enum value: DATA_CATEGORY_SECURITY = 6;
   */
  SECURITY = 6,

  /**
   * アクティビティログ
   *
   * @generated from enum value: DATA_CATEGORY_ACTIVITY = 7;
   */
  ACTIVITY = 7,

  /**
   * メディアファイル
   *
   * @generated from enum value: DATA_CATEGORY_MEDIA = 8;
   */
  MEDIA = 8,
}

/**
 * Describes the enum avion.auth.v1.DataCategory.
 */
export const DataCategorySchema: GenEnum<DataCategory> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 2);

/**
 * エクスポートステータス
 *
 * @generated from enum avion.auth.v1.ExportStatus
 */
export enum ExportStatus {
  /**
   * @generated from enum value: EXPORT_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 処理待ち
   *
   * @generated from enum value: EXPORT_STATUS_PENDING = 1;
   */
  PENDING = 1,

  /**
   * 処理中
   *
   * @generated from enum value: EXPORT_STATUS_PROCESSING = 2;
   */
  PROCESSING = 2,

  /**
   * 完了
   *
   * @generated from enum value: EXPORT_STATUS_COMPLETED = 3;
   */
  COMPLETED = 3,

  /**
   * 失敗
   *
   * @generated from enum value: EXPORT_STATUS_FAILED = 4;
   */
  FAILED = 4,

  /**
   * 期限切れ
   *
   * @generated from enum value: EXPORT_STATUS_EXPIRED = 5;
   */
  EXPIRED = 5,
}

/**
 * Describes the enum avion.auth.v1.ExportStatus.
 */
export const ExportStatusSchema: GenEnum<ExportStatus> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 3);

/**
 * インポート形式
 *
 * @generated from enum avion.auth.v1.ImportFormat
 */
export enum ImportFormat {
  /**
   * @generated from enum value: IMPORT_FORMAT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Avion標準形式
   *
   * @generated from enum value: IMPORT_FORMAT_AVION = 1;
   */
  AVION = 1,

  /**
   * Mastodon互換
   *
   * @generated from enum value: IMPORT_FORMAT_MASTODON = 2;
   */
  MASTODON = 2,

  /**
   * Twitter/Xアーカイブ
   *
   * @generated from enum value: IMPORT_FORMAT_TWITTER = 3;
   */
  TWITTER = 3,

  /**
   * ActivityPub標準
   *
   * @generated from enum value: IMPORT_FORMAT_ACTIVITYPUB = 4;
   */
  ACTIVITYPUB = 4,
}

/**
 * Describes the enum avion.auth.v1.ImportFormat.
 */
export const ImportFormatSchema: GenEnum<ImportFormat> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 4);

/**
 * マージ戦略
 *
 * @generated from enum avion.auth.v1.MergeStrategy
 */
export enum MergeStrategy {
  /**
   * @generated from enum value: MERGE_STRATEGY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 既存データを置換
   *
   * @generated from enum value: MERGE_STRATEGY_REPLACE = 1;
   */
  REPLACE = 1,

  /**
   * 既存データとマージ
   *
   * @generated from enum value: MERGE_STRATEGY_MERGE = 2;
   */
  MERGE = 2,

  /**
   * 既存データをスキップ
   *
   * @generated from enum value: MERGE_STRATEGY_SKIP_EXISTING = 3;
   */
  SKIP_EXISTING = 3,
}

/**
 * Describes the enum avion.auth.v1.MergeStrategy.
 */
export const MergeStrategySchema: GenEnum<MergeStrategy> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 5);

/**
 * インポートステータス
 *
 * @generated from enum avion.auth.v1.ImportStatus
 */
export enum ImportStatus {
  /**
   * @generated from enum value: IMPORT_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 検証中
   *
   * @generated from enum value: IMPORT_STATUS_VALIDATING = 1;
   */
  VALIDATING = 1,

  /**
   * 処理中
   *
   * @generated from enum value: IMPORT_STATUS_PROCESSING = 2;
   */
  PROCESSING = 2,

  /**
   * 完了
   *
   * @generated from enum value: IMPORT_STATUS_COMPLETED = 3;
   */
  COMPLETED = 3,

  /**
   * 部分的完了
   *
   * @generated from enum value: IMPORT_STATUS_PARTIAL = 4;
   */
  PARTIAL = 4,

  /**
   * 失敗
   *
   * @generated from enum value: IMPORT_STATUS_FAILED = 5;
   */
  FAILED = 5,
}

/**
 * Describes the enum avion.auth.v1.ImportStatus.
 */
export const ImportStatusSchema: GenEnum<ImportStatus> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 6);

/**
 * デバイスタイプ
 *
 * @generated from enum avion.auth.v1.DeviceType
 */
export enum DeviceType {
  /**
   * @generated from enum value: DEVICE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DEVICE_TYPE_DESKTOP = 1;
   */
  DESKTOP = 1,

  /**
   * @generated from enum value: DEVICE_TYPE_MOBILE = 2;
   */
  MOBILE = 2,

  /**
   * @generated from enum value: DEVICE_TYPE_TABLET = 3;
   */
  TABLET = 3,

  /**
   * @generated from enum value: DEVICE_TYPE_TV = 4;
   */
  TV = 4,

  /**
   * @generated from enum value: DEVICE_TYPE_WEARABLE = 5;
   */
  WEARABLE = 5,

  /**
   * @generated from enum value: DEVICE_TYPE_CONSOLE = 6;
   */
  CONSOLE = 6,
}

/**
 * Describes the enum avion.auth.v1.DeviceType.
 */
export const DeviceTypeSchema: GenEnum<DeviceType> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 7);

/**
 * ログイン方法
 *
 * @generated from enum avion.auth.v1.LoginMethod
 */
export enum LoginMethod {
  /**
   * @generated from enum value: LOGIN_METHOD_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: LOGIN_METHOD_PASSWORD = 1;
   */
  PASSWORD = 1,

  /**
   * @generated from enum value: LOGIN_METHOD_PASSKEY = 2;
   */
  PASSKEY = 2,

  /**
   * @generated from enum value: LOGIN_METHOD_OAUTH = 3;
   */
  OAUTH = 3,

  /**
   * @generated from enum value: LOGIN_METHOD_MAGIC_LINK = 4;
   */
  MAGIC_LINK = 4,

  /**
   * @generated from enum value: LOGIN_METHOD_QR_CODE = 5;
   */
  QR_CODE = 5,
}

/**
 * Describes the enum avion.auth.v1.LoginMethod.
 */
export const LoginMethodSchema: GenEnum<LoginMethod> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 8);

/**
 * セキュリティアクション
 *
 * @generated from enum avion.auth.v1.SecurityAction
 */
export enum SecurityAction {
  /**
   * @generated from enum value: SECURITY_ACTION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SECURITY_ACTION_LOGIN = 1;
   */
  LOGIN = 1,

  /**
   * @generated from enum value: SECURITY_ACTION_LOGOUT = 2;
   */
  LOGOUT = 2,

  /**
   * @generated from enum value: SECURITY_ACTION_PASSWORD_CHANGE = 3;
   */
  PASSWORD_CHANGE = 3,

  /**
   * @generated from enum value: SECURITY_ACTION_EMAIL_CHANGE = 4;
   */
  EMAIL_CHANGE = 4,

  /**
   * @generated from enum value: SECURITY_ACTION_MFA_ENABLE = 5;
   */
  MFA_ENABLE = 5,

  /**
   * @generated from enum value: SECURITY_ACTION_MFA_DISABLE = 6;
   */
  MFA_DISABLE = 6,

  /**
   * @generated from enum value: SECURITY_ACTION_PASSKEY_ADD = 7;
   */
  PASSKEY_ADD = 7,

  /**
   * @generated from enum value: SECURITY_ACTION_PASSKEY_REMOVE = 8;
   */
  PASSKEY_REMOVE = 8,

  /**
   * @generated from enum value: SECURITY_ACTION_OAUTH_CONNECT = 9;
   */
  OAUTH_CONNECT = 9,

  /**
   * @generated from enum value: SECURITY_ACTION_OAUTH_DISCONNECT = 10;
   */
  OAUTH_DISCONNECT = 10,

  /**
   * @generated from enum value: SECURITY_ACTION_ACCOUNT_RECOVERY = 11;
   */
  ACCOUNT_RECOVERY = 11,

  /**
   * @generated from enum value: SECURITY_ACTION_DATA_EXPORT = 12;
   */
  DATA_EXPORT = 12,

  /**
   * @generated from enum value: SECURITY_ACTION_DATA_IMPORT = 13;
   */
  DATA_IMPORT = 13,

  /**
   * @generated from enum value: SECURITY_ACTION_PERMISSION_GRANT = 14;
   */
  PERMISSION_GRANT = 14,

  /**
   * @generated from enum value: SECURITY_ACTION_PERMISSION_REVOKE = 15;
   */
  PERMISSION_REVOKE = 15,

  /**
   * @generated from enum value: SECURITY_ACTION_SUSPICIOUS_ACTIVITY = 16;
   */
  SUSPICIOUS_ACTIVITY = 16,
}

/**
 * Describes the enum avion.auth.v1.SecurityAction.
 */
export const SecurityActionSchema: GenEnum<SecurityAction> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 9);

/**
 * 日付フォーマット
 *
 * @generated from enum avion.auth.v1.DateFormat
 */
export enum DateFormat {
  /**
   * @generated from enum value: DATE_FORMAT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * MM/DD/YYYY (US)
   *
   * @generated from enum value: DATE_FORMAT_MDY = 1;
   */
  MDY = 1,

  /**
   * DD/MM/YYYY (EU)
   *
   * @generated from enum value: DATE_FORMAT_DMY = 2;
   */
  DMY = 2,

  /**
   * YYYY-MM-DD (ISO)
   *
   * @generated from enum value: DATE_FORMAT_YMD = 3;
   */
  YMD = 3,

  /**
   * YYYY年MM月DD日 (JP)
   *
   * @generated from enum value: DATE_FORMAT_YMD_JP = 4;
   */
  YMD_JP = 4,
}

/**
 * Describes the enum avion.auth.v1.DateFormat.
 */
export const DateFormatSchema: GenEnum<DateFormat> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 10);

/**
 * 時刻フォーマット
 *
 * @generated from enum avion.auth.v1.TimeFormat
 */
export enum TimeFormat {
  /**
   * @generated from enum value: TIME_FORMAT_UNSPECIFIED = 0;
   */
  TIME_FORMAT_UNSPECIFIED = 0,

  /**
   * 12時間制（AM/PM）
   *
   * @generated from enum value: TIME_FORMAT_12H = 1;
   */
  TIME_FORMAT_12H = 1,

  /**
   * 24時間制
   *
   * @generated from enum value: TIME_FORMAT_24H = 2;
   */
  TIME_FORMAT_24H = 2,
}

/**
 * Describes the enum avion.auth.v1.TimeFormat.
 */
export const TimeFormatSchema: GenEnum<TimeFormat> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 11);

/**
 * 通貨記号の位置
 *
 * @generated from enum avion.auth.v1.CurrencyPosition
 */
export enum CurrencyPosition {
  /**
   * @generated from enum value: CURRENCY_POSITION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * $100
   *
   * @generated from enum value: CURRENCY_POSITION_PREFIX = 1;
   */
  PREFIX = 1,

  /**
   * 100円
   *
   * @generated from enum value: CURRENCY_POSITION_SUFFIX = 2;
   */
  SUFFIX = 2,
}

/**
 * Describes the enum avion.auth.v1.CurrencyPosition.
 */
export const CurrencyPositionSchema: GenEnum<CurrencyPosition> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 12);

/**
 * ダイジェスト頻度
 *
 * @generated from enum avion.auth.v1.DigestFrequency
 */
export enum DigestFrequency {
  /**
   * @generated from enum value: DIGEST_FREQUENCY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DIGEST_FREQUENCY_DAILY = 1;
   */
  DAILY = 1,

  /**
   * @generated from enum value: DIGEST_FREQUENCY_WEEKLY = 2;
   */
  WEEKLY = 2,

  /**
   * @generated from enum value: DIGEST_FREQUENCY_MONTHLY = 3;
   */
  MONTHLY = 3,
}

/**
 * Describes the enum avion.auth.v1.DigestFrequency.
 */
export const DigestFrequencySchema: GenEnum<DigestFrequency> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 13);

/**
 * 公開範囲
 *
 * @generated from enum avion.auth.v1.VisibilityLevel
 */
export enum VisibilityLevel {
  /**
   * @generated from enum value: VISIBILITY_LEVEL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 全体公開
   *
   * @generated from enum value: VISIBILITY_LEVEL_PUBLIC = 1;
   */
  PUBLIC = 1,

  /**
   * フォロワーのみ
   *
   * @generated from enum value: VISIBILITY_LEVEL_FOLLOWERS = 2;
   */
  FOLLOWERS = 2,

  /**
   * 友達のみ
   *
   * @generated from enum value: VISIBILITY_LEVEL_FRIENDS = 3;
   */
  FRIENDS = 3,

  /**
   * 非公開
   *
   * @generated from enum value: VISIBILITY_LEVEL_PRIVATE = 4;
   */
  PRIVATE = 4,
}

/**
 * Describes the enum avion.auth.v1.VisibilityLevel.
 */
export const VisibilityLevelSchema: GenEnum<VisibilityLevel> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 14);

/**
 * カラーブラインドモード
 *
 * @generated from enum avion.auth.v1.ColorBlindMode
 */
export enum ColorBlindMode {
  /**
   * @generated from enum value: COLOR_BLIND_MODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 赤色盲
   *
   * @generated from enum value: COLOR_BLIND_MODE_PROTANOPIA = 1;
   */
  PROTANOPIA = 1,

  /**
   * 緑色盲
   *
   * @generated from enum value: COLOR_BLIND_MODE_DEUTERANOPIA = 2;
   */
  DEUTERANOPIA = 2,

  /**
   * 青色盲
   *
   * @generated from enum value: COLOR_BLIND_MODE_TRITANOPIA = 3;
   */
  TRITANOPIA = 3,

  /**
   * 全色盲
   *
   * @generated from enum value: COLOR_BLIND_MODE_MONOCHROMACY = 4;
   */
  MONOCHROMACY = 4,
}

/**
 * Describes the enum avion.auth.v1.ColorBlindMode.
 */
export const ColorBlindModeSchema: GenEnum<ColorBlindMode> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 15);

/**
 * 設定カテゴリ
 *
 * @generated from enum avion.auth.v1.PreferenceCategory
 */
export enum PreferenceCategory {
  /**
   * @generated from enum value: PREFERENCE_CATEGORY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PREFERENCE_CATEGORY_LANGUAGE = 1;
   */
  LANGUAGE = 1,

  /**
   * @generated from enum value: PREFERENCE_CATEGORY_TIMEZONE = 2;
   */
  TIMEZONE = 2,

  /**
   * @generated from enum value: PREFERENCE_CATEGORY_NOTIFICATIONS = 3;
   */
  NOTIFICATIONS = 3,

  /**
   * @generated from enum value: PREFERENCE_CATEGORY_PRIVACY = 4;
   */
  PRIVACY = 4,

  /**
   * @generated from enum value: PREFERENCE_CATEGORY_ACCESSIBILITY = 5;
   */
  ACCESSIBILITY = 5,
}

/**
 * Describes the enum avion.auth.v1.PreferenceCategory.
 */
export const PreferenceCategorySchema: GenEnum<PreferenceCategory> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_account, 16);

