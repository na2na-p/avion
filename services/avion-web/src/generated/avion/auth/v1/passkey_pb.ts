// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file avion/auth/v1/passkey.proto (package avion.auth.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { User } from "./auth_pb";
import { file_avion_auth_v1_auth } from "./auth_pb";
import type { PaginationRequest, PaginationResponse } from "../../common/v1/pagination_pb";
import { file_avion_common_v1_pagination } from "../../common/v1/pagination_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file avion/auth/v1/passkey.proto.
 */
export const file_avion_auth_v1_passkey: GenFile = /*@__PURE__*/
  fileDesc("Chthdmlvbi9hdXRoL3YxL3Bhc3NrZXkucHJvdG8SDWF2aW9uLmF1dGgudjEi+wMKB1Bhc3NrZXkSCgoCaWQYASABKAkSDwoHdXNlcl9pZBgCIAEoCRIVCg1jcmVkZW50aWFsX2lkGAMgASgJEhIKCnB1YmxpY19rZXkYBCABKAkSDAoEbmFtZRgFIAEoCRI8ChJhdXRoZW50aWNhdG9yX3R5cGUYBiABKA4yIC5hdmlvbi5hdXRoLnYxLkF1dGhlbnRpY2F0b3JUeXBlEiwKBnN0YXR1cxgHIAEoDjIcLmF2aW9uLmF1dGgudjEuUGFzc2tleVN0YXR1cxISCgpzaWduX2NvdW50GAggASgNEi4KCmNyZWF0ZWRfYXQYCSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjAKDGxhc3RfdXNlZF9hdBgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEwoLZGV2aWNlX2luZm8YCyABKAkSDgoGYWFndWlkGAwgASgJEhcKD2JhY2t1cF9lbGlnaWJsZRgNIAEoCBIRCgliYWNrZWRfdXAYDiABKAgSNgoIbWV0YWRhdGEYDyADKAsyJC5hdmlvbi5hdXRoLnYxLlBhc3NrZXkuTWV0YWRhdGFFbnRyeRovCg1NZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEisQEKHVJlZ2lzdGVyUGFzc2tleU9wdGlvbnNSZXF1ZXN0Eg8KB3VzZXJfaWQYASABKAkSEAoIdXNlcm5hbWUYAiABKAkSFAoMZGlzcGxheV9uYW1lGAMgASgJEjwKEmF1dGhlbnRpY2F0b3JfdHlwZRgEIAEoDjIgLmF2aW9uLmF1dGgudjEuQXV0aGVudGljYXRvclR5cGUSGQoRdXNlcl92ZXJpZmljYXRpb24YBSABKAkimQEKHlJlZ2lzdGVyUGFzc2tleU9wdGlvbnNSZXNwb25zZRIUCgxjaGFsbGVuZ2VfaWQYASABKAkSMQoQY3JlYXRpb25fb3B0aW9ucxgCIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSLgoKZXhwaXJlc19hdBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAilwEKFlJlZ2lzdGVyUGFzc2tleVJlcXVlc3QSFAoMY2hhbGxlbmdlX2lkGAEgASgJEg8KB3VzZXJfaWQYAiABKAkSFAoMcGFzc2tleV9uYW1lGAMgASgJEisKCmNyZWRlbnRpYWwYBCABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0EhMKC2RldmljZV9pbmZvGAUgASgJImoKF1JlZ2lzdGVyUGFzc2tleVJlc3BvbnNlEicKB3Bhc3NrZXkYASABKAsyFi5hdmlvbi5hdXRoLnYxLlBhc3NrZXkSDwoHc3VjY2VzcxgCIAEoCBIVCg1lcnJvcl9tZXNzYWdlGAMgASgJImEKIUF1dGhlbnRpY2F0ZVBhc3NrZXlPcHRpb25zUmVxdWVzdBIQCgh1c2VybmFtZRgBIAEoCRIPCgd1c2VyX2lkGAIgASgJEhkKEXVzZXJfdmVyaWZpY2F0aW9uGAMgASgJIpwBCiJBdXRoZW50aWNhdGVQYXNza2V5T3B0aW9uc1Jlc3BvbnNlEhQKDGNoYWxsZW5nZV9pZBgBIAEoCRIwCg9yZXF1ZXN0X29wdGlvbnMYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0Ei4KCmV4cGlyZXNfYXQYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wInQKGkF1dGhlbnRpY2F0ZVBhc3NrZXlSZXF1ZXN0EhQKDGNoYWxsZW5nZV9pZBgBIAEoCRIrCgpjcmVkZW50aWFsGAIgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdBITCgtkZXZpY2VfaW5mbxgDIAEoCSK+AQobQXV0aGVudGljYXRlUGFzc2tleVJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSFAoMYWNjZXNzX3Rva2VuGAIgASgJEhUKDXJlZnJlc2hfdG9rZW4YAyABKAkSIQoEdXNlchgEIAEoCzITLmF2aW9uLmF1dGgudjEuVXNlchInCgdwYXNza2V5GAUgASgLMhYuYXZpb24uYXV0aC52MS5QYXNza2V5EhUKDWVycm9yX21lc3NhZ2UYBiABKAkicwoTTGlzdFBhc3NrZXlzUmVxdWVzdBIPCgd1c2VyX2lkGAEgASgJEjYKCnBhZ2luYXRpb24YAiABKAsyIi5hdmlvbi5jb21tb24udjEuUGFnaW5hdGlvblJlcXVlc3QSEwoLYWN0aXZlX29ubHkYAyABKAgieQoUTGlzdFBhc3NrZXlzUmVzcG9uc2USKAoIcGFzc2tleXMYASADKAsyFi5hdmlvbi5hdXRoLnYxLlBhc3NrZXkSNwoKcGFnaW5hdGlvbhgCIAEoCzIjLmF2aW9uLmNvbW1vbi52MS5QYWdpbmF0aW9uUmVzcG9uc2UiOAoRR2V0UGFzc2tleVJlcXVlc3QSEgoKcGFzc2tleV9pZBgBIAEoCRIPCgd1c2VyX2lkGAIgASgJIj0KEkdldFBhc3NrZXlSZXNwb25zZRInCgdwYXNza2V5GAEgASgLMhYuYXZpb24uYXV0aC52MS5QYXNza2V5Ir8BChRVcGRhdGVQYXNza2V5UmVxdWVzdBISCgpwYXNza2V5X2lkGAEgASgJEg8KB3VzZXJfaWQYAiABKAkSDAoEbmFtZRgDIAEoCRJDCghtZXRhZGF0YRgEIAMoCzIxLmF2aW9uLmF1dGgudjEuVXBkYXRlUGFzc2tleVJlcXVlc3QuTWV0YWRhdGFFbnRyeRovCg1NZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiQAoVVXBkYXRlUGFzc2tleVJlc3BvbnNlEicKB3Bhc3NrZXkYASABKAsyFi5hdmlvbi5hdXRoLnYxLlBhc3NrZXkiTQoURGVsZXRlUGFzc2tleVJlcXVlc3QSEgoKcGFzc2tleV9pZBgBIAEoCRIPCgd1c2VyX2lkGAIgASgJEhAKCHBhc3N3b3JkGAMgASgJIj8KFURlbGV0ZVBhc3NrZXlSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEhUKDWVycm9yX21lc3NhZ2UYAiABKAkiSwoUUmV2b2tlUGFzc2tleVJlcXVlc3QSEgoKcGFzc2tleV9pZBgBIAEoCRIPCgd1c2VyX2lkGAIgASgJEg4KBnJlYXNvbhgDIAEoCSJRChVSZXZva2VQYXNza2V5UmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBInCgdwYXNza2V5GAIgASgLMhYuYXZpb24uYXV0aC52MS5QYXNza2V5KoMBCg1QYXNza2V5U3RhdHVzEh4KGlBBU1NLRVlfU1RBVFVTX1VOU1BFQ0lGSUVEEAASGQoVUEFTU0tFWV9TVEFUVVNfQUNUSVZFEAESGwoXUEFTU0tFWV9TVEFUVVNfRElTQUJMRUQQAhIaChZQQVNTS0VZX1NUQVRVU19SRVZPS0VEEAMqfwoRQXV0aGVudGljYXRvclR5cGUSIgoeQVVUSEVOVElDQVRPUl9UWVBFX1VOU1BFQ0lGSUVEEAASHwobQVVUSEVOVElDQVRPUl9UWVBFX1BMQVRGT1JNEAESJQohQVVUSEVOVElDQVRPUl9UWVBFX0NST1NTX1BMQVRGT1JNEAJCrAEKEWNvbS5hdmlvbi5hdXRoLnYxQgxQYXNza2V5UHJvdG9QAVozZ2l0aHViLmNvbS9uYTJuYS1wL2F2aW9uL3Byb3RvL2F2aW9uL2F1dGgvdjE7YXV0aHYxogIDQUFYqgINQXZpb24uQXV0aC5WMcoCDUF2aW9uXEF1dGhcVjHiAhlBdmlvblxBdXRoXFYxXEdQQk1ldGFkYXRh6gIPQXZpb246OkF1dGg6OlYxYgZwcm90bzM", [file_google_protobuf_timestamp, file_google_protobuf_struct, file_avion_auth_v1_auth, file_avion_common_v1_pagination]);

/**
 * Passkey情報
 *
 * @generated from message avion.auth.v1.Passkey
 */
export type Passkey = Message<"avion.auth.v1.Passkey"> & {
  /**
   * PasskeyのID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * Credential ID（Base64エンコード）
   *
   * @generated from field: string credential_id = 3;
   */
  credentialId: string;

  /**
   * Public Key（Base64エンコード）
   *
   * @generated from field: string public_key = 4;
   */
  publicKey: string;

  /**
   * Passkeyの名前（ユーザーが設定）
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * 認証器のタイプ
   *
   * @generated from field: avion.auth.v1.AuthenticatorType authenticator_type = 6;
   */
  authenticatorType: AuthenticatorType;

  /**
   * 状態
   *
   * @generated from field: avion.auth.v1.PasskeyStatus status = 7;
   */
  status: PasskeyStatus;

  /**
   * 署名カウンター
   *
   * @generated from field: uint32 sign_count = 8;
   */
  signCount: number;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 9;
   */
  createdAt?: Timestamp;

  /**
   * 最終使用日時
   *
   * @generated from field: google.protobuf.Timestamp last_used_at = 10;
   */
  lastUsedAt?: Timestamp;

  /**
   * デバイス情報
   *
   * @generated from field: string device_info = 11;
   */
  deviceInfo: string;

  /**
   * 認証器のAAGUID
   *
   * @generated from field: string aaguid = 12;
   */
  aaguid: string;

  /**
   * バックアップ可能フラグ
   *
   * @generated from field: bool backup_eligible = 13;
   */
  backupEligible: boolean;

  /**
   * バックアップ済みフラグ
   *
   * @generated from field: bool backed_up = 14;
   */
  backedUp: boolean;

  /**
   * メタデータ
   *
   * @generated from field: map<string, string> metadata = 15;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message avion.auth.v1.Passkey.
 * Use `create(PasskeySchema)` to create a new message.
 */
export const PasskeySchema: GenMessage<Passkey> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 0);

/**
 * WebAuthn登録オプション
 *
 * @generated from message avion.auth.v1.RegisterPasskeyOptionsRequest
 */
export type RegisterPasskeyOptionsRequest = Message<"avion.auth.v1.RegisterPasskeyOptionsRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * ユーザー名
   *
   * @generated from field: string username = 2;
   */
  username: string;

  /**
   * 表示名
   *
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * 認証器のタイプ指定（オプション）
   *
   * @generated from field: avion.auth.v1.AuthenticatorType authenticator_type = 4;
   */
  authenticatorType: AuthenticatorType;

  /**
   * ユーザー検証要求レベル（required, preferred, discouraged）
   *
   * @generated from field: string user_verification = 5;
   */
  userVerification: string;
};

/**
 * Describes the message avion.auth.v1.RegisterPasskeyOptionsRequest.
 * Use `create(RegisterPasskeyOptionsRequestSchema)` to create a new message.
 */
export const RegisterPasskeyOptionsRequestSchema: GenMessage<RegisterPasskeyOptionsRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 1);

/**
 * WebAuthn登録オプションレスポンス
 *
 * @generated from message avion.auth.v1.RegisterPasskeyOptionsResponse
 */
export type RegisterPasskeyOptionsResponse = Message<"avion.auth.v1.RegisterPasskeyOptionsResponse"> & {
  /**
   * チャレンジID（検証時に使用）
   *
   * @generated from field: string challenge_id = 1;
   */
  challengeId: string;

  /**
   * WebAuthn登録オプション（JSON形式）
   *
   * @generated from field: google.protobuf.Struct creation_options = 2;
   */
  creationOptions?: JsonObject;

  /**
   * オプションの有効期限
   *
   * @generated from field: google.protobuf.Timestamp expires_at = 3;
   */
  expiresAt?: Timestamp;
};

/**
 * Describes the message avion.auth.v1.RegisterPasskeyOptionsResponse.
 * Use `create(RegisterPasskeyOptionsResponseSchema)` to create a new message.
 */
export const RegisterPasskeyOptionsResponseSchema: GenMessage<RegisterPasskeyOptionsResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 2);

/**
 * Passkey登録リクエスト
 *
 * @generated from message avion.auth.v1.RegisterPasskeyRequest
 */
export type RegisterPasskeyRequest = Message<"avion.auth.v1.RegisterPasskeyRequest"> & {
  /**
   * チャレンジID
   *
   * @generated from field: string challenge_id = 1;
   */
  challengeId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * Passkeyの名前
   *
   * @generated from field: string passkey_name = 3;
   */
  passkeyName: string;

  /**
   * WebAuthn認証レスポンス（JSON形式）
   *
   * @generated from field: google.protobuf.Struct credential = 4;
   */
  credential?: JsonObject;

  /**
   * デバイス情報
   *
   * @generated from field: string device_info = 5;
   */
  deviceInfo: string;
};

/**
 * Describes the message avion.auth.v1.RegisterPasskeyRequest.
 * Use `create(RegisterPasskeyRequestSchema)` to create a new message.
 */
export const RegisterPasskeyRequestSchema: GenMessage<RegisterPasskeyRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 3);

/**
 * Passkey登録レスポンス
 *
 * @generated from message avion.auth.v1.RegisterPasskeyResponse
 */
export type RegisterPasskeyResponse = Message<"avion.auth.v1.RegisterPasskeyResponse"> & {
  /**
   * 登録されたPasskey
   *
   * @generated from field: avion.auth.v1.Passkey passkey = 1;
   */
  passkey?: Passkey;

  /**
   * 登録成功フラグ
   *
   * @generated from field: bool success = 2;
   */
  success: boolean;

  /**
   * エラーメッセージ（失敗時）
   *
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.auth.v1.RegisterPasskeyResponse.
 * Use `create(RegisterPasskeyResponseSchema)` to create a new message.
 */
export const RegisterPasskeyResponseSchema: GenMessage<RegisterPasskeyResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 4);

/**
 * WebAuthn認証オプションリクエスト
 *
 * @generated from message avion.auth.v1.AuthenticatePasskeyOptionsRequest
 */
export type AuthenticatePasskeyOptionsRequest = Message<"avion.auth.v1.AuthenticatePasskeyOptionsRequest"> & {
  /**
   * ユーザー名またはメールアドレス（オプション）
   *
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * ユーザーID（オプション）
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * ユーザー検証要求レベル
   *
   * @generated from field: string user_verification = 3;
   */
  userVerification: string;
};

/**
 * Describes the message avion.auth.v1.AuthenticatePasskeyOptionsRequest.
 * Use `create(AuthenticatePasskeyOptionsRequestSchema)` to create a new message.
 */
export const AuthenticatePasskeyOptionsRequestSchema: GenMessage<AuthenticatePasskeyOptionsRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 5);

/**
 * WebAuthn認証オプションレスポンス
 *
 * @generated from message avion.auth.v1.AuthenticatePasskeyOptionsResponse
 */
export type AuthenticatePasskeyOptionsResponse = Message<"avion.auth.v1.AuthenticatePasskeyOptionsResponse"> & {
  /**
   * チャレンジID
   *
   * @generated from field: string challenge_id = 1;
   */
  challengeId: string;

  /**
   * WebAuthn認証オプション（JSON形式）
   *
   * @generated from field: google.protobuf.Struct request_options = 2;
   */
  requestOptions?: JsonObject;

  /**
   * オプションの有効期限
   *
   * @generated from field: google.protobuf.Timestamp expires_at = 3;
   */
  expiresAt?: Timestamp;
};

/**
 * Describes the message avion.auth.v1.AuthenticatePasskeyOptionsResponse.
 * Use `create(AuthenticatePasskeyOptionsResponseSchema)` to create a new message.
 */
export const AuthenticatePasskeyOptionsResponseSchema: GenMessage<AuthenticatePasskeyOptionsResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 6);

/**
 * Passkey認証リクエスト
 *
 * @generated from message avion.auth.v1.AuthenticatePasskeyRequest
 */
export type AuthenticatePasskeyRequest = Message<"avion.auth.v1.AuthenticatePasskeyRequest"> & {
  /**
   * チャレンジID
   *
   * @generated from field: string challenge_id = 1;
   */
  challengeId: string;

  /**
   * WebAuthn認証レスポンス（JSON形式）
   *
   * @generated from field: google.protobuf.Struct credential = 2;
   */
  credential?: JsonObject;

  /**
   * デバイス情報
   *
   * @generated from field: string device_info = 3;
   */
  deviceInfo: string;
};

/**
 * Describes the message avion.auth.v1.AuthenticatePasskeyRequest.
 * Use `create(AuthenticatePasskeyRequestSchema)` to create a new message.
 */
export const AuthenticatePasskeyRequestSchema: GenMessage<AuthenticatePasskeyRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 7);

/**
 * Passkey認証レスポンス
 *
 * @generated from message avion.auth.v1.AuthenticatePasskeyResponse
 */
export type AuthenticatePasskeyResponse = Message<"avion.auth.v1.AuthenticatePasskeyResponse"> & {
  /**
   * 認証成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * アクセストークン
   *
   * @generated from field: string access_token = 2;
   */
  accessToken: string;

  /**
   * リフレッシュトークン
   *
   * @generated from field: string refresh_token = 3;
   */
  refreshToken: string;

  /**
   * ユーザー情報
   *
   * @generated from field: avion.auth.v1.User user = 4;
   */
  user?: User;

  /**
   * 使用されたPasskey
   *
   * @generated from field: avion.auth.v1.Passkey passkey = 5;
   */
  passkey?: Passkey;

  /**
   * エラーメッセージ（失敗時）
   *
   * @generated from field: string error_message = 6;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.auth.v1.AuthenticatePasskeyResponse.
 * Use `create(AuthenticatePasskeyResponseSchema)` to create a new message.
 */
export const AuthenticatePasskeyResponseSchema: GenMessage<AuthenticatePasskeyResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 8);

/**
 * Passkey一覧取得リクエスト
 *
 * @generated from message avion.auth.v1.ListPasskeysRequest
 */
export type ListPasskeysRequest = Message<"avion.auth.v1.ListPasskeysRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * アクティブなもののみ
   *
   * @generated from field: bool active_only = 3;
   */
  activeOnly: boolean;
};

/**
 * Describes the message avion.auth.v1.ListPasskeysRequest.
 * Use `create(ListPasskeysRequestSchema)` to create a new message.
 */
export const ListPasskeysRequestSchema: GenMessage<ListPasskeysRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 9);

/**
 * Passkey一覧取得レスポンス
 *
 * @generated from message avion.auth.v1.ListPasskeysResponse
 */
export type ListPasskeysResponse = Message<"avion.auth.v1.ListPasskeysResponse"> & {
  /**
   * Passkeyのリスト
   *
   * @generated from field: repeated avion.auth.v1.Passkey passkeys = 1;
   */
  passkeys: Passkey[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.auth.v1.ListPasskeysResponse.
 * Use `create(ListPasskeysResponseSchema)` to create a new message.
 */
export const ListPasskeysResponseSchema: GenMessage<ListPasskeysResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 10);

/**
 * Passkey取得リクエスト
 *
 * @generated from message avion.auth.v1.GetPasskeyRequest
 */
export type GetPasskeyRequest = Message<"avion.auth.v1.GetPasskeyRequest"> & {
  /**
   * PasskeyのID
   *
   * @generated from field: string passkey_id = 1;
   */
  passkeyId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;
};

/**
 * Describes the message avion.auth.v1.GetPasskeyRequest.
 * Use `create(GetPasskeyRequestSchema)` to create a new message.
 */
export const GetPasskeyRequestSchema: GenMessage<GetPasskeyRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 11);

/**
 * Passkey取得レスポンス
 *
 * @generated from message avion.auth.v1.GetPasskeyResponse
 */
export type GetPasskeyResponse = Message<"avion.auth.v1.GetPasskeyResponse"> & {
  /**
   * Passkey
   *
   * @generated from field: avion.auth.v1.Passkey passkey = 1;
   */
  passkey?: Passkey;
};

/**
 * Describes the message avion.auth.v1.GetPasskeyResponse.
 * Use `create(GetPasskeyResponseSchema)` to create a new message.
 */
export const GetPasskeyResponseSchema: GenMessage<GetPasskeyResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 12);

/**
 * Passkey更新リクエスト
 *
 * @generated from message avion.auth.v1.UpdatePasskeyRequest
 */
export type UpdatePasskeyRequest = Message<"avion.auth.v1.UpdatePasskeyRequest"> & {
  /**
   * PasskeyのID
   *
   * @generated from field: string passkey_id = 1;
   */
  passkeyId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 新しい名前
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * メタデータの更新
   *
   * @generated from field: map<string, string> metadata = 4;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message avion.auth.v1.UpdatePasskeyRequest.
 * Use `create(UpdatePasskeyRequestSchema)` to create a new message.
 */
export const UpdatePasskeyRequestSchema: GenMessage<UpdatePasskeyRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 13);

/**
 * Passkey更新レスポンス
 *
 * @generated from message avion.auth.v1.UpdatePasskeyResponse
 */
export type UpdatePasskeyResponse = Message<"avion.auth.v1.UpdatePasskeyResponse"> & {
  /**
   * 更新されたPasskey
   *
   * @generated from field: avion.auth.v1.Passkey passkey = 1;
   */
  passkey?: Passkey;
};

/**
 * Describes the message avion.auth.v1.UpdatePasskeyResponse.
 * Use `create(UpdatePasskeyResponseSchema)` to create a new message.
 */
export const UpdatePasskeyResponseSchema: GenMessage<UpdatePasskeyResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 14);

/**
 * Passkey削除リクエスト
 *
 * @generated from message avion.auth.v1.DeletePasskeyRequest
 */
export type DeletePasskeyRequest = Message<"avion.auth.v1.DeletePasskeyRequest"> & {
  /**
   * PasskeyのID
   *
   * @generated from field: string passkey_id = 1;
   */
  passkeyId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 確認用パスワード（セキュリティのため）
   *
   * @generated from field: string password = 3;
   */
  password: string;
};

/**
 * Describes the message avion.auth.v1.DeletePasskeyRequest.
 * Use `create(DeletePasskeyRequestSchema)` to create a new message.
 */
export const DeletePasskeyRequestSchema: GenMessage<DeletePasskeyRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 15);

/**
 * Passkey削除レスポンス
 *
 * @generated from message avion.auth.v1.DeletePasskeyResponse
 */
export type DeletePasskeyResponse = Message<"avion.auth.v1.DeletePasskeyResponse"> & {
  /**
   * 削除成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * エラーメッセージ（失敗時）
   *
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.auth.v1.DeletePasskeyResponse.
 * Use `create(DeletePasskeyResponseSchema)` to create a new message.
 */
export const DeletePasskeyResponseSchema: GenMessage<DeletePasskeyResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 16);

/**
 * Passkey無効化リクエスト
 *
 * @generated from message avion.auth.v1.RevokePasskeyRequest
 */
export type RevokePasskeyRequest = Message<"avion.auth.v1.RevokePasskeyRequest"> & {
  /**
   * PasskeyのID
   *
   * @generated from field: string passkey_id = 1;
   */
  passkeyId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 無効化理由
   *
   * @generated from field: string reason = 3;
   */
  reason: string;
};

/**
 * Describes the message avion.auth.v1.RevokePasskeyRequest.
 * Use `create(RevokePasskeyRequestSchema)` to create a new message.
 */
export const RevokePasskeyRequestSchema: GenMessage<RevokePasskeyRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 17);

/**
 * Passkey無効化レスポンス
 *
 * @generated from message avion.auth.v1.RevokePasskeyResponse
 */
export type RevokePasskeyResponse = Message<"avion.auth.v1.RevokePasskeyResponse"> & {
  /**
   * 無効化成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * 無効化されたPasskey
   *
   * @generated from field: avion.auth.v1.Passkey passkey = 2;
   */
  passkey?: Passkey;
};

/**
 * Describes the message avion.auth.v1.RevokePasskeyResponse.
 * Use `create(RevokePasskeyResponseSchema)` to create a new message.
 */
export const RevokePasskeyResponseSchema: GenMessage<RevokePasskeyResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_passkey, 18);

/**
 * Passkeyの状態
 *
 * @generated from enum avion.auth.v1.PasskeyStatus
 */
export enum PasskeyStatus {
  /**
   * 未指定
   *
   * @generated from enum value: PASSKEY_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * アクティブ
   *
   * @generated from enum value: PASSKEY_STATUS_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * 無効化済み
   *
   * @generated from enum value: PASSKEY_STATUS_DISABLED = 2;
   */
  DISABLED = 2,

  /**
   * 失効済み
   *
   * @generated from enum value: PASSKEY_STATUS_REVOKED = 3;
   */
  REVOKED = 3,
}

/**
 * Describes the enum avion.auth.v1.PasskeyStatus.
 */
export const PasskeyStatusSchema: GenEnum<PasskeyStatus> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_passkey, 0);

/**
 * Passkey認証器のタイプ
 *
 * @generated from enum avion.auth.v1.AuthenticatorType
 */
export enum AuthenticatorType {
  /**
   * 未指定
   *
   * @generated from enum value: AUTHENTICATOR_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * プラットフォーム認証器（Touch ID, Face ID, Windows Hello等）
   *
   * @generated from enum value: AUTHENTICATOR_TYPE_PLATFORM = 1;
   */
  PLATFORM = 1,

  /**
   * クロスプラットフォーム認証器（セキュリティキー等）
   *
   * @generated from enum value: AUTHENTICATOR_TYPE_CROSS_PLATFORM = 2;
   */
  CROSS_PLATFORM = 2,
}

/**
 * Describes the enum avion.auth.v1.AuthenticatorType.
 */
export const AuthenticatorTypeSchema: GenEnum<AuthenticatorType> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_passkey, 1);

