// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file avion/auth/v1/session.proto (package avion.auth.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { PaginationRequest, PaginationResponse } from "../../common/v1/pagination_pb";
import { file_avion_common_v1_pagination } from "../../common/v1/pagination_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file avion/auth/v1/session.proto.
 */
export const file_avion_auth_v1_session: GenFile = /*@__PURE__*/
  fileDesc("Chthdmlvbi9hdXRoL3YxL3Nlc3Npb24ucHJvdG8SDWF2aW9uLmF1dGgudjEi9wMKB1Nlc3Npb24SCgoCaWQYASABKAkSDwoHdXNlcl9pZBgCIAEoCRINCgV0b2tlbhgDIAEoCRIVCg1yZWZyZXNoX3Rva2VuGAQgASgJEi4KCmV4cGlyZXNfYXQYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCmNyZWF0ZWRfYXQYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjQKEGxhc3RfYWNjZXNzZWRfYXQYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhIKCmlwX2FkZHJlc3MYCCABKAkSEgoKdXNlcl9hZ2VudBgJIAEoCRIRCglkZXZpY2VfaWQYCiABKAkSEwoLZGV2aWNlX25hbWUYCyABKAkSLAoGc3RhdHVzGAwgASgOMhwuYXZpb24uYXV0aC52MS5TZXNzaW9uU3RhdHVzEjYKCG1ldGFkYXRhGA0gAygLMiQuYXZpb24uYXV0aC52MS5TZXNzaW9uLk1ldGFkYXRhRW50cnkSFwoPaXNfbWZhX3ZlcmlmaWVkGA4gASgIEhMKC2F1dGhfbWV0aG9kGA8gASgJGi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASI/ChNSZWZyZXNoVG9rZW5SZXF1ZXN0EhUKDXJlZnJlc2hfdG9rZW4YASABKAkSEQoJZGV2aWNlX2lkGAIgASgJInMKFFJlZnJlc2hUb2tlblJlc3BvbnNlEhQKDGFjY2Vzc190b2tlbhgBIAEoCRIVCg1yZWZyZXNoX3Rva2VuGAIgASgJEi4KCmV4cGlyZXNfYXQYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIlQKFFJldm9rZVNlc3Npb25SZXF1ZXN0EhIKCnNlc3Npb25faWQYASABKAkSDwoHdXNlcl9pZBgCIAEoCRIXCg9leGNsdWRlX2N1cnJlbnQYAyABKAgiVgoVUmV2b2tlU2Vzc2lvblJlc3BvbnNlEhUKDXJldm9rZWRfY291bnQYASABKAUSDwoHc3VjY2VzcxgCIAEoCBIVCg1lcnJvcl9tZXNzYWdlGAMgASgJIpsCChRDcmVhdGVTZXNzaW9uUmVxdWVzdBIPCgd1c2VyX2lkGAEgASgJEhIKCmlwX2FkZHJlc3MYAiABKAkSEgoKdXNlcl9hZ2VudBgDIAEoCRIRCglkZXZpY2VfaWQYBCABKAkSEwoLZGV2aWNlX25hbWUYBSABKAkSEwoLYXV0aF9tZXRob2QYBiABKAkSFwoPaXNfbWZhX3ZlcmlmaWVkGAcgASgIEkMKCG1ldGFkYXRhGAggAygLMjEuYXZpb24uYXV0aC52MS5DcmVhdGVTZXNzaW9uUmVxdWVzdC5NZXRhZGF0YUVudHJ5Gi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJtChVDcmVhdGVTZXNzaW9uUmVzcG9uc2USJwoHc2Vzc2lvbhgBIAEoCzIWLmF2aW9uLmF1dGgudjEuU2Vzc2lvbhIUCgxhY2Nlc3NfdG9rZW4YAiABKAkSFQoNcmVmcmVzaF90b2tlbhgDIAEoCSInChFHZXRTZXNzaW9uUmVxdWVzdBISCgpzZXNzaW9uX2lkGAEgASgJIj0KEkdldFNlc3Npb25SZXNwb25zZRInCgdzZXNzaW9uGAEgASgLMhYuYXZpb24uYXV0aC52MS5TZXNzaW9uInMKE0xpc3RTZXNzaW9uc1JlcXVlc3QSDwoHdXNlcl9pZBgBIAEoCRI2CgpwYWdpbmF0aW9uGAIgASgLMiIuYXZpb24uY29tbW9uLnYxLlBhZ2luYXRpb25SZXF1ZXN0EhMKC2FjdGl2ZV9vbmx5GAMgASgIInkKFExpc3RTZXNzaW9uc1Jlc3BvbnNlEigKCHNlc3Npb25zGAEgAygLMhYuYXZpb24uYXV0aC52MS5TZXNzaW9uEjcKCnBhZ2luYXRpb24YAiABKAsyIy5hdmlvbi5jb21tb24udjEuUGFnaW5hdGlvblJlc3BvbnNlIkIKFlZhbGlkYXRlU2Vzc2lvblJlcXVlc3QSFAoMYWNjZXNzX3Rva2VuGAEgASgJEhIKCmlwX2FkZHJlc3MYAiABKAkiawoXVmFsaWRhdGVTZXNzaW9uUmVzcG9uc2USEAoIaXNfdmFsaWQYASABKAgSJwoHc2Vzc2lvbhgCIAEoCzIWLmF2aW9uLmF1dGgudjEuU2Vzc2lvbhIVCg1lcnJvcl9tZXNzYWdlGAMgASgJIuYBChRVcGRhdGVTZXNzaW9uUmVxdWVzdBISCgpzZXNzaW9uX2lkGAEgASgJEhwKFHVwZGF0ZV9sYXN0X2FjY2Vzc2VkGAIgASgIEhIKCmlwX2FkZHJlc3MYAyABKAkSEgoKdXNlcl9hZ2VudBgEIAEoCRJDCghtZXRhZGF0YRgFIAMoCzIxLmF2aW9uLmF1dGgudjEuVXBkYXRlU2Vzc2lvblJlcXVlc3QuTWV0YWRhdGFFbnRyeRovCg1NZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiQAoVVXBkYXRlU2Vzc2lvblJlc3BvbnNlEicKB3Nlc3Npb24YASABKAsyFi5hdmlvbi5hdXRoLnYxLlNlc3Npb24iRQoURXh0ZW5kU2Vzc2lvblJlcXVlc3QSEgoKc2Vzc2lvbl9pZBgBIAEoCRIZChFleHRlbnNpb25fc2Vjb25kcxgCIAEoBSJ0ChVFeHRlbmRTZXNzaW9uUmVzcG9uc2USJwoHc2Vzc2lvbhgBIAEoCzIWLmF2aW9uLmF1dGgudjEuU2Vzc2lvbhIyCg5uZXdfZXhwaXJlc19hdBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiNwoWR2V0U2Vzc2lvblN0YXRzUmVxdWVzdBIPCgd1c2VyX2lkGAEgASgJEgwKBGRheXMYAiABKAUirwMKF0dldFNlc3Npb25TdGF0c1Jlc3BvbnNlEhcKD2FjdGl2ZV9zZXNzaW9ucxgBIAEoBRIYChBleHBpcmVkX3Nlc3Npb25zGAIgASgFEhgKEHJldm9rZWRfc2Vzc2lvbnMYAyABKAUSFAoMdW5pcXVlX3VzZXJzGAQgASgFElgKEnNlc3Npb25zX2J5X2RldmljZRgFIAMoCzI8LmF2aW9uLmF1dGgudjEuR2V0U2Vzc2lvblN0YXRzUmVzcG9uc2UuU2Vzc2lvbnNCeURldmljZUVudHJ5EmEKF3Nlc3Npb25zX2J5X2F1dGhfbWV0aG9kGAYgAygLMkAuYXZpb24uYXV0aC52MS5HZXRTZXNzaW9uU3RhdHNSZXNwb25zZS5TZXNzaW9uc0J5QXV0aE1ldGhvZEVudHJ5GjcKFVNlc3Npb25zQnlEZXZpY2VFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAU6AjgBGjsKGVNlc3Npb25zQnlBdXRoTWV0aG9kRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgFOgI4ASqCAQoNU2Vzc2lvblN0YXR1cxIeChpTRVNTSU9OX1NUQVRVU19VTlNQRUNJRklFRBAAEhkKFVNFU1NJT05fU1RBVFVTX0FDVElWRRABEhoKFlNFU1NJT05fU1RBVFVTX0VYUElSRUQQAhIaChZTRVNTSU9OX1NUQVRVU19SRVZPS0VEEANCrAEKEWNvbS5hdmlvbi5hdXRoLnYxQgxTZXNzaW9uUHJvdG9QAVozZ2l0aHViLmNvbS9uYTJuYS1wL2F2aW9uL3Byb3RvL2F2aW9uL2F1dGgvdjE7YXV0aHYxogIDQUFYqgINQXZpb24uQXV0aC5WMcoCDUF2aW9uXEF1dGhcVjHiAhlBdmlvblxBdXRoXFYxXEdQQk1ldGFkYXRh6gIPQXZpb246OkF1dGg6OlYxYgZwcm90bzM", [file_google_protobuf_timestamp, file_avion_common_v1_pagination]);

/**
 * セッションを表すメッセージ
 *
 * @generated from message avion.auth.v1.Session
 */
export type Session = Message<"avion.auth.v1.Session"> & {
  /**
   * セッションID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * アクセストークン
   *
   * @generated from field: string token = 3;
   */
  token: string;

  /**
   * リフレッシュトークン
   *
   * @generated from field: string refresh_token = 4;
   */
  refreshToken: string;

  /**
   * 有効期限
   *
   * @generated from field: google.protobuf.Timestamp expires_at = 5;
   */
  expiresAt?: Timestamp;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 6;
   */
  createdAt?: Timestamp;

  /**
   * 最終アクセス日時
   *
   * @generated from field: google.protobuf.Timestamp last_accessed_at = 7;
   */
  lastAccessedAt?: Timestamp;

  /**
   * IPアドレス
   *
   * @generated from field: string ip_address = 8;
   */
  ipAddress: string;

  /**
   * ユーザーエージェント
   *
   * @generated from field: string user_agent = 9;
   */
  userAgent: string;

  /**
   * デバイスID（オプション）
   *
   * @generated from field: string device_id = 10;
   */
  deviceId: string;

  /**
   * デバイス名（オプション）
   *
   * @generated from field: string device_name = 11;
   */
  deviceName: string;

  /**
   * セッションの状態
   *
   * @generated from field: avion.auth.v1.SessionStatus status = 12;
   */
  status: SessionStatus;

  /**
   * メタデータ（JSON形式の追加情報）
   *
   * @generated from field: map<string, string> metadata = 13;
   */
  metadata: { [key: string]: string };

  /**
   * 2要素認証完了フラグ
   *
   * @generated from field: bool is_mfa_verified = 14;
   */
  isMfaVerified: boolean;

  /**
   * 認証方法（password, passkey, oauth等）
   *
   * @generated from field: string auth_method = 15;
   */
  authMethod: string;
};

/**
 * Describes the message avion.auth.v1.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export const SessionSchema: GenMessage<Session> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 0);

/**
 * リフレッシュトークンリクエスト
 *
 * @generated from message avion.auth.v1.RefreshTokenRequest
 */
export type RefreshTokenRequest = Message<"avion.auth.v1.RefreshTokenRequest"> & {
  /**
   * リフレッシュトークン
   *
   * @generated from field: string refresh_token = 1;
   */
  refreshToken: string;

  /**
   * デバイスID（オプション）
   *
   * @generated from field: string device_id = 2;
   */
  deviceId: string;
};

/**
 * Describes the message avion.auth.v1.RefreshTokenRequest.
 * Use `create(RefreshTokenRequestSchema)` to create a new message.
 */
export const RefreshTokenRequestSchema: GenMessage<RefreshTokenRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 1);

/**
 * リフレッシュトークンレスポンス
 *
 * @generated from message avion.auth.v1.RefreshTokenResponse
 */
export type RefreshTokenResponse = Message<"avion.auth.v1.RefreshTokenResponse"> & {
  /**
   * 新しいアクセストークン
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * 新しいリフレッシュトークン
   *
   * @generated from field: string refresh_token = 2;
   */
  refreshToken: string;

  /**
   * トークンの有効期限
   *
   * @generated from field: google.protobuf.Timestamp expires_at = 3;
   */
  expiresAt?: Timestamp;
};

/**
 * Describes the message avion.auth.v1.RefreshTokenResponse.
 * Use `create(RefreshTokenResponseSchema)` to create a new message.
 */
export const RefreshTokenResponseSchema: GenMessage<RefreshTokenResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 2);

/**
 * セッション無効化リクエスト
 *
 * @generated from message avion.auth.v1.RevokeSessionRequest
 */
export type RevokeSessionRequest = Message<"avion.auth.v1.RevokeSessionRequest"> & {
  /**
   * セッションID（指定された場合、特定のセッションを無効化）
   *
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * ユーザーID（指定された場合、そのユーザーの全セッションを無効化）
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 現在のセッションを除外するフラグ
   *
   * @generated from field: bool exclude_current = 3;
   */
  excludeCurrent: boolean;
};

/**
 * Describes the message avion.auth.v1.RevokeSessionRequest.
 * Use `create(RevokeSessionRequestSchema)` to create a new message.
 */
export const RevokeSessionRequestSchema: GenMessage<RevokeSessionRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 3);

/**
 * セッション無効化レスポンス
 *
 * @generated from message avion.auth.v1.RevokeSessionResponse
 */
export type RevokeSessionResponse = Message<"avion.auth.v1.RevokeSessionResponse"> & {
  /**
   * 無効化されたセッション数
   *
   * @generated from field: int32 revoked_count = 1;
   */
  revokedCount: number;

  /**
   * 無効化成功フラグ
   *
   * @generated from field: bool success = 2;
   */
  success: boolean;

  /**
   * エラーメッセージ（失敗時）
   *
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.auth.v1.RevokeSessionResponse.
 * Use `create(RevokeSessionResponseSchema)` to create a new message.
 */
export const RevokeSessionResponseSchema: GenMessage<RevokeSessionResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 4);

/**
 * セッション作成リクエスト
 *
 * @generated from message avion.auth.v1.CreateSessionRequest
 */
export type CreateSessionRequest = Message<"avion.auth.v1.CreateSessionRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * IPアドレス
   *
   * @generated from field: string ip_address = 2;
   */
  ipAddress: string;

  /**
   * ユーザーエージェント
   *
   * @generated from field: string user_agent = 3;
   */
  userAgent: string;

  /**
   * デバイスID（オプション）
   *
   * @generated from field: string device_id = 4;
   */
  deviceId: string;

  /**
   * デバイス名（オプション）
   *
   * @generated from field: string device_name = 5;
   */
  deviceName: string;

  /**
   * 認証方法
   *
   * @generated from field: string auth_method = 6;
   */
  authMethod: string;

  /**
   * 2要素認証完了フラグ
   *
   * @generated from field: bool is_mfa_verified = 7;
   */
  isMfaVerified: boolean;

  /**
   * メタデータ
   *
   * @generated from field: map<string, string> metadata = 8;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message avion.auth.v1.CreateSessionRequest.
 * Use `create(CreateSessionRequestSchema)` to create a new message.
 */
export const CreateSessionRequestSchema: GenMessage<CreateSessionRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 5);

/**
 * セッション作成レスポンス
 *
 * @generated from message avion.auth.v1.CreateSessionResponse
 */
export type CreateSessionResponse = Message<"avion.auth.v1.CreateSessionResponse"> & {
  /**
   * 作成されたセッション
   *
   * @generated from field: avion.auth.v1.Session session = 1;
   */
  session?: Session;

  /**
   * アクセストークン
   *
   * @generated from field: string access_token = 2;
   */
  accessToken: string;

  /**
   * リフレッシュトークン
   *
   * @generated from field: string refresh_token = 3;
   */
  refreshToken: string;
};

/**
 * Describes the message avion.auth.v1.CreateSessionResponse.
 * Use `create(CreateSessionResponseSchema)` to create a new message.
 */
export const CreateSessionResponseSchema: GenMessage<CreateSessionResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 6);

/**
 * セッション取得リクエスト
 *
 * @generated from message avion.auth.v1.GetSessionRequest
 */
export type GetSessionRequest = Message<"avion.auth.v1.GetSessionRequest"> & {
  /**
   * セッションID
   *
   * @generated from field: string session_id = 1;
   */
  sessionId: string;
};

/**
 * Describes the message avion.auth.v1.GetSessionRequest.
 * Use `create(GetSessionRequestSchema)` to create a new message.
 */
export const GetSessionRequestSchema: GenMessage<GetSessionRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 7);

/**
 * セッション取得レスポンス
 *
 * @generated from message avion.auth.v1.GetSessionResponse
 */
export type GetSessionResponse = Message<"avion.auth.v1.GetSessionResponse"> & {
  /**
   * セッション
   *
   * @generated from field: avion.auth.v1.Session session = 1;
   */
  session?: Session;
};

/**
 * Describes the message avion.auth.v1.GetSessionResponse.
 * Use `create(GetSessionResponseSchema)` to create a new message.
 */
export const GetSessionResponseSchema: GenMessage<GetSessionResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 8);

/**
 * セッション一覧取得リクエスト
 *
 * @generated from message avion.auth.v1.ListSessionsRequest
 */
export type ListSessionsRequest = Message<"avion.auth.v1.ListSessionsRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * アクティブなセッションのみを取得
   *
   * @generated from field: bool active_only = 3;
   */
  activeOnly: boolean;
};

/**
 * Describes the message avion.auth.v1.ListSessionsRequest.
 * Use `create(ListSessionsRequestSchema)` to create a new message.
 */
export const ListSessionsRequestSchema: GenMessage<ListSessionsRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 9);

/**
 * セッション一覧取得レスポンス
 *
 * @generated from message avion.auth.v1.ListSessionsResponse
 */
export type ListSessionsResponse = Message<"avion.auth.v1.ListSessionsResponse"> & {
  /**
   * セッションのリスト
   *
   * @generated from field: repeated avion.auth.v1.Session sessions = 1;
   */
  sessions: Session[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.auth.v1.ListSessionsResponse.
 * Use `create(ListSessionsResponseSchema)` to create a new message.
 */
export const ListSessionsResponseSchema: GenMessage<ListSessionsResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 10);

/**
 * セッション検証リクエスト
 *
 * @generated from message avion.auth.v1.ValidateSessionRequest
 */
export type ValidateSessionRequest = Message<"avion.auth.v1.ValidateSessionRequest"> & {
  /**
   * アクセストークン
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * IPアドレス（オプション、セキュリティチェック用）
   *
   * @generated from field: string ip_address = 2;
   */
  ipAddress: string;
};

/**
 * Describes the message avion.auth.v1.ValidateSessionRequest.
 * Use `create(ValidateSessionRequestSchema)` to create a new message.
 */
export const ValidateSessionRequestSchema: GenMessage<ValidateSessionRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 11);

/**
 * セッション検証レスポンス
 *
 * @generated from message avion.auth.v1.ValidateSessionResponse
 */
export type ValidateSessionResponse = Message<"avion.auth.v1.ValidateSessionResponse"> & {
  /**
   * 有効フラグ
   *
   * @generated from field: bool is_valid = 1;
   */
  isValid: boolean;

  /**
   * セッション
   *
   * @generated from field: avion.auth.v1.Session session = 2;
   */
  session?: Session;

  /**
   * エラーメッセージ（無効な場合）
   *
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.auth.v1.ValidateSessionResponse.
 * Use `create(ValidateSessionResponseSchema)` to create a new message.
 */
export const ValidateSessionResponseSchema: GenMessage<ValidateSessionResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 12);

/**
 * セッション更新リクエスト
 *
 * @generated from message avion.auth.v1.UpdateSessionRequest
 */
export type UpdateSessionRequest = Message<"avion.auth.v1.UpdateSessionRequest"> & {
  /**
   * セッションID
   *
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * 最終アクセス日時を更新
   *
   * @generated from field: bool update_last_accessed = 2;
   */
  updateLastAccessed: boolean;

  /**
   * 新しいIPアドレス（オプション）
   *
   * @generated from field: string ip_address = 3;
   */
  ipAddress: string;

  /**
   * 新しいユーザーエージェント（オプション）
   *
   * @generated from field: string user_agent = 4;
   */
  userAgent: string;

  /**
   * メタデータの更新
   *
   * @generated from field: map<string, string> metadata = 5;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message avion.auth.v1.UpdateSessionRequest.
 * Use `create(UpdateSessionRequestSchema)` to create a new message.
 */
export const UpdateSessionRequestSchema: GenMessage<UpdateSessionRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 13);

/**
 * セッション更新レスポンス
 *
 * @generated from message avion.auth.v1.UpdateSessionResponse
 */
export type UpdateSessionResponse = Message<"avion.auth.v1.UpdateSessionResponse"> & {
  /**
   * 更新されたセッション
   *
   * @generated from field: avion.auth.v1.Session session = 1;
   */
  session?: Session;
};

/**
 * Describes the message avion.auth.v1.UpdateSessionResponse.
 * Use `create(UpdateSessionResponseSchema)` to create a new message.
 */
export const UpdateSessionResponseSchema: GenMessage<UpdateSessionResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 14);

/**
 * セッション延長リクエスト
 *
 * @generated from message avion.auth.v1.ExtendSessionRequest
 */
export type ExtendSessionRequest = Message<"avion.auth.v1.ExtendSessionRequest"> & {
  /**
   * セッションID
   *
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * 延長時間（秒）
   *
   * @generated from field: int32 extension_seconds = 2;
   */
  extensionSeconds: number;
};

/**
 * Describes the message avion.auth.v1.ExtendSessionRequest.
 * Use `create(ExtendSessionRequestSchema)` to create a new message.
 */
export const ExtendSessionRequestSchema: GenMessage<ExtendSessionRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 15);

/**
 * セッション延長レスポンス
 *
 * @generated from message avion.auth.v1.ExtendSessionResponse
 */
export type ExtendSessionResponse = Message<"avion.auth.v1.ExtendSessionResponse"> & {
  /**
   * 更新されたセッション
   *
   * @generated from field: avion.auth.v1.Session session = 1;
   */
  session?: Session;

  /**
   * 新しい有効期限
   *
   * @generated from field: google.protobuf.Timestamp new_expires_at = 2;
   */
  newExpiresAt?: Timestamp;
};

/**
 * Describes the message avion.auth.v1.ExtendSessionResponse.
 * Use `create(ExtendSessionResponseSchema)` to create a new message.
 */
export const ExtendSessionResponseSchema: GenMessage<ExtendSessionResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 16);

/**
 * アクティブセッション統計リクエスト
 *
 * @generated from message avion.auth.v1.GetSessionStatsRequest
 */
export type GetSessionStatsRequest = Message<"avion.auth.v1.GetSessionStatsRequest"> & {
  /**
   * ユーザーID（指定された場合、特定ユーザーの統計）
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * 期間（過去N日間）
   *
   * @generated from field: int32 days = 2;
   */
  days: number;
};

/**
 * Describes the message avion.auth.v1.GetSessionStatsRequest.
 * Use `create(GetSessionStatsRequestSchema)` to create a new message.
 */
export const GetSessionStatsRequestSchema: GenMessage<GetSessionStatsRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 17);

/**
 * アクティブセッション統計レスポンス
 *
 * @generated from message avion.auth.v1.GetSessionStatsResponse
 */
export type GetSessionStatsResponse = Message<"avion.auth.v1.GetSessionStatsResponse"> & {
  /**
   * アクティブセッション数
   *
   * @generated from field: int32 active_sessions = 1;
   */
  activeSessions: number;

  /**
   * 期限切れセッション数
   *
   * @generated from field: int32 expired_sessions = 2;
   */
  expiredSessions: number;

  /**
   * 無効化されたセッション数
   *
   * @generated from field: int32 revoked_sessions = 3;
   */
  revokedSessions: number;

  /**
   * ユニークユーザー数
   *
   * @generated from field: int32 unique_users = 4;
   */
  uniqueUsers: number;

  /**
   * デバイス別セッション数
   *
   * @generated from field: map<string, int32> sessions_by_device = 5;
   */
  sessionsByDevice: { [key: string]: number };

  /**
   * 認証方法別セッション数
   *
   * @generated from field: map<string, int32> sessions_by_auth_method = 6;
   */
  sessionsByAuthMethod: { [key: string]: number };
};

/**
 * Describes the message avion.auth.v1.GetSessionStatsResponse.
 * Use `create(GetSessionStatsResponseSchema)` to create a new message.
 */
export const GetSessionStatsResponseSchema: GenMessage<GetSessionStatsResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_session, 18);

/**
 * セッションの状態を表す列挙型
 *
 * @generated from enum avion.auth.v1.SessionStatus
 */
export enum SessionStatus {
  /**
   * 未指定
   *
   * @generated from enum value: SESSION_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * アクティブ
   *
   * @generated from enum value: SESSION_STATUS_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * 期限切れ
   *
   * @generated from enum value: SESSION_STATUS_EXPIRED = 2;
   */
  EXPIRED = 2,

  /**
   * 無効化済み
   *
   * @generated from enum value: SESSION_STATUS_REVOKED = 3;
   */
  REVOKED = 3,
}

/**
 * Describes the enum avion.auth.v1.SessionStatus.
 */
export const SessionStatusSchema: GenEnum<SessionStatus> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_session, 0);

