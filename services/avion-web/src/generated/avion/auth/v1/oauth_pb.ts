// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file avion/auth/v1/oauth.proto (package avion.auth.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { PaginationRequest } from "../../common/v1/pagination_pb";
import { file_avion_common_v1_pagination } from "../../common/v1/pagination_pb";
import type { User } from "./auth_pb";
import { file_avion_auth_v1_auth } from "./auth_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file avion/auth/v1/oauth.proto.
 */
export const file_avion_auth_v1_oauth: GenFile = /*@__PURE__*/
  fileDesc("Chlhdmlvbi9hdXRoL3YxL29hdXRoLnByb3RvEg1hdmlvbi5hdXRoLnYxIuoDChNPQXV0aFByb3ZpZGVyQ29uZmlnEhMKC3Byb3ZpZGVyX2lkGAEgASgJEi4KCHByb3ZpZGVyGAIgASgOMhwuYXZpb24uYXV0aC52MS5PQXV0aFByb3ZpZGVyEhQKDGRpc3BsYXlfbmFtZRgDIAEoCRIRCgljbGllbnRfaWQYBCABKAkSFQoNYXV0aF9lbmRwb2ludBgFIAEoCRIWCg50b2tlbl9lbmRwb2ludBgGIAEoCRIZChF1c2VyaW5mb19lbmRwb2ludBgHIAEoCRIVCg1qd2tzX2VuZHBvaW50GAggASgJEg4KBmlzc3VlchgJIAEoCRIOCgZzY29wZXMYCiADKAkSDwoHZW5hYmxlZBgLIAEoCBIuCgpjcmVhdGVkX2F0GAwgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgp1cGRhdGVkX2F0GA0gASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJCCghtZXRhZGF0YRgOIAMoCzIwLmF2aW9uLmF1dGgudjEuT0F1dGhQcm92aWRlckNvbmZpZy5NZXRhZGF0YUVudHJ5Gi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLDBAoPT0F1dGhDb25uZWN0aW9uEgoKAmlkGAEgASgJEg8KB3VzZXJfaWQYAiABKAkSLgoIcHJvdmlkZXIYAyABKA4yHC5hdmlvbi5hdXRoLnYxLk9BdXRoUHJvdmlkZXISGAoQcHJvdmlkZXJfdXNlcl9pZBgEIAEoCRIZChFwcm92aWRlcl91c2VybmFtZRgFIAEoCRIWCg5wcm92aWRlcl9lbWFpbBgGIAEoCRIUCgxhY2Nlc3NfdG9rZW4YByABKAkSFQoNcmVmcmVzaF90b2tlbhgIIAEoCRI0ChB0b2tlbl9leHBpcmVzX2F0GAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI0CgZzdGF0dXMYCiABKA4yJC5hdmlvbi5hdXRoLnYxLk9BdXRoQ29ubmVjdGlvblN0YXR1cxIuCgpjcmVhdGVkX2F0GAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIwCgxsYXN0X3VzZWRfYXQYDCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEioKCXVzZXJfaW5mbxgNIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSPgoIbWV0YWRhdGEYDiADKAsyLC5hdmlvbi5hdXRoLnYxLk9BdXRoQ29ubmVjdGlvbi5NZXRhZGF0YUVudHJ5Gi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLcAQofR2V0T0F1dGhBdXRob3JpemF0aW9uVXJsUmVxdWVzdBIuCghwcm92aWRlchgBIAEoDjIcLmF2aW9uLmF1dGgudjEuT0F1dGhQcm92aWRlchIUCgxyZWRpcmVjdF91cmkYAiABKAkSDQoFc3RhdGUYAyABKAkSFgoOY29kZV9jaGFsbGVuZ2UYBCABKAkSHQoVY29kZV9jaGFsbGVuZ2VfbWV0aG9kGAUgASgJEhkKEWFkZGl0aW9uYWxfc2NvcGVzGAYgAygJEhIKCmxvZ2luX2hpbnQYByABKAkifAogR2V0T0F1dGhBdXRob3JpemF0aW9uVXJsUmVzcG9uc2USGQoRYXV0aG9yaXphdGlvbl91cmwYASABKAkSDQoFc3RhdGUYAiABKAkSLgoKZXhwaXJlc19hdBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAilgEKGkhhbmRsZU9BdXRoQ2FsbGJhY2tSZXF1ZXN0Ei4KCHByb3ZpZGVyGAEgASgOMhwuYXZpb24uYXV0aC52MS5PQXV0aFByb3ZpZGVyEgwKBGNvZGUYAiABKAkSDQoFc3RhdGUYAyABKAkSFQoNY29kZV92ZXJpZmllchgEIAEoCRIUCgxyZWRpcmVjdF91cmkYBSABKAki3gEKG0hhbmRsZU9BdXRoQ2FsbGJhY2tSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEhQKDGFjY2Vzc190b2tlbhgCIAEoCRIVCg1yZWZyZXNoX3Rva2VuGAMgASgJEiEKBHVzZXIYBCABKAsyEy5hdmlvbi5hdXRoLnYxLlVzZXISMgoKY29ubmVjdGlvbhgFIAEoCzIeLmF2aW9uLmF1dGgudjEuT0F1dGhDb25uZWN0aW9uEhMKC2lzX25ld191c2VyGAYgASgIEhUKDWVycm9yX21lc3NhZ2UYByABKAkimAEKGkNvbm5lY3RPQXV0aEFjY291bnRSZXF1ZXN0Eg8KB3VzZXJfaWQYASABKAkSLgoIcHJvdmlkZXIYAiABKA4yHC5hdmlvbi5hdXRoLnYxLk9BdXRoUHJvdmlkZXISDAoEY29kZRgDIAEoCRIUCgxyZWRpcmVjdF91cmkYBCABKAkSFQoNY29kZV92ZXJpZmllchgFIAEoCSJ5ChtDb25uZWN0T0F1dGhBY2NvdW50UmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBIyCgpjb25uZWN0aW9uGAIgASgLMh4uYXZpb24uYXV0aC52MS5PQXV0aENvbm5lY3Rpb24SFQoNZXJyb3JfbWVzc2FnZRgDIAEoCSKJAQodRGlzY29ubmVjdE9BdXRoQWNjb3VudFJlcXVlc3QSDwoHdXNlcl9pZBgBIAEoCRIVCg1jb25uZWN0aW9uX2lkGAIgASgJEi4KCHByb3ZpZGVyGAMgASgOMhwuYXZpb24uYXV0aC52MS5PQXV0aFByb3ZpZGVyEhAKCHBhc3N3b3JkGAQgASgJIkgKHkRpc2Nvbm5lY3RPQXV0aEFjY291bnRSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEhUKDWVycm9yX21lc3NhZ2UYAiABKAkiewobTGlzdE9BdXRoQ29ubmVjdGlvbnNSZXF1ZXN0EjYKCnBhZ2luYXRpb24YASABKAsyIi5hdmlvbi5jb21tb24udjEuUGFnaW5hdGlvblJlcXVlc3QSDwoHdXNlcl9pZBgCIAEoCRITCgthY3RpdmVfb25seRgDIAEoCCJoChxMaXN0T0F1dGhDb25uZWN0aW9uc1Jlc3BvbnNlEjMKC2Nvbm5lY3Rpb25zGAEgAygLMh4uYXZpb24uYXV0aC52MS5PQXV0aENvbm5lY3Rpb24SEwoLdG90YWxfY291bnQYAiABKAUiQwoZR2V0T0F1dGhDb25uZWN0aW9uUmVxdWVzdBIVCg1jb25uZWN0aW9uX2lkGAEgASgJEg8KB3VzZXJfaWQYAiABKAkiUAoaR2V0T0F1dGhDb25uZWN0aW9uUmVzcG9uc2USMgoKY29ubmVjdGlvbhgBIAEoCzIeLmF2aW9uLmF1dGgudjEuT0F1dGhDb25uZWN0aW9uIkIKGFJlZnJlc2hPQXV0aFRva2VuUmVxdWVzdBIVCg1jb25uZWN0aW9uX2lkGAEgASgJEg8KB3VzZXJfaWQYAiABKAkidwoZUmVmcmVzaE9BdXRoVG9rZW5SZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEjIKCmNvbm5lY3Rpb24YAiABKAsyHi5hdmlvbi5hdXRoLnYxLk9BdXRoQ29ubmVjdGlvbhIVCg1lcnJvcl9tZXNzYWdlGAMgASgJIjEKGUxpc3RPQXV0aFByb3ZpZGVyc1JlcXVlc3QSFAoMZW5hYmxlZF9vbmx5GAEgASgIIlMKGkxpc3RPQXV0aFByb3ZpZGVyc1Jlc3BvbnNlEjUKCXByb3ZpZGVycxgBIAMoCzIiLmF2aW9uLmF1dGgudjEuT0F1dGhQcm92aWRlckNvbmZpZyJSChdHZXRPQXV0aFVzZXJJbmZvUmVxdWVzdBIVCg1jb25uZWN0aW9uX2lkGAEgASgJEg8KB3VzZXJfaWQYAiABKAkSDwoHcmVmcmVzaBgDIAEoCCJ2ChhHZXRPQXV0aFVzZXJJbmZvUmVzcG9uc2USKgoJdXNlcl9pbmZvGAEgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdBIuCgpmZXRjaGVkX2F0GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCqbAgoNT0F1dGhQcm92aWRlchIfChtPX0FVVEhfUFJPVklERVJfVU5TUEVDSUZJRUQQABIaChZPX0FVVEhfUFJPVklERVJfR09PR0xFEAESGgoWT19BVVRIX1BST1ZJREVSX0dJVEhVQhACEhsKF09fQVVUSF9QUk9WSURFUl9UV0lUVEVSEAMSGwoXT19BVVRIX1BST1ZJREVSX0RJU0NPUkQQBBIdChlPX0FVVEhfUFJPVklERVJfTUlDUk9TT0ZUEAUSGQoVT19BVVRIX1BST1ZJREVSX0FQUExFEAYSHAoYT19BVVRIX1BST1ZJREVSX0ZBQ0VCT09LEAcSHwobT19BVVRIX1BST1ZJREVSX0NVU1RPTV9PSURDEGQq2QEKFU9BdXRoQ29ubmVjdGlvblN0YXR1cxIoCiRPX0FVVEhfQ09OTkVDVElPTl9TVEFUVVNfVU5TUEVDSUZJRUQQABIjCh9PX0FVVEhfQ09OTkVDVElPTl9TVEFUVVNfQUNUSVZFEAESJQohT19BVVRIX0NPTk5FQ1RJT05fU1RBVFVTX0RJU0FCTEVEEAISJAogT19BVVRIX0NPTk5FQ1RJT05fU1RBVFVTX0VYUElSRUQQAxIkCiBPX0FVVEhfQ09OTkVDVElPTl9TVEFUVVNfUkVWT0tFRBAEQqoBChFjb20uYXZpb24uYXV0aC52MUIKT2F1dGhQcm90b1ABWjNnaXRodWIuY29tL25hMm5hLXAvYXZpb24vcHJvdG8vYXZpb24vYXV0aC92MTthdXRodjGiAgNBQViqAg1Bdmlvbi5BdXRoLlYxygINQXZpb25cQXV0aFxWMeICGUF2aW9uXEF1dGhcVjFcR1BCTWV0YWRhdGHqAg9Bdmlvbjo6QXV0aDo6VjFiBnByb3RvMw", [file_google_protobuf_timestamp, file_avion_common_v1_pagination, file_google_protobuf_struct, file_avion_auth_v1_auth]);

/**
 * OAuthプロバイダー設定
 *
 * @generated from message avion.auth.v1.OAuthProviderConfig
 */
export type OAuthProviderConfig = Message<"avion.auth.v1.OAuthProviderConfig"> & {
  /**
   * プロバイダーID
   *
   * @generated from field: string provider_id = 1;
   */
  providerId: string;

  /**
   * プロバイダータイプ
   *
   * @generated from field: avion.auth.v1.OAuthProvider provider = 2;
   */
  provider: OAuthProvider;

  /**
   * プロバイダー名（表示用）
   *
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * クライアントID
   *
   * @generated from field: string client_id = 4;
   */
  clientId: string;

  /**
   * 認証エンドポイント
   *
   * @generated from field: string auth_endpoint = 5;
   */
  authEndpoint: string;

  /**
   * トークンエンドポイント
   *
   * @generated from field: string token_endpoint = 6;
   */
  tokenEndpoint: string;

  /**
   * ユーザー情報エンドポイント
   *
   * @generated from field: string userinfo_endpoint = 7;
   */
  userinfoEndpoint: string;

  /**
   * JWKSエンドポイント（OIDC用）
   *
   * @generated from field: string jwks_endpoint = 8;
   */
  jwksEndpoint: string;

  /**
   * 発行者（OIDC用）
   *
   * @generated from field: string issuer = 9;
   */
  issuer: string;

  /**
   * リクエストするスコープ
   *
   * @generated from field: repeated string scopes = 10;
   */
  scopes: string[];

  /**
   * 有効フラグ
   *
   * @generated from field: bool enabled = 11;
   */
  enabled: boolean;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 12;
   */
  createdAt?: Timestamp;

  /**
   * 更新日時
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 13;
   */
  updatedAt?: Timestamp;

  /**
   * メタデータ
   *
   * @generated from field: map<string, string> metadata = 14;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message avion.auth.v1.OAuthProviderConfig.
 * Use `create(OAuthProviderConfigSchema)` to create a new message.
 */
export const OAuthProviderConfigSchema: GenMessage<OAuthProviderConfig> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 0);

/**
 * OAuth接続情報
 *
 * @generated from message avion.auth.v1.OAuthConnection
 */
export type OAuthConnection = Message<"avion.auth.v1.OAuthConnection"> & {
  /**
   * 接続ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * プロバイダー
   *
   * @generated from field: avion.auth.v1.OAuthProvider provider = 3;
   */
  provider: OAuthProvider;

  /**
   * プロバイダー側のユーザーID
   *
   * @generated from field: string provider_user_id = 4;
   */
  providerUserId: string;

  /**
   * プロバイダー側のユーザー名
   *
   * @generated from field: string provider_username = 5;
   */
  providerUsername: string;

  /**
   * プロバイダー側のメールアドレス
   *
   * @generated from field: string provider_email = 6;
   */
  providerEmail: string;

  /**
   * アクセストークン（暗号化済み）
   *
   * @generated from field: string access_token = 7;
   */
  accessToken: string;

  /**
   * リフレッシュトークン（暗号化済み）
   *
   * @generated from field: string refresh_token = 8;
   */
  refreshToken: string;

  /**
   * トークンの有効期限
   *
   * @generated from field: google.protobuf.Timestamp token_expires_at = 9;
   */
  tokenExpiresAt?: Timestamp;

  /**
   * 接続の状態
   *
   * @generated from field: avion.auth.v1.OAuthConnectionStatus status = 10;
   */
  status: OAuthConnectionStatus;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 11;
   */
  createdAt?: Timestamp;

  /**
   * 最終使用日時
   *
   * @generated from field: google.protobuf.Timestamp last_used_at = 12;
   */
  lastUsedAt?: Timestamp;

  /**
   * プロバイダーから取得したユーザー情報
   *
   * @generated from field: google.protobuf.Struct user_info = 13;
   */
  userInfo?: JsonObject;

  /**
   * メタデータ
   *
   * @generated from field: map<string, string> metadata = 14;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message avion.auth.v1.OAuthConnection.
 * Use `create(OAuthConnectionSchema)` to create a new message.
 */
export const OAuthConnectionSchema: GenMessage<OAuthConnection> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 1);

/**
 * OAuth認証URLリクエスト
 *
 * @generated from message avion.auth.v1.GetOAuthAuthorizationUrlRequest
 */
export type GetOAuthAuthorizationUrlRequest = Message<"avion.auth.v1.GetOAuthAuthorizationUrlRequest"> & {
  /**
   * プロバイダー
   *
   * @generated from field: avion.auth.v1.OAuthProvider provider = 1;
   */
  provider: OAuthProvider;

  /**
   * リダイレクトURI
   *
   * @generated from field: string redirect_uri = 2;
   */
  redirectUri: string;

  /**
   * State（CSRF対策）
   *
   * @generated from field: string state = 3;
   */
  state: string;

  /**
   * コードチャレンジ（PKCE用）
   *
   * @generated from field: string code_challenge = 4;
   */
  codeChallenge: string;

  /**
   * コードチャレンジメソッド（PKCE用）
   *
   * @generated from field: string code_challenge_method = 5;
   */
  codeChallengeMethod: string;

  /**
   * 追加のスコープ
   *
   * @generated from field: repeated string additional_scopes = 6;
   */
  additionalScopes: string[];

  /**
   * ログインヒント（メールアドレス等）
   *
   * @generated from field: string login_hint = 7;
   */
  loginHint: string;
};

/**
 * Describes the message avion.auth.v1.GetOAuthAuthorizationUrlRequest.
 * Use `create(GetOAuthAuthorizationUrlRequestSchema)` to create a new message.
 */
export const GetOAuthAuthorizationUrlRequestSchema: GenMessage<GetOAuthAuthorizationUrlRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 2);

/**
 * OAuth認証URLレスポンス
 *
 * @generated from message avion.auth.v1.GetOAuthAuthorizationUrlResponse
 */
export type GetOAuthAuthorizationUrlResponse = Message<"avion.auth.v1.GetOAuthAuthorizationUrlResponse"> & {
  /**
   * 認証URL
   *
   * @generated from field: string authorization_url = 1;
   */
  authorizationUrl: string;

  /**
   * State（検証用）
   *
   * @generated from field: string state = 2;
   */
  state: string;

  /**
   * 有効期限
   *
   * @generated from field: google.protobuf.Timestamp expires_at = 3;
   */
  expiresAt?: Timestamp;
};

/**
 * Describes the message avion.auth.v1.GetOAuthAuthorizationUrlResponse.
 * Use `create(GetOAuthAuthorizationUrlResponseSchema)` to create a new message.
 */
export const GetOAuthAuthorizationUrlResponseSchema: GenMessage<GetOAuthAuthorizationUrlResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 3);

/**
 * OAuthコールバック処理リクエスト
 *
 * @generated from message avion.auth.v1.HandleOAuthCallbackRequest
 */
export type HandleOAuthCallbackRequest = Message<"avion.auth.v1.HandleOAuthCallbackRequest"> & {
  /**
   * プロバイダー
   *
   * @generated from field: avion.auth.v1.OAuthProvider provider = 1;
   */
  provider: OAuthProvider;

  /**
   * 認証コード
   *
   * @generated from field: string code = 2;
   */
  code: string;

  /**
   * State（CSRF検証用）
   *
   * @generated from field: string state = 3;
   */
  state: string;

  /**
   * コードベリファイア（PKCE用）
   *
   * @generated from field: string code_verifier = 4;
   */
  codeVerifier: string;

  /**
   * リダイレクトURI
   *
   * @generated from field: string redirect_uri = 5;
   */
  redirectUri: string;
};

/**
 * Describes the message avion.auth.v1.HandleOAuthCallbackRequest.
 * Use `create(HandleOAuthCallbackRequestSchema)` to create a new message.
 */
export const HandleOAuthCallbackRequestSchema: GenMessage<HandleOAuthCallbackRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 4);

/**
 * OAuthコールバック処理レスポンス
 *
 * @generated from message avion.auth.v1.HandleOAuthCallbackResponse
 */
export type HandleOAuthCallbackResponse = Message<"avion.auth.v1.HandleOAuthCallbackResponse"> & {
  /**
   * 処理成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * アクセストークン（新規ユーザーまたはログイン時）
   *
   * @generated from field: string access_token = 2;
   */
  accessToken: string;

  /**
   * リフレッシュトークン
   *
   * @generated from field: string refresh_token = 3;
   */
  refreshToken: string;

  /**
   * ユーザー情報
   *
   * @generated from field: avion.auth.v1.User user = 4;
   */
  user?: User;

  /**
   * OAuth接続情報
   *
   * @generated from field: avion.auth.v1.OAuthConnection connection = 5;
   */
  connection?: OAuthConnection;

  /**
   * 新規ユーザーフラグ
   *
   * @generated from field: bool is_new_user = 6;
   */
  isNewUser: boolean;

  /**
   * エラーメッセージ（失敗時）
   *
   * @generated from field: string error_message = 7;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.auth.v1.HandleOAuthCallbackResponse.
 * Use `create(HandleOAuthCallbackResponseSchema)` to create a new message.
 */
export const HandleOAuthCallbackResponseSchema: GenMessage<HandleOAuthCallbackResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 5);

/**
 * OAuth接続リクエスト
 *
 * @generated from message avion.auth.v1.ConnectOAuthAccountRequest
 */
export type ConnectOAuthAccountRequest = Message<"avion.auth.v1.ConnectOAuthAccountRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * プロバイダー
   *
   * @generated from field: avion.auth.v1.OAuthProvider provider = 2;
   */
  provider: OAuthProvider;

  /**
   * 認証コード
   *
   * @generated from field: string code = 3;
   */
  code: string;

  /**
   * リダイレクトURI
   *
   * @generated from field: string redirect_uri = 4;
   */
  redirectUri: string;

  /**
   * コードベリファイア（PKCE用）
   *
   * @generated from field: string code_verifier = 5;
   */
  codeVerifier: string;
};

/**
 * Describes the message avion.auth.v1.ConnectOAuthAccountRequest.
 * Use `create(ConnectOAuthAccountRequestSchema)` to create a new message.
 */
export const ConnectOAuthAccountRequestSchema: GenMessage<ConnectOAuthAccountRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 6);

/**
 * OAuth接続レスポンス
 *
 * @generated from message avion.auth.v1.ConnectOAuthAccountResponse
 */
export type ConnectOAuthAccountResponse = Message<"avion.auth.v1.ConnectOAuthAccountResponse"> & {
  /**
   * 接続成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * OAuth接続情報
   *
   * @generated from field: avion.auth.v1.OAuthConnection connection = 2;
   */
  connection?: OAuthConnection;

  /**
   * エラーメッセージ（失敗時）
   *
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.auth.v1.ConnectOAuthAccountResponse.
 * Use `create(ConnectOAuthAccountResponseSchema)` to create a new message.
 */
export const ConnectOAuthAccountResponseSchema: GenMessage<ConnectOAuthAccountResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 7);

/**
 * OAuth切断リクエスト
 *
 * @generated from message avion.auth.v1.DisconnectOAuthAccountRequest
 */
export type DisconnectOAuthAccountRequest = Message<"avion.auth.v1.DisconnectOAuthAccountRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * 接続ID
   *
   * @generated from field: string connection_id = 2;
   */
  connectionId: string;

  /**
   * プロバイダー（接続IDの代わりに指定可能）
   *
   * @generated from field: avion.auth.v1.OAuthProvider provider = 3;
   */
  provider: OAuthProvider;

  /**
   * 確認用パスワード
   *
   * @generated from field: string password = 4;
   */
  password: string;
};

/**
 * Describes the message avion.auth.v1.DisconnectOAuthAccountRequest.
 * Use `create(DisconnectOAuthAccountRequestSchema)` to create a new message.
 */
export const DisconnectOAuthAccountRequestSchema: GenMessage<DisconnectOAuthAccountRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 8);

/**
 * OAuth切断レスポンス
 *
 * @generated from message avion.auth.v1.DisconnectOAuthAccountResponse
 */
export type DisconnectOAuthAccountResponse = Message<"avion.auth.v1.DisconnectOAuthAccountResponse"> & {
  /**
   * 切断成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * エラーメッセージ（失敗時）
   *
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.auth.v1.DisconnectOAuthAccountResponse.
 * Use `create(DisconnectOAuthAccountResponseSchema)` to create a new message.
 */
export const DisconnectOAuthAccountResponseSchema: GenMessage<DisconnectOAuthAccountResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 9);

/**
 * OAuth接続一覧取得リクエスト
 *
 * @generated from message avion.auth.v1.ListOAuthConnectionsRequest
 */
export type ListOAuthConnectionsRequest = Message<"avion.auth.v1.ListOAuthConnectionsRequest"> & {
  /**
   * ページネーション設定
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * アクティブな接続のみ
   *
   * @generated from field: bool active_only = 3;
   */
  activeOnly: boolean;
};

/**
 * Describes the message avion.auth.v1.ListOAuthConnectionsRequest.
 * Use `create(ListOAuthConnectionsRequestSchema)` to create a new message.
 */
export const ListOAuthConnectionsRequestSchema: GenMessage<ListOAuthConnectionsRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 10);

/**
 * OAuth接続一覧取得レスポンス
 *
 * @generated from message avion.auth.v1.ListOAuthConnectionsResponse
 */
export type ListOAuthConnectionsResponse = Message<"avion.auth.v1.ListOAuthConnectionsResponse"> & {
  /**
   * OAuth接続のリスト
   *
   * @generated from field: repeated avion.auth.v1.OAuthConnection connections = 1;
   */
  connections: OAuthConnection[];

  /**
   * 合計数
   *
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;
};

/**
 * Describes the message avion.auth.v1.ListOAuthConnectionsResponse.
 * Use `create(ListOAuthConnectionsResponseSchema)` to create a new message.
 */
export const ListOAuthConnectionsResponseSchema: GenMessage<ListOAuthConnectionsResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 11);

/**
 * OAuth接続取得リクエスト
 *
 * @generated from message avion.auth.v1.GetOAuthConnectionRequest
 */
export type GetOAuthConnectionRequest = Message<"avion.auth.v1.GetOAuthConnectionRequest"> & {
  /**
   * 接続ID
   *
   * @generated from field: string connection_id = 1;
   */
  connectionId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;
};

/**
 * Describes the message avion.auth.v1.GetOAuthConnectionRequest.
 * Use `create(GetOAuthConnectionRequestSchema)` to create a new message.
 */
export const GetOAuthConnectionRequestSchema: GenMessage<GetOAuthConnectionRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 12);

/**
 * OAuth接続取得レスポンス
 *
 * @generated from message avion.auth.v1.GetOAuthConnectionResponse
 */
export type GetOAuthConnectionResponse = Message<"avion.auth.v1.GetOAuthConnectionResponse"> & {
  /**
   * OAuth接続情報
   *
   * @generated from field: avion.auth.v1.OAuthConnection connection = 1;
   */
  connection?: OAuthConnection;
};

/**
 * Describes the message avion.auth.v1.GetOAuthConnectionResponse.
 * Use `create(GetOAuthConnectionResponseSchema)` to create a new message.
 */
export const GetOAuthConnectionResponseSchema: GenMessage<GetOAuthConnectionResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 13);

/**
 * OAuthトークンリフレッシュリクエスト
 *
 * @generated from message avion.auth.v1.RefreshOAuthTokenRequest
 */
export type RefreshOAuthTokenRequest = Message<"avion.auth.v1.RefreshOAuthTokenRequest"> & {
  /**
   * 接続ID
   *
   * @generated from field: string connection_id = 1;
   */
  connectionId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;
};

/**
 * Describes the message avion.auth.v1.RefreshOAuthTokenRequest.
 * Use `create(RefreshOAuthTokenRequestSchema)` to create a new message.
 */
export const RefreshOAuthTokenRequestSchema: GenMessage<RefreshOAuthTokenRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 14);

/**
 * OAuthトークンリフレッシュレスポンス
 *
 * @generated from message avion.auth.v1.RefreshOAuthTokenResponse
 */
export type RefreshOAuthTokenResponse = Message<"avion.auth.v1.RefreshOAuthTokenResponse"> & {
  /**
   * リフレッシュ成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * 更新されたOAuth接続情報
   *
   * @generated from field: avion.auth.v1.OAuthConnection connection = 2;
   */
  connection?: OAuthConnection;

  /**
   * エラーメッセージ（失敗時）
   *
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.auth.v1.RefreshOAuthTokenResponse.
 * Use `create(RefreshOAuthTokenResponseSchema)` to create a new message.
 */
export const RefreshOAuthTokenResponseSchema: GenMessage<RefreshOAuthTokenResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 15);

/**
 * OAuthプロバイダー一覧取得リクエスト
 *
 * @generated from message avion.auth.v1.ListOAuthProvidersRequest
 */
export type ListOAuthProvidersRequest = Message<"avion.auth.v1.ListOAuthProvidersRequest"> & {
  /**
   * 有効なプロバイダーのみ
   *
   * @generated from field: bool enabled_only = 1;
   */
  enabledOnly: boolean;
};

/**
 * Describes the message avion.auth.v1.ListOAuthProvidersRequest.
 * Use `create(ListOAuthProvidersRequestSchema)` to create a new message.
 */
export const ListOAuthProvidersRequestSchema: GenMessage<ListOAuthProvidersRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 16);

/**
 * OAuthプロバイダー一覧取得レスポンス
 *
 * @generated from message avion.auth.v1.ListOAuthProvidersResponse
 */
export type ListOAuthProvidersResponse = Message<"avion.auth.v1.ListOAuthProvidersResponse"> & {
  /**
   * プロバイダー設定のリスト
   *
   * @generated from field: repeated avion.auth.v1.OAuthProviderConfig providers = 1;
   */
  providers: OAuthProviderConfig[];
};

/**
 * Describes the message avion.auth.v1.ListOAuthProvidersResponse.
 * Use `create(ListOAuthProvidersResponseSchema)` to create a new message.
 */
export const ListOAuthProvidersResponseSchema: GenMessage<ListOAuthProvidersResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 17);

/**
 * OAuthユーザー情報取得リクエスト
 *
 * @generated from message avion.auth.v1.GetOAuthUserInfoRequest
 */
export type GetOAuthUserInfoRequest = Message<"avion.auth.v1.GetOAuthUserInfoRequest"> & {
  /**
   * 接続ID
   *
   * @generated from field: string connection_id = 1;
   */
  connectionId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 最新情報を取得（キャッシュを使用しない）
   *
   * @generated from field: bool refresh = 3;
   */
  refresh: boolean;
};

/**
 * Describes the message avion.auth.v1.GetOAuthUserInfoRequest.
 * Use `create(GetOAuthUserInfoRequestSchema)` to create a new message.
 */
export const GetOAuthUserInfoRequestSchema: GenMessage<GetOAuthUserInfoRequest> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 18);

/**
 * OAuthユーザー情報取得レスポンス
 *
 * @generated from message avion.auth.v1.GetOAuthUserInfoResponse
 */
export type GetOAuthUserInfoResponse = Message<"avion.auth.v1.GetOAuthUserInfoResponse"> & {
  /**
   * ユーザー情報（プロバイダー固有の形式）
   *
   * @generated from field: google.protobuf.Struct user_info = 1;
   */
  userInfo?: JsonObject;

  /**
   * 取得日時
   *
   * @generated from field: google.protobuf.Timestamp fetched_at = 2;
   */
  fetchedAt?: Timestamp;
};

/**
 * Describes the message avion.auth.v1.GetOAuthUserInfoResponse.
 * Use `create(GetOAuthUserInfoResponseSchema)` to create a new message.
 */
export const GetOAuthUserInfoResponseSchema: GenMessage<GetOAuthUserInfoResponse> = /*@__PURE__*/
  messageDesc(file_avion_auth_v1_oauth, 19);

/**
 * OAuthプロバイダー
 *
 * @generated from enum avion.auth.v1.OAuthProvider
 */
export enum OAuthProvider {
  /**
   * 未指定
   *
   * @generated from enum value: O_AUTH_PROVIDER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Google
   *
   * @generated from enum value: O_AUTH_PROVIDER_GOOGLE = 1;
   */
  GOOGLE = 1,

  /**
   * GitHub
   *
   * @generated from enum value: O_AUTH_PROVIDER_GITHUB = 2;
   */
  GITHUB = 2,

  /**
   * Twitter/X
   *
   * @generated from enum value: O_AUTH_PROVIDER_TWITTER = 3;
   */
  TWITTER = 3,

  /**
   * Discord
   *
   * @generated from enum value: O_AUTH_PROVIDER_DISCORD = 4;
   */
  DISCORD = 4,

  /**
   * Microsoft
   *
   * @generated from enum value: O_AUTH_PROVIDER_MICROSOFT = 5;
   */
  MICROSOFT = 5,

  /**
   * Apple
   *
   * @generated from enum value: O_AUTH_PROVIDER_APPLE = 6;
   */
  APPLE = 6,

  /**
   * Facebook
   *
   * @generated from enum value: O_AUTH_PROVIDER_FACEBOOK = 7;
   */
  FACEBOOK = 7,

  /**
   * カスタムOIDCプロバイダー
   *
   * @generated from enum value: O_AUTH_PROVIDER_CUSTOM_OIDC = 100;
   */
  CUSTOM_OIDC = 100,
}

/**
 * Describes the enum avion.auth.v1.OAuthProvider.
 */
export const OAuthProviderSchema: GenEnum<OAuthProvider> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_oauth, 0);

/**
 * OAuth接続の状態
 *
 * @generated from enum avion.auth.v1.OAuthConnectionStatus
 */
export enum OAuthConnectionStatus {
  /**
   * 未指定
   *
   * @generated from enum value: O_AUTH_CONNECTION_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * アクティブ
   *
   * @generated from enum value: O_AUTH_CONNECTION_STATUS_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * 無効化済み
   *
   * @generated from enum value: O_AUTH_CONNECTION_STATUS_DISABLED = 2;
   */
  DISABLED = 2,

  /**
   * 期限切れ
   *
   * @generated from enum value: O_AUTH_CONNECTION_STATUS_EXPIRED = 3;
   */
  EXPIRED = 3,

  /**
   * 失効済み
   *
   * @generated from enum value: O_AUTH_CONNECTION_STATUS_REVOKED = 4;
   */
  REVOKED = 4,
}

/**
 * Describes the enum avion.auth.v1.OAuthConnectionStatus.
 */
export const OAuthConnectionStatusSchema: GenEnum<OAuthConnectionStatus> = /*@__PURE__*/
  enumDesc(file_avion_auth_v1_oauth, 1);

