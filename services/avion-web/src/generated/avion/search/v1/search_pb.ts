// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file avion/search/v1/search.proto (package avion.search.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { PaginationRequest, PaginationResponse } from "../../common/v1/pagination_pb";
import { file_avion_common_v1_pagination } from "../../common/v1/pagination_pb";
import type { User, UserProfile } from "../../user/v1/user_pb";
import { file_avion_user_v1_user } from "../../user/v1/user_pb";
import type { Drop, DropMedia, DropMention, MediaType } from "../../drop/v1/drop_pb";
import { file_avion_drop_v1_drop } from "../../drop/v1/drop_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file avion/search/v1/search.proto.
 */
export const file_avion_search_v1_search: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_timestamp, file_avion_common_v1_pagination, file_avion_user_v1_user, file_avion_drop_v1_drop]);

/**
 * 検索フィルター
 *
 * @generated from message avion.search.v1.SearchFilter
 */
export type SearchFilter = Message<"avion.search.v1.SearchFilter"> & {
  /**
   * 検索対象のユーザーID（特定ユーザーの投稿のみ）
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * 開始日時
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * 終了日時
   *
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;

  /**
   * メディアタイプフィルター
   *
   * @generated from field: repeated avion.drop.v1.MediaType media_types = 4;
   */
  mediaTypes: MediaType[];

  /**
   * メディアを含む投稿のみ
   *
   * @generated from field: bool has_media = 5;
   */
  hasMedia: boolean;

  /**
   * リプライを含む
   *
   * @generated from field: bool include_replies = 6;
   */
  includeReplies: boolean;

  /**
   * リドロップを含む
   *
   * @generated from field: bool include_redrops = 7;
   */
  includeRedrops: boolean;

  /**
   * 認証済みユーザーのみ
   *
   * @generated from field: bool verified_only = 8;
   */
  verifiedOnly: boolean;

  /**
   * 言語フィルター（ISO 639-1コード）
   *
   * @generated from field: repeated string languages = 9;
   */
  languages: string[];

  /**
   * 最小いいね数
   *
   * @generated from field: int32 min_likes = 10;
   */
  minLikes: number;

  /**
   * 最小リドロップ数
   *
   * @generated from field: int32 min_redrops = 11;
   */
  minRedrops: number;

  /**
   * 最小リプライ数
   *
   * @generated from field: int32 min_replies = 12;
   */
  minReplies: number;
};

/**
 * Describes the message avion.search.v1.SearchFilter.
 * Use `create(SearchFilterSchema)` to create a new message.
 */
export const SearchFilterSchema: GenMessage<SearchFilter> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 0);

/**
 * 検索リクエスト
 *
 * @generated from message avion.search.v1.SearchRequest
 */
export type SearchRequest = Message<"avion.search.v1.SearchRequest"> & {
  /**
   * 検索クエリ
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * 検索タイプ
   *
   * @generated from field: avion.search.v1.SearchType search_type = 2;
   */
  searchType: SearchType;

  /**
   * 検索フィルター
   *
   * @generated from field: avion.search.v1.SearchFilter filter = 3;
   */
  filter?: SearchFilter;

  /**
   * ソート順
   *
   * @generated from field: avion.search.v1.SortOrder sort_order = 4;
   */
  sortOrder: SortOrder;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 5;
   */
  pagination?: PaginationRequest;

  /**
   * ハイライト表示を有効にする
   *
   * @generated from field: bool enable_highlighting = 6;
   */
  enableHighlighting: boolean;

  /**
   * ファセット検索を有効にする
   *
   * @generated from field: bool enable_facets = 7;
   */
  enableFacets: boolean;

  /**
   * 検索セッションID（検索履歴追跡用）
   *
   * @generated from field: string session_id = 8;
   */
  sessionId: string;
};

/**
 * Describes the message avion.search.v1.SearchRequest.
 * Use `create(SearchRequestSchema)` to create a new message.
 */
export const SearchRequestSchema: GenMessage<SearchRequest> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 1);

/**
 * 検索レスポンス
 *
 * @generated from message avion.search.v1.SearchResponse
 */
export type SearchResponse = Message<"avion.search.v1.SearchResponse"> & {
  /**
   * 検索結果
   *
   * @generated from field: repeated avion.search.v1.SearchResult results = 1;
   */
  results: SearchResult[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;

  /**
   * 検索にかかった時間（ミリ秒）
   *
   * @generated from field: int64 search_time_ms = 3;
   */
  searchTimeMs: bigint;

  /**
   * ファセット情報
   *
   * @generated from field: avion.search.v1.SearchFacets facets = 4;
   */
  facets?: SearchFacets;

  /**
   * 検索クエリのサジェスト
   *
   * @generated from field: repeated string suggestions = 5;
   */
  suggestions: string[];

  /**
   * 検索セッションID
   *
   * @generated from field: string session_id = 6;
   */
  sessionId: string;
};

/**
 * Describes the message avion.search.v1.SearchResponse.
 * Use `create(SearchResponseSchema)` to create a new message.
 */
export const SearchResponseSchema: GenMessage<SearchResponse> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 2);

/**
 * 検索結果
 *
 * @generated from message avion.search.v1.SearchResult
 */
export type SearchResult = Message<"avion.search.v1.SearchResult"> & {
  /**
   * 結果タイプによる分岐
   *
   * @generated from oneof avion.search.v1.SearchResult.result
   */
  result: {
    /**
     * ユーザー検索結果
     *
     * @generated from field: avion.search.v1.UserSearchResult user = 1;
     */
    value: UserSearchResult;
    case: "user";
  } | {
    /**
     * Drop検索結果
     *
     * @generated from field: avion.search.v1.DropSearchResult drop = 2;
     */
    value: DropSearchResult;
    case: "drop";
  } | {
    /**
     * ハッシュタグ検索結果
     *
     * @generated from field: avion.search.v1.HashtagSearchResult hashtag = 3;
     */
    value: HashtagSearchResult;
    case: "hashtag";
  } | { case: undefined; value?: undefined };

  /**
   * 検索スコア（関連度）
   *
   * @generated from field: float score = 4;
   */
  score: number;

  /**
   * ハイライト情報
   *
   * @generated from field: map<string, string> highlights = 5;
   */
  highlights: { [key: string]: string };
};

/**
 * Describes the message avion.search.v1.SearchResult.
 * Use `create(SearchResultSchema)` to create a new message.
 */
export const SearchResultSchema: GenMessage<SearchResult> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 3);

/**
 * ユーザー検索結果
 *
 * @generated from message avion.search.v1.UserSearchResult
 */
export type UserSearchResult = Message<"avion.search.v1.UserSearchResult"> & {
  /**
   * ユーザー情報
   *
   * @generated from field: avion.user.v1.User user = 1;
   */
  user?: User;

  /**
   * ユーザープロフィール
   *
   * @generated from field: avion.user.v1.UserProfile profile = 2;
   */
  profile?: UserProfile;

  /**
   * フォロー状態（リクエストユーザーとの関係）
   *
   * @generated from field: bool is_following = 3;
   */
  isFollowing: boolean;

  /**
   * フォロワー状態
   *
   * @generated from field: bool is_followed = 4;
   */
  isFollowed: boolean;

  /**
   * ミュート状態
   *
   * @generated from field: bool is_muted = 5;
   */
  isMuted: boolean;

  /**
   * ブロック状態
   *
   * @generated from field: bool is_blocked = 6;
   */
  isBlocked: boolean;
};

/**
 * Describes the message avion.search.v1.UserSearchResult.
 * Use `create(UserSearchResultSchema)` to create a new message.
 */
export const UserSearchResultSchema: GenMessage<UserSearchResult> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 4);

/**
 * Drop検索結果
 *
 * @generated from message avion.search.v1.DropSearchResult
 */
export type DropSearchResult = Message<"avion.search.v1.DropSearchResult"> & {
  /**
   * Drop情報
   *
   * @generated from field: avion.drop.v1.Drop drop = 1;
   */
  drop?: Drop;

  /**
   * 投稿者情報
   *
   * @generated from field: avion.user.v1.User author = 2;
   */
  author?: User;

  /**
   * メディア情報
   *
   * @generated from field: repeated avion.drop.v1.DropMedia media = 3;
   */
  media: DropMedia[];

  /**
   * ハッシュタグ
   *
   * @generated from field: repeated string hashtags = 4;
   */
  hashtags: string[];

  /**
   * メンション
   *
   * @generated from field: repeated avion.drop.v1.DropMention mentions = 5;
   */
  mentions: DropMention[];

  /**
   * 現在のユーザーのリアクション状態
   *
   * @generated from field: avion.search.v1.UserReactionState user_reaction = 6;
   */
  userReaction?: UserReactionState;
};

/**
 * Describes the message avion.search.v1.DropSearchResult.
 * Use `create(DropSearchResultSchema)` to create a new message.
 */
export const DropSearchResultSchema: GenMessage<DropSearchResult> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 5);

/**
 * ハッシュタグ検索結果
 *
 * @generated from message avion.search.v1.HashtagSearchResult
 */
export type HashtagSearchResult = Message<"avion.search.v1.HashtagSearchResult"> & {
  /**
   * ハッシュタグ名（#を含む）
   *
   * @generated from field: string hashtag = 1;
   */
  hashtag: string;

  /**
   * 使用回数
   *
   * @generated from field: int64 usage_count = 2;
   */
  usageCount: bigint;

  /**
   * トレンドスコア
   *
   * @generated from field: float trend_score = 3;
   */
  trendScore: number;

  /**
   * 最初の使用日時
   *
   * @generated from field: google.protobuf.Timestamp first_used_at = 4;
   */
  firstUsedAt?: Timestamp;

  /**
   * 最後の使用日時
   *
   * @generated from field: google.protobuf.Timestamp last_used_at = 5;
   */
  lastUsedAt?: Timestamp;

  /**
   * 関連ハッシュタグ
   *
   * @generated from field: repeated string related_hashtags = 6;
   */
  relatedHashtags: string[];

  /**
   * 24時間の使用回数
   *
   * @generated from field: int64 daily_usage_count = 7;
   */
  dailyUsageCount: bigint;

  /**
   * 7日間の使用回数
   *
   * @generated from field: int64 weekly_usage_count = 8;
   */
  weeklyUsageCount: bigint;
};

/**
 * Describes the message avion.search.v1.HashtagSearchResult.
 * Use `create(HashtagSearchResultSchema)` to create a new message.
 */
export const HashtagSearchResultSchema: GenMessage<HashtagSearchResult> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 6);

/**
 * ユーザーのリアクション状態
 *
 * @generated from message avion.search.v1.UserReactionState
 */
export type UserReactionState = Message<"avion.search.v1.UserReactionState"> & {
  /**
   * いいね済み
   *
   * @generated from field: bool liked = 1;
   */
  liked: boolean;

  /**
   * リドロップ済み
   *
   * @generated from field: bool redropped = 2;
   */
  redropped: boolean;

  /**
   * ブックマーク済み
   *
   * @generated from field: bool bookmarked = 3;
   */
  bookmarked: boolean;

  /**
   * リプライ済み
   *
   * @generated from field: bool replied = 4;
   */
  replied: boolean;
};

/**
 * Describes the message avion.search.v1.UserReactionState.
 * Use `create(UserReactionStateSchema)` to create a new message.
 */
export const UserReactionStateSchema: GenMessage<UserReactionState> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 7);

/**
 * ファセット情報
 *
 * @generated from message avion.search.v1.SearchFacets
 */
export type SearchFacets = Message<"avion.search.v1.SearchFacets"> & {
  /**
   * ユーザー関連ファセット
   *
   * @generated from field: repeated avion.search.v1.FacetValue user_facets = 1;
   */
  userFacets: FacetValue[];

  /**
   * メディアタイプファセット
   *
   * @generated from field: repeated avion.search.v1.FacetValue media_type_facets = 2;
   */
  mediaTypeFacets: FacetValue[];

  /**
   * 言語ファセット
   *
   * @generated from field: repeated avion.search.v1.FacetValue language_facets = 3;
   */
  languageFacets: FacetValue[];

  /**
   * 日付範囲ファセット
   *
   * @generated from field: repeated avion.search.v1.DateRangeFacet date_range_facets = 4;
   */
  dateRangeFacets: DateRangeFacet[];

  /**
   * ハッシュタグファセット
   *
   * @generated from field: repeated avion.search.v1.FacetValue hashtag_facets = 5;
   */
  hashtagFacets: FacetValue[];
};

/**
 * Describes the message avion.search.v1.SearchFacets.
 * Use `create(SearchFacetsSchema)` to create a new message.
 */
export const SearchFacetsSchema: GenMessage<SearchFacets> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 8);

/**
 * ファセット値
 *
 * @generated from message avion.search.v1.FacetValue
 */
export type FacetValue = Message<"avion.search.v1.FacetValue"> & {
  /**
   * ファセット値
   *
   * @generated from field: string value = 1;
   */
  value: string;

  /**
   * カウント
   *
   * @generated from field: int64 count = 2;
   */
  count: bigint;

  /**
   * 表示ラベル
   *
   * @generated from field: string label = 3;
   */
  label: string;
};

/**
 * Describes the message avion.search.v1.FacetValue.
 * Use `create(FacetValueSchema)` to create a new message.
 */
export const FacetValueSchema: GenMessage<FacetValue> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 9);

/**
 * 日付範囲ファセット
 *
 * @generated from message avion.search.v1.DateRangeFacet
 */
export type DateRangeFacet = Message<"avion.search.v1.DateRangeFacet"> & {
  /**
   * 範囲ラベル（例: "過去24時間", "過去1週間"）
   *
   * @generated from field: string label = 1;
   */
  label: string;

  /**
   * 開始日時
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * 終了日時
   *
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;

  /**
   * カウント
   *
   * @generated from field: int64 count = 4;
   */
  count: bigint;
};

/**
 * Describes the message avion.search.v1.DateRangeFacet.
 * Use `create(DateRangeFacetSchema)` to create a new message.
 */
export const DateRangeFacetSchema: GenMessage<DateRangeFacet> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 10);

/**
 * オートコンプリートリクエスト
 *
 * @generated from message avion.search.v1.AutocompleteRequest
 */
export type AutocompleteRequest = Message<"avion.search.v1.AutocompleteRequest"> & {
  /**
   * 入力中のクエリ
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * 検索タイプ
   *
   * @generated from field: avion.search.v1.SearchType search_type = 2;
   */
  searchType: SearchType;

  /**
   * 最大候補数
   *
   * @generated from field: int32 max_suggestions = 3;
   */
  maxSuggestions: number;

  /**
   * ユーザーの言語設定
   *
   * @generated from field: string language = 4;
   */
  language: string;
};

/**
 * Describes the message avion.search.v1.AutocompleteRequest.
 * Use `create(AutocompleteRequestSchema)` to create a new message.
 */
export const AutocompleteRequestSchema: GenMessage<AutocompleteRequest> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 11);

/**
 * オートコンプリートレスポンス
 *
 * @generated from message avion.search.v1.AutocompleteResponse
 */
export type AutocompleteResponse = Message<"avion.search.v1.AutocompleteResponse"> & {
  /**
   * サジェスト候補
   *
   * @generated from field: repeated avion.search.v1.AutocompleteSuggestion suggestions = 1;
   */
  suggestions: AutocompleteSuggestion[];
};

/**
 * Describes the message avion.search.v1.AutocompleteResponse.
 * Use `create(AutocompleteResponseSchema)` to create a new message.
 */
export const AutocompleteResponseSchema: GenMessage<AutocompleteResponse> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 12);

/**
 * オートコンプリート候補
 *
 * @generated from message avion.search.v1.AutocompleteSuggestion
 */
export type AutocompleteSuggestion = Message<"avion.search.v1.AutocompleteSuggestion"> & {
  /**
   * サジェストテキスト
   *
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * サジェストタイプ
   *
   * @generated from field: avion.search.v1.SearchType type = 2;
   */
  type: SearchType;

  /**
   * 人気度スコア
   *
   * @generated from field: float popularity_score = 3;
   */
  popularityScore: number;

  /**
   * アイコンURL（ユーザーの場合）
   *
   * @generated from field: string icon_url = 4;
   */
  iconUrl: string;

  /**
   * 説明文
   *
   * @generated from field: string description = 5;
   */
  description: string;
};

/**
 * Describes the message avion.search.v1.AutocompleteSuggestion.
 * Use `create(AutocompleteSuggestionSchema)` to create a new message.
 */
export const AutocompleteSuggestionSchema: GenMessage<AutocompleteSuggestion> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 13);

/**
 * トレンド検索リクエスト
 *
 * @generated from message avion.search.v1.GetTrendingRequest
 */
export type GetTrendingRequest = Message<"avion.search.v1.GetTrendingRequest"> & {
  /**
   * 地域コード（ISO 3166-1 alpha-2）
   *
   * @generated from field: string region_code = 1;
   */
  regionCode: string;

  /**
   * 言語コード（ISO 639-1）
   *
   * @generated from field: string language_code = 2;
   */
  languageCode: string;

  /**
   * カテゴリー
   *
   * @generated from field: string category = 3;
   */
  category: string;

  /**
   * 最大件数
   *
   * @generated from field: int32 max_results = 4;
   */
  maxResults: number;

  /**
   * 時間範囲
   *
   * @generated from field: avion.search.v1.TrendTimeRange time_range = 5;
   */
  timeRange: TrendTimeRange;
};

/**
 * Describes the message avion.search.v1.GetTrendingRequest.
 * Use `create(GetTrendingRequestSchema)` to create a new message.
 */
export const GetTrendingRequestSchema: GenMessage<GetTrendingRequest> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 14);

/**
 * トレンド検索レスポンス
 *
 * @generated from message avion.search.v1.GetTrendingResponse
 */
export type GetTrendingResponse = Message<"avion.search.v1.GetTrendingResponse"> & {
  /**
   * トレンドアイテム
   *
   * @generated from field: repeated avion.search.v1.TrendingItem items = 1;
   */
  items: TrendingItem[];

  /**
   * 更新日時
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 2;
   */
  updatedAt?: Timestamp;

  /**
   * 次回更新予定日時
   *
   * @generated from field: google.protobuf.Timestamp next_update_at = 3;
   */
  nextUpdateAt?: Timestamp;
};

/**
 * Describes the message avion.search.v1.GetTrendingResponse.
 * Use `create(GetTrendingResponseSchema)` to create a new message.
 */
export const GetTrendingResponseSchema: GenMessage<GetTrendingResponse> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 15);

/**
 * トレンドアイテム
 *
 * @generated from message avion.search.v1.TrendingItem
 */
export type TrendingItem = Message<"avion.search.v1.TrendingItem"> & {
  /**
   * トレンドタイプによる分岐
   *
   * @generated from oneof avion.search.v1.TrendingItem.item
   */
  item: {
    /**
     * ハッシュタグトレンド
     *
     * @generated from field: avion.search.v1.TrendingHashtag hashtag = 1;
     */
    value: TrendingHashtag;
    case: "hashtag";
  } | {
    /**
     * トピックトレンド
     *
     * @generated from field: avion.search.v1.TrendingTopic topic = 2;
     */
    value: TrendingTopic;
    case: "topic";
  } | {
    /**
     * ユーザートレンド
     *
     * @generated from field: avion.search.v1.TrendingUser user = 3;
     */
    value: TrendingUser;
    case: "user";
  } | { case: undefined; value?: undefined };

  /**
   * ランキング順位
   *
   * @generated from field: int32 rank = 4;
   */
  rank: number;

  /**
   * 前回からの順位変動
   *
   * @generated from field: int32 rank_change = 5;
   */
  rankChange: number;

  /**
   * トレンドスコア
   *
   * @generated from field: float trend_score = 6;
   */
  trendScore: number;
};

/**
 * Describes the message avion.search.v1.TrendingItem.
 * Use `create(TrendingItemSchema)` to create a new message.
 */
export const TrendingItemSchema: GenMessage<TrendingItem> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 16);

/**
 * トレンドハッシュタグ
 *
 * @generated from message avion.search.v1.TrendingHashtag
 */
export type TrendingHashtag = Message<"avion.search.v1.TrendingHashtag"> & {
  /**
   * ハッシュタグ
   *
   * @generated from field: string hashtag = 1;
   */
  hashtag: string;

  /**
   * Drop数
   *
   * @generated from field: int64 drop_count = 2;
   */
  dropCount: bigint;

  /**
   * エンゲージメント数
   *
   * @generated from field: int64 engagement_count = 3;
   */
  engagementCount: bigint;

  /**
   * 関連トピック
   *
   * @generated from field: repeated string related_topics = 4;
   */
  relatedTopics: string[];
};

/**
 * Describes the message avion.search.v1.TrendingHashtag.
 * Use `create(TrendingHashtagSchema)` to create a new message.
 */
export const TrendingHashtagSchema: GenMessage<TrendingHashtag> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 17);

/**
 * トレンドトピック
 *
 * @generated from message avion.search.v1.TrendingTopic
 */
export type TrendingTopic = Message<"avion.search.v1.TrendingTopic"> & {
  /**
   * トピック名
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * 説明
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * カテゴリー
   *
   * @generated from field: string category = 3;
   */
  category: string;

  /**
   * 関連ハッシュタグ
   *
   * @generated from field: repeated string hashtags = 4;
   */
  hashtags: string[];

  /**
   * Drop数
   *
   * @generated from field: int64 drop_count = 5;
   */
  dropCount: bigint;
};

/**
 * Describes the message avion.search.v1.TrendingTopic.
 * Use `create(TrendingTopicSchema)` to create a new message.
 */
export const TrendingTopicSchema: GenMessage<TrendingTopic> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 18);

/**
 * トレンドユーザー
 *
 * @generated from message avion.search.v1.TrendingUser
 */
export type TrendingUser = Message<"avion.search.v1.TrendingUser"> & {
  /**
   * ユーザー情報
   *
   * @generated from field: avion.user.v1.User user = 1;
   */
  user?: User;

  /**
   * トレンド理由
   *
   * @generated from field: string trending_reason = 2;
   */
  trendingReason: string;

  /**
   * 新規フォロワー数
   *
   * @generated from field: int64 new_followers = 3;
   */
  newFollowers: bigint;

  /**
   * エンゲージメント増加率
   *
   * @generated from field: float engagement_growth = 4;
   */
  engagementGrowth: number;
};

/**
 * Describes the message avion.search.v1.TrendingUser.
 * Use `create(TrendingUserSchema)` to create a new message.
 */
export const TrendingUserSchema: GenMessage<TrendingUser> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 19);

/**
 * 検索履歴エントリー
 *
 * @generated from message avion.search.v1.SearchHistoryEntry
 */
export type SearchHistoryEntry = Message<"avion.search.v1.SearchHistoryEntry"> & {
  /**
   * 履歴ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 検索クエリ
   *
   * @generated from field: string query = 3;
   */
  query: string;

  /**
   * 検索タイプ
   *
   * @generated from field: avion.search.v1.SearchType search_type = 4;
   */
  searchType: SearchType;

  /**
   * 検索フィルター
   *
   * @generated from field: avion.search.v1.SearchFilter filter = 5;
   */
  filter?: SearchFilter;

  /**
   * 検索日時
   *
   * @generated from field: google.protobuf.Timestamp searched_at = 6;
   */
  searchedAt?: Timestamp;

  /**
   * 結果数
   *
   * @generated from field: int32 result_count = 7;
   */
  resultCount: number;

  /**
   * クリックされた結果ID
   *
   * @generated from field: repeated string clicked_result_ids = 8;
   */
  clickedResultIds: string[];

  /**
   * セッションID
   *
   * @generated from field: string session_id = 9;
   */
  sessionId: string;
};

/**
 * Describes the message avion.search.v1.SearchHistoryEntry.
 * Use `create(SearchHistoryEntrySchema)` to create a new message.
 */
export const SearchHistoryEntrySchema: GenMessage<SearchHistoryEntry> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 20);

/**
 * 検索履歴リクエスト
 *
 * @generated from message avion.search.v1.GetSearchHistoryRequest
 */
export type GetSearchHistoryRequest = Message<"avion.search.v1.GetSearchHistoryRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * 最大件数
   *
   * @generated from field: int32 limit = 2;
   */
  limit: number;

  /**
   * オフセット
   *
   * @generated from field: int32 offset = 3;
   */
  offset: number;

  /**
   * 開始日時
   *
   * @generated from field: google.protobuf.Timestamp start_time = 4;
   */
  startTime?: Timestamp;

  /**
   * 終了日時
   *
   * @generated from field: google.protobuf.Timestamp end_time = 5;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message avion.search.v1.GetSearchHistoryRequest.
 * Use `create(GetSearchHistoryRequestSchema)` to create a new message.
 */
export const GetSearchHistoryRequestSchema: GenMessage<GetSearchHistoryRequest> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 21);

/**
 * 検索履歴レスポンス
 *
 * @generated from message avion.search.v1.GetSearchHistoryResponse
 */
export type GetSearchHistoryResponse = Message<"avion.search.v1.GetSearchHistoryResponse"> & {
  /**
   * 検索履歴エントリー
   *
   * @generated from field: repeated avion.search.v1.SearchHistoryEntry entries = 1;
   */
  entries: SearchHistoryEntry[];

  /**
   * 総件数
   *
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;
};

/**
 * Describes the message avion.search.v1.GetSearchHistoryResponse.
 * Use `create(GetSearchHistoryResponseSchema)` to create a new message.
 */
export const GetSearchHistoryResponseSchema: GenMessage<GetSearchHistoryResponse> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 22);

/**
 * 検索履歴削除リクエスト
 *
 * @generated from message avion.search.v1.DeleteSearchHistoryRequest
 */
export type DeleteSearchHistoryRequest = Message<"avion.search.v1.DeleteSearchHistoryRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * 削除対象の履歴ID（指定しない場合は全削除）
   *
   * @generated from field: repeated string history_ids = 2;
   */
  historyIds: string[];

  /**
   * 期間指定での削除
   *
   * @generated from field: google.protobuf.Timestamp before_time = 3;
   */
  beforeTime?: Timestamp;
};

/**
 * Describes the message avion.search.v1.DeleteSearchHistoryRequest.
 * Use `create(DeleteSearchHistoryRequestSchema)` to create a new message.
 */
export const DeleteSearchHistoryRequestSchema: GenMessage<DeleteSearchHistoryRequest> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 23);

/**
 * 検索履歴削除レスポンス
 *
 * @generated from message avion.search.v1.DeleteSearchHistoryResponse
 */
export type DeleteSearchHistoryResponse = Message<"avion.search.v1.DeleteSearchHistoryResponse"> & {
  /**
   * 削除件数
   *
   * @generated from field: int32 deleted_count = 1;
   */
  deletedCount: number;
};

/**
 * Describes the message avion.search.v1.DeleteSearchHistoryResponse.
 * Use `create(DeleteSearchHistoryResponseSchema)` to create a new message.
 */
export const DeleteSearchHistoryResponseSchema: GenMessage<DeleteSearchHistoryResponse> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 24);

/**
 * 関連検索リクエスト
 *
 * @generated from message avion.search.v1.GetRelatedSearchesRequest
 */
export type GetRelatedSearchesRequest = Message<"avion.search.v1.GetRelatedSearchesRequest"> & {
  /**
   * 基準となる検索クエリ
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * 検索タイプ
   *
   * @generated from field: avion.search.v1.SearchType search_type = 2;
   */
  searchType: SearchType;

  /**
   * 最大候補数
   *
   * @generated from field: int32 max_suggestions = 3;
   */
  maxSuggestions: number;
};

/**
 * Describes the message avion.search.v1.GetRelatedSearchesRequest.
 * Use `create(GetRelatedSearchesRequestSchema)` to create a new message.
 */
export const GetRelatedSearchesRequestSchema: GenMessage<GetRelatedSearchesRequest> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 25);

/**
 * 関連検索レスポンス
 *
 * @generated from message avion.search.v1.GetRelatedSearchesResponse
 */
export type GetRelatedSearchesResponse = Message<"avion.search.v1.GetRelatedSearchesResponse"> & {
  /**
   * 関連検索クエリ
   *
   * @generated from field: repeated avion.search.v1.RelatedSearchQuery queries = 1;
   */
  queries: RelatedSearchQuery[];
};

/**
 * Describes the message avion.search.v1.GetRelatedSearchesResponse.
 * Use `create(GetRelatedSearchesResponseSchema)` to create a new message.
 */
export const GetRelatedSearchesResponseSchema: GenMessage<GetRelatedSearchesResponse> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 26);

/**
 * 関連検索クエリ
 *
 * @generated from message avion.search.v1.RelatedSearchQuery
 */
export type RelatedSearchQuery = Message<"avion.search.v1.RelatedSearchQuery"> & {
  /**
   * クエリテキスト
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * 関連度スコア
   *
   * @generated from field: float relevance_score = 2;
   */
  relevanceScore: number;

  /**
   * 検索ボリューム（相対値）
   *
   * @generated from field: int32 search_volume = 3;
   */
  searchVolume: number;
};

/**
 * Describes the message avion.search.v1.RelatedSearchQuery.
 * Use `create(RelatedSearchQuerySchema)` to create a new message.
 */
export const RelatedSearchQuerySchema: GenMessage<RelatedSearchQuery> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 27);

/**
 * 保存済み検索
 *
 * @generated from message avion.search.v1.SavedSearch
 */
export type SavedSearch = Message<"avion.search.v1.SavedSearch"> & {
  /**
   * 保存済み検索ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 検索名（ユーザーが設定）
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * 検索クエリ
   *
   * @generated from field: string query = 4;
   */
  query: string;

  /**
   * 検索タイプ
   *
   * @generated from field: avion.search.v1.SearchType search_type = 5;
   */
  searchType: SearchType;

  /**
   * 検索フィルター
   *
   * @generated from field: avion.search.v1.SearchFilter filter = 6;
   */
  filter?: SearchFilter;

  /**
   * 通知を有効にする
   *
   * @generated from field: bool enable_notifications = 7;
   */
  enableNotifications: boolean;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 8;
   */
  createdAt?: Timestamp;

  /**
   * 更新日時
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 9;
   */
  updatedAt?: Timestamp;

  /**
   * 最後の実行日時
   *
   * @generated from field: google.protobuf.Timestamp last_executed_at = 10;
   */
  lastExecutedAt?: Timestamp;
};

/**
 * Describes the message avion.search.v1.SavedSearch.
 * Use `create(SavedSearchSchema)` to create a new message.
 */
export const SavedSearchSchema: GenMessage<SavedSearch> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 28);

/**
 * 保存済み検索作成リクエスト
 *
 * @generated from message avion.search.v1.CreateSavedSearchRequest
 */
export type CreateSavedSearchRequest = Message<"avion.search.v1.CreateSavedSearchRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * 検索名
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * 検索クエリ
   *
   * @generated from field: string query = 3;
   */
  query: string;

  /**
   * 検索タイプ
   *
   * @generated from field: avion.search.v1.SearchType search_type = 4;
   */
  searchType: SearchType;

  /**
   * 検索フィルター
   *
   * @generated from field: avion.search.v1.SearchFilter filter = 5;
   */
  filter?: SearchFilter;

  /**
   * 通知を有効にする
   *
   * @generated from field: bool enable_notifications = 6;
   */
  enableNotifications: boolean;
};

/**
 * Describes the message avion.search.v1.CreateSavedSearchRequest.
 * Use `create(CreateSavedSearchRequestSchema)` to create a new message.
 */
export const CreateSavedSearchRequestSchema: GenMessage<CreateSavedSearchRequest> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 29);

/**
 * 保存済み検索作成レスポンス
 *
 * @generated from message avion.search.v1.CreateSavedSearchResponse
 */
export type CreateSavedSearchResponse = Message<"avion.search.v1.CreateSavedSearchResponse"> & {
  /**
   * 作成された保存済み検索
   *
   * @generated from field: avion.search.v1.SavedSearch saved_search = 1;
   */
  savedSearch?: SavedSearch;
};

/**
 * Describes the message avion.search.v1.CreateSavedSearchResponse.
 * Use `create(CreateSavedSearchResponseSchema)` to create a new message.
 */
export const CreateSavedSearchResponseSchema: GenMessage<CreateSavedSearchResponse> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 30);

/**
 * 保存済み検索一覧取得リクエスト
 *
 * @generated from message avion.search.v1.ListSavedSearchesRequest
 */
export type ListSavedSearchesRequest = Message<"avion.search.v1.ListSavedSearchesRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;
};

/**
 * Describes the message avion.search.v1.ListSavedSearchesRequest.
 * Use `create(ListSavedSearchesRequestSchema)` to create a new message.
 */
export const ListSavedSearchesRequestSchema: GenMessage<ListSavedSearchesRequest> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 31);

/**
 * 保存済み検索一覧取得レスポンス
 *
 * @generated from message avion.search.v1.ListSavedSearchesResponse
 */
export type ListSavedSearchesResponse = Message<"avion.search.v1.ListSavedSearchesResponse"> & {
  /**
   * 保存済み検索リスト
   *
   * @generated from field: repeated avion.search.v1.SavedSearch saved_searches = 1;
   */
  savedSearches: SavedSearch[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.search.v1.ListSavedSearchesResponse.
 * Use `create(ListSavedSearchesResponseSchema)` to create a new message.
 */
export const ListSavedSearchesResponseSchema: GenMessage<ListSavedSearchesResponse> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 32);

/**
 * 保存済み検索削除リクエスト
 *
 * @generated from message avion.search.v1.DeleteSavedSearchRequest
 */
export type DeleteSavedSearchRequest = Message<"avion.search.v1.DeleteSavedSearchRequest"> & {
  /**
   * 保存済み検索ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * ユーザーID（権限確認用）
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;
};

/**
 * Describes the message avion.search.v1.DeleteSavedSearchRequest.
 * Use `create(DeleteSavedSearchRequestSchema)` to create a new message.
 */
export const DeleteSavedSearchRequestSchema: GenMessage<DeleteSavedSearchRequest> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 33);

/**
 * 保存済み検索削除レスポンス
 *
 * @generated from message avion.search.v1.DeleteSavedSearchResponse
 */
export type DeleteSavedSearchResponse = Message<"avion.search.v1.DeleteSavedSearchResponse"> & {
  /**
   * 削除成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.search.v1.DeleteSavedSearchResponse.
 * Use `create(DeleteSavedSearchResponseSchema)` to create a new message.
 */
export const DeleteSavedSearchResponseSchema: GenMessage<DeleteSavedSearchResponse> = /*@__PURE__*/
  messageDesc(file_avion_search_v1_search, 34);

/**
 * 検索タイプ
 *
 * @generated from enum avion.search.v1.SearchType
 */
export enum SearchType {
  /**
   * 未指定
   *
   * @generated from enum value: SEARCH_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 全体検索
   *
   * @generated from enum value: SEARCH_TYPE_ALL = 1;
   */
  ALL = 1,

  /**
   * ユーザー検索
   *
   * @generated from enum value: SEARCH_TYPE_USER = 2;
   */
  USER = 2,

  /**
   * Drop検索
   *
   * @generated from enum value: SEARCH_TYPE_DROP = 3;
   */
  DROP = 3,

  /**
   * ハッシュタグ検索
   *
   * @generated from enum value: SEARCH_TYPE_HASHTAG = 4;
   */
  HASHTAG = 4,

  /**
   * メディア検索
   *
   * @generated from enum value: SEARCH_TYPE_MEDIA = 5;
   */
  MEDIA = 5,
}

/**
 * Describes the enum avion.search.v1.SearchType.
 */
export const SearchTypeSchema: GenEnum<SearchType> = /*@__PURE__*/
  enumDesc(file_avion_search_v1_search, 0);

/**
 * ソート順
 *
 * @generated from enum avion.search.v1.SortOrder
 */
export enum SortOrder {
  /**
   * 未指定
   *
   * @generated from enum value: SORT_ORDER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 関連度順（デフォルト）
   *
   * @generated from enum value: SORT_ORDER_RELEVANCE = 1;
   */
  RELEVANCE = 1,

  /**
   * 新しい順
   *
   * @generated from enum value: SORT_ORDER_RECENT = 2;
   */
  RECENT = 2,

  /**
   * 古い順
   *
   * @generated from enum value: SORT_ORDER_OLDEST = 3;
   */
  OLDEST = 3,

  /**
   * 人気順（エンゲージメント）
   *
   * @generated from enum value: SORT_ORDER_POPULAR = 4;
   */
  POPULAR = 4,

  /**
   * ユーザー名順（A-Z）
   *
   * @generated from enum value: SORT_ORDER_USERNAME_ASC = 5;
   */
  USERNAME_ASC = 5,

  /**
   * ユーザー名順（Z-A）
   *
   * @generated from enum value: SORT_ORDER_USERNAME_DESC = 6;
   */
  USERNAME_DESC = 6,
}

/**
 * Describes the enum avion.search.v1.SortOrder.
 */
export const SortOrderSchema: GenEnum<SortOrder> = /*@__PURE__*/
  enumDesc(file_avion_search_v1_search, 1);

/**
 * トレンド時間範囲
 *
 * @generated from enum avion.search.v1.TrendTimeRange
 */
export enum TrendTimeRange {
  /**
   * 未指定
   *
   * @generated from enum value: TREND_TIME_RANGE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 過去1時間
   *
   * @generated from enum value: TREND_TIME_RANGE_HOUR = 1;
   */
  HOUR = 1,

  /**
   * 過去24時間
   *
   * @generated from enum value: TREND_TIME_RANGE_DAY = 2;
   */
  DAY = 2,

  /**
   * 過去1週間
   *
   * @generated from enum value: TREND_TIME_RANGE_WEEK = 3;
   */
  WEEK = 3,

  /**
   * 過去1ヶ月
   *
   * @generated from enum value: TREND_TIME_RANGE_MONTH = 4;
   */
  MONTH = 4,
}

/**
 * Describes the enum avion.search.v1.TrendTimeRange.
 */
export const TrendTimeRangeSchema: GenEnum<TrendTimeRange> = /*@__PURE__*/
  enumDesc(file_avion_search_v1_search, 2);

