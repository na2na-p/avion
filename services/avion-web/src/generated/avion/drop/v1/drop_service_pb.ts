// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file avion/drop/v1/drop_service.proto (package avion.drop.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { ContentWarning, DraftStatus, Drop, DropDraft, DropHashtag, DropMedia, DropMention, DropReaction, DropStats, DropStatus, DropVisibility, EditHistory, MediaType, Poll, ReactionType, UserPollVote } from "./drop_pb";
import { file_avion_drop_v1_drop } from "./drop_pb";
import type { PaginationRequest, PaginationResponse } from "../../common/v1/pagination_pb";
import { file_avion_common_v1_pagination } from "../../common/v1/pagination_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file avion/drop/v1/drop_service.proto.
 */
export const file_avion_drop_v1_drop_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_avion_drop_v1_drop, file_avion_common_v1_pagination, file_google_protobuf_timestamp]);

/**
 * Drop作成リクエスト
 *
 * @generated from message avion.drop.v1.CreateDropRequest
 */
export type CreateDropRequest = Message<"avion.drop.v1.CreateDropRequest"> & {
  /**
   * 投稿内容
   *
   * @generated from field: string content = 1;
   */
  content: string;

  /**
   * 可視性
   *
   * @generated from field: avion.drop.v1.DropVisibility visibility = 2;
   */
  visibility: DropVisibility;

  /**
   * リプライ元のDropID（オプション）
   *
   * @generated from field: string reply_to_id = 3;
   */
  replyToId: string;

  /**
   * 引用元のDropID（オプション）
   *
   * @generated from field: string quote_drop_id = 4;
   */
  quoteDropId: string;

  /**
   * メディアURL一覧（オプション）
   *
   * @generated from field: repeated avion.drop.v1.MediaAttachment media_attachments = 5;
   */
  mediaAttachments: MediaAttachment[];

  /**
   * コンテンツ警告（オプション）
   *
   * @generated from field: avion.drop.v1.ContentWarning content_warning = 6;
   */
  contentWarning?: ContentWarning;
};

/**
 * Describes the message avion.drop.v1.CreateDropRequest.
 * Use `create(CreateDropRequestSchema)` to create a new message.
 */
export const CreateDropRequestSchema: GenMessage<CreateDropRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 0);

/**
 * メディア添付情報
 *
 * @generated from message avion.drop.v1.MediaAttachment
 */
export type MediaAttachment = Message<"avion.drop.v1.MediaAttachment"> & {
  /**
   * メディアURL
   *
   * @generated from field: string media_url = 1;
   */
  mediaUrl: string;

  /**
   * メディアタイプ
   *
   * @generated from field: avion.drop.v1.MediaType media_type = 2;
   */
  mediaType: MediaType;

  /**
   * サムネイルURL（オプション）
   *
   * @generated from field: string thumbnail_url = 3;
   */
  thumbnailUrl: string;

  /**
   * 代替テキスト（オプション）
   *
   * @generated from field: string alt_text = 4;
   */
  altText: string;
};

/**
 * Describes the message avion.drop.v1.MediaAttachment.
 * Use `create(MediaAttachmentSchema)` to create a new message.
 */
export const MediaAttachmentSchema: GenMessage<MediaAttachment> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 1);

/**
 * Drop作成レスポンス
 *
 * @generated from message avion.drop.v1.CreateDropResponse
 */
export type CreateDropResponse = Message<"avion.drop.v1.CreateDropResponse"> & {
  /**
   * 作成されたDrop
   *
   * @generated from field: avion.drop.v1.Drop drop = 1;
   */
  drop?: Drop;
};

/**
 * Describes the message avion.drop.v1.CreateDropResponse.
 * Use `create(CreateDropResponseSchema)` to create a new message.
 */
export const CreateDropResponseSchema: GenMessage<CreateDropResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 2);

/**
 * Drop取得リクエスト
 *
 * @generated from message avion.drop.v1.GetDropRequest
 */
export type GetDropRequest = Message<"avion.drop.v1.GetDropRequest"> & {
  /**
   * DropのID
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message avion.drop.v1.GetDropRequest.
 * Use `create(GetDropRequestSchema)` to create a new message.
 */
export const GetDropRequestSchema: GenMessage<GetDropRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 3);

/**
 * Drop取得レスポンス
 *
 * @generated from message avion.drop.v1.GetDropResponse
 */
export type GetDropResponse = Message<"avion.drop.v1.GetDropResponse"> & {
  /**
   * 取得したDrop
   *
   * @generated from field: avion.drop.v1.Drop drop = 1;
   */
  drop?: Drop;

  /**
   * 添付メディア一覧
   *
   * @generated from field: repeated avion.drop.v1.DropMedia media = 2;
   */
  media: DropMedia[];

  /**
   * ハッシュタグ一覧
   *
   * @generated from field: repeated avion.drop.v1.DropHashtag hashtags = 3;
   */
  hashtags: DropHashtag[];

  /**
   * メンション一覧
   *
   * @generated from field: repeated avion.drop.v1.DropMention mentions = 4;
   */
  mentions: DropMention[];
};

/**
 * Describes the message avion.drop.v1.GetDropResponse.
 * Use `create(GetDropResponseSchema)` to create a new message.
 */
export const GetDropResponseSchema: GenMessage<GetDropResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 4);

/**
 * Drop更新リクエスト
 *
 * @generated from message avion.drop.v1.UpdateDropRequest
 */
export type UpdateDropRequest = Message<"avion.drop.v1.UpdateDropRequest"> & {
  /**
   * 更新対象のDropID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * 新しい投稿内容
   *
   * @generated from field: string content = 2;
   */
  content: string;

  /**
   * 新しい可視性
   *
   * @generated from field: avion.drop.v1.DropVisibility visibility = 3;
   */
  visibility: DropVisibility;

  /**
   * 新しいコンテンツ警告（オプション）
   *
   * @generated from field: avion.drop.v1.ContentWarning content_warning = 4;
   */
  contentWarning?: ContentWarning;

  /**
   * 編集理由（オプション）
   *
   * @generated from field: string edit_reason = 5;
   */
  editReason: string;
};

/**
 * Describes the message avion.drop.v1.UpdateDropRequest.
 * Use `create(UpdateDropRequestSchema)` to create a new message.
 */
export const UpdateDropRequestSchema: GenMessage<UpdateDropRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 5);

/**
 * Drop更新レスポンス
 *
 * @generated from message avion.drop.v1.UpdateDropResponse
 */
export type UpdateDropResponse = Message<"avion.drop.v1.UpdateDropResponse"> & {
  /**
   * 更新されたDrop
   *
   * @generated from field: avion.drop.v1.Drop drop = 1;
   */
  drop?: Drop;
};

/**
 * Describes the message avion.drop.v1.UpdateDropResponse.
 * Use `create(UpdateDropResponseSchema)` to create a new message.
 */
export const UpdateDropResponseSchema: GenMessage<UpdateDropResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 6);

/**
 * Drop削除リクエスト
 *
 * @generated from message avion.drop.v1.DeleteDropRequest
 */
export type DeleteDropRequest = Message<"avion.drop.v1.DeleteDropRequest"> & {
  /**
   * 削除対象のDropID
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message avion.drop.v1.DeleteDropRequest.
 * Use `create(DeleteDropRequestSchema)` to create a new message.
 */
export const DeleteDropRequestSchema: GenMessage<DeleteDropRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 7);

/**
 * Drop削除レスポンス
 *
 * @generated from message avion.drop.v1.DeleteDropResponse
 */
export type DeleteDropResponse = Message<"avion.drop.v1.DeleteDropResponse"> & {
  /**
   * 削除成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.drop.v1.DeleteDropResponse.
 * Use `create(DeleteDropResponseSchema)` to create a new message.
 */
export const DeleteDropResponseSchema: GenMessage<DeleteDropResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 8);

/**
 * Drop一覧取得リクエスト
 *
 * @generated from message avion.drop.v1.ListDropsRequest
 */
export type ListDropsRequest = Message<"avion.drop.v1.ListDropsRequest"> & {
  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  /**
   * フィルター条件（オプション）
   *
   * @generated from field: avion.drop.v1.DropFilter filter = 2;
   */
  filter?: DropFilter;
};

/**
 * Describes the message avion.drop.v1.ListDropsRequest.
 * Use `create(ListDropsRequestSchema)` to create a new message.
 */
export const ListDropsRequestSchema: GenMessage<ListDropsRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 9);

/**
 * Dropフィルター条件
 *
 * @generated from message avion.drop.v1.DropFilter
 */
export type DropFilter = Message<"avion.drop.v1.DropFilter"> & {
  /**
   * 可視性でフィルター
   *
   * @generated from field: avion.drop.v1.DropVisibility visibility = 1;
   */
  visibility: DropVisibility;

  /**
   * 開始日時
   *
   * @generated from field: google.protobuf.Timestamp from = 2;
   */
  from?: Timestamp;

  /**
   * 終了日時
   *
   * @generated from field: google.protobuf.Timestamp to = 3;
   */
  to?: Timestamp;

  /**
   * ハッシュタグでフィルター
   *
   * @generated from field: string hashtag = 4;
   */
  hashtag: string;
};

/**
 * Describes the message avion.drop.v1.DropFilter.
 * Use `create(DropFilterSchema)` to create a new message.
 */
export const DropFilterSchema: GenMessage<DropFilter> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 10);

/**
 * Drop一覧取得レスポンス
 *
 * @generated from message avion.drop.v1.ListDropsResponse
 */
export type ListDropsResponse = Message<"avion.drop.v1.ListDropsResponse"> & {
  /**
   * Drop一覧
   *
   * @generated from field: repeated avion.drop.v1.Drop drops = 1;
   */
  drops: Drop[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.drop.v1.ListDropsResponse.
 * Use `create(ListDropsResponseSchema)` to create a new message.
 */
export const ListDropsResponseSchema: GenMessage<ListDropsResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 11);

/**
 * ユーザーのDrop一覧取得リクエスト
 *
 * @generated from message avion.drop.v1.ListUserDropsRequest
 */
export type ListUserDropsRequest = Message<"avion.drop.v1.ListUserDropsRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * リプライを含むか
   *
   * @generated from field: bool include_replies = 3;
   */
  includeReplies: boolean;

  /**
   * リドロップを含むか
   *
   * @generated from field: bool include_redrops = 4;
   */
  includeRedrops: boolean;
};

/**
 * Describes the message avion.drop.v1.ListUserDropsRequest.
 * Use `create(ListUserDropsRequestSchema)` to create a new message.
 */
export const ListUserDropsRequestSchema: GenMessage<ListUserDropsRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 12);

/**
 * ユーザーのDrop一覧取得レスポンス
 *
 * @generated from message avion.drop.v1.ListUserDropsResponse
 */
export type ListUserDropsResponse = Message<"avion.drop.v1.ListUserDropsResponse"> & {
  /**
   * Drop一覧
   *
   * @generated from field: repeated avion.drop.v1.Drop drops = 1;
   */
  drops: Drop[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.drop.v1.ListUserDropsResponse.
 * Use `create(ListUserDropsResponseSchema)` to create a new message.
 */
export const ListUserDropsResponseSchema: GenMessage<ListUserDropsResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 13);

/**
 * いいね追加リクエスト
 *
 * @generated from message avion.drop.v1.AddLikeRequest
 */
export type AddLikeRequest = Message<"avion.drop.v1.AddLikeRequest"> & {
  /**
   * 対象のDropID
   *
   * @generated from field: string drop_id = 1;
   */
  dropId: string;
};

/**
 * Describes the message avion.drop.v1.AddLikeRequest.
 * Use `create(AddLikeRequestSchema)` to create a new message.
 */
export const AddLikeRequestSchema: GenMessage<AddLikeRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 14);

/**
 * いいね追加レスポンス
 *
 * @generated from message avion.drop.v1.AddLikeResponse
 */
export type AddLikeResponse = Message<"avion.drop.v1.AddLikeResponse"> & {
  /**
   * 成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * 更新後のいいね数
   *
   * @generated from field: int32 like_count = 2;
   */
  likeCount: number;
};

/**
 * Describes the message avion.drop.v1.AddLikeResponse.
 * Use `create(AddLikeResponseSchema)` to create a new message.
 */
export const AddLikeResponseSchema: GenMessage<AddLikeResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 15);

/**
 * いいね削除リクエスト
 *
 * @generated from message avion.drop.v1.RemoveLikeRequest
 */
export type RemoveLikeRequest = Message<"avion.drop.v1.RemoveLikeRequest"> & {
  /**
   * 対象のDropID
   *
   * @generated from field: string drop_id = 1;
   */
  dropId: string;
};

/**
 * Describes the message avion.drop.v1.RemoveLikeRequest.
 * Use `create(RemoveLikeRequestSchema)` to create a new message.
 */
export const RemoveLikeRequestSchema: GenMessage<RemoveLikeRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 16);

/**
 * いいね削除レスポンス
 *
 * @generated from message avion.drop.v1.RemoveLikeResponse
 */
export type RemoveLikeResponse = Message<"avion.drop.v1.RemoveLikeResponse"> & {
  /**
   * 成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * 更新後のいいね数
   *
   * @generated from field: int32 like_count = 2;
   */
  likeCount: number;
};

/**
 * Describes the message avion.drop.v1.RemoveLikeResponse.
 * Use `create(RemoveLikeResponseSchema)` to create a new message.
 */
export const RemoveLikeResponseSchema: GenMessage<RemoveLikeResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 17);

/**
 * リドロップ追加リクエスト
 *
 * @generated from message avion.drop.v1.AddRedropRequest
 */
export type AddRedropRequest = Message<"avion.drop.v1.AddRedropRequest"> & {
  /**
   * 対象のDropID
   *
   * @generated from field: string drop_id = 1;
   */
  dropId: string;
};

/**
 * Describes the message avion.drop.v1.AddRedropRequest.
 * Use `create(AddRedropRequestSchema)` to create a new message.
 */
export const AddRedropRequestSchema: GenMessage<AddRedropRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 18);

/**
 * リドロップ追加レスポンス
 *
 * @generated from message avion.drop.v1.AddRedropResponse
 */
export type AddRedropResponse = Message<"avion.drop.v1.AddRedropResponse"> & {
  /**
   * 成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * 更新後のリドロップ数
   *
   * @generated from field: int32 redrop_count = 2;
   */
  redropCount: number;
};

/**
 * Describes the message avion.drop.v1.AddRedropResponse.
 * Use `create(AddRedropResponseSchema)` to create a new message.
 */
export const AddRedropResponseSchema: GenMessage<AddRedropResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 19);

/**
 * リドロップ削除リクエスト
 *
 * @generated from message avion.drop.v1.RemoveRedropRequest
 */
export type RemoveRedropRequest = Message<"avion.drop.v1.RemoveRedropRequest"> & {
  /**
   * 対象のDropID
   *
   * @generated from field: string drop_id = 1;
   */
  dropId: string;
};

/**
 * Describes the message avion.drop.v1.RemoveRedropRequest.
 * Use `create(RemoveRedropRequestSchema)` to create a new message.
 */
export const RemoveRedropRequestSchema: GenMessage<RemoveRedropRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 20);

/**
 * リドロップ削除レスポンス
 *
 * @generated from message avion.drop.v1.RemoveRedropResponse
 */
export type RemoveRedropResponse = Message<"avion.drop.v1.RemoveRedropResponse"> & {
  /**
   * 成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * 更新後のリドロップ数
   *
   * @generated from field: int32 redrop_count = 2;
   */
  redropCount: number;
};

/**
 * Describes the message avion.drop.v1.RemoveRedropResponse.
 * Use `create(RemoveRedropResponseSchema)` to create a new message.
 */
export const RemoveRedropResponseSchema: GenMessage<RemoveRedropResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 21);

/**
 * ブックマーク追加リクエスト
 *
 * @generated from message avion.drop.v1.AddBookmarkRequest
 */
export type AddBookmarkRequest = Message<"avion.drop.v1.AddBookmarkRequest"> & {
  /**
   * 対象のDropID
   *
   * @generated from field: string drop_id = 1;
   */
  dropId: string;
};

/**
 * Describes the message avion.drop.v1.AddBookmarkRequest.
 * Use `create(AddBookmarkRequestSchema)` to create a new message.
 */
export const AddBookmarkRequestSchema: GenMessage<AddBookmarkRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 22);

/**
 * ブックマーク追加レスポンス
 *
 * @generated from message avion.drop.v1.AddBookmarkResponse
 */
export type AddBookmarkResponse = Message<"avion.drop.v1.AddBookmarkResponse"> & {
  /**
   * 成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * 更新後のブックマーク数
   *
   * @generated from field: int32 bookmark_count = 2;
   */
  bookmarkCount: number;
};

/**
 * Describes the message avion.drop.v1.AddBookmarkResponse.
 * Use `create(AddBookmarkResponseSchema)` to create a new message.
 */
export const AddBookmarkResponseSchema: GenMessage<AddBookmarkResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 23);

/**
 * ブックマーク削除リクエスト
 *
 * @generated from message avion.drop.v1.RemoveBookmarkRequest
 */
export type RemoveBookmarkRequest = Message<"avion.drop.v1.RemoveBookmarkRequest"> & {
  /**
   * 対象のDropID
   *
   * @generated from field: string drop_id = 1;
   */
  dropId: string;
};

/**
 * Describes the message avion.drop.v1.RemoveBookmarkRequest.
 * Use `create(RemoveBookmarkRequestSchema)` to create a new message.
 */
export const RemoveBookmarkRequestSchema: GenMessage<RemoveBookmarkRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 24);

/**
 * ブックマーク削除レスポンス
 *
 * @generated from message avion.drop.v1.RemoveBookmarkResponse
 */
export type RemoveBookmarkResponse = Message<"avion.drop.v1.RemoveBookmarkResponse"> & {
  /**
   * 成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * 更新後のブックマーク数
   *
   * @generated from field: int32 bookmark_count = 2;
   */
  bookmarkCount: number;
};

/**
 * Describes the message avion.drop.v1.RemoveBookmarkResponse.
 * Use `create(RemoveBookmarkResponseSchema)` to create a new message.
 */
export const RemoveBookmarkResponseSchema: GenMessage<RemoveBookmarkResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 25);

/**
 * Dropにリプライリクエスト
 *
 * @generated from message avion.drop.v1.ReplyToDropRequest
 */
export type ReplyToDropRequest = Message<"avion.drop.v1.ReplyToDropRequest"> & {
  /**
   * リプライ元のDropID
   *
   * @generated from field: string reply_to_id = 1;
   */
  replyToId: string;

  /**
   * リプライ内容
   *
   * @generated from field: string content = 2;
   */
  content: string;

  /**
   * 可視性
   *
   * @generated from field: avion.drop.v1.DropVisibility visibility = 3;
   */
  visibility: DropVisibility;

  /**
   * メディア添付（オプション）
   *
   * @generated from field: repeated avion.drop.v1.MediaAttachment media_attachments = 4;
   */
  mediaAttachments: MediaAttachment[];
};

/**
 * Describes the message avion.drop.v1.ReplyToDropRequest.
 * Use `create(ReplyToDropRequestSchema)` to create a new message.
 */
export const ReplyToDropRequestSchema: GenMessage<ReplyToDropRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 26);

/**
 * Dropにリプライレスポンス
 *
 * @generated from message avion.drop.v1.ReplyToDropResponse
 */
export type ReplyToDropResponse = Message<"avion.drop.v1.ReplyToDropResponse"> & {
  /**
   * 作成されたリプライDrop
   *
   * @generated from field: avion.drop.v1.Drop drop = 1;
   */
  drop?: Drop;
};

/**
 * Describes the message avion.drop.v1.ReplyToDropResponse.
 * Use `create(ReplyToDropResponseSchema)` to create a new message.
 */
export const ReplyToDropResponseSchema: GenMessage<ReplyToDropResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 27);

/**
 * Dropを引用リクエスト
 *
 * @generated from message avion.drop.v1.QuoteDropRequest
 */
export type QuoteDropRequest = Message<"avion.drop.v1.QuoteDropRequest"> & {
  /**
   * 引用元のDropID
   *
   * @generated from field: string quote_drop_id = 1;
   */
  quoteDropId: string;

  /**
   * 引用コメント
   *
   * @generated from field: string content = 2;
   */
  content: string;

  /**
   * 可視性
   *
   * @generated from field: avion.drop.v1.DropVisibility visibility = 3;
   */
  visibility: DropVisibility;

  /**
   * メディア添付（オプション）
   *
   * @generated from field: repeated avion.drop.v1.MediaAttachment media_attachments = 4;
   */
  mediaAttachments: MediaAttachment[];
};

/**
 * Describes the message avion.drop.v1.QuoteDropRequest.
 * Use `create(QuoteDropRequestSchema)` to create a new message.
 */
export const QuoteDropRequestSchema: GenMessage<QuoteDropRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 28);

/**
 * Dropを引用レスポンス
 *
 * @generated from message avion.drop.v1.QuoteDropResponse
 */
export type QuoteDropResponse = Message<"avion.drop.v1.QuoteDropResponse"> & {
  /**
   * 作成された引用Drop
   *
   * @generated from field: avion.drop.v1.Drop drop = 1;
   */
  drop?: Drop;
};

/**
 * Describes the message avion.drop.v1.QuoteDropResponse.
 * Use `create(QuoteDropResponseSchema)` to create a new message.
 */
export const QuoteDropResponseSchema: GenMessage<QuoteDropResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 29);

/**
 * Drop検索リクエスト
 *
 * @generated from message avion.drop.v1.SearchDropsRequest
 */
export type SearchDropsRequest = Message<"avion.drop.v1.SearchDropsRequest"> & {
  /**
   * 検索クエリ
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * 検索フィルター（オプション）
   *
   * @generated from field: avion.drop.v1.SearchFilter filter = 3;
   */
  filter?: SearchFilter;
};

/**
 * Describes the message avion.drop.v1.SearchDropsRequest.
 * Use `create(SearchDropsRequestSchema)` to create a new message.
 */
export const SearchDropsRequestSchema: GenMessage<SearchDropsRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 30);

/**
 * 検索フィルター
 *
 * @generated from message avion.drop.v1.SearchFilter
 */
export type SearchFilter = Message<"avion.drop.v1.SearchFilter"> & {
  /**
   * ユーザーIDでフィルター
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * ハッシュタグでフィルター
   *
   * @generated from field: repeated string hashtags = 2;
   */
  hashtags: string[];

  /**
   * 期間（開始）
   *
   * @generated from field: google.protobuf.Timestamp from = 3;
   */
  from?: Timestamp;

  /**
   * 期間（終了）
   *
   * @generated from field: google.protobuf.Timestamp to = 4;
   */
  to?: Timestamp;

  /**
   * メディアを含むDropのみ
   *
   * @generated from field: bool has_media = 5;
   */
  hasMedia: boolean;
};

/**
 * Describes the message avion.drop.v1.SearchFilter.
 * Use `create(SearchFilterSchema)` to create a new message.
 */
export const SearchFilterSchema: GenMessage<SearchFilter> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 31);

/**
 * Drop検索レスポンス
 *
 * @generated from message avion.drop.v1.SearchDropsResponse
 */
export type SearchDropsResponse = Message<"avion.drop.v1.SearchDropsResponse"> & {
  /**
   * 検索結果のDrop一覧
   *
   * @generated from field: repeated avion.drop.v1.Drop drops = 1;
   */
  drops: Drop[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;

  /**
   * 検索結果の総件数
   *
   * @generated from field: int32 total_results = 3;
   */
  totalResults: number;
};

/**
 * Describes the message avion.drop.v1.SearchDropsResponse.
 * Use `create(SearchDropsResponseSchema)` to create a new message.
 */
export const SearchDropsResponseSchema: GenMessage<SearchDropsResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 32);

/**
 * Dropスレッド取得リクエスト
 *
 * @generated from message avion.drop.v1.GetDropThreadRequest
 */
export type GetDropThreadRequest = Message<"avion.drop.v1.GetDropThreadRequest"> & {
  /**
   * スレッドのルートDropID
   *
   * @generated from field: string drop_id = 1;
   */
  dropId: string;

  /**
   * 取得する階層の深さ（0は無制限）
   *
   * @generated from field: int32 depth = 2;
   */
  depth: number;
};

/**
 * Describes the message avion.drop.v1.GetDropThreadRequest.
 * Use `create(GetDropThreadRequestSchema)` to create a new message.
 */
export const GetDropThreadRequestSchema: GenMessage<GetDropThreadRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 33);

/**
 * Dropスレッド取得レスポンス
 *
 * @generated from message avion.drop.v1.GetDropThreadResponse
 */
export type GetDropThreadResponse = Message<"avion.drop.v1.GetDropThreadResponse"> & {
  /**
   * スレッドのルートDrop
   *
   * @generated from field: avion.drop.v1.Drop root_drop = 1;
   */
  rootDrop?: Drop;

  /**
   * リプライツリー
   *
   * @generated from field: repeated avion.drop.v1.ThreadNode replies = 2;
   */
  replies: ThreadNode[];
};

/**
 * Describes the message avion.drop.v1.GetDropThreadResponse.
 * Use `create(GetDropThreadResponseSchema)` to create a new message.
 */
export const GetDropThreadResponseSchema: GenMessage<GetDropThreadResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 34);

/**
 * スレッドノード（リプライツリー構造）
 *
 * @generated from message avion.drop.v1.ThreadNode
 */
export type ThreadNode = Message<"avion.drop.v1.ThreadNode"> & {
  /**
   * Drop本体
   *
   * @generated from field: avion.drop.v1.Drop drop = 1;
   */
  drop?: Drop;

  /**
   * 子リプライ
   *
   * @generated from field: repeated avion.drop.v1.ThreadNode children = 2;
   */
  children: ThreadNode[];

  /**
   * ツリー内の深さ
   *
   * @generated from field: int32 depth = 3;
   */
  depth: number;
};

/**
 * Describes the message avion.drop.v1.ThreadNode.
 * Use `create(ThreadNodeSchema)` to create a new message.
 */
export const ThreadNodeSchema: GenMessage<ThreadNode> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 35);

/**
 * 下書き作成リクエスト
 *
 * @generated from message avion.drop.v1.CreateDraftRequest
 */
export type CreateDraftRequest = Message<"avion.drop.v1.CreateDraftRequest"> & {
  /**
   * 下書き内容
   *
   * @generated from field: string content = 1;
   */
  content: string;

  /**
   * 可視性（投稿時の設定）
   *
   * @generated from field: avion.drop.v1.DropVisibility visibility = 2;
   */
  visibility: DropVisibility;

  /**
   * リプライ元のDropID（オプション）
   *
   * @generated from field: string reply_to_id = 3;
   */
  replyToId: string;

  /**
   * 引用元のDropID（オプション）
   *
   * @generated from field: string quote_drop_id = 4;
   */
  quoteDropId: string;

  /**
   * メディア添付情報（オプション）
   *
   * @generated from field: repeated avion.drop.v1.MediaAttachment media_attachments = 5;
   */
  mediaAttachments: MediaAttachment[];

  /**
   * 投稿予定日時（スケジュール投稿用、オプション）
   *
   * @generated from field: google.protobuf.Timestamp scheduled_at = 6;
   */
  scheduledAt?: Timestamp;
};

/**
 * Describes the message avion.drop.v1.CreateDraftRequest.
 * Use `create(CreateDraftRequestSchema)` to create a new message.
 */
export const CreateDraftRequestSchema: GenMessage<CreateDraftRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 36);

/**
 * 下書き作成レスポンス
 *
 * @generated from message avion.drop.v1.CreateDraftResponse
 */
export type CreateDraftResponse = Message<"avion.drop.v1.CreateDraftResponse"> & {
  /**
   * 作成された下書き
   *
   * @generated from field: avion.drop.v1.DropDraft draft = 1;
   */
  draft?: DropDraft;
};

/**
 * Describes the message avion.drop.v1.CreateDraftResponse.
 * Use `create(CreateDraftResponseSchema)` to create a new message.
 */
export const CreateDraftResponseSchema: GenMessage<CreateDraftResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 37);

/**
 * 下書き取得リクエスト
 *
 * @generated from message avion.drop.v1.GetDraftRequest
 */
export type GetDraftRequest = Message<"avion.drop.v1.GetDraftRequest"> & {
  /**
   * 下書きID
   *
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * ユーザーID（権限確認用）
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;
};

/**
 * Describes the message avion.drop.v1.GetDraftRequest.
 * Use `create(GetDraftRequestSchema)` to create a new message.
 */
export const GetDraftRequestSchema: GenMessage<GetDraftRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 38);

/**
 * 下書き取得レスポンス
 *
 * @generated from message avion.drop.v1.GetDraftResponse
 */
export type GetDraftResponse = Message<"avion.drop.v1.GetDraftResponse"> & {
  /**
   * 取得した下書き
   *
   * @generated from field: avion.drop.v1.DropDraft draft = 1;
   */
  draft?: DropDraft;
};

/**
 * Describes the message avion.drop.v1.GetDraftResponse.
 * Use `create(GetDraftResponseSchema)` to create a new message.
 */
export const GetDraftResponseSchema: GenMessage<GetDraftResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 39);

/**
 * 下書き更新リクエスト
 *
 * @generated from message avion.drop.v1.UpdateDraftRequest
 */
export type UpdateDraftRequest = Message<"avion.drop.v1.UpdateDraftRequest"> & {
  /**
   * 下書きID
   *
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * ユーザーID（権限確認用）
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 下書き内容
   *
   * @generated from field: string content = 3;
   */
  content: string;

  /**
   * 可視性
   *
   * @generated from field: avion.drop.v1.DropVisibility visibility = 4;
   */
  visibility: DropVisibility;

  /**
   * メディア添付情報
   *
   * @generated from field: repeated avion.drop.v1.MediaAttachment media_attachments = 5;
   */
  mediaAttachments: MediaAttachment[];

  /**
   * 投稿予定日時（スケジュール投稿用）
   *
   * @generated from field: google.protobuf.Timestamp scheduled_at = 6;
   */
  scheduledAt?: Timestamp;

  /**
   * ステータス（自動保存時に使用）
   *
   * @generated from field: avion.drop.v1.DraftStatus status = 7;
   */
  status: DraftStatus;
};

/**
 * Describes the message avion.drop.v1.UpdateDraftRequest.
 * Use `create(UpdateDraftRequestSchema)` to create a new message.
 */
export const UpdateDraftRequestSchema: GenMessage<UpdateDraftRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 40);

/**
 * 下書き更新レスポンス
 *
 * @generated from message avion.drop.v1.UpdateDraftResponse
 */
export type UpdateDraftResponse = Message<"avion.drop.v1.UpdateDraftResponse"> & {
  /**
   * 更新された下書き
   *
   * @generated from field: avion.drop.v1.DropDraft draft = 1;
   */
  draft?: DropDraft;
};

/**
 * Describes the message avion.drop.v1.UpdateDraftResponse.
 * Use `create(UpdateDraftResponseSchema)` to create a new message.
 */
export const UpdateDraftResponseSchema: GenMessage<UpdateDraftResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 41);

/**
 * 下書き削除リクエスト
 *
 * @generated from message avion.drop.v1.DeleteDraftRequest
 */
export type DeleteDraftRequest = Message<"avion.drop.v1.DeleteDraftRequest"> & {
  /**
   * 下書きID
   *
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * ユーザーID（権限確認用）
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;
};

/**
 * Describes the message avion.drop.v1.DeleteDraftRequest.
 * Use `create(DeleteDraftRequestSchema)` to create a new message.
 */
export const DeleteDraftRequestSchema: GenMessage<DeleteDraftRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 42);

/**
 * 下書き削除レスポンス
 *
 * @generated from message avion.drop.v1.DeleteDraftResponse
 */
export type DeleteDraftResponse = Message<"avion.drop.v1.DeleteDraftResponse"> & {
  /**
   * 削除成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message avion.drop.v1.DeleteDraftResponse.
 * Use `create(DeleteDraftResponseSchema)` to create a new message.
 */
export const DeleteDraftResponseSchema: GenMessage<DeleteDraftResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 43);

/**
 * 下書き一覧取得リクエスト
 *
 * @generated from message avion.drop.v1.ListDraftsRequest
 */
export type ListDraftsRequest = Message<"avion.drop.v1.ListDraftsRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * フィルター
   *
   * @generated from field: avion.drop.v1.DraftFilter filter = 3;
   */
  filter?: DraftFilter;
};

/**
 * Describes the message avion.drop.v1.ListDraftsRequest.
 * Use `create(ListDraftsRequestSchema)` to create a new message.
 */
export const ListDraftsRequestSchema: GenMessage<ListDraftsRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 44);

/**
 * 下書きフィルター
 *
 * @generated from message avion.drop.v1.DraftFilter
 */
export type DraftFilter = Message<"avion.drop.v1.DraftFilter"> & {
  /**
   * ステータスでフィルター
   *
   * @generated from field: avion.drop.v1.DraftStatus status = 1;
   */
  status: DraftStatus;

  /**
   * スケジュール投稿のみ
   *
   * @generated from field: bool scheduled_only = 2;
   */
  scheduledOnly: boolean;

  /**
   * 開始日時
   *
   * @generated from field: google.protobuf.Timestamp from = 3;
   */
  from?: Timestamp;

  /**
   * 終了日時
   *
   * @generated from field: google.protobuf.Timestamp to = 4;
   */
  to?: Timestamp;
};

/**
 * Describes the message avion.drop.v1.DraftFilter.
 * Use `create(DraftFilterSchema)` to create a new message.
 */
export const DraftFilterSchema: GenMessage<DraftFilter> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 45);

/**
 * 下書き一覧取得レスポンス
 *
 * @generated from message avion.drop.v1.ListDraftsResponse
 */
export type ListDraftsResponse = Message<"avion.drop.v1.ListDraftsResponse"> & {
  /**
   * 下書き一覧
   *
   * @generated from field: repeated avion.drop.v1.DropDraft drafts = 1;
   */
  drafts: DropDraft[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.drop.v1.ListDraftsResponse.
 * Use `create(ListDraftsResponseSchema)` to create a new message.
 */
export const ListDraftsResponseSchema: GenMessage<ListDraftsResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 46);

/**
 * 下書きから投稿リクエスト
 *
 * @generated from message avion.drop.v1.PublishDraftRequest
 */
export type PublishDraftRequest = Message<"avion.drop.v1.PublishDraftRequest"> & {
  /**
   * 下書きID
   *
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * ユーザーID（権限確認用）
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 投稿時に上書きする内容（オプション）
   *
   * @generated from field: string content = 3;
   */
  content: string;

  /**
   * 投稿時に上書きする可視性（オプション）
   *
   * @generated from field: avion.drop.v1.DropVisibility visibility = 4;
   */
  visibility: DropVisibility;
};

/**
 * Describes the message avion.drop.v1.PublishDraftRequest.
 * Use `create(PublishDraftRequestSchema)` to create a new message.
 */
export const PublishDraftRequestSchema: GenMessage<PublishDraftRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 47);

/**
 * 下書きから投稿レスポンス
 *
 * @generated from message avion.drop.v1.PublishDraftResponse
 */
export type PublishDraftResponse = Message<"avion.drop.v1.PublishDraftResponse"> & {
  /**
   * 投稿されたDrop
   *
   * @generated from field: avion.drop.v1.Drop drop = 1;
   */
  drop?: Drop;

  /**
   * 更新された下書き（ステータスがPUBLISHEDに変更）
   *
   * @generated from field: avion.drop.v1.DropDraft draft = 2;
   */
  draft?: DropDraft;
};

/**
 * Describes the message avion.drop.v1.PublishDraftResponse.
 * Use `create(PublishDraftResponseSchema)` to create a new message.
 */
export const PublishDraftResponseSchema: GenMessage<PublishDraftResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 48);

/**
 * 自動保存リクエスト（ストリーミング）
 *
 * @generated from message avion.drop.v1.AutoSaveDraftRequest
 */
export type AutoSaveDraftRequest = Message<"avion.drop.v1.AutoSaveDraftRequest"> & {
  /**
   * 下書きID（初回はempty、新規作成時）
   *
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 下書き内容
   *
   * @generated from field: string content = 3;
   */
  content: string;

  /**
   * 可視性
   *
   * @generated from field: avion.drop.v1.DropVisibility visibility = 4;
   */
  visibility: DropVisibility;

  /**
   * リプライ元のDropID（オプション）
   *
   * @generated from field: string reply_to_id = 5;
   */
  replyToId: string;

  /**
   * 引用元のDropID（オプション）
   *
   * @generated from field: string quote_drop_id = 6;
   */
  quoteDropId: string;

  /**
   * タイムスタンプ（クライアント側の保存時刻）
   *
   * @generated from field: google.protobuf.Timestamp client_timestamp = 7;
   */
  clientTimestamp?: Timestamp;
};

/**
 * Describes the message avion.drop.v1.AutoSaveDraftRequest.
 * Use `create(AutoSaveDraftRequestSchema)` to create a new message.
 */
export const AutoSaveDraftRequestSchema: GenMessage<AutoSaveDraftRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 49);

/**
 * 自動保存レスポンス（ストリーミング）
 *
 * @generated from message avion.drop.v1.AutoSaveDraftResponse
 */
export type AutoSaveDraftResponse = Message<"avion.drop.v1.AutoSaveDraftResponse"> & {
  /**
   * 下書きID
   *
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * 保存成功フラグ
   *
   * @generated from field: bool success = 2;
   */
  success: boolean;

  /**
   * サーバー側の保存時刻
   *
   * @generated from field: google.protobuf.Timestamp server_timestamp = 3;
   */
  serverTimestamp?: Timestamp;

  /**
   * エラーメッセージ（失敗時）
   *
   * @generated from field: string error_message = 4;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.drop.v1.AutoSaveDraftResponse.
 * Use `create(AutoSaveDraftResponseSchema)` to create a new message.
 */
export const AutoSaveDraftResponseSchema: GenMessage<AutoSaveDraftResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 50);

/**
 * 投票作成リクエスト
 *
 * @generated from message avion.drop.v1.CreatePollRequest
 */
export type CreatePollRequest = Message<"avion.drop.v1.CreatePollRequest"> & {
  /**
   * 関連するDropID
   *
   * @generated from field: string drop_id = 1;
   */
  dropId: string;

  /**
   * 質問文
   *
   * @generated from field: string question = 2;
   */
  question: string;

  /**
   * 投票オプション（2～10個）
   *
   * @generated from field: repeated string options = 3;
   */
  options: string[];

  /**
   * 複数選択可能か
   *
   * @generated from field: bool multiple_choice = 4;
   */
  multipleChoice: boolean;

  /**
   * 投票期限（時間単位、最小1時間、最大7日）
   *
   * @generated from field: int32 duration_hours = 5;
   */
  durationHours: number;
};

/**
 * Describes the message avion.drop.v1.CreatePollRequest.
 * Use `create(CreatePollRequestSchema)` to create a new message.
 */
export const CreatePollRequestSchema: GenMessage<CreatePollRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 51);

/**
 * 投票作成レスポンス
 *
 * @generated from message avion.drop.v1.CreatePollResponse
 */
export type CreatePollResponse = Message<"avion.drop.v1.CreatePollResponse"> & {
  /**
   * 作成された投票
   *
   * @generated from field: avion.drop.v1.Poll poll = 1;
   */
  poll?: Poll;
};

/**
 * Describes the message avion.drop.v1.CreatePollResponse.
 * Use `create(CreatePollResponseSchema)` to create a new message.
 */
export const CreatePollResponseSchema: GenMessage<CreatePollResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 52);

/**
 * 投票に投票リクエスト
 *
 * @generated from message avion.drop.v1.VotePollRequest
 */
export type VotePollRequest = Message<"avion.drop.v1.VotePollRequest"> & {
  /**
   * 投票ID
   *
   * @generated from field: string poll_id = 1;
   */
  pollId: string;

  /**
   * 選択したオプションID一覧
   *
   * @generated from field: repeated string option_ids = 2;
   */
  optionIds: string[];
};

/**
 * Describes the message avion.drop.v1.VotePollRequest.
 * Use `create(VotePollRequestSchema)` to create a new message.
 */
export const VotePollRequestSchema: GenMessage<VotePollRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 53);

/**
 * 投票に投票レスポンス
 *
 * @generated from message avion.drop.v1.VotePollResponse
 */
export type VotePollResponse = Message<"avion.drop.v1.VotePollResponse"> & {
  /**
   * 成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * 更新後の投票
   *
   * @generated from field: avion.drop.v1.Poll poll = 2;
   */
  poll?: Poll;

  /**
   * エラーメッセージ（失敗時）
   *
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.drop.v1.VotePollResponse.
 * Use `create(VotePollResponseSchema)` to create a new message.
 */
export const VotePollResponseSchema: GenMessage<VotePollResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 54);

/**
 * 投票結果取得リクエスト
 *
 * @generated from message avion.drop.v1.GetPollResultsRequest
 */
export type GetPollResultsRequest = Message<"avion.drop.v1.GetPollResultsRequest"> & {
  /**
   * 投票ID
   *
   * @generated from field: string poll_id = 1;
   */
  pollId: string;
};

/**
 * Describes the message avion.drop.v1.GetPollResultsRequest.
 * Use `create(GetPollResultsRequestSchema)` to create a new message.
 */
export const GetPollResultsRequestSchema: GenMessage<GetPollResultsRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 55);

/**
 * 投票結果取得レスポンス
 *
 * @generated from message avion.drop.v1.GetPollResultsResponse
 */
export type GetPollResultsResponse = Message<"avion.drop.v1.GetPollResultsResponse"> & {
  /**
   * 投票
   *
   * @generated from field: avion.drop.v1.Poll poll = 1;
   */
  poll?: Poll;

  /**
   * 現在のユーザーの投票（ログインしている場合）
   *
   * @generated from field: avion.drop.v1.UserPollVote user_vote = 2;
   */
  userVote?: UserPollVote;
};

/**
 * Describes the message avion.drop.v1.GetPollResultsResponse.
 * Use `create(GetPollResultsResponseSchema)` to create a new message.
 */
export const GetPollResultsResponseSchema: GenMessage<GetPollResultsResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 56);

/**
 * 投票を閉じるリクエスト
 *
 * @generated from message avion.drop.v1.ClosePollRequest
 */
export type ClosePollRequest = Message<"avion.drop.v1.ClosePollRequest"> & {
  /**
   * 投票ID
   *
   * @generated from field: string poll_id = 1;
   */
  pollId: string;

  /**
   * DropオーナーのユーザーID（権限確認用）
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;
};

/**
 * Describes the message avion.drop.v1.ClosePollRequest.
 * Use `create(ClosePollRequestSchema)` to create a new message.
 */
export const ClosePollRequestSchema: GenMessage<ClosePollRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 57);

/**
 * 投票を閉じるレスポンス
 *
 * @generated from message avion.drop.v1.ClosePollResponse
 */
export type ClosePollResponse = Message<"avion.drop.v1.ClosePollResponse"> & {
  /**
   * 成功フラグ
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * 最終的な投票結果
   *
   * @generated from field: avion.drop.v1.Poll poll = 2;
   */
  poll?: Poll;
};

/**
 * Describes the message avion.drop.v1.ClosePollResponse.
 * Use `create(ClosePollResponseSchema)` to create a new message.
 */
export const ClosePollResponseSchema: GenMessage<ClosePollResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 58);

/**
 * Dropリアクション詳細取得リクエスト
 *
 * @generated from message avion.drop.v1.GetDropReactionsRequest
 */
export type GetDropReactionsRequest = Message<"avion.drop.v1.GetDropReactionsRequest"> & {
  /**
   * DropID
   *
   * @generated from field: string drop_id = 1;
   */
  dropId: string;

  /**
   * リアクションタイプでフィルター（オプション）
   *
   * @generated from field: avion.drop.v1.ReactionType reaction_type = 2;
   */
  reactionType: ReactionType;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 3;
   */
  pagination?: PaginationRequest;
};

/**
 * Describes the message avion.drop.v1.GetDropReactionsRequest.
 * Use `create(GetDropReactionsRequestSchema)` to create a new message.
 */
export const GetDropReactionsRequestSchema: GenMessage<GetDropReactionsRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 59);

/**
 * Dropリアクション詳細取得レスポンス
 *
 * @generated from message avion.drop.v1.GetDropReactionsResponse
 */
export type GetDropReactionsResponse = Message<"avion.drop.v1.GetDropReactionsResponse"> & {
  /**
   * リアクション一覧
   *
   * @generated from field: repeated avion.drop.v1.DropReaction reactions = 1;
   */
  reactions: DropReaction[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.drop.v1.GetDropReactionsResponse.
 * Use `create(GetDropReactionsResponseSchema)` to create a new message.
 */
export const GetDropReactionsResponseSchema: GenMessage<GetDropReactionsResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 60);

/**
 * ユーザーのブックマーク一覧取得リクエスト
 *
 * @generated from message avion.drop.v1.ListUserBookmarksRequest
 */
export type ListUserBookmarksRequest = Message<"avion.drop.v1.ListUserBookmarksRequest"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * ページネーション
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;
};

/**
 * Describes the message avion.drop.v1.ListUserBookmarksRequest.
 * Use `create(ListUserBookmarksRequestSchema)` to create a new message.
 */
export const ListUserBookmarksRequestSchema: GenMessage<ListUserBookmarksRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 61);

/**
 * ユーザーのブックマーク一覧取得レスポンス
 *
 * @generated from message avion.drop.v1.ListUserBookmarksResponse
 */
export type ListUserBookmarksResponse = Message<"avion.drop.v1.ListUserBookmarksResponse"> & {
  /**
   * ブックマークしたDrop一覧
   *
   * @generated from field: repeated avion.drop.v1.Drop drops = 1;
   */
  drops: Drop[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.drop.v1.ListUserBookmarksResponse.
 * Use `create(ListUserBookmarksResponseSchema)` to create a new message.
 */
export const ListUserBookmarksResponseSchema: GenMessage<ListUserBookmarksResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 62);

/**
 * Drop編集履歴取得リクエスト
 *
 * @generated from message avion.drop.v1.GetDropEditHistoryRequest
 */
export type GetDropEditHistoryRequest = Message<"avion.drop.v1.GetDropEditHistoryRequest"> & {
  /**
   * DropID
   *
   * @generated from field: string drop_id = 1;
   */
  dropId: string;

  /**
   * ページネーション（履歴が多い場合）
   *
   * @generated from field: avion.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;
};

/**
 * Describes the message avion.drop.v1.GetDropEditHistoryRequest.
 * Use `create(GetDropEditHistoryRequestSchema)` to create a new message.
 */
export const GetDropEditHistoryRequestSchema: GenMessage<GetDropEditHistoryRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 63);

/**
 * Drop編集履歴取得レスポンス
 *
 * @generated from message avion.drop.v1.GetDropEditHistoryResponse
 */
export type GetDropEditHistoryResponse = Message<"avion.drop.v1.GetDropEditHistoryResponse"> & {
  /**
   * 編集履歴一覧
   *
   * @generated from field: repeated avion.drop.v1.EditHistory history = 1;
   */
  history: EditHistory[];

  /**
   * ページネーション情報
   *
   * @generated from field: avion.common.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message avion.drop.v1.GetDropEditHistoryResponse.
 * Use `create(GetDropEditHistoryResponseSchema)` to create a new message.
 */
export const GetDropEditHistoryResponseSchema: GenMessage<GetDropEditHistoryResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 64);

/**
 * Drop統計情報取得リクエスト
 *
 * @generated from message avion.drop.v1.GetDropStatsRequest
 */
export type GetDropStatsRequest = Message<"avion.drop.v1.GetDropStatsRequest"> & {
  /**
   * DropID
   *
   * @generated from field: string drop_id = 1;
   */
  dropId: string;

  /**
   * 期間指定（オプション）
   *
   * @generated from field: google.protobuf.Timestamp from = 2;
   */
  from?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp to = 3;
   */
  to?: Timestamp;
};

/**
 * Describes the message avion.drop.v1.GetDropStatsRequest.
 * Use `create(GetDropStatsRequestSchema)` to create a new message.
 */
export const GetDropStatsRequestSchema: GenMessage<GetDropStatsRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 65);

/**
 * Drop統計情報取得レスポンス
 *
 * @generated from message avion.drop.v1.GetDropStatsResponse
 */
export type GetDropStatsResponse = Message<"avion.drop.v1.GetDropStatsResponse"> & {
  /**
   * 統計情報
   *
   * @generated from field: avion.drop.v1.DropStats stats = 1;
   */
  stats?: DropStats;
};

/**
 * Describes the message avion.drop.v1.GetDropStatsResponse.
 * Use `create(GetDropStatsResponseSchema)` to create a new message.
 */
export const GetDropStatsResponseSchema: GenMessage<GetDropStatsResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 66);

/**
 * 複数Drop一括取得リクエスト
 *
 * @generated from message avion.drop.v1.BatchGetDropsRequest
 */
export type BatchGetDropsRequest = Message<"avion.drop.v1.BatchGetDropsRequest"> & {
  /**
   * 取得するDropID一覧（最大100個）
   *
   * @generated from field: repeated string drop_ids = 1;
   */
  dropIds: string[];

  /**
   * 削除されたDropも含むか
   *
   * @generated from field: bool include_deleted = 2;
   */
  includeDeleted: boolean;
};

/**
 * Describes the message avion.drop.v1.BatchGetDropsRequest.
 * Use `create(BatchGetDropsRequestSchema)` to create a new message.
 */
export const BatchGetDropsRequestSchema: GenMessage<BatchGetDropsRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 67);

/**
 * 複数Drop一括取得レスポンス
 *
 * @generated from message avion.drop.v1.BatchGetDropsResponse
 */
export type BatchGetDropsResponse = Message<"avion.drop.v1.BatchGetDropsResponse"> & {
  /**
   * 取得したDrop一覧
   *
   * @generated from field: repeated avion.drop.v1.Drop drops = 1;
   */
  drops: Drop[];

  /**
   * 見つからなかったDropID一覧
   *
   * @generated from field: repeated string not_found_ids = 2;
   */
  notFoundIds: string[];
};

/**
 * Describes the message avion.drop.v1.BatchGetDropsResponse.
 * Use `create(BatchGetDropsResponseSchema)` to create a new message.
 */
export const BatchGetDropsResponseSchema: GenMessage<BatchGetDropsResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 68);

/**
 * 複数Drop一括削除リクエスト
 *
 * @generated from message avion.drop.v1.BatchDeleteDropsRequest
 */
export type BatchDeleteDropsRequest = Message<"avion.drop.v1.BatchDeleteDropsRequest"> & {
  /**
   * 削除するDropID一覧（最大50個）
   *
   * @generated from field: repeated string drop_ids = 1;
   */
  dropIds: string[];

  /**
   * 削除を実行するユーザーID（権限確認用）
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 物理削除するか（デフォルトはソフト削除）
   *
   * @generated from field: bool hard_delete = 3;
   */
  hardDelete: boolean;
};

/**
 * Describes the message avion.drop.v1.BatchDeleteDropsRequest.
 * Use `create(BatchDeleteDropsRequestSchema)` to create a new message.
 */
export const BatchDeleteDropsRequestSchema: GenMessage<BatchDeleteDropsRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 69);

/**
 * 複数Drop一括削除レスポンス
 *
 * @generated from message avion.drop.v1.BatchDeleteDropsResponse
 */
export type BatchDeleteDropsResponse = Message<"avion.drop.v1.BatchDeleteDropsResponse"> & {
  /**
   * 削除成功したDropID一覧
   *
   * @generated from field: repeated string deleted_ids = 1;
   */
  deletedIds: string[];

  /**
   * 削除失敗したDropID一覧
   *
   * @generated from field: repeated string failed_ids = 2;
   */
  failedIds: string[];

  /**
   * エラー詳細
   *
   * @generated from field: map<string, string> errors = 3;
   */
  errors: { [key: string]: string };
};

/**
 * Describes the message avion.drop.v1.BatchDeleteDropsResponse.
 * Use `create(BatchDeleteDropsResponseSchema)` to create a new message.
 */
export const BatchDeleteDropsResponseSchema: GenMessage<BatchDeleteDropsResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 70);

/**
 * 複数Dropステータス一括更新リクエスト
 *
 * @generated from message avion.drop.v1.BatchUpdateDropStatusRequest
 */
export type BatchUpdateDropStatusRequest = Message<"avion.drop.v1.BatchUpdateDropStatusRequest"> & {
  /**
   * 更新するDropID一覧（最大100個）
   *
   * @generated from field: repeated string drop_ids = 1;
   */
  dropIds: string[];

  /**
   * 新しいステータス
   *
   * @generated from field: avion.drop.v1.DropStatus new_status = 2;
   */
  newStatus: DropStatus;

  /**
   * 更新を実行するユーザーID（権限確認用）
   *
   * @generated from field: string user_id = 3;
   */
  userId: string;

  /**
   * 更新理由（監査用）
   *
   * @generated from field: string reason = 4;
   */
  reason: string;
};

/**
 * Describes the message avion.drop.v1.BatchUpdateDropStatusRequest.
 * Use `create(BatchUpdateDropStatusRequestSchema)` to create a new message.
 */
export const BatchUpdateDropStatusRequestSchema: GenMessage<BatchUpdateDropStatusRequest> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 71);

/**
 * 複数Dropステータス一括更新レスポンス
 *
 * @generated from message avion.drop.v1.BatchUpdateDropStatusResponse
 */
export type BatchUpdateDropStatusResponse = Message<"avion.drop.v1.BatchUpdateDropStatusResponse"> & {
  /**
   * 更新成功したDropID一覧
   *
   * @generated from field: repeated string updated_ids = 1;
   */
  updatedIds: string[];

  /**
   * 更新失敗したDropID一覧
   *
   * @generated from field: repeated string failed_ids = 2;
   */
  failedIds: string[];

  /**
   * エラー詳細
   *
   * @generated from field: map<string, string> errors = 3;
   */
  errors: { [key: string]: string };
};

/**
 * Describes the message avion.drop.v1.BatchUpdateDropStatusResponse.
 * Use `create(BatchUpdateDropStatusResponseSchema)` to create a new message.
 */
export const BatchUpdateDropStatusResponseSchema: GenMessage<BatchUpdateDropStatusResponse> = /*@__PURE__*/
  messageDesc(file_avion_drop_v1_drop_service, 72);

/**
 * Dropサービス
 *
 * @generated from service avion.drop.v1.DropService
 */
export const DropService: GenService<{
  /**
   * Drop作成
   *
   * @generated from rpc avion.drop.v1.DropService.CreateDrop
   */
  createDrop: {
    methodKind: "unary";
    input: typeof CreateDropRequestSchema;
    output: typeof CreateDropResponseSchema;
  },
  /**
   * Drop取得
   *
   * @generated from rpc avion.drop.v1.DropService.GetDrop
   */
  getDrop: {
    methodKind: "unary";
    input: typeof GetDropRequestSchema;
    output: typeof GetDropResponseSchema;
  },
  /**
   * Drop更新
   *
   * @generated from rpc avion.drop.v1.DropService.UpdateDrop
   */
  updateDrop: {
    methodKind: "unary";
    input: typeof UpdateDropRequestSchema;
    output: typeof UpdateDropResponseSchema;
  },
  /**
   * Drop削除
   *
   * @generated from rpc avion.drop.v1.DropService.DeleteDrop
   */
  deleteDrop: {
    methodKind: "unary";
    input: typeof DeleteDropRequestSchema;
    output: typeof DeleteDropResponseSchema;
  },
  /**
   * Drop一覧取得
   *
   * @generated from rpc avion.drop.v1.DropService.ListDrops
   */
  listDrops: {
    methodKind: "unary";
    input: typeof ListDropsRequestSchema;
    output: typeof ListDropsResponseSchema;
  },
  /**
   * ユーザーのDrop一覧取得
   *
   * @generated from rpc avion.drop.v1.DropService.ListUserDrops
   */
  listUserDrops: {
    methodKind: "unary";
    input: typeof ListUserDropsRequestSchema;
    output: typeof ListUserDropsResponseSchema;
  },
  /**
   * Dropにいいね追加
   *
   * @generated from rpc avion.drop.v1.DropService.AddLike
   */
  addLike: {
    methodKind: "unary";
    input: typeof AddLikeRequestSchema;
    output: typeof AddLikeResponseSchema;
  },
  /**
   * Dropのいいね削除
   *
   * @generated from rpc avion.drop.v1.DropService.RemoveLike
   */
  removeLike: {
    methodKind: "unary";
    input: typeof RemoveLikeRequestSchema;
    output: typeof RemoveLikeResponseSchema;
  },
  /**
   * Dropをリドロップ追加
   *
   * @generated from rpc avion.drop.v1.DropService.AddRedrop
   */
  addRedrop: {
    methodKind: "unary";
    input: typeof AddRedropRequestSchema;
    output: typeof AddRedropResponseSchema;
  },
  /**
   * Dropのリドロップ削除
   *
   * @generated from rpc avion.drop.v1.DropService.RemoveRedrop
   */
  removeRedrop: {
    methodKind: "unary";
    input: typeof RemoveRedropRequestSchema;
    output: typeof RemoveRedropResponseSchema;
  },
  /**
   * Dropをブックマーク追加
   *
   * @generated from rpc avion.drop.v1.DropService.AddBookmark
   */
  addBookmark: {
    methodKind: "unary";
    input: typeof AddBookmarkRequestSchema;
    output: typeof AddBookmarkResponseSchema;
  },
  /**
   * Dropのブックマーク削除
   *
   * @generated from rpc avion.drop.v1.DropService.RemoveBookmark
   */
  removeBookmark: {
    methodKind: "unary";
    input: typeof RemoveBookmarkRequestSchema;
    output: typeof RemoveBookmarkResponseSchema;
  },
  /**
   * Dropにリプライ
   *
   * @generated from rpc avion.drop.v1.DropService.ReplyToDrop
   */
  replyToDrop: {
    methodKind: "unary";
    input: typeof ReplyToDropRequestSchema;
    output: typeof ReplyToDropResponseSchema;
  },
  /**
   * Dropを引用
   *
   * @generated from rpc avion.drop.v1.DropService.QuoteDrop
   */
  quoteDrop: {
    methodKind: "unary";
    input: typeof QuoteDropRequestSchema;
    output: typeof QuoteDropResponseSchema;
  },
  /**
   * Drop検索
   *
   * @generated from rpc avion.drop.v1.DropService.SearchDrops
   */
  searchDrops: {
    methodKind: "unary";
    input: typeof SearchDropsRequestSchema;
    output: typeof SearchDropsResponseSchema;
  },
  /**
   * Dropスレッド取得（リプライツリー）
   *
   * @generated from rpc avion.drop.v1.DropService.GetDropThread
   */
  getDropThread: {
    methodKind: "unary";
    input: typeof GetDropThreadRequestSchema;
    output: typeof GetDropThreadResponseSchema;
  },
  /**
   * 下書き関連のRPC
   * 下書き作成
   *
   * @generated from rpc avion.drop.v1.DropService.CreateDraft
   */
  createDraft: {
    methodKind: "unary";
    input: typeof CreateDraftRequestSchema;
    output: typeof CreateDraftResponseSchema;
  },
  /**
   * 下書き取得
   *
   * @generated from rpc avion.drop.v1.DropService.GetDraft
   */
  getDraft: {
    methodKind: "unary";
    input: typeof GetDraftRequestSchema;
    output: typeof GetDraftResponseSchema;
  },
  /**
   * 下書き更新
   *
   * @generated from rpc avion.drop.v1.DropService.UpdateDraft
   */
  updateDraft: {
    methodKind: "unary";
    input: typeof UpdateDraftRequestSchema;
    output: typeof UpdateDraftResponseSchema;
  },
  /**
   * 下書き削除
   *
   * @generated from rpc avion.drop.v1.DropService.DeleteDraft
   */
  deleteDraft: {
    methodKind: "unary";
    input: typeof DeleteDraftRequestSchema;
    output: typeof DeleteDraftResponseSchema;
  },
  /**
   * 下書き一覧取得
   *
   * @generated from rpc avion.drop.v1.DropService.ListDrafts
   */
  listDrafts: {
    methodKind: "unary";
    input: typeof ListDraftsRequestSchema;
    output: typeof ListDraftsResponseSchema;
  },
  /**
   * 下書きから投稿
   *
   * @generated from rpc avion.drop.v1.DropService.PublishDraft
   */
  publishDraft: {
    methodKind: "unary";
    input: typeof PublishDraftRequestSchema;
    output: typeof PublishDraftResponseSchema;
  },
  /**
   * 自動保存（ストリーミング）
   *
   * @generated from rpc avion.drop.v1.DropService.AutoSaveDraft
   */
  autoSaveDraft: {
    methodKind: "bidi_streaming";
    input: typeof AutoSaveDraftRequestSchema;
    output: typeof AutoSaveDraftResponseSchema;
  },
  /**
   * 投票機能関連のRPC
   * 投票作成
   *
   * @generated from rpc avion.drop.v1.DropService.CreatePoll
   */
  createPoll: {
    methodKind: "unary";
    input: typeof CreatePollRequestSchema;
    output: typeof CreatePollResponseSchema;
  },
  /**
   * 投票に投票
   *
   * @generated from rpc avion.drop.v1.DropService.VotePoll
   */
  votePoll: {
    methodKind: "unary";
    input: typeof VotePollRequestSchema;
    output: typeof VotePollResponseSchema;
  },
  /**
   * 投票結果取得
   *
   * @generated from rpc avion.drop.v1.DropService.GetPollResults
   */
  getPollResults: {
    methodKind: "unary";
    input: typeof GetPollResultsRequestSchema;
    output: typeof GetPollResultsResponseSchema;
  },
  /**
   * 投票を閉じる
   *
   * @generated from rpc avion.drop.v1.DropService.ClosePoll
   */
  closePoll: {
    methodKind: "unary";
    input: typeof ClosePollRequestSchema;
    output: typeof ClosePollResponseSchema;
  },
  /**
   * リアクション詳細機能
   * リアクションしたユーザー一覧取得
   *
   * @generated from rpc avion.drop.v1.DropService.GetDropReactions
   */
  getDropReactions: {
    methodKind: "unary";
    input: typeof GetDropReactionsRequestSchema;
    output: typeof GetDropReactionsResponseSchema;
  },
  /**
   * ブックマーク管理
   * ユーザーのブックマーク一覧取得
   *
   * @generated from rpc avion.drop.v1.DropService.ListUserBookmarks
   */
  listUserBookmarks: {
    methodKind: "unary";
    input: typeof ListUserBookmarksRequestSchema;
    output: typeof ListUserBookmarksResponseSchema;
  },
  /**
   * 編集履歴管理
   * Drop編集履歴取得
   *
   * @generated from rpc avion.drop.v1.DropService.GetDropEditHistory
   */
  getDropEditHistory: {
    methodKind: "unary";
    input: typeof GetDropEditHistoryRequestSchema;
    output: typeof GetDropEditHistoryResponseSchema;
  },
  /**
   * 統計情報
   * Drop統計情報取得
   *
   * @generated from rpc avion.drop.v1.DropService.GetDropStats
   */
  getDropStats: {
    methodKind: "unary";
    input: typeof GetDropStatsRequestSchema;
    output: typeof GetDropStatsResponseSchema;
  },
  /**
   * バッチ操作
   * 複数Drop一括取得
   *
   * @generated from rpc avion.drop.v1.DropService.BatchGetDrops
   */
  batchGetDrops: {
    methodKind: "unary";
    input: typeof BatchGetDropsRequestSchema;
    output: typeof BatchGetDropsResponseSchema;
  },
  /**
   * 複数Drop一括削除
   *
   * @generated from rpc avion.drop.v1.DropService.BatchDeleteDrops
   */
  batchDeleteDrops: {
    methodKind: "unary";
    input: typeof BatchDeleteDropsRequestSchema;
    output: typeof BatchDeleteDropsResponseSchema;
  },
  /**
   * 複数Dropステータス一括更新
   *
   * @generated from rpc avion.drop.v1.DropService.BatchUpdateDropStatus
   */
  batchUpdateDropStatus: {
    methodKind: "unary";
    input: typeof BatchUpdateDropStatusRequestSchema;
    output: typeof BatchUpdateDropStatusResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_avion_drop_v1_drop_service, 0);

