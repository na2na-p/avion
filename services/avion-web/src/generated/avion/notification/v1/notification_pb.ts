// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file avion/notification/v1/notification.proto (package avion.notification.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file avion/notification/v1/notification.proto.
 */
export const file_avion_notification_v1_notification: GenFile = /*@__PURE__*/
  fileDesc("Cihhdmlvbi9ub3RpZmljYXRpb24vdjEvbm90aWZpY2F0aW9uLnByb3RvEhVhdmlvbi5ub3RpZmljYXRpb24udjEitQIKDE5vdGlmaWNhdGlvbhIKCgJpZBgBIAEoCRIPCgd1c2VyX2lkGAIgASgJEjUKBHR5cGUYAyABKA4yJy5hdmlvbi5ub3RpZmljYXRpb24udjEuTm90aWZpY2F0aW9uVHlwZRINCgV0aXRsZRgEIAEoCRIMCgRib2R5GAUgASgJEgwKBGRhdGEYBiABKAkSDwoHaXNfcmVhZBgHIAEoCBIuCgpjcmVhdGVkX2F0GAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIrCgdyZWFkX2F0GAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBISCgphY3Rpb25fdXJsGAogASgJEhEKCXNlbmRlcl9pZBgLIAEoCRIRCgllbnRpdHlfaWQYDCABKAkiswEKFk5vdGlmaWNhdGlvblByZWZlcmVuY2USDwoHdXNlcl9pZBgBIAEoCRIVCg1lbWFpbF9lbmFibGVkGAIgASgIEhQKDHB1c2hfZW5hYmxlZBgDIAEoCBIWCg5pbl9hcHBfZW5hYmxlZBgEIAEoCBJDChJub3RpZmljYXRpb25fdHlwZXMYBSADKA4yJy5hdmlvbi5ub3RpZmljYXRpb24udjEuTm90aWZpY2F0aW9uVHlwZSLGAgoUTm90aWZpY2F0aW9uRGVsaXZlcnkSFwoPbm90aWZpY2F0aW9uX2lkGAEgASgJEjsKB2NoYW5uZWwYAiABKA4yKi5hdmlvbi5ub3RpZmljYXRpb24udjEuTm90aWZpY2F0aW9uQ2hhbm5lbBJBCgZzdGF0dXMYAyABKA4yMS5hdmlvbi5ub3RpZmljYXRpb24udjEuTm90aWZpY2F0aW9uRGVsaXZlcnlTdGF0dXMSFQoNYXR0ZW1wdF9jb3VudBgEIAEoBRI1ChFsYXN0X2F0dGVtcHRlZF9hdBgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMAoMZGVsaXZlcmVkX2F0GAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIVCg1lcnJvcl9tZXNzYWdlGAcgASgJItcBCgpQdXNoRGV2aWNlEgoKAmlkGAEgASgJEg8KB3VzZXJfaWQYAiABKAkSDQoFdG9rZW4YAyABKAkSEAoIcGxhdGZvcm0YBCABKAkSEwoLZGV2aWNlX25hbWUYBSABKAkSMQoNcmVnaXN0ZXJlZF9hdBgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMAoMbGFzdF91c2VkX2F0GAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIRCglpc19hY3RpdmUYCCABKAgikgIKFE5vdGlmaWNhdGlvblRlbXBsYXRlEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSNQoEdHlwZRgDIAEoDjInLmF2aW9uLm5vdGlmaWNhdGlvbi52MS5Ob3RpZmljYXRpb25UeXBlEhYKDnRpdGxlX3RlbXBsYXRlGAQgASgJEhUKDWJvZHlfdGVtcGxhdGUYBSABKAkSGgoSYWN0aW9uX3VybF9wYXR0ZXJuGAYgASgJEi4KCmNyZWF0ZWRfYXQYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIp0BCgtVbnJlYWRDb3VudBIPCgd1c2VyX2lkGAEgASgJEg0KBXRvdGFsGAIgASgFEj8KB2J5X3R5cGUYAyADKAsyLi5hdmlvbi5ub3RpZmljYXRpb24udjEuVW5yZWFkQ291bnQuQnlUeXBlRW50cnkaLQoLQnlUeXBlRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgFOgI4ASKzBAoQV2ViU29ja2V0TWVzc2FnZRISCgptZXNzYWdlX2lkGAEgASgJEjkKBHR5cGUYAiABKA4yKy5hdmlvbi5ub3RpZmljYXRpb24udjEuV2ViU29ja2V0TWVzc2FnZVR5cGUSLQoJdGltZXN0YW1wGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI8CgloZWFydGJlYXQYBCABKAsyJy5hdmlvbi5ub3RpZmljYXRpb24udjEuSGVhcnRiZWF0UGF5bG9hZEgAEkIKDG5vdGlmaWNhdGlvbhgFIAEoCzIqLmF2aW9uLm5vdGlmaWNhdGlvbi52MS5Ob3RpZmljYXRpb25QYXlsb2FkSAASQwoNdW5yZWFkX3VwZGF0ZRgGIAEoCzIqLmF2aW9uLm5vdGlmaWNhdGlvbi52MS5VbnJlYWRVcGRhdGVQYXlsb2FkSAASVQoWY29ubmVjdGlvbl9lc3RhYmxpc2hlZBgHIAEoCzIzLmF2aW9uLm5vdGlmaWNhdGlvbi52MS5Db25uZWN0aW9uRXN0YWJsaXNoZWRQYXlsb2FkSAASNAoFZXJyb3IYCCABKAsyIy5hdmlvbi5ub3RpZmljYXRpb24udjEuRXJyb3JQYXlsb2FkSAASQgoMc3Vic2NyaXB0aW9uGAkgASgLMiouYXZpb24ubm90aWZpY2F0aW9uLnYxLlN1YnNjcmlwdGlvblBheWxvYWRIAEIJCgdwYXlsb2FkIloKEEhlYXJ0YmVhdFBheWxvYWQSEAoIc2VxdWVuY2UYASABKAMSNAoQY2xpZW50X3RpbWVzdGFtcBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAi3gEKE05vdGlmaWNhdGlvblBheWxvYWQSOQoMbm90aWZpY2F0aW9uGAEgASgLMiMuYXZpb24ubm90aWZpY2F0aW9uLnYxLk5vdGlmaWNhdGlvbhISCgpldmVudF90eXBlGAIgASgJEkgKB2NvbnRleHQYAyADKAsyNy5hdmlvbi5ub3RpZmljYXRpb24udjEuTm90aWZpY2F0aW9uUGF5bG9hZC5Db250ZXh0RW50cnkaLgoMQ29udGV4dEVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiXwoTVW5yZWFkVXBkYXRlUGF5bG9hZBI4Cgx1bnJlYWRfY291bnQYASABKAsyIi5hdmlvbi5ub3RpZmljYXRpb24udjEuVW5yZWFkQ291bnQSDgoGcmVhc29uGAIgASgJIs4BChxDb25uZWN0aW9uRXN0YWJsaXNoZWRQYXlsb2FkEhIKCnNlc3Npb25faWQYASABKAkSNAoQc2VydmVyX3RpbWVzdGFtcBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASIgoaaGVhcnRiZWF0X2ludGVydmFsX3NlY29uZHMYAyABKAUSQAoQcmVjb25uZWN0X2NvbmZpZxgEIAEoCzImLmF2aW9uLm5vdGlmaWNhdGlvbi52MS5SZWNvbm5lY3RDb25maWciaQoMRXJyb3JQYXlsb2FkEhIKCmVycm9yX2NvZGUYASABKAkSFQoNZXJyb3JfbWVzc2FnZRgCIAEoCRIRCglyZXRyeWFibGUYAyABKAgSGwoTcmV0cnlfYWZ0ZXJfc2Vjb25kcxgEIAEoBSLmAQoTU3Vic2NyaXB0aW9uUGF5bG9hZBJDChJub3RpZmljYXRpb25fdHlwZXMYASADKA4yJy5hdmlvbi5ub3RpZmljYXRpb24udjEuTm90aWZpY2F0aW9uVHlwZRIQCghjaGFubmVscxgCIAMoCRJICgdmaWx0ZXJzGAMgAygLMjcuYXZpb24ubm90aWZpY2F0aW9uLnYxLlN1YnNjcmlwdGlvblBheWxvYWQuRmlsdGVyc0VudHJ5Gi4KDEZpbHRlcnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIq8BCg9SZWNvbm5lY3RDb25maWcSFgoOYXV0b19yZWNvbm5lY3QYASABKAgSHgoWbWF4X3JlY29ubmVjdF9hdHRlbXB0cxgCIAEoBRIlCh1pbml0aWFsX3JlY29ubmVjdF9pbnRlcnZhbF9tcxgDIAEoBRIhChltYXhfcmVjb25uZWN0X2ludGVydmFsX21zGAQgASgFEhoKEmJhY2tvZmZfbXVsdGlwbGllchgFIAEoAiKzAgoTV2ViU29ja2V0Q29ubmVjdGlvbhIVCg1jb25uZWN0aW9uX2lkGAEgASgJEg8KB3VzZXJfaWQYAiABKAkSEgoKc2Vzc2lvbl9pZBgDIAEoCRJACgZzdGF0dXMYBCABKA4yMC5hdmlvbi5ub3RpZmljYXRpb24udjEuV2ViU29ja2V0Q29ubmVjdGlvblN0YXR1cxIwCgxjb25uZWN0ZWRfYXQYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjQKEGxhc3RfYWN0aXZpdHlfYXQYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjYKC2NsaWVudF9pbmZvGAcgASgLMiEuYXZpb24ubm90aWZpY2F0aW9uLnYxLkNsaWVudEluZm8ibgoKQ2xpZW50SW5mbxISCgp1c2VyX2FnZW50GAEgASgJEhIKCmlwX2FkZHJlc3MYAiABKAkSEAoIcGxhdGZvcm0YAyABKAkSEwoLYXBwX3ZlcnNpb24YBCABKAkSEQoJZGV2aWNlX2lkGAUgASgJKoQCChBOb3RpZmljYXRpb25UeXBlEiEKHU5PVElGSUNBVElPTl9UWVBFX1VOU1BFQ0lGSUVEEAASGgoWTk9USUZJQ0FUSU9OX1RZUEVfTElLRRABEhwKGE5PVElGSUNBVElPTl9UWVBFX1JFRFJPUBACEhwKGE5PVElGSUNBVElPTl9UWVBFX0ZPTExPVxADEh0KGU5PVElGSUNBVElPTl9UWVBFX01FTlRJT04QBBIbChdOT1RJRklDQVRJT05fVFlQRV9SRVBMWRAFEhsKF05PVElGSUNBVElPTl9UWVBFX1FVT1RFEAYSHAoYTk9USUZJQ0FUSU9OX1RZUEVfU1lTVEVNEAcq8AEKGk5vdGlmaWNhdGlvbkRlbGl2ZXJ5U3RhdHVzEiwKKE5PVElGSUNBVElPTl9ERUxJVkVSWV9TVEFUVVNfVU5TUEVDSUZJRUQQABIoCiROT1RJRklDQVRJT05fREVMSVZFUllfU1RBVFVTX1BFTkRJTkcQARIlCiFOT1RJRklDQVRJT05fREVMSVZFUllfU1RBVFVTX1NFTlQQAhIqCiZOT1RJRklDQVRJT05fREVMSVZFUllfU1RBVFVTX0RFTElWRVJFRBADEicKI05PVElGSUNBVElPTl9ERUxJVkVSWV9TVEFUVVNfRkFJTEVEEAQquQEKE05vdGlmaWNhdGlvbkNoYW5uZWwSJAogTk9USUZJQ0FUSU9OX0NIQU5ORUxfVU5TUEVDSUZJRUQQABIeChpOT1RJRklDQVRJT05fQ0hBTk5FTF9FTUFJTBABEh0KGU5PVElGSUNBVElPTl9DSEFOTkVMX1BVU0gQAhIfChtOT1RJRklDQVRJT05fQ0hBTk5FTF9JTl9BUFAQAxIcChhOT1RJRklDQVRJT05fQ0hBTk5FTF9TU0UQBCqwAgoZV2ViU29ja2V0Q29ubmVjdGlvblN0YXR1cxIsCihXRUJfU09DS0VUX0NPTk5FQ1RJT05fU1RBVFVTX1VOU1BFQ0lGSUVEEAASKwonV0VCX1NPQ0tFVF9DT05ORUNUSU9OX1NUQVRVU19DT05ORUNUSU5HEAESKgomV0VCX1NPQ0tFVF9DT05ORUNUSU9OX1NUQVRVU19DT05ORUNURUQQAhIuCipXRUJfU09DS0VUX0NPTk5FQ1RJT05fU1RBVFVTX0RJU0NPTk5FQ1RJTkcQAxItCilXRUJfU09DS0VUX0NPTk5FQ1RJT05fU1RBVFVTX0RJU0NPTk5FQ1RFRBAEEi0KKVdFQl9TT0NLRVRfQ09OTkVDVElPTl9TVEFUVVNfUkVDT05ORUNUSU5HEAUqjQMKFFdlYlNvY2tldE1lc3NhZ2VUeXBlEicKI1dFQl9TT0NLRVRfTUVTU0FHRV9UWVBFX1VOU1BFQ0lGSUVEEAASJQohV0VCX1NPQ0tFVF9NRVNTQUdFX1RZUEVfSEVBUlRCRUFUEAESKQolV0VCX1NPQ0tFVF9NRVNTQUdFX1RZUEVfSEVBUlRCRUFUX0FDSxACEigKJFdFQl9TT0NLRVRfTUVTU0FHRV9UWVBFX05PVElGSUNBVElPThADEikKJVdFQl9TT0NLRVRfTUVTU0FHRV9UWVBFX1VOUkVBRF9VUERBVEUQBBIyCi5XRUJfU09DS0VUX01FU1NBR0VfVFlQRV9DT05ORUNUSU9OX0VTVEFCTElTSEVEEAUSIQodV0VCX1NPQ0tFVF9NRVNTQUdFX1RZUEVfRVJST1IQBhIlCiFXRUJfU09DS0VUX01FU1NBR0VfVFlQRV9TVUJTQ1JJQkUQBxInCiNXRUJfU09DS0VUX01FU1NBR0VfVFlQRV9VTlNVQlNDUklCRRAIQukBChljb20uYXZpb24ubm90aWZpY2F0aW9uLnYxQhFOb3RpZmljYXRpb25Qcm90b1ABWkNnaXRodWIuY29tL25hMm5hLXAvYXZpb24vcHJvdG8vYXZpb24vbm90aWZpY2F0aW9uL3YxO25vdGlmaWNhdGlvbnYxogIDQU5YqgIVQXZpb24uTm90aWZpY2F0aW9uLlYxygIVQXZpb25cTm90aWZpY2F0aW9uXFYx4gIhQXZpb25cTm90aWZpY2F0aW9uXFYxXEdQQk1ldGFkYXRh6gIXQXZpb246Ok5vdGlmaWNhdGlvbjo6VjFiBnByb3RvMw", [file_google_protobuf_timestamp]);

/**
 * 通知
 *
 * @generated from message avion.notification.v1.Notification
 */
export type Notification = Message<"avion.notification.v1.Notification"> & {
  /**
   * 通知ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * 受信ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * 通知タイプ
   *
   * @generated from field: avion.notification.v1.NotificationType type = 3;
   */
  type: NotificationType;

  /**
   * タイトル
   *
   * @generated from field: string title = 4;
   */
  title: string;

  /**
   * 本文
   *
   * @generated from field: string body = 5;
   */
  body: string;

  /**
   * 追加データ（JSON文字列形式）
   *
   * @generated from field: string data = 6;
   */
  data: string;

  /**
   * 既読フラグ
   *
   * @generated from field: bool is_read = 7;
   */
  isRead: boolean;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 8;
   */
  createdAt?: Timestamp;

  /**
   * 既読日時
   *
   * @generated from field: google.protobuf.Timestamp read_at = 9;
   */
  readAt?: Timestamp;

  /**
   * アクションURL（クリック時の遷移先）
   *
   * @generated from field: string action_url = 10;
   */
  actionUrl: string;

  /**
   * 送信者ID（フォロー、いいね等の場合）
   *
   * @generated from field: string sender_id = 11;
   */
  senderId: string;

  /**
   * 関連エンティティID（Drop ID等）
   *
   * @generated from field: string entity_id = 12;
   */
  entityId: string;
};

/**
 * Describes the message avion.notification.v1.Notification.
 * Use `create(NotificationSchema)` to create a new message.
 */
export const NotificationSchema: GenMessage<Notification> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 0);

/**
 * 通知設定
 *
 * @generated from message avion.notification.v1.NotificationPreference
 */
export type NotificationPreference = Message<"avion.notification.v1.NotificationPreference"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * メール通知有効フラグ
   *
   * @generated from field: bool email_enabled = 2;
   */
  emailEnabled: boolean;

  /**
   * プッシュ通知有効フラグ
   *
   * @generated from field: bool push_enabled = 3;
   */
  pushEnabled: boolean;

  /**
   * アプリ内通知有効フラグ
   *
   * @generated from field: bool in_app_enabled = 4;
   */
  inAppEnabled: boolean;

  /**
   * 有効な通知タイプリスト
   *
   * @generated from field: repeated avion.notification.v1.NotificationType notification_types = 5;
   */
  notificationTypes: NotificationType[];
};

/**
 * Describes the message avion.notification.v1.NotificationPreference.
 * Use `create(NotificationPreferenceSchema)` to create a new message.
 */
export const NotificationPreferenceSchema: GenMessage<NotificationPreference> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 1);

/**
 * 通知配信情報
 *
 * @generated from message avion.notification.v1.NotificationDelivery
 */
export type NotificationDelivery = Message<"avion.notification.v1.NotificationDelivery"> & {
  /**
   * 通知ID
   *
   * @generated from field: string notification_id = 1;
   */
  notificationId: string;

  /**
   * 配信チャンネル
   *
   * @generated from field: avion.notification.v1.NotificationChannel channel = 2;
   */
  channel: NotificationChannel;

  /**
   * 配信ステータス
   *
   * @generated from field: avion.notification.v1.NotificationDeliveryStatus status = 3;
   */
  status: NotificationDeliveryStatus;

  /**
   * 配信試行回数
   *
   * @generated from field: int32 attempt_count = 4;
   */
  attemptCount: number;

  /**
   * 最終配信試行日時
   *
   * @generated from field: google.protobuf.Timestamp last_attempted_at = 5;
   */
  lastAttemptedAt?: Timestamp;

  /**
   * 配信完了日時
   *
   * @generated from field: google.protobuf.Timestamp delivered_at = 6;
   */
  deliveredAt?: Timestamp;

  /**
   * エラーメッセージ（配信失敗時）
   *
   * @generated from field: string error_message = 7;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.notification.v1.NotificationDelivery.
 * Use `create(NotificationDeliverySchema)` to create a new message.
 */
export const NotificationDeliverySchema: GenMessage<NotificationDelivery> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 2);

/**
 * プッシュ通知デバイス情報
 *
 * @generated from message avion.notification.v1.PushDevice
 */
export type PushDevice = Message<"avion.notification.v1.PushDevice"> & {
  /**
   * デバイスID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * デバイストークン（FCM/APNs）
   *
   * @generated from field: string token = 3;
   */
  token: string;

  /**
   * プラットフォーム（ios, android, web）
   *
   * @generated from field: string platform = 4;
   */
  platform: string;

  /**
   * デバイス名
   *
   * @generated from field: string device_name = 5;
   */
  deviceName: string;

  /**
   * 登録日時
   *
   * @generated from field: google.protobuf.Timestamp registered_at = 6;
   */
  registeredAt?: Timestamp;

  /**
   * 最終使用日時
   *
   * @generated from field: google.protobuf.Timestamp last_used_at = 7;
   */
  lastUsedAt?: Timestamp;

  /**
   * 有効フラグ
   *
   * @generated from field: bool is_active = 8;
   */
  isActive: boolean;
};

/**
 * Describes the message avion.notification.v1.PushDevice.
 * Use `create(PushDeviceSchema)` to create a new message.
 */
export const PushDeviceSchema: GenMessage<PushDevice> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 3);

/**
 * 通知テンプレート（システム通知用）
 *
 * @generated from message avion.notification.v1.NotificationTemplate
 */
export type NotificationTemplate = Message<"avion.notification.v1.NotificationTemplate"> & {
  /**
   * テンプレートID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * テンプレート名
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * 通知タイプ
   *
   * @generated from field: avion.notification.v1.NotificationType type = 3;
   */
  type: NotificationType;

  /**
   * タイトルテンプレート
   *
   * @generated from field: string title_template = 4;
   */
  titleTemplate: string;

  /**
   * 本文テンプレート
   *
   * @generated from field: string body_template = 5;
   */
  bodyTemplate: string;

  /**
   * デフォルトアクションURLパターン
   *
   * @generated from field: string action_url_pattern = 6;
   */
  actionUrlPattern: string;

  /**
   * 作成日時
   *
   * @generated from field: google.protobuf.Timestamp created_at = 7;
   */
  createdAt?: Timestamp;

  /**
   * 更新日時
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 8;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message avion.notification.v1.NotificationTemplate.
 * Use `create(NotificationTemplateSchema)` to create a new message.
 */
export const NotificationTemplateSchema: GenMessage<NotificationTemplate> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 4);

/**
 * 未読通知カウント
 *
 * @generated from message avion.notification.v1.UnreadCount
 */
export type UnreadCount = Message<"avion.notification.v1.UnreadCount"> & {
  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * 総未読数
   *
   * @generated from field: int32 total = 2;
   */
  total: number;

  /**
   * タイプ別未読数
   *
   * @generated from field: map<string, int32> by_type = 3;
   */
  byType: { [key: string]: number };
};

/**
 * Describes the message avion.notification.v1.UnreadCount.
 * Use `create(UnreadCountSchema)` to create a new message.
 */
export const UnreadCountSchema: GenMessage<UnreadCount> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 5);

/**
 * WebSocketメッセージ
 *
 * @generated from message avion.notification.v1.WebSocketMessage
 */
export type WebSocketMessage = Message<"avion.notification.v1.WebSocketMessage"> & {
  /**
   * メッセージID（一意識別子）
   *
   * @generated from field: string message_id = 1;
   */
  messageId: string;

  /**
   * メッセージタイプ
   *
   * @generated from field: avion.notification.v1.WebSocketMessageType type = 2;
   */
  type: WebSocketMessageType;

  /**
   * タイムスタンプ
   *
   * @generated from field: google.protobuf.Timestamp timestamp = 3;
   */
  timestamp?: Timestamp;

  /**
   * ペイロード（メッセージタイプに応じた内容）
   *
   * @generated from oneof avion.notification.v1.WebSocketMessage.payload
   */
  payload: {
    /**
     * ハートビート
     *
     * @generated from field: avion.notification.v1.HeartbeatPayload heartbeat = 4;
     */
    value: HeartbeatPayload;
    case: "heartbeat";
  } | {
    /**
     * 通知
     *
     * @generated from field: avion.notification.v1.NotificationPayload notification = 5;
     */
    value: NotificationPayload;
    case: "notification";
  } | {
    /**
     * 未読数更新
     *
     * @generated from field: avion.notification.v1.UnreadUpdatePayload unread_update = 6;
     */
    value: UnreadUpdatePayload;
    case: "unreadUpdate";
  } | {
    /**
     * 接続確立
     *
     * @generated from field: avion.notification.v1.ConnectionEstablishedPayload connection_established = 7;
     */
    value: ConnectionEstablishedPayload;
    case: "connectionEstablished";
  } | {
    /**
     * エラー
     *
     * @generated from field: avion.notification.v1.ErrorPayload error = 8;
     */
    value: ErrorPayload;
    case: "error";
  } | {
    /**
     * 購読設定
     *
     * @generated from field: avion.notification.v1.SubscriptionPayload subscription = 9;
     */
    value: SubscriptionPayload;
    case: "subscription";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message avion.notification.v1.WebSocketMessage.
 * Use `create(WebSocketMessageSchema)` to create a new message.
 */
export const WebSocketMessageSchema: GenMessage<WebSocketMessage> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 6);

/**
 * ハートビートペイロード
 *
 * @generated from message avion.notification.v1.HeartbeatPayload
 */
export type HeartbeatPayload = Message<"avion.notification.v1.HeartbeatPayload"> & {
  /**
   * シーケンス番号
   *
   * @generated from field: int64 sequence = 1;
   */
  sequence: bigint;

  /**
   * クライアントタイムスタンプ
   *
   * @generated from field: google.protobuf.Timestamp client_timestamp = 2;
   */
  clientTimestamp?: Timestamp;
};

/**
 * Describes the message avion.notification.v1.HeartbeatPayload.
 * Use `create(HeartbeatPayloadSchema)` to create a new message.
 */
export const HeartbeatPayloadSchema: GenMessage<HeartbeatPayload> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 7);

/**
 * 通知ペイロード
 *
 * @generated from message avion.notification.v1.NotificationPayload
 */
export type NotificationPayload = Message<"avion.notification.v1.NotificationPayload"> & {
  /**
   * 通知本体
   *
   * @generated from field: avion.notification.v1.Notification notification = 1;
   */
  notification?: Notification;

  /**
   * イベントタイプ（new, update, delete）
   *
   * @generated from field: string event_type = 2;
   */
  eventType: string;

  /**
   * 関連エンティティ情報
   *
   * @generated from field: map<string, string> context = 3;
   */
  context: { [key: string]: string };
};

/**
 * Describes the message avion.notification.v1.NotificationPayload.
 * Use `create(NotificationPayloadSchema)` to create a new message.
 */
export const NotificationPayloadSchema: GenMessage<NotificationPayload> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 8);

/**
 * 未読数更新ペイロード
 *
 * @generated from message avion.notification.v1.UnreadUpdatePayload
 */
export type UnreadUpdatePayload = Message<"avion.notification.v1.UnreadUpdatePayload"> & {
  /**
   * 未読数情報
   *
   * @generated from field: avion.notification.v1.UnreadCount unread_count = 1;
   */
  unreadCount?: UnreadCount;

  /**
   * 更新理由（new_notification, mark_as_read, etc）
   *
   * @generated from field: string reason = 2;
   */
  reason: string;
};

/**
 * Describes the message avion.notification.v1.UnreadUpdatePayload.
 * Use `create(UnreadUpdatePayloadSchema)` to create a new message.
 */
export const UnreadUpdatePayloadSchema: GenMessage<UnreadUpdatePayload> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 9);

/**
 * 接続確立ペイロード
 *
 * @generated from message avion.notification.v1.ConnectionEstablishedPayload
 */
export type ConnectionEstablishedPayload = Message<"avion.notification.v1.ConnectionEstablishedPayload"> & {
  /**
   * セッションID
   *
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * サーバータイムスタンプ
   *
   * @generated from field: google.protobuf.Timestamp server_timestamp = 2;
   */
  serverTimestamp?: Timestamp;

  /**
   * ハートビート間隔（秒）
   *
   * @generated from field: int32 heartbeat_interval_seconds = 3;
   */
  heartbeatIntervalSeconds: number;

  /**
   * 再接続設定
   *
   * @generated from field: avion.notification.v1.ReconnectConfig reconnect_config = 4;
   */
  reconnectConfig?: ReconnectConfig;
};

/**
 * Describes the message avion.notification.v1.ConnectionEstablishedPayload.
 * Use `create(ConnectionEstablishedPayloadSchema)` to create a new message.
 */
export const ConnectionEstablishedPayloadSchema: GenMessage<ConnectionEstablishedPayload> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 10);

/**
 * エラーペイロード
 *
 * @generated from message avion.notification.v1.ErrorPayload
 */
export type ErrorPayload = Message<"avion.notification.v1.ErrorPayload"> & {
  /**
   * エラーコード
   *
   * @generated from field: string error_code = 1;
   */
  errorCode: string;

  /**
   * エラーメッセージ
   *
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;

  /**
   * リトライ可能フラグ
   *
   * @generated from field: bool retryable = 3;
   */
  retryable: boolean;

  /**
   * 推奨リトライ間隔（秒）
   *
   * @generated from field: int32 retry_after_seconds = 4;
   */
  retryAfterSeconds: number;
};

/**
 * Describes the message avion.notification.v1.ErrorPayload.
 * Use `create(ErrorPayloadSchema)` to create a new message.
 */
export const ErrorPayloadSchema: GenMessage<ErrorPayload> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 11);

/**
 * 購読設定ペイロード
 *
 * @generated from message avion.notification.v1.SubscriptionPayload
 */
export type SubscriptionPayload = Message<"avion.notification.v1.SubscriptionPayload"> & {
  /**
   * 購読する通知タイプ
   *
   * @generated from field: repeated avion.notification.v1.NotificationType notification_types = 1;
   */
  notificationTypes: NotificationType[];

  /**
   * 購読するチャンネル（特定のトピックやルーム）
   *
   * @generated from field: repeated string channels = 2;
   */
  channels: string[];

  /**
   * フィルター条件
   *
   * @generated from field: map<string, string> filters = 3;
   */
  filters: { [key: string]: string };
};

/**
 * Describes the message avion.notification.v1.SubscriptionPayload.
 * Use `create(SubscriptionPayloadSchema)` to create a new message.
 */
export const SubscriptionPayloadSchema: GenMessage<SubscriptionPayload> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 12);

/**
 * 再接続設定
 *
 * @generated from message avion.notification.v1.ReconnectConfig
 */
export type ReconnectConfig = Message<"avion.notification.v1.ReconnectConfig"> & {
  /**
   * 自動再接続有効フラグ
   *
   * @generated from field: bool auto_reconnect = 1;
   */
  autoReconnect: boolean;

  /**
   * 最大再接続試行回数
   *
   * @generated from field: int32 max_reconnect_attempts = 2;
   */
  maxReconnectAttempts: number;

  /**
   * 初期再接続間隔（ミリ秒）
   *
   * @generated from field: int32 initial_reconnect_interval_ms = 3;
   */
  initialReconnectIntervalMs: number;

  /**
   * 最大再接続間隔（ミリ秒）
   *
   * @generated from field: int32 max_reconnect_interval_ms = 4;
   */
  maxReconnectIntervalMs: number;

  /**
   * バックオフ係数
   *
   * @generated from field: float backoff_multiplier = 5;
   */
  backoffMultiplier: number;
};

/**
 * Describes the message avion.notification.v1.ReconnectConfig.
 * Use `create(ReconnectConfigSchema)` to create a new message.
 */
export const ReconnectConfigSchema: GenMessage<ReconnectConfig> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 13);

/**
 * WebSocket接続情報
 *
 * @generated from message avion.notification.v1.WebSocketConnection
 */
export type WebSocketConnection = Message<"avion.notification.v1.WebSocketConnection"> & {
  /**
   * 接続ID
   *
   * @generated from field: string connection_id = 1;
   */
  connectionId: string;

  /**
   * ユーザーID
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * セッションID
   *
   * @generated from field: string session_id = 3;
   */
  sessionId: string;

  /**
   * 接続状態
   *
   * @generated from field: avion.notification.v1.WebSocketConnectionStatus status = 4;
   */
  status: WebSocketConnectionStatus;

  /**
   * 接続開始時刻
   *
   * @generated from field: google.protobuf.Timestamp connected_at = 5;
   */
  connectedAt?: Timestamp;

  /**
   * 最終アクティビティ時刻
   *
   * @generated from field: google.protobuf.Timestamp last_activity_at = 6;
   */
  lastActivityAt?: Timestamp;

  /**
   * クライアント情報
   *
   * @generated from field: avion.notification.v1.ClientInfo client_info = 7;
   */
  clientInfo?: ClientInfo;
};

/**
 * Describes the message avion.notification.v1.WebSocketConnection.
 * Use `create(WebSocketConnectionSchema)` to create a new message.
 */
export const WebSocketConnectionSchema: GenMessage<WebSocketConnection> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 14);

/**
 * クライアント情報
 *
 * @generated from message avion.notification.v1.ClientInfo
 */
export type ClientInfo = Message<"avion.notification.v1.ClientInfo"> & {
  /**
   * ユーザーエージェント
   *
   * @generated from field: string user_agent = 1;
   */
  userAgent: string;

  /**
   * IPアドレス
   *
   * @generated from field: string ip_address = 2;
   */
  ipAddress: string;

  /**
   * プラットフォーム（web, ios, android）
   *
   * @generated from field: string platform = 3;
   */
  platform: string;

  /**
   * アプリバージョン
   *
   * @generated from field: string app_version = 4;
   */
  appVersion: string;

  /**
   * デバイスID
   *
   * @generated from field: string device_id = 5;
   */
  deviceId: string;
};

/**
 * Describes the message avion.notification.v1.ClientInfo.
 * Use `create(ClientInfoSchema)` to create a new message.
 */
export const ClientInfoSchema: GenMessage<ClientInfo> = /*@__PURE__*/
  messageDesc(file_avion_notification_v1_notification, 15);

/**
 * 通知タイプ
 *
 * @generated from enum avion.notification.v1.NotificationType
 */
export enum NotificationType {
  /**
   * 未指定
   *
   * @generated from enum value: NOTIFICATION_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * いいね
   *
   * @generated from enum value: NOTIFICATION_TYPE_LIKE = 1;
   */
  LIKE = 1,

  /**
   * リドロップ
   *
   * @generated from enum value: NOTIFICATION_TYPE_REDROP = 2;
   */
  REDROP = 2,

  /**
   * フォロー
   *
   * @generated from enum value: NOTIFICATION_TYPE_FOLLOW = 3;
   */
  FOLLOW = 3,

  /**
   * メンション
   *
   * @generated from enum value: NOTIFICATION_TYPE_MENTION = 4;
   */
  MENTION = 4,

  /**
   * 返信
   *
   * @generated from enum value: NOTIFICATION_TYPE_REPLY = 5;
   */
  REPLY = 5,

  /**
   * 引用
   *
   * @generated from enum value: NOTIFICATION_TYPE_QUOTE = 6;
   */
  QUOTE = 6,

  /**
   * システム通知
   *
   * @generated from enum value: NOTIFICATION_TYPE_SYSTEM = 7;
   */
  SYSTEM = 7,
}

/**
 * Describes the enum avion.notification.v1.NotificationType.
 */
export const NotificationTypeSchema: GenEnum<NotificationType> = /*@__PURE__*/
  enumDesc(file_avion_notification_v1_notification, 0);

/**
 * 通知配信ステータス
 *
 * @generated from enum avion.notification.v1.NotificationDeliveryStatus
 */
export enum NotificationDeliveryStatus {
  /**
   * 未指定
   *
   * @generated from enum value: NOTIFICATION_DELIVERY_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 配信待ち
   *
   * @generated from enum value: NOTIFICATION_DELIVERY_STATUS_PENDING = 1;
   */
  PENDING = 1,

  /**
   * 送信済み
   *
   * @generated from enum value: NOTIFICATION_DELIVERY_STATUS_SENT = 2;
   */
  SENT = 2,

  /**
   * 配信済み
   *
   * @generated from enum value: NOTIFICATION_DELIVERY_STATUS_DELIVERED = 3;
   */
  DELIVERED = 3,

  /**
   * 配信失敗
   *
   * @generated from enum value: NOTIFICATION_DELIVERY_STATUS_FAILED = 4;
   */
  FAILED = 4,
}

/**
 * Describes the enum avion.notification.v1.NotificationDeliveryStatus.
 */
export const NotificationDeliveryStatusSchema: GenEnum<NotificationDeliveryStatus> = /*@__PURE__*/
  enumDesc(file_avion_notification_v1_notification, 1);

/**
 * 通知チャンネル
 *
 * @generated from enum avion.notification.v1.NotificationChannel
 */
export enum NotificationChannel {
  /**
   * 未指定
   *
   * @generated from enum value: NOTIFICATION_CHANNEL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * メール
   *
   * @generated from enum value: NOTIFICATION_CHANNEL_EMAIL = 1;
   */
  EMAIL = 1,

  /**
   * プッシュ通知
   *
   * @generated from enum value: NOTIFICATION_CHANNEL_PUSH = 2;
   */
  PUSH = 2,

  /**
   * アプリ内通知
   *
   * @generated from enum value: NOTIFICATION_CHANNEL_IN_APP = 3;
   */
  IN_APP = 3,

  /**
   * Server-Sent Events
   *
   * @generated from enum value: NOTIFICATION_CHANNEL_SSE = 4;
   */
  SSE = 4,
}

/**
 * Describes the enum avion.notification.v1.NotificationChannel.
 */
export const NotificationChannelSchema: GenEnum<NotificationChannel> = /*@__PURE__*/
  enumDesc(file_avion_notification_v1_notification, 2);

/**
 * WebSocket接続状態
 *
 * @generated from enum avion.notification.v1.WebSocketConnectionStatus
 */
export enum WebSocketConnectionStatus {
  /**
   * 未指定
   *
   * @generated from enum value: WEB_SOCKET_CONNECTION_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 接続中
   *
   * @generated from enum value: WEB_SOCKET_CONNECTION_STATUS_CONNECTING = 1;
   */
  CONNECTING = 1,

  /**
   * 接続済み
   *
   * @generated from enum value: WEB_SOCKET_CONNECTION_STATUS_CONNECTED = 2;
   */
  CONNECTED = 2,

  /**
   * 切断中
   *
   * @generated from enum value: WEB_SOCKET_CONNECTION_STATUS_DISCONNECTING = 3;
   */
  DISCONNECTING = 3,

  /**
   * 切断済み
   *
   * @generated from enum value: WEB_SOCKET_CONNECTION_STATUS_DISCONNECTED = 4;
   */
  DISCONNECTED = 4,

  /**
   * 再接続中
   *
   * @generated from enum value: WEB_SOCKET_CONNECTION_STATUS_RECONNECTING = 5;
   */
  RECONNECTING = 5,
}

/**
 * Describes the enum avion.notification.v1.WebSocketConnectionStatus.
 */
export const WebSocketConnectionStatusSchema: GenEnum<WebSocketConnectionStatus> = /*@__PURE__*/
  enumDesc(file_avion_notification_v1_notification, 3);

/**
 * WebSocketメッセージタイプ
 *
 * @generated from enum avion.notification.v1.WebSocketMessageType
 */
export enum WebSocketMessageType {
  /**
   * 未指定
   *
   * @generated from enum value: WEB_SOCKET_MESSAGE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * ハートビート（ping）
   *
   * @generated from enum value: WEB_SOCKET_MESSAGE_TYPE_HEARTBEAT = 1;
   */
  HEARTBEAT = 1,

  /**
   * ハートビート応答（pong）
   *
   * @generated from enum value: WEB_SOCKET_MESSAGE_TYPE_HEARTBEAT_ACK = 2;
   */
  HEARTBEAT_ACK = 2,

  /**
   * 通知メッセージ
   *
   * @generated from enum value: WEB_SOCKET_MESSAGE_TYPE_NOTIFICATION = 3;
   */
  NOTIFICATION = 3,

  /**
   * 未読数更新
   *
   * @generated from enum value: WEB_SOCKET_MESSAGE_TYPE_UNREAD_UPDATE = 4;
   */
  UNREAD_UPDATE = 4,

  /**
   * 接続確立
   *
   * @generated from enum value: WEB_SOCKET_MESSAGE_TYPE_CONNECTION_ESTABLISHED = 5;
   */
  CONNECTION_ESTABLISHED = 5,

  /**
   * エラー
   *
   * @generated from enum value: WEB_SOCKET_MESSAGE_TYPE_ERROR = 6;
   */
  ERROR = 6,

  /**
   * 購読設定
   *
   * @generated from enum value: WEB_SOCKET_MESSAGE_TYPE_SUBSCRIBE = 7;
   */
  SUBSCRIBE = 7,

  /**
   * 購読解除
   *
   * @generated from enum value: WEB_SOCKET_MESSAGE_TYPE_UNSUBSCRIBE = 8;
   */
  UNSUBSCRIBE = 8,
}

/**
 * Describes the enum avion.notification.v1.WebSocketMessageType.
 */
export const WebSocketMessageTypeSchema: GenEnum<WebSocketMessageType> = /*@__PURE__*/
  enumDesc(file_avion_notification_v1_notification, 4);

