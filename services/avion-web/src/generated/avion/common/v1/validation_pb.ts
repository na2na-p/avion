// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file avion/common/v1/validation.proto (package avion.common.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenExtension, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, extDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { FieldOptions } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file avion/common/v1/validation.proto.
 */
export const file_avion_common_v1_validation: GenFile = /*@__PURE__*/
  fileDesc("CiBhdmlvbi9jb21tb24vdjEvdmFsaWRhdGlvbi5wcm90bxIPYXZpb24uY29tbW9uLnYxIrICCg9GaWVsZFZhbGlkYXRpb24SEAoIcmVxdWlyZWQYASABKAgSLAoGc3RyaW5nGAIgASgLMhwuYXZpb24uY29tbW9uLnYxLlN0cmluZ1J1bGVzEi4KB251bWVyaWMYAyABKAsyHS5hdmlvbi5jb21tb24udjEuTnVtZXJpY1J1bGVzEigKBGxpc3QYBCABKAsyGi5hdmlvbi5jb21tb24udjEuTGlzdFJ1bGVzEiYKA21hcBgFIAEoCzIZLmF2aW9uLmNvbW1vbi52MS5NYXBSdWxlcxIyCgl0aW1lc3RhbXAYBiABKAsyHy5hdmlvbi5jb21tb24udjEuVGltZXN0YW1wUnVsZXMSEgoKZXhwcmVzc2lvbhgHIAEoCRIVCg1lcnJvcl9tZXNzYWdlGAggASgJIrQBCgtTdHJpbmdSdWxlcxISCgptaW5fbGVuZ3RoGAEgASgNEhIKCm1heF9sZW5ndGgYAiABKA0SDwoHcGF0dGVybhgDIAEoCRITCgthbGxvd19lbXB0eRgEIAEoCBIMCgR0cmltGAUgASgIEgoKAmluGAYgAygJEg4KBm5vdF9pbhgHIAMoCRItCgZmb3JtYXQYCCABKA4yHS5hdmlvbi5jb21tb24udjEuU3RyaW5nRm9ybWF0IroBCgxOdW1lcmljUnVsZXMSCwoDbWluGAEgASgBEgsKA21heBgCIAEoARIUCgxncmVhdGVyX3RoYW4YAyABKAESEQoJbGVzc190aGFuGAQgASgBEgoKAmluGAUgAygBEg4KBm5vdF9pbhgGIAMoARITCgttdWx0aXBsZV9vZhgHIAEoARIQCghwb3NpdGl2ZRgIIAEoCBIQCghuZWdhdGl2ZRgJIAEoCBISCgphbGxvd196ZXJvGAogASgIInIKCUxpc3RSdWxlcxIRCgltaW5faXRlbXMYASABKA0SEQoJbWF4X2l0ZW1zGAIgASgNEg4KBnVuaXF1ZRgDIAEoCBIvCgVpdGVtcxgEIAEoCzIgLmF2aW9uLmNvbW1vbi52MS5GaWVsZFZhbGlkYXRpb24ilgEKCE1hcFJ1bGVzEhMKC21pbl9lbnRyaWVzGAEgASgNEhMKC21heF9lbnRyaWVzGAIgASgNEi4KBGtleXMYAyABKAsyIC5hdmlvbi5jb21tb24udjEuRmllbGRWYWxpZGF0aW9uEjAKBnZhbHVlcxgEIAEoCzIgLmF2aW9uLmNvbW1vbi52MS5GaWVsZFZhbGlkYXRpb24iewoOVGltZXN0YW1wUnVsZXMSCwoDbWluGAEgASgJEgsKA21heBgCIAEoCRIOCgZmdXR1cmUYAyABKAgSDAoEcGFzdBgEIAEoCBIWCg53aXRoaW5fc2Vjb25kcxgFIAEoAxIZChF2YWxpZGF0ZV90aW1lem9uZRgGIAEoCCJTChBWYWxpZGF0aW9uUmVzdWx0Eg0KBXZhbGlkGAEgASgIEjAKBmVycm9ycxgCIAMoCzIgLmF2aW9uLmNvbW1vbi52MS5WYWxpZGF0aW9uRXJyb3IiZwoPVmFsaWRhdGlvbkVycm9yEg0KBWZpZWxkGAEgASgJEgwKBHJ1bGUYAiABKAkSDwoHbWVzc2FnZRgDIAEoCRIUCgxhY3R1YWxfdmFsdWUYBCABKAkSEAoIZXhwZWN0ZWQYBSABKAkiSgoMSWRWYWxpZGF0aW9uEikKBmZvcm1hdBgBIAEoDjIZLmF2aW9uLmNvbW1vbi52MS5JZEZvcm1hdBIPCgdwYXR0ZXJuGAIgASgJIoYBChJVc2VybmFtZVZhbGlkYXRpb24SEgoKbWluX2xlbmd0aBgBIAEoDRISCgptYXhfbGVuZ3RoGAIgASgNEg8KB3BhdHRlcm4YAyABKAkSFgoOcmVzZXJ2ZWRfd29yZHMYBCADKAkSHwoXY2FzZV9pbnNlbnNpdGl2ZV91bmlxdWUYBSABKAgi2gEKElBhc3N3b3JkVmFsaWRhdGlvbhISCgptaW5fbGVuZ3RoGAEgASgNEhIKCm1heF9sZW5ndGgYAiABKA0SGQoRcmVxdWlyZV91cHBlcmNhc2UYAyABKAgSGQoRcmVxdWlyZV9sb3dlcmNhc2UYBCABKAgSFQoNcmVxdWlyZV9kaWdpdBgFIAEoCBIXCg9yZXF1aXJlX3NwZWNpYWwYBiABKAgSGgoSZm9yYmlkZGVuX3BhdHRlcm5zGAcgAygJEhoKEm1pbl9zdHJlbmd0aF9zY29yZRgIIAEoDSLcAQoPRW1haWxWYWxpZGF0aW9uEhIKCm1heF9sZW5ndGgYASABKA0SFwoPYWxsb3dlZF9kb21haW5zGAIgAygJEhcKD2Jsb2NrZWRfZG9tYWlucxgDIAMoCRIdChVhbGxvd19wbHVzX2FkZHJlc3NpbmcYBCABKAgSHwoXY2FzZV9pbnNlbnNpdGl2ZV91bmlxdWUYBSABKAgSQwoSdmVyaWZpY2F0aW9uX2xldmVsGAYgASgOMicuYXZpb24uY29tbW9uLnYxLkVtYWlsVmVyaWZpY2F0aW9uTGV2ZWwikAIKEUNvbnRlbnRWYWxpZGF0aW9uEhIKCm1pbl9sZW5ndGgYASABKA0SEgoKbWF4X2xlbmd0aBgCIAEoDRIbChNhbGxvd2VkX21lZGlhX3R5cGVzGAMgAygJEhYKDm1heF9tZWRpYV9zaXplGAQgASgDEhcKD21heF9tZWRpYV9jb3VudBgFIAEoDRIWCg5hdXRvX2xpbmtfdXJscxgGIAEoCBIZChF2YWxpZGF0ZV9tZW50aW9ucxgHIAEoCBIZChF2YWxpZGF0ZV9oYXNodGFncxgIIAEoCBIfChdmaWx0ZXJfcHJvaGliaXRlZF93b3JkcxgJIAEoCBIWCg5zcGFtX2RldGVjdGlvbhgKIAEoCCrzAgoMU3RyaW5nRm9ybWF0Eh0KGVNUUklOR19GT1JNQVRfVU5TUEVDSUZJRUQQABIXChNTVFJJTkdfRk9STUFUX0VNQUlMEAESFQoRU1RSSU5HX0ZPUk1BVF9VUkwQAhIWChJTVFJJTkdfRk9STUFUX1VVSUQQAxIWChJTVFJJTkdfRk9STUFUX0lQVjQQBBIWChJTVFJJTkdfRk9STUFUX0lQVjYQBRIXChNTVFJJTkdfRk9STUFUX1BIT05FEAYSFgoSU1RSSU5HX0ZPUk1BVF9EQVRFEAcSFgoSU1RSSU5HX0ZPUk1BVF9USU1FEAgSGgoWU1RSSU5HX0ZPUk1BVF9EQVRFVElNRRAJEhgKFFNUUklOR19GT1JNQVRfQkFTRTY0EAoSFQoRU1RSSU5HX0ZPUk1BVF9KV1QQCxIaChZTVFJJTkdfRk9STUFUX1VTRVJOQU1FEAwSGgoWU1RSSU5HX0ZPUk1BVF9QQVNTV09SRBANKpMBCghJZEZvcm1hdBIZChVJRF9GT1JNQVRfVU5TUEVDSUZJRUQQABISCg5JRF9GT1JNQVRfVVVJRBABEhIKDklEX0ZPUk1BVF9VTElEEAISFwoTSURfRk9STUFUX1NOT1dGTEFLRRADEhUKEUlEX0ZPUk1BVF9OVU1FUklDEAQSFAoQSURfRk9STUFUX0NVU1RPTRAFKqwBChZFbWFpbFZlcmlmaWNhdGlvbkxldmVsEigKJEVNQUlMX1ZFUklGSUNBVElPTl9MRVZFTF9VTlNQRUNJRklFRBAAEiMKH0VNQUlMX1ZFUklGSUNBVElPTl9MRVZFTF9TWU5UQVgQARIgChxFTUFJTF9WRVJJRklDQVRJT05fTEVWRUxfRE5TEAISIQodRU1BSUxfVkVSSUZJQ0FUSU9OX0xFVkVMX1NNVFAQAzpsChBmaWVsZF92YWxpZGF0aW9uEh0uZ29vZ2xlLnByb3RvYnVmLkZpZWxkT3B0aW9ucxjQhgMgASgLMiAuYXZpb24uY29tbW9uLnYxLkZpZWxkVmFsaWRhdGlvblIPZmllbGRWYWxpZGF0aW9uQr0BChNjb20uYXZpb24uY29tbW9uLnYxQg9WYWxpZGF0aW9uUHJvdG9QAVo3Z2l0aHViLmNvbS9uYTJuYS1wL2F2aW9uL3Byb3RvL2F2aW9uL2NvbW1vbi92MTtjb21tb252MaICA0FDWKoCD0F2aW9uLkNvbW1vbi5WMcoCD0F2aW9uXENvbW1vblxWMeICG0F2aW9uXENvbW1vblxWMVxHUEJNZXRhZGF0YeoCEUF2aW9uOjpDb21tb246OlYxYgZwcm90bzM", [file_google_protobuf_descriptor]);

/**
 * フィールドバリデーションルール定義
 *
 * @generated from message avion.common.v1.FieldValidation
 */
export type FieldValidation = Message<"avion.common.v1.FieldValidation"> & {
  /**
   * 必須フィールドかどうか
   *
   * @generated from field: bool required = 1;
   */
  required: boolean;

  /**
   * 文字列バリデーション
   *
   * @generated from field: avion.common.v1.StringRules string = 2;
   */
  string?: StringRules;

  /**
   * 数値バリデーション
   *
   * @generated from field: avion.common.v1.NumericRules numeric = 3;
   */
  numeric?: NumericRules;

  /**
   * リストバリデーション
   *
   * @generated from field: avion.common.v1.ListRules list = 4;
   */
  list?: ListRules;

  /**
   * マップバリデーション
   *
   * @generated from field: avion.common.v1.MapRules map = 5;
   */
  map?: MapRules;

  /**
   * 日時バリデーション
   *
   * @generated from field: avion.common.v1.TimestampRules timestamp = 6;
   */
  timestamp?: TimestampRules;

  /**
   * カスタムバリデーション式（CEL式）
   *
   * @generated from field: string expression = 7;
   */
  expression: string;

  /**
   * エラーメッセージのカスタマイズ
   *
   * @generated from field: string error_message = 8;
   */
  errorMessage: string;
};

/**
 * Describes the message avion.common.v1.FieldValidation.
 * Use `create(FieldValidationSchema)` to create a new message.
 */
export const FieldValidationSchema: GenMessage<FieldValidation> = /*@__PURE__*/
  messageDesc(file_avion_common_v1_validation, 0);

/**
 * 文字列バリデーションルール
 *
 * @generated from message avion.common.v1.StringRules
 */
export type StringRules = Message<"avion.common.v1.StringRules"> & {
  /**
   * 最小文字数
   *
   * @generated from field: uint32 min_length = 1;
   */
  minLength: number;

  /**
   * 最大文字数
   *
   * @generated from field: uint32 max_length = 2;
   */
  maxLength: number;

  /**
   * 正規表現パターン
   *
   * @generated from field: string pattern = 3;
   */
  pattern: string;

  /**
   * 空文字列を許可するか
   *
   * @generated from field: bool allow_empty = 4;
   */
  allowEmpty: boolean;

  /**
   * 前後の空白を自動的にトリムするか
   *
   * @generated from field: bool trim = 5;
   */
  trim: boolean;

  /**
   * 許可される値のリスト（enum的な使い方）
   *
   * @generated from field: repeated string in = 6;
   */
  in: string[];

  /**
   * 禁止される値のリスト
   *
   * @generated from field: repeated string not_in = 7;
   */
  notIn: string[];

  /**
   * 事前定義されたフォーマット
   *
   * @generated from field: avion.common.v1.StringFormat format = 8;
   */
  format: StringFormat;
};

/**
 * Describes the message avion.common.v1.StringRules.
 * Use `create(StringRulesSchema)` to create a new message.
 */
export const StringRulesSchema: GenMessage<StringRules> = /*@__PURE__*/
  messageDesc(file_avion_common_v1_validation, 1);

/**
 * 数値バリデーションルール
 *
 * @generated from message avion.common.v1.NumericRules
 */
export type NumericRules = Message<"avion.common.v1.NumericRules"> & {
  /**
   * 最小値（以上）
   *
   * @generated from field: double min = 1;
   */
  min: number;

  /**
   * 最大値（以下）
   *
   * @generated from field: double max = 2;
   */
  max: number;

  /**
   * より大きい（超える）
   *
   * @generated from field: double greater_than = 3;
   */
  greaterThan: number;

  /**
   * より小さい（未満）
   *
   * @generated from field: double less_than = 4;
   */
  lessThan: number;

  /**
   * 許可される値のリスト
   *
   * @generated from field: repeated double in = 5;
   */
  in: number[];

  /**
   * 禁止される値のリスト
   *
   * @generated from field: repeated double not_in = 6;
   */
  notIn: number[];

  /**
   * 倍数制約（例: 10の倍数のみ許可）
   *
   * @generated from field: double multiple_of = 7;
   */
  multipleOf: number;

  /**
   * 正の数のみ許可
   *
   * @generated from field: bool positive = 8;
   */
  positive: boolean;

  /**
   * 負の数のみ許可
   *
   * @generated from field: bool negative = 9;
   */
  negative: boolean;

  /**
   * ゼロを許可するか
   *
   * @generated from field: bool allow_zero = 10;
   */
  allowZero: boolean;
};

/**
 * Describes the message avion.common.v1.NumericRules.
 * Use `create(NumericRulesSchema)` to create a new message.
 */
export const NumericRulesSchema: GenMessage<NumericRules> = /*@__PURE__*/
  messageDesc(file_avion_common_v1_validation, 2);

/**
 * リストバリデーションルール
 *
 * @generated from message avion.common.v1.ListRules
 */
export type ListRules = Message<"avion.common.v1.ListRules"> & {
  /**
   * 最小要素数
   *
   * @generated from field: uint32 min_items = 1;
   */
  minItems: number;

  /**
   * 最大要素数
   *
   * @generated from field: uint32 max_items = 2;
   */
  maxItems: number;

  /**
   * 重複を許可しないか
   *
   * @generated from field: bool unique = 3;
   */
  unique: boolean;

  /**
   * 各要素に適用するバリデーションルール
   *
   * @generated from field: avion.common.v1.FieldValidation items = 4;
   */
  items?: FieldValidation;
};

/**
 * Describes the message avion.common.v1.ListRules.
 * Use `create(ListRulesSchema)` to create a new message.
 */
export const ListRulesSchema: GenMessage<ListRules> = /*@__PURE__*/
  messageDesc(file_avion_common_v1_validation, 3);

/**
 * マップバリデーションルール
 *
 * @generated from message avion.common.v1.MapRules
 */
export type MapRules = Message<"avion.common.v1.MapRules"> & {
  /**
   * 最小エントリ数
   *
   * @generated from field: uint32 min_entries = 1;
   */
  minEntries: number;

  /**
   * 最大エントリ数
   *
   * @generated from field: uint32 max_entries = 2;
   */
  maxEntries: number;

  /**
   * キーに適用するバリデーションルール
   *
   * @generated from field: avion.common.v1.FieldValidation keys = 3;
   */
  keys?: FieldValidation;

  /**
   * 値に適用するバリデーションルール
   *
   * @generated from field: avion.common.v1.FieldValidation values = 4;
   */
  values?: FieldValidation;
};

/**
 * Describes the message avion.common.v1.MapRules.
 * Use `create(MapRulesSchema)` to create a new message.
 */
export const MapRulesSchema: GenMessage<MapRules> = /*@__PURE__*/
  messageDesc(file_avion_common_v1_validation, 4);

/**
 * タイムスタンプバリデーションルール
 *
 * @generated from message avion.common.v1.TimestampRules
 */
export type TimestampRules = Message<"avion.common.v1.TimestampRules"> & {
  /**
   * 最小日時（以降）
   *
   * @generated from field: string min = 1;
   */
  min: string;

  /**
   * 最大日時（以前）
   *
   * @generated from field: string max = 2;
   */
  max: string;

  /**
   * 現在時刻より後である必要があるか
   *
   * @generated from field: bool future = 3;
   */
  future: boolean;

  /**
   * 現在時刻より前である必要があるか
   *
   * @generated from field: bool past = 4;
   */
  past: boolean;

  /**
   * 現在時刻からの最大期間（秒）
   *
   * @generated from field: int64 within_seconds = 5;
   */
  withinSeconds: bigint;

  /**
   * タイムゾーンの検証
   *
   * @generated from field: bool validate_timezone = 6;
   */
  validateTimezone: boolean;
};

/**
 * Describes the message avion.common.v1.TimestampRules.
 * Use `create(TimestampRulesSchema)` to create a new message.
 */
export const TimestampRulesSchema: GenMessage<TimestampRules> = /*@__PURE__*/
  messageDesc(file_avion_common_v1_validation, 5);

/**
 * バリデーション結果
 *
 * @generated from message avion.common.v1.ValidationResult
 */
export type ValidationResult = Message<"avion.common.v1.ValidationResult"> & {
  /**
   * バリデーションが成功したか
   *
   * @generated from field: bool valid = 1;
   */
  valid: boolean;

  /**
   * バリデーションエラーのリスト
   *
   * @generated from field: repeated avion.common.v1.ValidationError errors = 2;
   */
  errors: ValidationError[];
};

/**
 * Describes the message avion.common.v1.ValidationResult.
 * Use `create(ValidationResultSchema)` to create a new message.
 */
export const ValidationResultSchema: GenMessage<ValidationResult> = /*@__PURE__*/
  messageDesc(file_avion_common_v1_validation, 6);

/**
 * バリデーションエラー詳細
 *
 * @generated from message avion.common.v1.ValidationError
 */
export type ValidationError = Message<"avion.common.v1.ValidationError"> & {
  /**
   * エラーが発生したフィールドパス
   *
   * @generated from field: string field = 1;
   */
  field: string;

  /**
   * バリデーションルール名
   *
   * @generated from field: string rule = 2;
   */
  rule: string;

  /**
   * エラーメッセージ
   *
   * @generated from field: string message = 3;
   */
  message: string;

  /**
   * 実際の値（デバッグ用）
   *
   * @generated from field: string actual_value = 4;
   */
  actualValue: string;

  /**
   * 期待される値や条件（デバッグ用）
   *
   * @generated from field: string expected = 5;
   */
  expected: string;
};

/**
 * Describes the message avion.common.v1.ValidationError.
 * Use `create(ValidationErrorSchema)` to create a new message.
 */
export const ValidationErrorSchema: GenMessage<ValidationError> = /*@__PURE__*/
  messageDesc(file_avion_common_v1_validation, 7);

/**
 * IDフィールドのバリデーション
 *
 * @generated from message avion.common.v1.IdValidation
 */
export type IdValidation = Message<"avion.common.v1.IdValidation"> & {
  /**
   * ID形式
   *
   * @generated from field: avion.common.v1.IdFormat format = 1;
   */
  format: IdFormat;

  /**
   * カスタムパターン（formatがCUSTOMの場合）
   *
   * @generated from field: string pattern = 2;
   */
  pattern: string;
};

/**
 * Describes the message avion.common.v1.IdValidation.
 * Use `create(IdValidationSchema)` to create a new message.
 */
export const IdValidationSchema: GenMessage<IdValidation> = /*@__PURE__*/
  messageDesc(file_avion_common_v1_validation, 8);

/**
 * ユーザー名のバリデーション設定
 *
 * @generated from message avion.common.v1.UsernameValidation
 */
export type UsernameValidation = Message<"avion.common.v1.UsernameValidation"> & {
  /**
   * 最小文字数（デフォルト: 3）
   *
   * @generated from field: uint32 min_length = 1;
   */
  minLength: number;

  /**
   * 最大文字数（デフォルト: 30）
   *
   * @generated from field: uint32 max_length = 2;
   */
  maxLength: number;

  /**
   * 許可する文字パターン（デフォルト: ^[a-zA-Z0-9_-]+$）
   *
   * @generated from field: string pattern = 3;
   */
  pattern: string;

  /**
   * 予約語のリスト（これらは使用不可）
   *
   * @generated from field: repeated string reserved_words = 4;
   */
  reservedWords: string[];

  /**
   * 大文字小文字を区別しない重複チェック
   *
   * @generated from field: bool case_insensitive_unique = 5;
   */
  caseInsensitiveUnique: boolean;
};

/**
 * Describes the message avion.common.v1.UsernameValidation.
 * Use `create(UsernameValidationSchema)` to create a new message.
 */
export const UsernameValidationSchema: GenMessage<UsernameValidation> = /*@__PURE__*/
  messageDesc(file_avion_common_v1_validation, 9);

/**
 * パスワードのバリデーション設定
 *
 * @generated from message avion.common.v1.PasswordValidation
 */
export type PasswordValidation = Message<"avion.common.v1.PasswordValidation"> & {
  /**
   * 最小文字数（デフォルト: 8）
   *
   * @generated from field: uint32 min_length = 1;
   */
  minLength: number;

  /**
   * 最大文字数（デフォルト: 128）
   *
   * @generated from field: uint32 max_length = 2;
   */
  maxLength: number;

  /**
   * 大文字を含む必要があるか
   *
   * @generated from field: bool require_uppercase = 3;
   */
  requireUppercase: boolean;

  /**
   * 小文字を含む必要があるか
   *
   * @generated from field: bool require_lowercase = 4;
   */
  requireLowercase: boolean;

  /**
   * 数字を含む必要があるか
   *
   * @generated from field: bool require_digit = 5;
   */
  requireDigit: boolean;

  /**
   * 特殊文字を含む必要があるか
   *
   * @generated from field: bool require_special = 6;
   */
  requireSpecial: boolean;

  /**
   * 禁止パターンのリスト（例: 連続する文字）
   *
   * @generated from field: repeated string forbidden_patterns = 7;
   */
  forbiddenPatterns: string[];

  /**
   * パスワード強度の最小スコア（0-100）
   *
   * @generated from field: uint32 min_strength_score = 8;
   */
  minStrengthScore: number;
};

/**
 * Describes the message avion.common.v1.PasswordValidation.
 * Use `create(PasswordValidationSchema)` to create a new message.
 */
export const PasswordValidationSchema: GenMessage<PasswordValidation> = /*@__PURE__*/
  messageDesc(file_avion_common_v1_validation, 10);

/**
 * メールアドレスのバリデーション設定
 *
 * @generated from message avion.common.v1.EmailValidation
 */
export type EmailValidation = Message<"avion.common.v1.EmailValidation"> & {
  /**
   * 最大文字数（デフォルト: 254）
   *
   * @generated from field: uint32 max_length = 1;
   */
  maxLength: number;

  /**
   * 許可するドメインのリスト（空の場合は全て許可）
   *
   * @generated from field: repeated string allowed_domains = 2;
   */
  allowedDomains: string[];

  /**
   * 禁止するドメインのリスト
   *
   * @generated from field: repeated string blocked_domains = 3;
   */
  blockedDomains: string[];

  /**
   * プラスアドレス（user+tag@example.com）を許可するか
   *
   * @generated from field: bool allow_plus_addressing = 4;
   */
  allowPlusAddressing: boolean;

  /**
   * 大文字小文字を区別しない重複チェック
   *
   * @generated from field: bool case_insensitive_unique = 5;
   */
  caseInsensitiveUnique: boolean;

  /**
   * メールアドレスの検証レベル
   *
   * @generated from field: avion.common.v1.EmailVerificationLevel verification_level = 6;
   */
  verificationLevel: EmailVerificationLevel;
};

/**
 * Describes the message avion.common.v1.EmailValidation.
 * Use `create(EmailValidationSchema)` to create a new message.
 */
export const EmailValidationSchema: GenMessage<EmailValidation> = /*@__PURE__*/
  messageDesc(file_avion_common_v1_validation, 11);

/**
 * コンテンツのバリデーション設定（Drop、コメントなど）
 *
 * @generated from message avion.common.v1.ContentValidation
 */
export type ContentValidation = Message<"avion.common.v1.ContentValidation"> & {
  /**
   * 最小文字数
   *
   * @generated from field: uint32 min_length = 1;
   */
  minLength: number;

  /**
   * 最大文字数
   *
   * @generated from field: uint32 max_length = 2;
   */
  maxLength: number;

  /**
   * 許可するメディアタイプ
   *
   * @generated from field: repeated string allowed_media_types = 3;
   */
  allowedMediaTypes: string[];

  /**
   * 最大メディアファイルサイズ（バイト）
   *
   * @generated from field: int64 max_media_size = 4;
   */
  maxMediaSize: bigint;

  /**
   * 最大メディア数
   *
   * @generated from field: uint32 max_media_count = 5;
   */
  maxMediaCount: number;

  /**
   * URLの自動リンク化
   *
   * @generated from field: bool auto_link_urls = 6;
   */
  autoLinkUrls: boolean;

  /**
   * メンションの検証
   *
   * @generated from field: bool validate_mentions = 7;
   */
  validateMentions: boolean;

  /**
   * ハッシュタグの検証
   *
   * @generated from field: bool validate_hashtags = 8;
   */
  validateHashtags: boolean;

  /**
   * 禁止語句のフィルタリング
   *
   * @generated from field: bool filter_prohibited_words = 9;
   */
  filterProhibitedWords: boolean;

  /**
   * スパム検出
   *
   * @generated from field: bool spam_detection = 10;
   */
  spamDetection: boolean;
};

/**
 * Describes the message avion.common.v1.ContentValidation.
 * Use `create(ContentValidationSchema)` to create a new message.
 */
export const ContentValidationSchema: GenMessage<ContentValidation> = /*@__PURE__*/
  messageDesc(file_avion_common_v1_validation, 12);

/**
 * 文字列フォーマットの事前定義
 *
 * @generated from enum avion.common.v1.StringFormat
 */
export enum StringFormat {
  /**
   * 未指定
   *
   * @generated from enum value: STRING_FORMAT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * メールアドレス
   *
   * @generated from enum value: STRING_FORMAT_EMAIL = 1;
   */
  EMAIL = 1,

  /**
   * URL
   *
   * @generated from enum value: STRING_FORMAT_URL = 2;
   */
  URL = 2,

  /**
   * UUID
   *
   * @generated from enum value: STRING_FORMAT_UUID = 3;
   */
  UUID = 3,

  /**
   * IPv4アドレス
   *
   * @generated from enum value: STRING_FORMAT_IPV4 = 4;
   */
  IPV4 = 4,

  /**
   * IPv6アドレス
   *
   * @generated from enum value: STRING_FORMAT_IPV6 = 5;
   */
  IPV6 = 5,

  /**
   * 電話番号（国際形式）
   *
   * @generated from enum value: STRING_FORMAT_PHONE = 6;
   */
  PHONE = 6,

  /**
   * 日付（YYYY-MM-DD）
   *
   * @generated from enum value: STRING_FORMAT_DATE = 7;
   */
  DATE = 7,

  /**
   * 時刻（HH:MM:SS）
   *
   * @generated from enum value: STRING_FORMAT_TIME = 8;
   */
  TIME = 8,

  /**
   * 日時（RFC3339）
   *
   * @generated from enum value: STRING_FORMAT_DATETIME = 9;
   */
  DATETIME = 9,

  /**
   * Base64エンコード
   *
   * @generated from enum value: STRING_FORMAT_BASE64 = 10;
   */
  BASE64 = 10,

  /**
   * JWT トークン
   *
   * @generated from enum value: STRING_FORMAT_JWT = 11;
   */
  JWT = 11,

  /**
   * ユーザー名（英数字、アンダースコア、ハイフン）
   *
   * @generated from enum value: STRING_FORMAT_USERNAME = 12;
   */
  USERNAME = 12,

  /**
   * パスワード（セキュリティ要件を満たす）
   *
   * @generated from enum value: STRING_FORMAT_PASSWORD = 13;
   */
  PASSWORD = 13,
}

/**
 * Describes the enum avion.common.v1.StringFormat.
 */
export const StringFormatSchema: GenEnum<StringFormat> = /*@__PURE__*/
  enumDesc(file_avion_common_v1_validation, 0);

/**
 * ID形式の定義
 *
 * @generated from enum avion.common.v1.IdFormat
 */
export enum IdFormat {
  /**
   * 未指定
   *
   * @generated from enum value: ID_FORMAT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * UUID v4
   *
   * @generated from enum value: ID_FORMAT_UUID = 1;
   */
  UUID = 1,

  /**
   * ULID
   *
   * @generated from enum value: ID_FORMAT_ULID = 2;
   */
  ULID = 2,

  /**
   * Snowflake ID
   *
   * @generated from enum value: ID_FORMAT_SNOWFLAKE = 3;
   */
  SNOWFLAKE = 3,

  /**
   * 数値ID
   *
   * @generated from enum value: ID_FORMAT_NUMERIC = 4;
   */
  NUMERIC = 4,

  /**
   * カスタム形式
   *
   * @generated from enum value: ID_FORMAT_CUSTOM = 5;
   */
  CUSTOM = 5,
}

/**
 * Describes the enum avion.common.v1.IdFormat.
 */
export const IdFormatSchema: GenEnum<IdFormat> = /*@__PURE__*/
  enumDesc(file_avion_common_v1_validation, 1);

/**
 * メールアドレス検証レベル
 *
 * @generated from enum avion.common.v1.EmailVerificationLevel
 */
export enum EmailVerificationLevel {
  /**
   * 未指定（デフォルト: SYNTAX）
   *
   * @generated from enum value: EMAIL_VERIFICATION_LEVEL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 構文チェックのみ
   *
   * @generated from enum value: EMAIL_VERIFICATION_LEVEL_SYNTAX = 1;
   */
  SYNTAX = 1,

  /**
   * DNSレコードチェック
   *
   * @generated from enum value: EMAIL_VERIFICATION_LEVEL_DNS = 2;
   */
  DNS = 2,

  /**
   * SMTPチェック（到達可能性）
   *
   * @generated from enum value: EMAIL_VERIFICATION_LEVEL_SMTP = 3;
   */
  SMTP = 3,
}

/**
 * Describes the enum avion.common.v1.EmailVerificationLevel.
 */
export const EmailVerificationLevelSchema: GenEnum<EmailVerificationLevel> = /*@__PURE__*/
  enumDesc(file_avion_common_v1_validation, 2);

/**
 * フィールドバリデーションルール
 *
 * @generated from extension: avion.common.v1.FieldValidation field_validation = 50000;
 */
export const field_validation: GenExtension<FieldOptions, FieldValidation> = /*@__PURE__*/
  extDesc(file_avion_common_v1_validation, 0);

