// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: avion/common/v1/pagination.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ページネーションリクエスト（カーソルベース）
// Google API Design Guideに準拠
// https://cloud.google.com/apis/design/design_patterns#list_pagination
type PaginationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ページサイズ（取得件数）
	// 0の場合はサービス側のデフォルト値を使用
	// 最大値はサービスごとに定義される
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// ページトークン（次ページ取得用）
	// 前回のレスポンスのnext_page_tokenを指定
	// 空の場合は最初のページを取得
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// ソート順序（オプション）
	// サービスによって使用可能な値が異なる
	// 例: "created_at desc", "name asc"
	OrderBy       string `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaginationRequest) Reset() {
	*x = PaginationRequest{}
	mi := &file_avion_common_v1_pagination_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationRequest) ProtoMessage() {}

func (x *PaginationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_pagination_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationRequest.ProtoReflect.Descriptor instead.
func (*PaginationRequest) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_pagination_proto_rawDescGZIP(), []int{0}
}

func (x *PaginationRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PaginationRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *PaginationRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

// ページネーションレスポンス（カーソルベース）
type PaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 次ページトークン
	// 空の場合は次ページが存在しない
	NextPageToken string `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// 総件数（オプション）
	// パフォーマンス上の理由で提供されない場合がある
	// -1の場合は総件数が不明
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// 前ページトークン（オプション）
	// 双方向ページネーションをサポートする場合に使用
	PrevPageToken string `protobuf:"bytes,3,opt,name=prev_page_token,json=prevPageToken,proto3" json:"prev_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	mi := &file_avion_common_v1_pagination_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_pagination_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_pagination_proto_rawDescGZIP(), []int{1}
}

func (x *PaginationResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *PaginationResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *PaginationResponse) GetPrevPageToken() string {
	if x != nil {
		return x.PrevPageToken
	}
	return ""
}

// オフセットベースのページネーションリクエスト
// レガシーAPIや特定のユースケース用
type OffsetPaginationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 1ページあたりの件数
	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// スキップする件数
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// ソート順序（オプション）
	OrderBy       string `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OffsetPaginationRequest) Reset() {
	*x = OffsetPaginationRequest{}
	mi := &file_avion_common_v1_pagination_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OffsetPaginationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffsetPaginationRequest) ProtoMessage() {}

func (x *OffsetPaginationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_pagination_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffsetPaginationRequest.ProtoReflect.Descriptor instead.
func (*OffsetPaginationRequest) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_pagination_proto_rawDescGZIP(), []int{2}
}

func (x *OffsetPaginationRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *OffsetPaginationRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *OffsetPaginationRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

// オフセットベースのページネーションレスポンス
type OffsetPaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 総件数
	TotalCount int32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// 現在のオフセット
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 取得件数
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// 次ページが存在するか
	HasNext bool `protobuf:"varint,4,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
	// 前ページが存在するか
	HasPrev       bool `protobuf:"varint,5,opt,name=has_prev,json=hasPrev,proto3" json:"has_prev,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OffsetPaginationResponse) Reset() {
	*x = OffsetPaginationResponse{}
	mi := &file_avion_common_v1_pagination_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OffsetPaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffsetPaginationResponse) ProtoMessage() {}

func (x *OffsetPaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_pagination_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffsetPaginationResponse.ProtoReflect.Descriptor instead.
func (*OffsetPaginationResponse) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_pagination_proto_rawDescGZIP(), []int{3}
}

func (x *OffsetPaginationResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *OffsetPaginationResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *OffsetPaginationResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *OffsetPaginationResponse) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

func (x *OffsetPaginationResponse) GetHasPrev() bool {
	if x != nil {
		return x.HasPrev
	}
	return false
}

// カーソルベースのページネーション情報
// タイムラインなどのリアルタイムフィード用
type CursorPaginationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 取得件数
	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// カーソル（特定の位置を示す識別子）
	//
	// Types that are valid to be assigned to Cursor:
	//
	//	*CursorPaginationRequest_After
	//	*CursorPaginationRequest_Before
	Cursor isCursorPaginationRequest_Cursor `protobuf_oneof:"cursor"`
	// ソート順序（オプション）
	OrderBy       string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CursorPaginationRequest) Reset() {
	*x = CursorPaginationRequest{}
	mi := &file_avion_common_v1_pagination_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CursorPaginationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorPaginationRequest) ProtoMessage() {}

func (x *CursorPaginationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_pagination_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorPaginationRequest.ProtoReflect.Descriptor instead.
func (*CursorPaginationRequest) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_pagination_proto_rawDescGZIP(), []int{4}
}

func (x *CursorPaginationRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CursorPaginationRequest) GetCursor() isCursorPaginationRequest_Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *CursorPaginationRequest) GetAfter() string {
	if x != nil {
		if x, ok := x.Cursor.(*CursorPaginationRequest_After); ok {
			return x.After
		}
	}
	return ""
}

func (x *CursorPaginationRequest) GetBefore() string {
	if x != nil {
		if x, ok := x.Cursor.(*CursorPaginationRequest_Before); ok {
			return x.Before
		}
	}
	return ""
}

func (x *CursorPaginationRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type isCursorPaginationRequest_Cursor interface {
	isCursorPaginationRequest_Cursor()
}

type CursorPaginationRequest_After struct {
	// より新しいアイテムを取得する場合のカーソル
	After string `protobuf:"bytes,2,opt,name=after,proto3,oneof"`
}

type CursorPaginationRequest_Before struct {
	// より古いアイテムを取得する場合のカーソル
	Before string `protobuf:"bytes,3,opt,name=before,proto3,oneof"`
}

func (*CursorPaginationRequest_After) isCursorPaginationRequest_Cursor() {}

func (*CursorPaginationRequest_Before) isCursorPaginationRequest_Cursor() {}

// カーソルベースのページネーションレスポンス
type CursorPaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 次のカーソル（より新しいアイテム用）
	NextCursor string `protobuf:"bytes,1,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	// 前のカーソル（より古いアイテム用）
	PrevCursor string `protobuf:"bytes,2,opt,name=prev_cursor,json=prevCursor,proto3" json:"prev_cursor,omitempty"`
	// 次のページが存在するか
	HasNext bool `protobuf:"varint,3,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
	// 前のページが存在するか
	HasPrev bool `protobuf:"varint,4,opt,name=has_prev,json=hasPrev,proto3" json:"has_prev,omitempty"`
	// 総件数（オプション、-1の場合は不明）
	TotalCount    int32 `protobuf:"varint,5,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CursorPaginationResponse) Reset() {
	*x = CursorPaginationResponse{}
	mi := &file_avion_common_v1_pagination_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CursorPaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorPaginationResponse) ProtoMessage() {}

func (x *CursorPaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_pagination_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorPaginationResponse.ProtoReflect.Descriptor instead.
func (*CursorPaginationResponse) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_pagination_proto_rawDescGZIP(), []int{5}
}

func (x *CursorPaginationResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *CursorPaginationResponse) GetPrevCursor() string {
	if x != nil {
		return x.PrevCursor
	}
	return ""
}

func (x *CursorPaginationResponse) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

func (x *CursorPaginationResponse) GetHasPrev() bool {
	if x != nil {
		return x.HasPrev
	}
	return false
}

func (x *CursorPaginationResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_avion_common_v1_pagination_proto protoreflect.FileDescriptor

const file_avion_common_v1_pagination_proto_rawDesc = "" +
	"\n" +
	" avion/common/v1/pagination.proto\x12\x0favion.common.v1\"j\n" +
	"\x11PaginationRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x19\n" +
	"\border_by\x18\x03 \x01(\tR\aorderBy\"\x85\x01\n" +
	"\x12PaginationResponse\x12&\n" +
	"\x0fnext_page_token\x18\x01 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12&\n" +
	"\x0fprev_page_token\x18\x03 \x01(\tR\rprevPageToken\"b\n" +
	"\x17OffsetPaginationRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x19\n" +
	"\border_by\x18\x03 \x01(\tR\aorderBy\"\x9f\x01\n" +
	"\x18OffsetPaginationResponse\x12\x1f\n" +
	"\vtotal_count\x18\x01 \x01(\x05R\n" +
	"totalCount\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x19\n" +
	"\bhas_next\x18\x04 \x01(\bR\ahasNext\x12\x19\n" +
	"\bhas_prev\x18\x05 \x01(\bR\ahasPrev\"\x86\x01\n" +
	"\x17CursorPaginationRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x05after\x18\x02 \x01(\tH\x00R\x05after\x12\x18\n" +
	"\x06before\x18\x03 \x01(\tH\x00R\x06before\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderByB\b\n" +
	"\x06cursor\"\xb3\x01\n" +
	"\x18CursorPaginationResponse\x12\x1f\n" +
	"\vnext_cursor\x18\x01 \x01(\tR\n" +
	"nextCursor\x12\x1f\n" +
	"\vprev_cursor\x18\x02 \x01(\tR\n" +
	"prevCursor\x12\x19\n" +
	"\bhas_next\x18\x03 \x01(\bR\ahasNext\x12\x19\n" +
	"\bhas_prev\x18\x04 \x01(\bR\ahasPrev\x12\x1f\n" +
	"\vtotal_count\x18\x05 \x01(\x05R\n" +
	"totalCountB\xbd\x01\n" +
	"\x13com.avion.common.v1B\x0fPaginationProtoP\x01Z7github.com/na2na-p/avion/proto/avion/common/v1;commonv1\xa2\x02\x03ACX\xaa\x02\x0fAvion.Common.V1\xca\x02\x0fAvion\\Common\\V1\xe2\x02\x1bAvion\\Common\\V1\\GPBMetadata\xea\x02\x11Avion::Common::V1b\x06proto3"

var (
	file_avion_common_v1_pagination_proto_rawDescOnce sync.Once
	file_avion_common_v1_pagination_proto_rawDescData []byte
)

func file_avion_common_v1_pagination_proto_rawDescGZIP() []byte {
	file_avion_common_v1_pagination_proto_rawDescOnce.Do(func() {
		file_avion_common_v1_pagination_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_avion_common_v1_pagination_proto_rawDesc), len(file_avion_common_v1_pagination_proto_rawDesc)))
	})
	return file_avion_common_v1_pagination_proto_rawDescData
}

var file_avion_common_v1_pagination_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_avion_common_v1_pagination_proto_goTypes = []any{
	(*PaginationRequest)(nil),        // 0: avion.common.v1.PaginationRequest
	(*PaginationResponse)(nil),       // 1: avion.common.v1.PaginationResponse
	(*OffsetPaginationRequest)(nil),  // 2: avion.common.v1.OffsetPaginationRequest
	(*OffsetPaginationResponse)(nil), // 3: avion.common.v1.OffsetPaginationResponse
	(*CursorPaginationRequest)(nil),  // 4: avion.common.v1.CursorPaginationRequest
	(*CursorPaginationResponse)(nil), // 5: avion.common.v1.CursorPaginationResponse
}
var file_avion_common_v1_pagination_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_avion_common_v1_pagination_proto_init() }
func file_avion_common_v1_pagination_proto_init() {
	if File_avion_common_v1_pagination_proto != nil {
		return
	}
	file_avion_common_v1_pagination_proto_msgTypes[4].OneofWrappers = []any{
		(*CursorPaginationRequest_After)(nil),
		(*CursorPaginationRequest_Before)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_avion_common_v1_pagination_proto_rawDesc), len(file_avion_common_v1_pagination_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_avion_common_v1_pagination_proto_goTypes,
		DependencyIndexes: file_avion_common_v1_pagination_proto_depIdxs,
		MessageInfos:      file_avion_common_v1_pagination_proto_msgTypes,
	}.Build()
	File_avion_common_v1_pagination_proto = out.File
	file_avion_common_v1_pagination_proto_goTypes = nil
	file_avion_common_v1_pagination_proto_depIdxs = nil
}
