// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: avion/common/v1/filter.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// フィルタ演算子
type FilterOperator int32

const (
	// 未指定
	FilterOperator_FILTER_OPERATOR_UNSPECIFIED FilterOperator = 0
	// 等しい
	FilterOperator_FILTER_OPERATOR_EQUALS FilterOperator = 1
	// 等しくない
	FilterOperator_FILTER_OPERATOR_NOT_EQUALS FilterOperator = 2
	// より大きい
	FilterOperator_FILTER_OPERATOR_GREATER_THAN FilterOperator = 3
	// 以上
	FilterOperator_FILTER_OPERATOR_GREATER_THAN_OR_EQUALS FilterOperator = 4
	// より小さい
	FilterOperator_FILTER_OPERATOR_LESS_THAN FilterOperator = 5
	// 以下
	FilterOperator_FILTER_OPERATOR_LESS_THAN_OR_EQUALS FilterOperator = 6
	// 含む（部分一致）
	FilterOperator_FILTER_OPERATOR_CONTAINS FilterOperator = 7
	// 含まない
	FilterOperator_FILTER_OPERATOR_NOT_CONTAINS FilterOperator = 8
	// 前方一致
	FilterOperator_FILTER_OPERATOR_STARTS_WITH FilterOperator = 9
	// 後方一致
	FilterOperator_FILTER_OPERATOR_ENDS_WITH FilterOperator = 10
	// 正規表現マッチ
	FilterOperator_FILTER_OPERATOR_REGEX FilterOperator = 11
	// IN（リスト内に存在）
	FilterOperator_FILTER_OPERATOR_IN FilterOperator = 12
	// NOT IN（リスト内に存在しない）
	FilterOperator_FILTER_OPERATOR_NOT_IN FilterOperator = 13
	// NULL判定
	FilterOperator_FILTER_OPERATOR_IS_NULL FilterOperator = 14
	// NOT NULL判定
	FilterOperator_FILTER_OPERATOR_IS_NOT_NULL FilterOperator = 15
	// 範囲内（BETWEEN）
	FilterOperator_FILTER_OPERATOR_BETWEEN FilterOperator = 16
	// 存在する（フィールドが存在する）
	FilterOperator_FILTER_OPERATOR_EXISTS FilterOperator = 17
	// 存在しない（フィールドが存在しない）
	FilterOperator_FILTER_OPERATOR_NOT_EXISTS FilterOperator = 18
)

// Enum value maps for FilterOperator.
var (
	FilterOperator_name = map[int32]string{
		0:  "FILTER_OPERATOR_UNSPECIFIED",
		1:  "FILTER_OPERATOR_EQUALS",
		2:  "FILTER_OPERATOR_NOT_EQUALS",
		3:  "FILTER_OPERATOR_GREATER_THAN",
		4:  "FILTER_OPERATOR_GREATER_THAN_OR_EQUALS",
		5:  "FILTER_OPERATOR_LESS_THAN",
		6:  "FILTER_OPERATOR_LESS_THAN_OR_EQUALS",
		7:  "FILTER_OPERATOR_CONTAINS",
		8:  "FILTER_OPERATOR_NOT_CONTAINS",
		9:  "FILTER_OPERATOR_STARTS_WITH",
		10: "FILTER_OPERATOR_ENDS_WITH",
		11: "FILTER_OPERATOR_REGEX",
		12: "FILTER_OPERATOR_IN",
		13: "FILTER_OPERATOR_NOT_IN",
		14: "FILTER_OPERATOR_IS_NULL",
		15: "FILTER_OPERATOR_IS_NOT_NULL",
		16: "FILTER_OPERATOR_BETWEEN",
		17: "FILTER_OPERATOR_EXISTS",
		18: "FILTER_OPERATOR_NOT_EXISTS",
	}
	FilterOperator_value = map[string]int32{
		"FILTER_OPERATOR_UNSPECIFIED":            0,
		"FILTER_OPERATOR_EQUALS":                 1,
		"FILTER_OPERATOR_NOT_EQUALS":             2,
		"FILTER_OPERATOR_GREATER_THAN":           3,
		"FILTER_OPERATOR_GREATER_THAN_OR_EQUALS": 4,
		"FILTER_OPERATOR_LESS_THAN":              5,
		"FILTER_OPERATOR_LESS_THAN_OR_EQUALS":    6,
		"FILTER_OPERATOR_CONTAINS":               7,
		"FILTER_OPERATOR_NOT_CONTAINS":           8,
		"FILTER_OPERATOR_STARTS_WITH":            9,
		"FILTER_OPERATOR_ENDS_WITH":              10,
		"FILTER_OPERATOR_REGEX":                  11,
		"FILTER_OPERATOR_IN":                     12,
		"FILTER_OPERATOR_NOT_IN":                 13,
		"FILTER_OPERATOR_IS_NULL":                14,
		"FILTER_OPERATOR_IS_NOT_NULL":            15,
		"FILTER_OPERATOR_BETWEEN":                16,
		"FILTER_OPERATOR_EXISTS":                 17,
		"FILTER_OPERATOR_NOT_EXISTS":             18,
	}
)

func (x FilterOperator) Enum() *FilterOperator {
	p := new(FilterOperator)
	*p = x
	return p
}

func (x FilterOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_common_v1_filter_proto_enumTypes[0].Descriptor()
}

func (FilterOperator) Type() protoreflect.EnumType {
	return &file_avion_common_v1_filter_proto_enumTypes[0]
}

func (x FilterOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterOperator.Descriptor instead.
func (FilterOperator) EnumDescriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{0}
}

// ソート順序
type SortOrder int32

const (
	// 未指定（デフォルト: 昇順）
	SortOrder_SORT_ORDER_UNSPECIFIED SortOrder = 0
	// 昇順
	SortOrder_SORT_ORDER_ASC SortOrder = 1
	// 降順
	SortOrder_SORT_ORDER_DESC SortOrder = 2
)

// Enum value maps for SortOrder.
var (
	SortOrder_name = map[int32]string{
		0: "SORT_ORDER_UNSPECIFIED",
		1: "SORT_ORDER_ASC",
		2: "SORT_ORDER_DESC",
	}
	SortOrder_value = map[string]int32{
		"SORT_ORDER_UNSPECIFIED": 0,
		"SORT_ORDER_ASC":         1,
		"SORT_ORDER_DESC":        2,
	}
)

func (x SortOrder) Enum() *SortOrder {
	p := new(SortOrder)
	*p = x
	return p
}

func (x SortOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_common_v1_filter_proto_enumTypes[1].Descriptor()
}

func (SortOrder) Type() protoreflect.EnumType {
	return &file_avion_common_v1_filter_proto_enumTypes[1]
}

func (x SortOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortOrder.Descriptor instead.
func (SortOrder) EnumDescriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{1}
}

// 論理演算子
type LogicalOperator int32

const (
	// 未指定（デフォルト: AND）
	LogicalOperator_LOGICAL_OPERATOR_UNSPECIFIED LogicalOperator = 0
	// AND条件
	LogicalOperator_LOGICAL_OPERATOR_AND LogicalOperator = 1
	// OR条件
	LogicalOperator_LOGICAL_OPERATOR_OR LogicalOperator = 2
	// NOT条件
	LogicalOperator_LOGICAL_OPERATOR_NOT LogicalOperator = 3
)

// Enum value maps for LogicalOperator.
var (
	LogicalOperator_name = map[int32]string{
		0: "LOGICAL_OPERATOR_UNSPECIFIED",
		1: "LOGICAL_OPERATOR_AND",
		2: "LOGICAL_OPERATOR_OR",
		3: "LOGICAL_OPERATOR_NOT",
	}
	LogicalOperator_value = map[string]int32{
		"LOGICAL_OPERATOR_UNSPECIFIED": 0,
		"LOGICAL_OPERATOR_AND":         1,
		"LOGICAL_OPERATOR_OR":          2,
		"LOGICAL_OPERATOR_NOT":         3,
	}
)

func (x LogicalOperator) Enum() *LogicalOperator {
	p := new(LogicalOperator)
	*p = x
	return p
}

func (x LogicalOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicalOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_common_v1_filter_proto_enumTypes[2].Descriptor()
}

func (LogicalOperator) Type() protoreflect.EnumType {
	return &file_avion_common_v1_filter_proto_enumTypes[2]
}

func (x LogicalOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicalOperator.Descriptor instead.
func (LogicalOperator) EnumDescriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{2}
}

// NULL値の扱い
type NullHandling int32

const (
	// 未指定（デフォルト動作）
	NullHandling_NULL_HANDLING_UNSPECIFIED NullHandling = 0
	// NULL値を最初に配置
	NullHandling_NULL_HANDLING_FIRST NullHandling = 1
	// NULL値を最後に配置
	NullHandling_NULL_HANDLING_LAST NullHandling = 2
)

// Enum value maps for NullHandling.
var (
	NullHandling_name = map[int32]string{
		0: "NULL_HANDLING_UNSPECIFIED",
		1: "NULL_HANDLING_FIRST",
		2: "NULL_HANDLING_LAST",
	}
	NullHandling_value = map[string]int32{
		"NULL_HANDLING_UNSPECIFIED": 0,
		"NULL_HANDLING_FIRST":       1,
		"NULL_HANDLING_LAST":        2,
	}
)

func (x NullHandling) Enum() *NullHandling {
	p := new(NullHandling)
	*p = x
	return p
}

func (x NullHandling) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NullHandling) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_common_v1_filter_proto_enumTypes[3].Descriptor()
}

func (NullHandling) Type() protoreflect.EnumType {
	return &file_avion_common_v1_filter_proto_enumTypes[3]
}

func (x NullHandling) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NullHandling.Descriptor instead.
func (NullHandling) EnumDescriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{3}
}

// 集計タイプ
type AggregationType int32

const (
	// 未指定
	AggregationType_AGGREGATION_TYPE_UNSPECIFIED AggregationType = 0
	// カウント
	AggregationType_AGGREGATION_TYPE_COUNT AggregationType = 1
	// 合計
	AggregationType_AGGREGATION_TYPE_SUM AggregationType = 2
	// 平均
	AggregationType_AGGREGATION_TYPE_AVG AggregationType = 3
	// 最小値
	AggregationType_AGGREGATION_TYPE_MIN AggregationType = 4
	// 最大値
	AggregationType_AGGREGATION_TYPE_MAX AggregationType = 5
	// カーディナリティ（ユニーク数）
	AggregationType_AGGREGATION_TYPE_CARDINALITY AggregationType = 6
	// パーセンタイル
	AggregationType_AGGREGATION_TYPE_PERCENTILE AggregationType = 7
	// ヒストグラム
	AggregationType_AGGREGATION_TYPE_HISTOGRAM AggregationType = 8
	// 日付ヒストグラム
	AggregationType_AGGREGATION_TYPE_DATE_HISTOGRAM AggregationType = 9
	// ターム集計（グルーピング）
	AggregationType_AGGREGATION_TYPE_TERMS AggregationType = 10
	// 範囲集計
	AggregationType_AGGREGATION_TYPE_RANGE AggregationType = 11
)

// Enum value maps for AggregationType.
var (
	AggregationType_name = map[int32]string{
		0:  "AGGREGATION_TYPE_UNSPECIFIED",
		1:  "AGGREGATION_TYPE_COUNT",
		2:  "AGGREGATION_TYPE_SUM",
		3:  "AGGREGATION_TYPE_AVG",
		4:  "AGGREGATION_TYPE_MIN",
		5:  "AGGREGATION_TYPE_MAX",
		6:  "AGGREGATION_TYPE_CARDINALITY",
		7:  "AGGREGATION_TYPE_PERCENTILE",
		8:  "AGGREGATION_TYPE_HISTOGRAM",
		9:  "AGGREGATION_TYPE_DATE_HISTOGRAM",
		10: "AGGREGATION_TYPE_TERMS",
		11: "AGGREGATION_TYPE_RANGE",
	}
	AggregationType_value = map[string]int32{
		"AGGREGATION_TYPE_UNSPECIFIED":    0,
		"AGGREGATION_TYPE_COUNT":          1,
		"AGGREGATION_TYPE_SUM":            2,
		"AGGREGATION_TYPE_AVG":            3,
		"AGGREGATION_TYPE_MIN":            4,
		"AGGREGATION_TYPE_MAX":            5,
		"AGGREGATION_TYPE_CARDINALITY":    6,
		"AGGREGATION_TYPE_PERCENTILE":     7,
		"AGGREGATION_TYPE_HISTOGRAM":      8,
		"AGGREGATION_TYPE_DATE_HISTOGRAM": 9,
		"AGGREGATION_TYPE_TERMS":          10,
		"AGGREGATION_TYPE_RANGE":          11,
	}
)

func (x AggregationType) Enum() *AggregationType {
	p := new(AggregationType)
	*p = x
	return p
}

func (x AggregationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AggregationType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_common_v1_filter_proto_enumTypes[4].Descriptor()
}

func (AggregationType) Type() protoreflect.EnumType {
	return &file_avion_common_v1_filter_proto_enumTypes[4]
}

func (x AggregationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AggregationType.Descriptor instead.
func (AggregationType) EnumDescriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{4}
}

// 欠損値の扱い
type MissingValueHandling int32

const (
	// 未指定（デフォルト: 無視）
	MissingValueHandling_MISSING_VALUE_HANDLING_UNSPECIFIED MissingValueHandling = 0
	// 無視する
	MissingValueHandling_MISSING_VALUE_HANDLING_IGNORE MissingValueHandling = 1
	// デフォルト値として扱う
	MissingValueHandling_MISSING_VALUE_HANDLING_DEFAULT MissingValueHandling = 2
	// 別のバケットとして集計
	MissingValueHandling_MISSING_VALUE_HANDLING_BUCKET MissingValueHandling = 3
)

// Enum value maps for MissingValueHandling.
var (
	MissingValueHandling_name = map[int32]string{
		0: "MISSING_VALUE_HANDLING_UNSPECIFIED",
		1: "MISSING_VALUE_HANDLING_IGNORE",
		2: "MISSING_VALUE_HANDLING_DEFAULT",
		3: "MISSING_VALUE_HANDLING_BUCKET",
	}
	MissingValueHandling_value = map[string]int32{
		"MISSING_VALUE_HANDLING_UNSPECIFIED": 0,
		"MISSING_VALUE_HANDLING_IGNORE":      1,
		"MISSING_VALUE_HANDLING_DEFAULT":     2,
		"MISSING_VALUE_HANDLING_BUCKET":      3,
	}
)

func (x MissingValueHandling) Enum() *MissingValueHandling {
	p := new(MissingValueHandling)
	*p = x
	return p
}

func (x MissingValueHandling) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MissingValueHandling) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_common_v1_filter_proto_enumTypes[5].Descriptor()
}

func (MissingValueHandling) Type() protoreflect.EnumType {
	return &file_avion_common_v1_filter_proto_enumTypes[5]
}

func (x MissingValueHandling) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MissingValueHandling.Descriptor instead.
func (MissingValueHandling) EnumDescriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{5}
}

// ファセットソート順序
type FacetSortOrder int32

const (
	// 未指定（デフォルト: カウント降順）
	FacetSortOrder_FACET_SORT_ORDER_UNSPECIFIED FacetSortOrder = 0
	// カウント降順
	FacetSortOrder_FACET_SORT_ORDER_COUNT_DESC FacetSortOrder = 1
	// カウント昇順
	FacetSortOrder_FACET_SORT_ORDER_COUNT_ASC FacetSortOrder = 2
	// 値の辞書順（昇順）
	FacetSortOrder_FACET_SORT_ORDER_VALUE_ASC FacetSortOrder = 3
	// 値の辞書順（降順）
	FacetSortOrder_FACET_SORT_ORDER_VALUE_DESC FacetSortOrder = 4
)

// Enum value maps for FacetSortOrder.
var (
	FacetSortOrder_name = map[int32]string{
		0: "FACET_SORT_ORDER_UNSPECIFIED",
		1: "FACET_SORT_ORDER_COUNT_DESC",
		2: "FACET_SORT_ORDER_COUNT_ASC",
		3: "FACET_SORT_ORDER_VALUE_ASC",
		4: "FACET_SORT_ORDER_VALUE_DESC",
	}
	FacetSortOrder_value = map[string]int32{
		"FACET_SORT_ORDER_UNSPECIFIED": 0,
		"FACET_SORT_ORDER_COUNT_DESC":  1,
		"FACET_SORT_ORDER_COUNT_ASC":   2,
		"FACET_SORT_ORDER_VALUE_ASC":   3,
		"FACET_SORT_ORDER_VALUE_DESC":  4,
	}
)

func (x FacetSortOrder) Enum() *FacetSortOrder {
	p := new(FacetSortOrder)
	*p = x
	return p
}

func (x FacetSortOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FacetSortOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_common_v1_filter_proto_enumTypes[6].Descriptor()
}

func (FacetSortOrder) Type() protoreflect.EnumType {
	return &file_avion_common_v1_filter_proto_enumTypes[6]
}

func (x FacetSortOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FacetSortOrder.Descriptor instead.
func (FacetSortOrder) EnumDescriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{6}
}

// 重複時の保持基準
type KeepCriteria int32

const (
	// 未指定（デフォルト: 最初）
	KeepCriteria_KEEP_CRITERIA_UNSPECIFIED KeepCriteria = 0
	// 最初のレコード
	KeepCriteria_KEEP_CRITERIA_FIRST KeepCriteria = 1
	// 最後のレコード
	KeepCriteria_KEEP_CRITERIA_LAST KeepCriteria = 2
	// 最新（更新日時基準）
	KeepCriteria_KEEP_CRITERIA_NEWEST KeepCriteria = 3
	// 最古（更新日時基準）
	KeepCriteria_KEEP_CRITERIA_OLDEST KeepCriteria = 4
)

// Enum value maps for KeepCriteria.
var (
	KeepCriteria_name = map[int32]string{
		0: "KEEP_CRITERIA_UNSPECIFIED",
		1: "KEEP_CRITERIA_FIRST",
		2: "KEEP_CRITERIA_LAST",
		3: "KEEP_CRITERIA_NEWEST",
		4: "KEEP_CRITERIA_OLDEST",
	}
	KeepCriteria_value = map[string]int32{
		"KEEP_CRITERIA_UNSPECIFIED": 0,
		"KEEP_CRITERIA_FIRST":       1,
		"KEEP_CRITERIA_LAST":        2,
		"KEEP_CRITERIA_NEWEST":      3,
		"KEEP_CRITERIA_OLDEST":      4,
	}
)

func (x KeepCriteria) Enum() *KeepCriteria {
	p := new(KeepCriteria)
	*p = x
	return p
}

func (x KeepCriteria) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeepCriteria) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_common_v1_filter_proto_enumTypes[7].Descriptor()
}

func (KeepCriteria) Type() protoreflect.EnumType {
	return &file_avion_common_v1_filter_proto_enumTypes[7]
}

func (x KeepCriteria) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeepCriteria.Descriptor instead.
func (KeepCriteria) EnumDescriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{7}
}

// フィールドフィルタ
type FieldFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// フィールド名（ドット記法でネストされたフィールドも指定可能）
	// 例: "user.name", "created_at", "metadata.tags"
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// フィルタ演算子
	Operator FilterOperator `protobuf:"varint,2,opt,name=operator,proto3,enum=avion.common.v1.FilterOperator" json:"operator,omitempty"`
	// フィルタ値（複数の型に対応）
	//
	// Types that are valid to be assigned to Value:
	//
	//	*FieldFilter_StringValue
	//	*FieldFilter_IntValue
	//	*FieldFilter_DoubleValue
	//	*FieldFilter_BoolValue
	//	*FieldFilter_TimestampValue
	//	*FieldFilter_StringListValue
	//	*FieldFilter_NumberListValue
	//	*FieldFilter_RangeValue
	Value isFieldFilter_Value `protobuf_oneof:"value"`
	// 大文字小文字を区別しない（文字列比較時）
	CaseInsensitive bool `protobuf:"varint,20,opt,name=case_insensitive,json=caseInsensitive,proto3" json:"case_insensitive,omitempty"`
	// NULLを含めるか（結果セットにNULL値を含める）
	IncludeNull   bool `protobuf:"varint,21,opt,name=include_null,json=includeNull,proto3" json:"include_null,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldFilter) Reset() {
	*x = FieldFilter{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldFilter) ProtoMessage() {}

func (x *FieldFilter) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldFilter.ProtoReflect.Descriptor instead.
func (*FieldFilter) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{0}
}

func (x *FieldFilter) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *FieldFilter) GetOperator() FilterOperator {
	if x != nil {
		return x.Operator
	}
	return FilterOperator_FILTER_OPERATOR_UNSPECIFIED
}

func (x *FieldFilter) GetValue() isFieldFilter_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *FieldFilter) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*FieldFilter_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *FieldFilter) GetIntValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*FieldFilter_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *FieldFilter) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*FieldFilter_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *FieldFilter) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*FieldFilter_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *FieldFilter) GetTimestampValue() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Value.(*FieldFilter_TimestampValue); ok {
			return x.TimestampValue
		}
	}
	return nil
}

func (x *FieldFilter) GetStringListValue() *StringList {
	if x != nil {
		if x, ok := x.Value.(*FieldFilter_StringListValue); ok {
			return x.StringListValue
		}
	}
	return nil
}

func (x *FieldFilter) GetNumberListValue() *NumberList {
	if x != nil {
		if x, ok := x.Value.(*FieldFilter_NumberListValue); ok {
			return x.NumberListValue
		}
	}
	return nil
}

func (x *FieldFilter) GetRangeValue() *RangeValue {
	if x != nil {
		if x, ok := x.Value.(*FieldFilter_RangeValue); ok {
			return x.RangeValue
		}
	}
	return nil
}

func (x *FieldFilter) GetCaseInsensitive() bool {
	if x != nil {
		return x.CaseInsensitive
	}
	return false
}

func (x *FieldFilter) GetIncludeNull() bool {
	if x != nil {
		return x.IncludeNull
	}
	return false
}

type isFieldFilter_Value interface {
	isFieldFilter_Value()
}

type FieldFilter_StringValue struct {
	// 文字列値
	StringValue string `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type FieldFilter_IntValue struct {
	// 数値（整数）
	IntValue int64 `protobuf:"varint,4,opt,name=int_value,json=intValue,proto3,oneof"`
}

type FieldFilter_DoubleValue struct {
	// 数値（浮動小数点）
	DoubleValue float64 `protobuf:"fixed64,5,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type FieldFilter_BoolValue struct {
	// 真偽値
	BoolValue bool `protobuf:"varint,6,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type FieldFilter_TimestampValue struct {
	// タイムスタンプ
	TimestampValue *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp_value,json=timestampValue,proto3,oneof"`
}

type FieldFilter_StringListValue struct {
	// 文字列リスト（IN, NOT_IN演算子用）
	StringListValue *StringList `protobuf:"bytes,8,opt,name=string_list_value,json=stringListValue,proto3,oneof"`
}

type FieldFilter_NumberListValue struct {
	// 数値リスト（IN, NOT_IN演算子用）
	NumberListValue *NumberList `protobuf:"bytes,9,opt,name=number_list_value,json=numberListValue,proto3,oneof"`
}

type FieldFilter_RangeValue struct {
	// 範囲値（BETWEEN演算子用）
	RangeValue *RangeValue `protobuf:"bytes,10,opt,name=range_value,json=rangeValue,proto3,oneof"`
}

func (*FieldFilter_StringValue) isFieldFilter_Value() {}

func (*FieldFilter_IntValue) isFieldFilter_Value() {}

func (*FieldFilter_DoubleValue) isFieldFilter_Value() {}

func (*FieldFilter_BoolValue) isFieldFilter_Value() {}

func (*FieldFilter_TimestampValue) isFieldFilter_Value() {}

func (*FieldFilter_StringListValue) isFieldFilter_Value() {}

func (*FieldFilter_NumberListValue) isFieldFilter_Value() {}

func (*FieldFilter_RangeValue) isFieldFilter_Value() {}

// 文字列リスト
type StringList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringList) Reset() {
	*x = StringList{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringList) ProtoMessage() {}

func (x *StringList) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringList.ProtoReflect.Descriptor instead.
func (*StringList) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{1}
}

func (x *StringList) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// 数値リスト
type NumberList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []float64              `protobuf:"fixed64,1,rep,packed,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NumberList) Reset() {
	*x = NumberList{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NumberList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberList) ProtoMessage() {}

func (x *NumberList) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberList.ProtoReflect.Descriptor instead.
func (*NumberList) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{2}
}

func (x *NumberList) GetValues() []float64 {
	if x != nil {
		return x.Values
	}
	return nil
}

// 範囲値
type RangeValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 開始値
	//
	// Types that are valid to be assigned to Start:
	//
	//	*RangeValue_StringStart
	//	*RangeValue_IntStart
	//	*RangeValue_DoubleStart
	//	*RangeValue_TimestampStart
	Start isRangeValue_Start `protobuf_oneof:"start"`
	// 終了値
	//
	// Types that are valid to be assigned to End:
	//
	//	*RangeValue_StringEnd
	//	*RangeValue_IntEnd
	//	*RangeValue_DoubleEnd
	//	*RangeValue_TimestampEnd
	End isRangeValue_End `protobuf_oneof:"end"`
	// 開始値を含むか
	IncludeStart bool `protobuf:"varint,9,opt,name=include_start,json=includeStart,proto3" json:"include_start,omitempty"`
	// 終了値を含むか
	IncludeEnd    bool `protobuf:"varint,10,opt,name=include_end,json=includeEnd,proto3" json:"include_end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeValue) Reset() {
	*x = RangeValue{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeValue) ProtoMessage() {}

func (x *RangeValue) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeValue.ProtoReflect.Descriptor instead.
func (*RangeValue) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{3}
}

func (x *RangeValue) GetStart() isRangeValue_Start {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *RangeValue) GetStringStart() string {
	if x != nil {
		if x, ok := x.Start.(*RangeValue_StringStart); ok {
			return x.StringStart
		}
	}
	return ""
}

func (x *RangeValue) GetIntStart() int64 {
	if x != nil {
		if x, ok := x.Start.(*RangeValue_IntStart); ok {
			return x.IntStart
		}
	}
	return 0
}

func (x *RangeValue) GetDoubleStart() float64 {
	if x != nil {
		if x, ok := x.Start.(*RangeValue_DoubleStart); ok {
			return x.DoubleStart
		}
	}
	return 0
}

func (x *RangeValue) GetTimestampStart() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Start.(*RangeValue_TimestampStart); ok {
			return x.TimestampStart
		}
	}
	return nil
}

func (x *RangeValue) GetEnd() isRangeValue_End {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *RangeValue) GetStringEnd() string {
	if x != nil {
		if x, ok := x.End.(*RangeValue_StringEnd); ok {
			return x.StringEnd
		}
	}
	return ""
}

func (x *RangeValue) GetIntEnd() int64 {
	if x != nil {
		if x, ok := x.End.(*RangeValue_IntEnd); ok {
			return x.IntEnd
		}
	}
	return 0
}

func (x *RangeValue) GetDoubleEnd() float64 {
	if x != nil {
		if x, ok := x.End.(*RangeValue_DoubleEnd); ok {
			return x.DoubleEnd
		}
	}
	return 0
}

func (x *RangeValue) GetTimestampEnd() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.End.(*RangeValue_TimestampEnd); ok {
			return x.TimestampEnd
		}
	}
	return nil
}

func (x *RangeValue) GetIncludeStart() bool {
	if x != nil {
		return x.IncludeStart
	}
	return false
}

func (x *RangeValue) GetIncludeEnd() bool {
	if x != nil {
		return x.IncludeEnd
	}
	return false
}

type isRangeValue_Start interface {
	isRangeValue_Start()
}

type RangeValue_StringStart struct {
	StringStart string `protobuf:"bytes,1,opt,name=string_start,json=stringStart,proto3,oneof"`
}

type RangeValue_IntStart struct {
	IntStart int64 `protobuf:"varint,2,opt,name=int_start,json=intStart,proto3,oneof"`
}

type RangeValue_DoubleStart struct {
	DoubleStart float64 `protobuf:"fixed64,3,opt,name=double_start,json=doubleStart,proto3,oneof"`
}

type RangeValue_TimestampStart struct {
	TimestampStart *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp_start,json=timestampStart,proto3,oneof"`
}

func (*RangeValue_StringStart) isRangeValue_Start() {}

func (*RangeValue_IntStart) isRangeValue_Start() {}

func (*RangeValue_DoubleStart) isRangeValue_Start() {}

func (*RangeValue_TimestampStart) isRangeValue_Start() {}

type isRangeValue_End interface {
	isRangeValue_End()
}

type RangeValue_StringEnd struct {
	StringEnd string `protobuf:"bytes,5,opt,name=string_end,json=stringEnd,proto3,oneof"`
}

type RangeValue_IntEnd struct {
	IntEnd int64 `protobuf:"varint,6,opt,name=int_end,json=intEnd,proto3,oneof"`
}

type RangeValue_DoubleEnd struct {
	DoubleEnd float64 `protobuf:"fixed64,7,opt,name=double_end,json=doubleEnd,proto3,oneof"`
}

type RangeValue_TimestampEnd struct {
	TimestampEnd *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=timestamp_end,json=timestampEnd,proto3,oneof"`
}

func (*RangeValue_StringEnd) isRangeValue_End() {}

func (*RangeValue_IntEnd) isRangeValue_End() {}

func (*RangeValue_DoubleEnd) isRangeValue_End() {}

func (*RangeValue_TimestampEnd) isRangeValue_End() {}

// 複合フィルタ（複数のフィルタを組み合わせる）
type CompositeFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 論理演算子
	Operator LogicalOperator `protobuf:"varint,1,opt,name=operator,proto3,enum=avion.common.v1.LogicalOperator" json:"operator,omitempty"`
	// フィルタリスト
	Filters       []*Filter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompositeFilter) Reset() {
	*x = CompositeFilter{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompositeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompositeFilter) ProtoMessage() {}

func (x *CompositeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompositeFilter.ProtoReflect.Descriptor instead.
func (*CompositeFilter) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{4}
}

func (x *CompositeFilter) GetOperator() LogicalOperator {
	if x != nil {
		return x.Operator
	}
	return LogicalOperator_LOGICAL_OPERATOR_UNSPECIFIED
}

func (x *CompositeFilter) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// フィルタ（単一または複合）
type Filter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to FilterType:
	//
	//	*Filter_Field
	//	*Filter_Composite
	FilterType    isFilter_FilterType `protobuf_oneof:"filter_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filter) Reset() {
	*x = Filter{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{5}
}

func (x *Filter) GetFilterType() isFilter_FilterType {
	if x != nil {
		return x.FilterType
	}
	return nil
}

func (x *Filter) GetField() *FieldFilter {
	if x != nil {
		if x, ok := x.FilterType.(*Filter_Field); ok {
			return x.Field
		}
	}
	return nil
}

func (x *Filter) GetComposite() *CompositeFilter {
	if x != nil {
		if x, ok := x.FilterType.(*Filter_Composite); ok {
			return x.Composite
		}
	}
	return nil
}

type isFilter_FilterType interface {
	isFilter_FilterType()
}

type Filter_Field struct {
	// 単一フィールドフィルタ
	Field *FieldFilter `protobuf:"bytes,1,opt,name=field,proto3,oneof"`
}

type Filter_Composite struct {
	// 複合フィルタ
	Composite *CompositeFilter `protobuf:"bytes,2,opt,name=composite,proto3,oneof"`
}

func (*Filter_Field) isFilter_FilterType() {}

func (*Filter_Composite) isFilter_FilterType() {}

// ソート条件
type SortCriteria struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ソート対象のフィールド
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// ソート順序
	Order SortOrder `protobuf:"varint,2,opt,name=order,proto3,enum=avion.common.v1.SortOrder" json:"order,omitempty"`
	// NULL値の扱い
	NullHandling  NullHandling `protobuf:"varint,3,opt,name=null_handling,json=nullHandling,proto3,enum=avion.common.v1.NullHandling" json:"null_handling,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortCriteria) Reset() {
	*x = SortCriteria{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortCriteria) ProtoMessage() {}

func (x *SortCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortCriteria.ProtoReflect.Descriptor instead.
func (*SortCriteria) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{6}
}

func (x *SortCriteria) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SortCriteria) GetOrder() SortOrder {
	if x != nil {
		return x.Order
	}
	return SortOrder_SORT_ORDER_UNSPECIFIED
}

func (x *SortCriteria) GetNullHandling() NullHandling {
	if x != nil {
		return x.NullHandling
	}
	return NullHandling_NULL_HANDLING_UNSPECIFIED
}

// フィルタリクエスト
type FilterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// フィルタ条件
	Filter *Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// ソート条件（複数指定可能、優先順位順）
	Sort []*SortCriteria `protobuf:"bytes,2,rep,name=sort,proto3" json:"sort,omitempty"`
	// 取得するフィールドのリスト（空の場合は全フィールド）
	Fields []string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	// 除外するフィールドのリスト
	ExcludeFields []string `protobuf:"bytes,4,rep,name=exclude_fields,json=excludeFields,proto3" json:"exclude_fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterRequest) Reset() {
	*x = FilterRequest{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterRequest) ProtoMessage() {}

func (x *FilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterRequest.ProtoReflect.Descriptor instead.
func (*FilterRequest) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{7}
}

func (x *FilterRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *FilterRequest) GetSort() []*SortCriteria {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *FilterRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *FilterRequest) GetExcludeFields() []string {
	if x != nil {
		return x.ExcludeFields
	}
	return nil
}

// 検索クエリ（全文検索用）
type SearchQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 検索文字列
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// 検索対象のフィールド（空の場合は全フィールド）
	SearchFields []string `protobuf:"bytes,2,rep,name=search_fields,json=searchFields,proto3" json:"search_fields,omitempty"`
	// 検索オプション
	Options       *SearchOptions `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchQuery) Reset() {
	*x = SearchQuery{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQuery) ProtoMessage() {}

func (x *SearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQuery.ProtoReflect.Descriptor instead.
func (*SearchQuery) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{8}
}

func (x *SearchQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchQuery) GetSearchFields() []string {
	if x != nil {
		return x.SearchFields
	}
	return nil
}

func (x *SearchQuery) GetOptions() *SearchOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// 検索オプション
type SearchOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 大文字小文字を区別しない
	CaseInsensitive bool `protobuf:"varint,1,opt,name=case_insensitive,json=caseInsensitive,proto3" json:"case_insensitive,omitempty"`
	// 部分一致を許可
	PartialMatch bool `protobuf:"varint,2,opt,name=partial_match,json=partialMatch,proto3" json:"partial_match,omitempty"`
	// あいまい検索（タイポ許容）
	Fuzzy bool `protobuf:"varint,3,opt,name=fuzzy,proto3" json:"fuzzy,omitempty"`
	// あいまい検索の許容度（0-2、デフォルト: 1）
	Fuzziness int32 `protobuf:"varint,4,opt,name=fuzziness,proto3" json:"fuzziness,omitempty"`
	// ハイライト（マッチ箇所の強調表示）
	Highlight bool `protobuf:"varint,5,opt,name=highlight,proto3" json:"highlight,omitempty"`
	// ハイライトタグ（例: <em>, <mark>）
	HighlightTags *HighlightTags `protobuf:"bytes,6,opt,name=highlight_tags,json=highlightTags,proto3" json:"highlight_tags,omitempty"`
	// 最小マッチスコア（0.0-1.0）
	MinScore float32 `protobuf:"fixed32,7,opt,name=min_score,json=minScore,proto3" json:"min_score,omitempty"`
	// ブースト設定（特定フィールドの重み付け）
	FieldBoosts   map[string]float32 `protobuf:"bytes,8,rep,name=field_boosts,json=fieldBoosts,proto3" json:"field_boosts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchOptions) Reset() {
	*x = SearchOptions{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOptions) ProtoMessage() {}

func (x *SearchOptions) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOptions.ProtoReflect.Descriptor instead.
func (*SearchOptions) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{9}
}

func (x *SearchOptions) GetCaseInsensitive() bool {
	if x != nil {
		return x.CaseInsensitive
	}
	return false
}

func (x *SearchOptions) GetPartialMatch() bool {
	if x != nil {
		return x.PartialMatch
	}
	return false
}

func (x *SearchOptions) GetFuzzy() bool {
	if x != nil {
		return x.Fuzzy
	}
	return false
}

func (x *SearchOptions) GetFuzziness() int32 {
	if x != nil {
		return x.Fuzziness
	}
	return 0
}

func (x *SearchOptions) GetHighlight() bool {
	if x != nil {
		return x.Highlight
	}
	return false
}

func (x *SearchOptions) GetHighlightTags() *HighlightTags {
	if x != nil {
		return x.HighlightTags
	}
	return nil
}

func (x *SearchOptions) GetMinScore() float32 {
	if x != nil {
		return x.MinScore
	}
	return 0
}

func (x *SearchOptions) GetFieldBoosts() map[string]float32 {
	if x != nil {
		return x.FieldBoosts
	}
	return nil
}

// ハイライトタグ
type HighlightTags struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 開始タグ
	PreTag string `protobuf:"bytes,1,opt,name=pre_tag,json=preTag,proto3" json:"pre_tag,omitempty"`
	// 終了タグ
	PostTag       string `protobuf:"bytes,2,opt,name=post_tag,json=postTag,proto3" json:"post_tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HighlightTags) Reset() {
	*x = HighlightTags{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HighlightTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HighlightTags) ProtoMessage() {}

func (x *HighlightTags) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HighlightTags.ProtoReflect.Descriptor instead.
func (*HighlightTags) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{10}
}

func (x *HighlightTags) GetPreTag() string {
	if x != nil {
		return x.PreTag
	}
	return ""
}

func (x *HighlightTags) GetPostTag() string {
	if x != nil {
		return x.PostTag
	}
	return ""
}

// 集計リクエスト
type AggregationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 集計名（結果参照用）
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 集計タイプ
	Type AggregationType `protobuf:"varint,2,opt,name=type,proto3,enum=avion.common.v1.AggregationType" json:"type,omitempty"`
	// 集計対象のフィールド
	Field string `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
	// 集計オプション
	Options *AggregationOptions `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	// サブ集計（ネストされた集計）
	SubAggregations []*AggregationRequest `protobuf:"bytes,5,rep,name=sub_aggregations,json=subAggregations,proto3" json:"sub_aggregations,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AggregationRequest) Reset() {
	*x = AggregationRequest{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregationRequest) ProtoMessage() {}

func (x *AggregationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregationRequest.ProtoReflect.Descriptor instead.
func (*AggregationRequest) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{11}
}

func (x *AggregationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AggregationRequest) GetType() AggregationType {
	if x != nil {
		return x.Type
	}
	return AggregationType_AGGREGATION_TYPE_UNSPECIFIED
}

func (x *AggregationRequest) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *AggregationRequest) GetOptions() *AggregationOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *AggregationRequest) GetSubAggregations() []*AggregationRequest {
	if x != nil {
		return x.SubAggregations
	}
	return nil
}

// 集計オプション
type AggregationOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ターム集計の最大バケット数
	Size int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// ヒストグラムの間隔
	Interval float64 `protobuf:"fixed64,2,opt,name=interval,proto3" json:"interval,omitempty"`
	// 日付ヒストグラムの間隔（例: "1d", "1w", "1M"）
	DateInterval string `protobuf:"bytes,3,opt,name=date_interval,json=dateInterval,proto3" json:"date_interval,omitempty"`
	// パーセンタイル値のリスト
	Percentiles []float64 `protobuf:"fixed64,4,rep,packed,name=percentiles,proto3" json:"percentiles,omitempty"`
	// 範囲のリスト
	Ranges []*RangeValue `protobuf:"bytes,5,rep,name=ranges,proto3" json:"ranges,omitempty"`
	// タイムゾーン（日付集計用）
	Timezone string `protobuf:"bytes,6,opt,name=timezone,proto3" json:"timezone,omitempty"`
	// 欠損値の扱い
	Missing       MissingValueHandling `protobuf:"varint,7,opt,name=missing,proto3,enum=avion.common.v1.MissingValueHandling" json:"missing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregationOptions) Reset() {
	*x = AggregationOptions{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregationOptions) ProtoMessage() {}

func (x *AggregationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregationOptions.ProtoReflect.Descriptor instead.
func (*AggregationOptions) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{12}
}

func (x *AggregationOptions) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AggregationOptions) GetInterval() float64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *AggregationOptions) GetDateInterval() string {
	if x != nil {
		return x.DateInterval
	}
	return ""
}

func (x *AggregationOptions) GetPercentiles() []float64 {
	if x != nil {
		return x.Percentiles
	}
	return nil
}

func (x *AggregationOptions) GetRanges() []*RangeValue {
	if x != nil {
		return x.Ranges
	}
	return nil
}

func (x *AggregationOptions) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *AggregationOptions) GetMissing() MissingValueHandling {
	if x != nil {
		return x.Missing
	}
	return MissingValueHandling_MISSING_VALUE_HANDLING_UNSPECIFIED
}

// ファセット検索リクエスト
type FacetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ファセット名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// ファセット対象のフィールド
	Field string `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	// 最大ファセット数
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// 最小ドキュメント数（これ以下のファセットは除外）
	MinCount int32 `protobuf:"varint,4,opt,name=min_count,json=minCount,proto3" json:"min_count,omitempty"`
	// ソート順序
	SortOrder     FacetSortOrder `protobuf:"varint,5,opt,name=sort_order,json=sortOrder,proto3,enum=avion.common.v1.FacetSortOrder" json:"sort_order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FacetRequest) Reset() {
	*x = FacetRequest{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FacetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacetRequest) ProtoMessage() {}

func (x *FacetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacetRequest.ProtoReflect.Descriptor instead.
func (*FacetRequest) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{13}
}

func (x *FacetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FacetRequest) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *FacetRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FacetRequest) GetMinCount() int32 {
	if x != nil {
		return x.MinCount
	}
	return 0
}

func (x *FacetRequest) GetSortOrder() FacetSortOrder {
	if x != nil {
		return x.SortOrder
	}
	return FacetSortOrder_FACET_SORT_ORDER_UNSPECIFIED
}

// 高度なフィルタリングリクエスト
type AdvancedFilterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 基本フィルタ
	Filter *FilterRequest `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// 検索クエリ
	Search *SearchQuery `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	// 集計リクエスト
	Aggregations []*AggregationRequest `protobuf:"bytes,3,rep,name=aggregations,proto3" json:"aggregations,omitempty"`
	// ファセット検索
	Facets []*FacetRequest `protobuf:"bytes,4,rep,name=facets,proto3" json:"facets,omitempty"`
	// グルーピング設定
	Grouping *GroupingConfig `protobuf:"bytes,5,opt,name=grouping,proto3" json:"grouping,omitempty"`
	// 重複除去設定
	Distinct      *DistinctConfig `protobuf:"bytes,6,opt,name=distinct,proto3" json:"distinct,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdvancedFilterRequest) Reset() {
	*x = AdvancedFilterRequest{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdvancedFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvancedFilterRequest) ProtoMessage() {}

func (x *AdvancedFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvancedFilterRequest.ProtoReflect.Descriptor instead.
func (*AdvancedFilterRequest) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{14}
}

func (x *AdvancedFilterRequest) GetFilter() *FilterRequest {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *AdvancedFilterRequest) GetSearch() *SearchQuery {
	if x != nil {
		return x.Search
	}
	return nil
}

func (x *AdvancedFilterRequest) GetAggregations() []*AggregationRequest {
	if x != nil {
		return x.Aggregations
	}
	return nil
}

func (x *AdvancedFilterRequest) GetFacets() []*FacetRequest {
	if x != nil {
		return x.Facets
	}
	return nil
}

func (x *AdvancedFilterRequest) GetGrouping() *GroupingConfig {
	if x != nil {
		return x.Grouping
	}
	return nil
}

func (x *AdvancedFilterRequest) GetDistinct() *DistinctConfig {
	if x != nil {
		return x.Distinct
	}
	return nil
}

// グルーピング設定
type GroupingConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// グループ化するフィールド
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// グループごとの最大件数
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// グループソート条件
	Sort          []*SortCriteria `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupingConfig) Reset() {
	*x = GroupingConfig{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupingConfig) ProtoMessage() {}

func (x *GroupingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupingConfig.ProtoReflect.Descriptor instead.
func (*GroupingConfig) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{15}
}

func (x *GroupingConfig) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *GroupingConfig) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GroupingConfig) GetSort() []*SortCriteria {
	if x != nil {
		return x.Sort
	}
	return nil
}

// 重複除去設定
type DistinctConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 重複判定に使用するフィールド
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// 重複時に保持するレコードの選択基準
	Keep          KeepCriteria `protobuf:"varint,2,opt,name=keep,proto3,enum=avion.common.v1.KeepCriteria" json:"keep,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DistinctConfig) Reset() {
	*x = DistinctConfig{}
	mi := &file_avion_common_v1_filter_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DistinctConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistinctConfig) ProtoMessage() {}

func (x *DistinctConfig) ProtoReflect() protoreflect.Message {
	mi := &file_avion_common_v1_filter_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistinctConfig.ProtoReflect.Descriptor instead.
func (*DistinctConfig) Descriptor() ([]byte, []int) {
	return file_avion_common_v1_filter_proto_rawDescGZIP(), []int{16}
}

func (x *DistinctConfig) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *DistinctConfig) GetKeep() KeepCriteria {
	if x != nil {
		return x.Keep
	}
	return KeepCriteria_KEEP_CRITERIA_UNSPECIFIED
}

var File_avion_common_v1_filter_proto protoreflect.FileDescriptor

const file_avion_common_v1_filter_proto_rawDesc = "" +
	"\n" +
	"\x1cavion/common/v1/filter.proto\x12\x0favion.common.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xde\x04\n" +
	"\vFieldFilter\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12;\n" +
	"\boperator\x18\x02 \x01(\x0e2\x1f.avion.common.v1.FilterOperatorR\boperator\x12#\n" +
	"\fstring_value\x18\x03 \x01(\tH\x00R\vstringValue\x12\x1d\n" +
	"\tint_value\x18\x04 \x01(\x03H\x00R\bintValue\x12#\n" +
	"\fdouble_value\x18\x05 \x01(\x01H\x00R\vdoubleValue\x12\x1f\n" +
	"\n" +
	"bool_value\x18\x06 \x01(\bH\x00R\tboolValue\x12E\n" +
	"\x0ftimestamp_value\x18\a \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x0etimestampValue\x12I\n" +
	"\x11string_list_value\x18\b \x01(\v2\x1b.avion.common.v1.StringListH\x00R\x0fstringListValue\x12I\n" +
	"\x11number_list_value\x18\t \x01(\v2\x1b.avion.common.v1.NumberListH\x00R\x0fnumberListValue\x12>\n" +
	"\vrange_value\x18\n" +
	" \x01(\v2\x1b.avion.common.v1.RangeValueH\x00R\n" +
	"rangeValue\x12)\n" +
	"\x10case_insensitive\x18\x14 \x01(\bR\x0fcaseInsensitive\x12!\n" +
	"\finclude_null\x18\x15 \x01(\bR\vincludeNullB\a\n" +
	"\x05value\"$\n" +
	"\n" +
	"StringList\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06values\"$\n" +
	"\n" +
	"NumberList\x12\x16\n" +
	"\x06values\x18\x01 \x03(\x01R\x06values\"\xb2\x03\n" +
	"\n" +
	"RangeValue\x12#\n" +
	"\fstring_start\x18\x01 \x01(\tH\x00R\vstringStart\x12\x1d\n" +
	"\tint_start\x18\x02 \x01(\x03H\x00R\bintStart\x12#\n" +
	"\fdouble_start\x18\x03 \x01(\x01H\x00R\vdoubleStart\x12E\n" +
	"\x0ftimestamp_start\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x0etimestampStart\x12\x1f\n" +
	"\n" +
	"string_end\x18\x05 \x01(\tH\x01R\tstringEnd\x12\x19\n" +
	"\aint_end\x18\x06 \x01(\x03H\x01R\x06intEnd\x12\x1f\n" +
	"\n" +
	"double_end\x18\a \x01(\x01H\x01R\tdoubleEnd\x12A\n" +
	"\rtimestamp_end\x18\b \x01(\v2\x1a.google.protobuf.TimestampH\x01R\ftimestampEnd\x12#\n" +
	"\rinclude_start\x18\t \x01(\bR\fincludeStart\x12\x1f\n" +
	"\vinclude_end\x18\n" +
	" \x01(\bR\n" +
	"includeEndB\a\n" +
	"\x05startB\x05\n" +
	"\x03end\"\x82\x01\n" +
	"\x0fCompositeFilter\x12<\n" +
	"\boperator\x18\x01 \x01(\x0e2 .avion.common.v1.LogicalOperatorR\boperator\x121\n" +
	"\afilters\x18\x02 \x03(\v2\x17.avion.common.v1.FilterR\afilters\"\x8f\x01\n" +
	"\x06Filter\x124\n" +
	"\x05field\x18\x01 \x01(\v2\x1c.avion.common.v1.FieldFilterH\x00R\x05field\x12@\n" +
	"\tcomposite\x18\x02 \x01(\v2 .avion.common.v1.CompositeFilterH\x00R\tcompositeB\r\n" +
	"\vfilter_type\"\x9a\x01\n" +
	"\fSortCriteria\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x120\n" +
	"\x05order\x18\x02 \x01(\x0e2\x1a.avion.common.v1.SortOrderR\x05order\x12B\n" +
	"\rnull_handling\x18\x03 \x01(\x0e2\x1d.avion.common.v1.NullHandlingR\fnullHandling\"\xb2\x01\n" +
	"\rFilterRequest\x12/\n" +
	"\x06filter\x18\x01 \x01(\v2\x17.avion.common.v1.FilterR\x06filter\x121\n" +
	"\x04sort\x18\x02 \x03(\v2\x1d.avion.common.v1.SortCriteriaR\x04sort\x12\x16\n" +
	"\x06fields\x18\x03 \x03(\tR\x06fields\x12%\n" +
	"\x0eexclude_fields\x18\x04 \x03(\tR\rexcludeFields\"\x82\x01\n" +
	"\vSearchQuery\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12#\n" +
	"\rsearch_fields\x18\x02 \x03(\tR\fsearchFields\x128\n" +
	"\aoptions\x18\x03 \x01(\v2\x1e.avion.common.v1.SearchOptionsR\aoptions\"\xa9\x03\n" +
	"\rSearchOptions\x12)\n" +
	"\x10case_insensitive\x18\x01 \x01(\bR\x0fcaseInsensitive\x12#\n" +
	"\rpartial_match\x18\x02 \x01(\bR\fpartialMatch\x12\x14\n" +
	"\x05fuzzy\x18\x03 \x01(\bR\x05fuzzy\x12\x1c\n" +
	"\tfuzziness\x18\x04 \x01(\x05R\tfuzziness\x12\x1c\n" +
	"\thighlight\x18\x05 \x01(\bR\thighlight\x12E\n" +
	"\x0ehighlight_tags\x18\x06 \x01(\v2\x1e.avion.common.v1.HighlightTagsR\rhighlightTags\x12\x1b\n" +
	"\tmin_score\x18\a \x01(\x02R\bminScore\x12R\n" +
	"\ffield_boosts\x18\b \x03(\v2/.avion.common.v1.SearchOptions.FieldBoostsEntryR\vfieldBoosts\x1a>\n" +
	"\x10FieldBoostsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"C\n" +
	"\rHighlightTags\x12\x17\n" +
	"\apre_tag\x18\x01 \x01(\tR\x06preTag\x12\x19\n" +
	"\bpost_tag\x18\x02 \x01(\tR\apostTag\"\x83\x02\n" +
	"\x12AggregationRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x124\n" +
	"\x04type\x18\x02 \x01(\x0e2 .avion.common.v1.AggregationTypeR\x04type\x12\x14\n" +
	"\x05field\x18\x03 \x01(\tR\x05field\x12=\n" +
	"\aoptions\x18\x04 \x01(\v2#.avion.common.v1.AggregationOptionsR\aoptions\x12N\n" +
	"\x10sub_aggregations\x18\x05 \x03(\v2#.avion.common.v1.AggregationRequestR\x0fsubAggregations\"\x9d\x02\n" +
	"\x12AggregationOptions\x12\x12\n" +
	"\x04size\x18\x01 \x01(\x05R\x04size\x12\x1a\n" +
	"\binterval\x18\x02 \x01(\x01R\binterval\x12#\n" +
	"\rdate_interval\x18\x03 \x01(\tR\fdateInterval\x12 \n" +
	"\vpercentiles\x18\x04 \x03(\x01R\vpercentiles\x123\n" +
	"\x06ranges\x18\x05 \x03(\v2\x1b.avion.common.v1.RangeValueR\x06ranges\x12\x1a\n" +
	"\btimezone\x18\x06 \x01(\tR\btimezone\x12?\n" +
	"\amissing\x18\a \x01(\x0e2%.avion.common.v1.MissingValueHandlingR\amissing\"\xab\x01\n" +
	"\fFacetRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05field\x18\x02 \x01(\tR\x05field\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x1b\n" +
	"\tmin_count\x18\x04 \x01(\x05R\bminCount\x12>\n" +
	"\n" +
	"sort_order\x18\x05 \x01(\x0e2\x1f.avion.common.v1.FacetSortOrderR\tsortOrder\"\xff\x02\n" +
	"\x15AdvancedFilterRequest\x126\n" +
	"\x06filter\x18\x01 \x01(\v2\x1e.avion.common.v1.FilterRequestR\x06filter\x124\n" +
	"\x06search\x18\x02 \x01(\v2\x1c.avion.common.v1.SearchQueryR\x06search\x12G\n" +
	"\faggregations\x18\x03 \x03(\v2#.avion.common.v1.AggregationRequestR\faggregations\x125\n" +
	"\x06facets\x18\x04 \x03(\v2\x1d.avion.common.v1.FacetRequestR\x06facets\x12;\n" +
	"\bgrouping\x18\x05 \x01(\v2\x1f.avion.common.v1.GroupingConfigR\bgrouping\x12;\n" +
	"\bdistinct\x18\x06 \x01(\v2\x1f.avion.common.v1.DistinctConfigR\bdistinct\"q\n" +
	"\x0eGroupingConfig\x12\x16\n" +
	"\x06fields\x18\x01 \x03(\tR\x06fields\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x121\n" +
	"\x04sort\x18\x03 \x03(\v2\x1d.avion.common.v1.SortCriteriaR\x04sort\"[\n" +
	"\x0eDistinctConfig\x12\x16\n" +
	"\x06fields\x18\x01 \x03(\tR\x06fields\x121\n" +
	"\x04keep\x18\x02 \x01(\x0e2\x1d.avion.common.v1.KeepCriteriaR\x04keep*\xe9\x04\n" +
	"\x0eFilterOperator\x12\x1f\n" +
	"\x1bFILTER_OPERATOR_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16FILTER_OPERATOR_EQUALS\x10\x01\x12\x1e\n" +
	"\x1aFILTER_OPERATOR_NOT_EQUALS\x10\x02\x12 \n" +
	"\x1cFILTER_OPERATOR_GREATER_THAN\x10\x03\x12*\n" +
	"&FILTER_OPERATOR_GREATER_THAN_OR_EQUALS\x10\x04\x12\x1d\n" +
	"\x19FILTER_OPERATOR_LESS_THAN\x10\x05\x12'\n" +
	"#FILTER_OPERATOR_LESS_THAN_OR_EQUALS\x10\x06\x12\x1c\n" +
	"\x18FILTER_OPERATOR_CONTAINS\x10\a\x12 \n" +
	"\x1cFILTER_OPERATOR_NOT_CONTAINS\x10\b\x12\x1f\n" +
	"\x1bFILTER_OPERATOR_STARTS_WITH\x10\t\x12\x1d\n" +
	"\x19FILTER_OPERATOR_ENDS_WITH\x10\n" +
	"\x12\x19\n" +
	"\x15FILTER_OPERATOR_REGEX\x10\v\x12\x16\n" +
	"\x12FILTER_OPERATOR_IN\x10\f\x12\x1a\n" +
	"\x16FILTER_OPERATOR_NOT_IN\x10\r\x12\x1b\n" +
	"\x17FILTER_OPERATOR_IS_NULL\x10\x0e\x12\x1f\n" +
	"\x1bFILTER_OPERATOR_IS_NOT_NULL\x10\x0f\x12\x1b\n" +
	"\x17FILTER_OPERATOR_BETWEEN\x10\x10\x12\x1a\n" +
	"\x16FILTER_OPERATOR_EXISTS\x10\x11\x12\x1e\n" +
	"\x1aFILTER_OPERATOR_NOT_EXISTS\x10\x12*P\n" +
	"\tSortOrder\x12\x1a\n" +
	"\x16SORT_ORDER_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eSORT_ORDER_ASC\x10\x01\x12\x13\n" +
	"\x0fSORT_ORDER_DESC\x10\x02*\x80\x01\n" +
	"\x0fLogicalOperator\x12 \n" +
	"\x1cLOGICAL_OPERATOR_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14LOGICAL_OPERATOR_AND\x10\x01\x12\x17\n" +
	"\x13LOGICAL_OPERATOR_OR\x10\x02\x12\x18\n" +
	"\x14LOGICAL_OPERATOR_NOT\x10\x03*^\n" +
	"\fNullHandling\x12\x1d\n" +
	"\x19NULL_HANDLING_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13NULL_HANDLING_FIRST\x10\x01\x12\x16\n" +
	"\x12NULL_HANDLING_LAST\x10\x02*\xf7\x02\n" +
	"\x0fAggregationType\x12 \n" +
	"\x1cAGGREGATION_TYPE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16AGGREGATION_TYPE_COUNT\x10\x01\x12\x18\n" +
	"\x14AGGREGATION_TYPE_SUM\x10\x02\x12\x18\n" +
	"\x14AGGREGATION_TYPE_AVG\x10\x03\x12\x18\n" +
	"\x14AGGREGATION_TYPE_MIN\x10\x04\x12\x18\n" +
	"\x14AGGREGATION_TYPE_MAX\x10\x05\x12 \n" +
	"\x1cAGGREGATION_TYPE_CARDINALITY\x10\x06\x12\x1f\n" +
	"\x1bAGGREGATION_TYPE_PERCENTILE\x10\a\x12\x1e\n" +
	"\x1aAGGREGATION_TYPE_HISTOGRAM\x10\b\x12#\n" +
	"\x1fAGGREGATION_TYPE_DATE_HISTOGRAM\x10\t\x12\x1a\n" +
	"\x16AGGREGATION_TYPE_TERMS\x10\n" +
	"\x12\x1a\n" +
	"\x16AGGREGATION_TYPE_RANGE\x10\v*\xa8\x01\n" +
	"\x14MissingValueHandling\x12&\n" +
	"\"MISSING_VALUE_HANDLING_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dMISSING_VALUE_HANDLING_IGNORE\x10\x01\x12\"\n" +
	"\x1eMISSING_VALUE_HANDLING_DEFAULT\x10\x02\x12!\n" +
	"\x1dMISSING_VALUE_HANDLING_BUCKET\x10\x03*\xb4\x01\n" +
	"\x0eFacetSortOrder\x12 \n" +
	"\x1cFACET_SORT_ORDER_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bFACET_SORT_ORDER_COUNT_DESC\x10\x01\x12\x1e\n" +
	"\x1aFACET_SORT_ORDER_COUNT_ASC\x10\x02\x12\x1e\n" +
	"\x1aFACET_SORT_ORDER_VALUE_ASC\x10\x03\x12\x1f\n" +
	"\x1bFACET_SORT_ORDER_VALUE_DESC\x10\x04*\x92\x01\n" +
	"\fKeepCriteria\x12\x1d\n" +
	"\x19KEEP_CRITERIA_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13KEEP_CRITERIA_FIRST\x10\x01\x12\x16\n" +
	"\x12KEEP_CRITERIA_LAST\x10\x02\x12\x18\n" +
	"\x14KEEP_CRITERIA_NEWEST\x10\x03\x12\x18\n" +
	"\x14KEEP_CRITERIA_OLDEST\x10\x04B\xb9\x01\n" +
	"\x13com.avion.common.v1B\vFilterProtoP\x01Z7github.com/na2na-p/avion/proto/avion/common/v1;commonv1\xa2\x02\x03ACX\xaa\x02\x0fAvion.Common.V1\xca\x02\x0fAvion\\Common\\V1\xe2\x02\x1bAvion\\Common\\V1\\GPBMetadata\xea\x02\x11Avion::Common::V1b\x06proto3"

var (
	file_avion_common_v1_filter_proto_rawDescOnce sync.Once
	file_avion_common_v1_filter_proto_rawDescData []byte
)

func file_avion_common_v1_filter_proto_rawDescGZIP() []byte {
	file_avion_common_v1_filter_proto_rawDescOnce.Do(func() {
		file_avion_common_v1_filter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_avion_common_v1_filter_proto_rawDesc), len(file_avion_common_v1_filter_proto_rawDesc)))
	})
	return file_avion_common_v1_filter_proto_rawDescData
}

var file_avion_common_v1_filter_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_avion_common_v1_filter_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_avion_common_v1_filter_proto_goTypes = []any{
	(FilterOperator)(0),           // 0: avion.common.v1.FilterOperator
	(SortOrder)(0),                // 1: avion.common.v1.SortOrder
	(LogicalOperator)(0),          // 2: avion.common.v1.LogicalOperator
	(NullHandling)(0),             // 3: avion.common.v1.NullHandling
	(AggregationType)(0),          // 4: avion.common.v1.AggregationType
	(MissingValueHandling)(0),     // 5: avion.common.v1.MissingValueHandling
	(FacetSortOrder)(0),           // 6: avion.common.v1.FacetSortOrder
	(KeepCriteria)(0),             // 7: avion.common.v1.KeepCriteria
	(*FieldFilter)(nil),           // 8: avion.common.v1.FieldFilter
	(*StringList)(nil),            // 9: avion.common.v1.StringList
	(*NumberList)(nil),            // 10: avion.common.v1.NumberList
	(*RangeValue)(nil),            // 11: avion.common.v1.RangeValue
	(*CompositeFilter)(nil),       // 12: avion.common.v1.CompositeFilter
	(*Filter)(nil),                // 13: avion.common.v1.Filter
	(*SortCriteria)(nil),          // 14: avion.common.v1.SortCriteria
	(*FilterRequest)(nil),         // 15: avion.common.v1.FilterRequest
	(*SearchQuery)(nil),           // 16: avion.common.v1.SearchQuery
	(*SearchOptions)(nil),         // 17: avion.common.v1.SearchOptions
	(*HighlightTags)(nil),         // 18: avion.common.v1.HighlightTags
	(*AggregationRequest)(nil),    // 19: avion.common.v1.AggregationRequest
	(*AggregationOptions)(nil),    // 20: avion.common.v1.AggregationOptions
	(*FacetRequest)(nil),          // 21: avion.common.v1.FacetRequest
	(*AdvancedFilterRequest)(nil), // 22: avion.common.v1.AdvancedFilterRequest
	(*GroupingConfig)(nil),        // 23: avion.common.v1.GroupingConfig
	(*DistinctConfig)(nil),        // 24: avion.common.v1.DistinctConfig
	nil,                           // 25: avion.common.v1.SearchOptions.FieldBoostsEntry
	(*timestamppb.Timestamp)(nil), // 26: google.protobuf.Timestamp
}
var file_avion_common_v1_filter_proto_depIdxs = []int32{
	0,  // 0: avion.common.v1.FieldFilter.operator:type_name -> avion.common.v1.FilterOperator
	26, // 1: avion.common.v1.FieldFilter.timestamp_value:type_name -> google.protobuf.Timestamp
	9,  // 2: avion.common.v1.FieldFilter.string_list_value:type_name -> avion.common.v1.StringList
	10, // 3: avion.common.v1.FieldFilter.number_list_value:type_name -> avion.common.v1.NumberList
	11, // 4: avion.common.v1.FieldFilter.range_value:type_name -> avion.common.v1.RangeValue
	26, // 5: avion.common.v1.RangeValue.timestamp_start:type_name -> google.protobuf.Timestamp
	26, // 6: avion.common.v1.RangeValue.timestamp_end:type_name -> google.protobuf.Timestamp
	2,  // 7: avion.common.v1.CompositeFilter.operator:type_name -> avion.common.v1.LogicalOperator
	13, // 8: avion.common.v1.CompositeFilter.filters:type_name -> avion.common.v1.Filter
	8,  // 9: avion.common.v1.Filter.field:type_name -> avion.common.v1.FieldFilter
	12, // 10: avion.common.v1.Filter.composite:type_name -> avion.common.v1.CompositeFilter
	1,  // 11: avion.common.v1.SortCriteria.order:type_name -> avion.common.v1.SortOrder
	3,  // 12: avion.common.v1.SortCriteria.null_handling:type_name -> avion.common.v1.NullHandling
	13, // 13: avion.common.v1.FilterRequest.filter:type_name -> avion.common.v1.Filter
	14, // 14: avion.common.v1.FilterRequest.sort:type_name -> avion.common.v1.SortCriteria
	17, // 15: avion.common.v1.SearchQuery.options:type_name -> avion.common.v1.SearchOptions
	18, // 16: avion.common.v1.SearchOptions.highlight_tags:type_name -> avion.common.v1.HighlightTags
	25, // 17: avion.common.v1.SearchOptions.field_boosts:type_name -> avion.common.v1.SearchOptions.FieldBoostsEntry
	4,  // 18: avion.common.v1.AggregationRequest.type:type_name -> avion.common.v1.AggregationType
	20, // 19: avion.common.v1.AggregationRequest.options:type_name -> avion.common.v1.AggregationOptions
	19, // 20: avion.common.v1.AggregationRequest.sub_aggregations:type_name -> avion.common.v1.AggregationRequest
	11, // 21: avion.common.v1.AggregationOptions.ranges:type_name -> avion.common.v1.RangeValue
	5,  // 22: avion.common.v1.AggregationOptions.missing:type_name -> avion.common.v1.MissingValueHandling
	6,  // 23: avion.common.v1.FacetRequest.sort_order:type_name -> avion.common.v1.FacetSortOrder
	15, // 24: avion.common.v1.AdvancedFilterRequest.filter:type_name -> avion.common.v1.FilterRequest
	16, // 25: avion.common.v1.AdvancedFilterRequest.search:type_name -> avion.common.v1.SearchQuery
	19, // 26: avion.common.v1.AdvancedFilterRequest.aggregations:type_name -> avion.common.v1.AggregationRequest
	21, // 27: avion.common.v1.AdvancedFilterRequest.facets:type_name -> avion.common.v1.FacetRequest
	23, // 28: avion.common.v1.AdvancedFilterRequest.grouping:type_name -> avion.common.v1.GroupingConfig
	24, // 29: avion.common.v1.AdvancedFilterRequest.distinct:type_name -> avion.common.v1.DistinctConfig
	14, // 30: avion.common.v1.GroupingConfig.sort:type_name -> avion.common.v1.SortCriteria
	7,  // 31: avion.common.v1.DistinctConfig.keep:type_name -> avion.common.v1.KeepCriteria
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_avion_common_v1_filter_proto_init() }
func file_avion_common_v1_filter_proto_init() {
	if File_avion_common_v1_filter_proto != nil {
		return
	}
	file_avion_common_v1_filter_proto_msgTypes[0].OneofWrappers = []any{
		(*FieldFilter_StringValue)(nil),
		(*FieldFilter_IntValue)(nil),
		(*FieldFilter_DoubleValue)(nil),
		(*FieldFilter_BoolValue)(nil),
		(*FieldFilter_TimestampValue)(nil),
		(*FieldFilter_StringListValue)(nil),
		(*FieldFilter_NumberListValue)(nil),
		(*FieldFilter_RangeValue)(nil),
	}
	file_avion_common_v1_filter_proto_msgTypes[3].OneofWrappers = []any{
		(*RangeValue_StringStart)(nil),
		(*RangeValue_IntStart)(nil),
		(*RangeValue_DoubleStart)(nil),
		(*RangeValue_TimestampStart)(nil),
		(*RangeValue_StringEnd)(nil),
		(*RangeValue_IntEnd)(nil),
		(*RangeValue_DoubleEnd)(nil),
		(*RangeValue_TimestampEnd)(nil),
	}
	file_avion_common_v1_filter_proto_msgTypes[5].OneofWrappers = []any{
		(*Filter_Field)(nil),
		(*Filter_Composite)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_avion_common_v1_filter_proto_rawDesc), len(file_avion_common_v1_filter_proto_rawDesc)),
			NumEnums:      8,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_avion_common_v1_filter_proto_goTypes,
		DependencyIndexes: file_avion_common_v1_filter_proto_depIdxs,
		EnumInfos:         file_avion_common_v1_filter_proto_enumTypes,
		MessageInfos:      file_avion_common_v1_filter_proto_msgTypes,
	}.Build()
	File_avion_common_v1_filter_proto = out.File
	file_avion_common_v1_filter_proto_goTypes = nil
	file_avion_common_v1_filter_proto_depIdxs = nil
}
