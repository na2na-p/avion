// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: avion/notification/v1/notification_service.proto

package notificationv1

import (
	v1 "github.com/na2na-p/avion/proto/avion/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 接続操作タイプ
type ConnectionAction int32

const (
	// 未指定
	ConnectionAction_CONNECTION_ACTION_UNSPECIFIED ConnectionAction = 0
	// 接続を切断
	ConnectionAction_CONNECTION_ACTION_DISCONNECT ConnectionAction = 1
	// 接続をリフレッシュ
	ConnectionAction_CONNECTION_ACTION_REFRESH ConnectionAction = 2
	// 接続を一時停止
	ConnectionAction_CONNECTION_ACTION_PAUSE ConnectionAction = 3
	// 接続を再開
	ConnectionAction_CONNECTION_ACTION_RESUME ConnectionAction = 4
)

// Enum value maps for ConnectionAction.
var (
	ConnectionAction_name = map[int32]string{
		0: "CONNECTION_ACTION_UNSPECIFIED",
		1: "CONNECTION_ACTION_DISCONNECT",
		2: "CONNECTION_ACTION_REFRESH",
		3: "CONNECTION_ACTION_PAUSE",
		4: "CONNECTION_ACTION_RESUME",
	}
	ConnectionAction_value = map[string]int32{
		"CONNECTION_ACTION_UNSPECIFIED": 0,
		"CONNECTION_ACTION_DISCONNECT":  1,
		"CONNECTION_ACTION_REFRESH":     2,
		"CONNECTION_ACTION_PAUSE":       3,
		"CONNECTION_ACTION_RESUME":      4,
	}
)

func (x ConnectionAction) Enum() *ConnectionAction {
	p := new(ConnectionAction)
	*p = x
	return p
}

func (x ConnectionAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionAction) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_notification_v1_notification_service_proto_enumTypes[0].Descriptor()
}

func (ConnectionAction) Type() protoreflect.EnumType {
	return &file_avion_notification_v1_notification_service_proto_enumTypes[0]
}

func (x ConnectionAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionAction.Descriptor instead.
func (ConnectionAction) EnumDescriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{0}
}

// 配信保証レベル
type DeliveryGuarantee int32

const (
	// 未指定（ベストエフォート）
	DeliveryGuarantee_DELIVERY_GUARANTEE_UNSPECIFIED DeliveryGuarantee = 0
	// 最低1回配信
	DeliveryGuarantee_DELIVERY_GUARANTEE_AT_LEAST_ONCE DeliveryGuarantee = 1
	// 最大1回配信
	DeliveryGuarantee_DELIVERY_GUARANTEE_AT_MOST_ONCE DeliveryGuarantee = 2
	// 正確に1回配信
	DeliveryGuarantee_DELIVERY_GUARANTEE_EXACTLY_ONCE DeliveryGuarantee = 3
)

// Enum value maps for DeliveryGuarantee.
var (
	DeliveryGuarantee_name = map[int32]string{
		0: "DELIVERY_GUARANTEE_UNSPECIFIED",
		1: "DELIVERY_GUARANTEE_AT_LEAST_ONCE",
		2: "DELIVERY_GUARANTEE_AT_MOST_ONCE",
		3: "DELIVERY_GUARANTEE_EXACTLY_ONCE",
	}
	DeliveryGuarantee_value = map[string]int32{
		"DELIVERY_GUARANTEE_UNSPECIFIED":   0,
		"DELIVERY_GUARANTEE_AT_LEAST_ONCE": 1,
		"DELIVERY_GUARANTEE_AT_MOST_ONCE":  2,
		"DELIVERY_GUARANTEE_EXACTLY_ONCE":  3,
	}
)

func (x DeliveryGuarantee) Enum() *DeliveryGuarantee {
	p := new(DeliveryGuarantee)
	*p = x
	return p
}

func (x DeliveryGuarantee) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeliveryGuarantee) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_notification_v1_notification_service_proto_enumTypes[1].Descriptor()
}

func (DeliveryGuarantee) Type() protoreflect.EnumType {
	return &file_avion_notification_v1_notification_service_proto_enumTypes[1]
}

func (x DeliveryGuarantee) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeliveryGuarantee.Descriptor instead.
func (DeliveryGuarantee) EnumDescriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{1}
}

// 通知作成リクエスト
type CreateNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 受信ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 通知タイプ
	Type NotificationType `protobuf:"varint,2,opt,name=type,proto3,enum=avion.notification.v1.NotificationType" json:"type,omitempty"`
	// タイトル
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 本文
	Body string `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	// 追加データ（JSON文字列形式）
	Data string `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	// アクションURL
	ActionUrl string `protobuf:"bytes,6,opt,name=action_url,json=actionUrl,proto3" json:"action_url,omitempty"`
	// 送信者ID（フォロー、いいね等の場合）
	SenderId string `protobuf:"bytes,7,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	// 関連エンティティID（Drop ID等）
	EntityId      string `protobuf:"bytes,8,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotificationRequest) Reset() {
	*x = CreateNotificationRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationRequest) ProtoMessage() {}

func (x *CreateNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationRequest.ProtoReflect.Descriptor instead.
func (*CreateNotificationRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateNotificationRequest) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_NOTIFICATION_TYPE_UNSPECIFIED
}

func (x *CreateNotificationRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateNotificationRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CreateNotificationRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *CreateNotificationRequest) GetActionUrl() string {
	if x != nil {
		return x.ActionUrl
	}
	return ""
}

func (x *CreateNotificationRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *CreateNotificationRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

// 通知作成レスポンス
type CreateNotificationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 作成された通知
	Notification *Notification `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	// 配信ステータス
	Deliveries    []*NotificationDelivery `protobuf:"bytes,2,rep,name=deliveries,proto3" json:"deliveries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotificationResponse) Reset() {
	*x = CreateNotificationResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationResponse) ProtoMessage() {}

func (x *CreateNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationResponse.ProtoReflect.Descriptor instead.
func (*CreateNotificationResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNotificationResponse) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *CreateNotificationResponse) GetDeliveries() []*NotificationDelivery {
	if x != nil {
		return x.Deliveries
	}
	return nil
}

// 通知取得リクエスト
type GetNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知ID
	NotificationId string `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	// ユーザーID（権限確認用）
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationRequest) Reset() {
	*x = GetNotificationRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationRequest) ProtoMessage() {}

func (x *GetNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetNotificationRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *GetNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 通知取得レスポンス
type GetNotificationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知
	Notification  *Notification `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationResponse) Reset() {
	*x = GetNotificationResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationResponse) ProtoMessage() {}

func (x *GetNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetNotificationResponse) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

// 通知一覧取得リクエスト
type ListNotificationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ページネーション
	Pagination *v1.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// フィルター
	Filter        *ListNotificationsFilter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationsRequest) Reset() {
	*x = ListNotificationsRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsRequest) ProtoMessage() {}

func (x *ListNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListNotificationsRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListNotificationsRequest) GetFilter() *ListNotificationsFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// 通知一覧フィルター
type ListNotificationsFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知タイプでフィルター
	Types []NotificationType `protobuf:"varint,1,rep,packed,name=types,proto3,enum=avion.notification.v1.NotificationType" json:"types,omitempty"`
	// 未読のみ表示
	UnreadOnly bool `protobuf:"varint,2,opt,name=unread_only,json=unreadOnly,proto3" json:"unread_only,omitempty"`
	// 開始日時
	From *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// 終了日時
	To *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	// 送信者IDでフィルター
	SenderIds []string `protobuf:"bytes,5,rep,name=sender_ids,json=senderIds,proto3" json:"sender_ids,omitempty"`
	// エンティティIDでフィルター
	EntityIds []string `protobuf:"bytes,6,rep,name=entity_ids,json=entityIds,proto3" json:"entity_ids,omitempty"`
	// 既読のみ表示
	ReadOnly bool `protobuf:"varint,7,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	// アクションURLパターンでフィルター（部分一致）
	ActionUrlPattern string `protobuf:"bytes,8,opt,name=action_url_pattern,json=actionUrlPattern,proto3" json:"action_url_pattern,omitempty"`
	// ソート順（created_at_desc, created_at_asc, read_at_desc, read_at_asc）
	SortBy        string `protobuf:"bytes,9,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationsFilter) Reset() {
	*x = ListNotificationsFilter{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsFilter) ProtoMessage() {}

func (x *ListNotificationsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsFilter.ProtoReflect.Descriptor instead.
func (*ListNotificationsFilter) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListNotificationsFilter) GetTypes() []NotificationType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *ListNotificationsFilter) GetUnreadOnly() bool {
	if x != nil {
		return x.UnreadOnly
	}
	return false
}

func (x *ListNotificationsFilter) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListNotificationsFilter) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ListNotificationsFilter) GetSenderIds() []string {
	if x != nil {
		return x.SenderIds
	}
	return nil
}

func (x *ListNotificationsFilter) GetEntityIds() []string {
	if x != nil {
		return x.EntityIds
	}
	return nil
}

func (x *ListNotificationsFilter) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *ListNotificationsFilter) GetActionUrlPattern() string {
	if x != nil {
		return x.ActionUrlPattern
	}
	return ""
}

func (x *ListNotificationsFilter) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

// 通知一覧取得レスポンス
type ListNotificationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知リスト
	Notifications []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	// ページネーション情報
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationsResponse) Reset() {
	*x = ListNotificationsResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsResponse) ProtoMessage() {}

func (x *ListNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsResponse.ProtoReflect.Descriptor instead.
func (*ListNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListNotificationsResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *ListNotificationsResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// 既読マークリクエスト
type MarkAsReadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知ID
	NotificationId string `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	// ユーザーID
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsReadRequest) Reset() {
	*x = MarkAsReadRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadRequest) ProtoMessage() {}

func (x *MarkAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAsReadRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{7}
}

func (x *MarkAsReadRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *MarkAsReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 既読マークレスポンス
type MarkAsReadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新された通知
	Notification  *Notification `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsReadResponse) Reset() {
	*x = MarkAsReadResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadResponse) ProtoMessage() {}

func (x *MarkAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkAsReadResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{8}
}

func (x *MarkAsReadResponse) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

// 全て既読マークリクエスト
type MarkAllAsReadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 通知タイプでフィルター（省略時は全タイプ）
	Types []NotificationType `protobuf:"varint,2,rep,packed,name=types,proto3,enum=avion.notification.v1.NotificationType" json:"types,omitempty"`
	// 指定日時以前の通知のみ（省略時は全て）
	Before        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=before,proto3" json:"before,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAllAsReadRequest) Reset() {
	*x = MarkAllAsReadRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAllAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAllAsReadRequest) ProtoMessage() {}

func (x *MarkAllAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAllAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAllAsReadRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{9}
}

func (x *MarkAllAsReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MarkAllAsReadRequest) GetTypes() []NotificationType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *MarkAllAsReadRequest) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

// 全て既読マークレスポンス
type MarkAllAsReadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 既読にした通知数
	MarkedCount   int32 `protobuf:"varint,1,opt,name=marked_count,json=markedCount,proto3" json:"marked_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAllAsReadResponse) Reset() {
	*x = MarkAllAsReadResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAllAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAllAsReadResponse) ProtoMessage() {}

func (x *MarkAllAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAllAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkAllAsReadResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{10}
}

func (x *MarkAllAsReadResponse) GetMarkedCount() int32 {
	if x != nil {
		return x.MarkedCount
	}
	return 0
}

// バッチ既読マークリクエスト
type BatchMarkAsReadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 既読にする通知IDリスト
	NotificationIds []string `protobuf:"bytes,1,rep,name=notification_ids,json=notificationIds,proto3" json:"notification_ids,omitempty"`
	// ユーザーID
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchMarkAsReadRequest) Reset() {
	*x = BatchMarkAsReadRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchMarkAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchMarkAsReadRequest) ProtoMessage() {}

func (x *BatchMarkAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchMarkAsReadRequest.ProtoReflect.Descriptor instead.
func (*BatchMarkAsReadRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{11}
}

func (x *BatchMarkAsReadRequest) GetNotificationIds() []string {
	if x != nil {
		return x.NotificationIds
	}
	return nil
}

func (x *BatchMarkAsReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// バッチ既読マークレスポンス
type BatchMarkAsReadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 成功した通知IDリスト
	SucceededIds []string `protobuf:"bytes,1,rep,name=succeeded_ids,json=succeededIds,proto3" json:"succeeded_ids,omitempty"`
	// 失敗した通知IDとエラーメッセージ
	FailedIds map[string]string `protobuf:"bytes,2,rep,name=failed_ids,json=failedIds,proto3" json:"failed_ids,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 成功数
	SuccessCount int32 `protobuf:"varint,3,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	// 失敗数
	FailureCount  int32 `protobuf:"varint,4,opt,name=failure_count,json=failureCount,proto3" json:"failure_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchMarkAsReadResponse) Reset() {
	*x = BatchMarkAsReadResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchMarkAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchMarkAsReadResponse) ProtoMessage() {}

func (x *BatchMarkAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchMarkAsReadResponse.ProtoReflect.Descriptor instead.
func (*BatchMarkAsReadResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{12}
}

func (x *BatchMarkAsReadResponse) GetSucceededIds() []string {
	if x != nil {
		return x.SucceededIds
	}
	return nil
}

func (x *BatchMarkAsReadResponse) GetFailedIds() map[string]string {
	if x != nil {
		return x.FailedIds
	}
	return nil
}

func (x *BatchMarkAsReadResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *BatchMarkAsReadResponse) GetFailureCount() int32 {
	if x != nil {
		return x.FailureCount
	}
	return 0
}

// 通知削除リクエスト
type DeleteNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知ID
	NotificationId string `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	// ユーザーID
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNotificationRequest) Reset() {
	*x = DeleteNotificationRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationRequest) ProtoMessage() {}

func (x *DeleteNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotificationRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteNotificationRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *DeleteNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 通知削除レスポンス
type DeleteNotificationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 削除成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 削除された通知ID
	DeletedNotificationId string `protobuf:"bytes,2,opt,name=deleted_notification_id,json=deletedNotificationId,proto3" json:"deleted_notification_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *DeleteNotificationResponse) Reset() {
	*x = DeleteNotificationResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationResponse) ProtoMessage() {}

func (x *DeleteNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationResponse.ProtoReflect.Descriptor instead.
func (*DeleteNotificationResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteNotificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteNotificationResponse) GetDeletedNotificationId() string {
	if x != nil {
		return x.DeletedNotificationId
	}
	return ""
}

// バッチ通知削除リクエスト
type BatchDeleteNotificationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 削除する通知IDリスト
	NotificationIds []string `protobuf:"bytes,1,rep,name=notification_ids,json=notificationIds,proto3" json:"notification_ids,omitempty"`
	// ユーザーID
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteNotificationsRequest) Reset() {
	*x = BatchDeleteNotificationsRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteNotificationsRequest) ProtoMessage() {}

func (x *BatchDeleteNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteNotificationsRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{15}
}

func (x *BatchDeleteNotificationsRequest) GetNotificationIds() []string {
	if x != nil {
		return x.NotificationIds
	}
	return nil
}

func (x *BatchDeleteNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// バッチ通知削除レスポンス
type BatchDeleteNotificationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 成功した通知IDリスト
	SucceededIds []string `protobuf:"bytes,1,rep,name=succeeded_ids,json=succeededIds,proto3" json:"succeeded_ids,omitempty"`
	// 失敗した通知IDとエラーメッセージ
	FailedIds map[string]string `protobuf:"bytes,2,rep,name=failed_ids,json=failedIds,proto3" json:"failed_ids,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 成功数
	SuccessCount int32 `protobuf:"varint,3,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	// 失敗数
	FailureCount  int32 `protobuf:"varint,4,opt,name=failure_count,json=failureCount,proto3" json:"failure_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteNotificationsResponse) Reset() {
	*x = BatchDeleteNotificationsResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteNotificationsResponse) ProtoMessage() {}

func (x *BatchDeleteNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteNotificationsResponse.ProtoReflect.Descriptor instead.
func (*BatchDeleteNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{16}
}

func (x *BatchDeleteNotificationsResponse) GetSucceededIds() []string {
	if x != nil {
		return x.SucceededIds
	}
	return nil
}

func (x *BatchDeleteNotificationsResponse) GetFailedIds() map[string]string {
	if x != nil {
		return x.FailedIds
	}
	return nil
}

func (x *BatchDeleteNotificationsResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *BatchDeleteNotificationsResponse) GetFailureCount() int32 {
	if x != nil {
		return x.FailureCount
	}
	return 0
}

// 通知設定取得リクエスト
type GetNotificationPreferencesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationPreferencesRequest) Reset() {
	*x = GetNotificationPreferencesRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationPreferencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationPreferencesRequest) ProtoMessage() {}

func (x *GetNotificationPreferencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationPreferencesRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationPreferencesRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetNotificationPreferencesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 通知設定取得レスポンス
type GetNotificationPreferencesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知設定
	Preferences   *NotificationPreference `protobuf:"bytes,1,opt,name=preferences,proto3" json:"preferences,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationPreferencesResponse) Reset() {
	*x = GetNotificationPreferencesResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationPreferencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationPreferencesResponse) ProtoMessage() {}

func (x *GetNotificationPreferencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationPreferencesResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationPreferencesResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetNotificationPreferencesResponse) GetPreferences() *NotificationPreference {
	if x != nil {
		return x.Preferences
	}
	return nil
}

// 通知設定更新リクエスト
type UpdateNotificationPreferencesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 更新するフィールドのマスク
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// 通知設定
	Preferences   *NotificationPreference `protobuf:"bytes,3,opt,name=preferences,proto3" json:"preferences,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNotificationPreferencesRequest) Reset() {
	*x = UpdateNotificationPreferencesRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotificationPreferencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotificationPreferencesRequest) ProtoMessage() {}

func (x *UpdateNotificationPreferencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotificationPreferencesRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotificationPreferencesRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateNotificationPreferencesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateNotificationPreferencesRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateNotificationPreferencesRequest) GetPreferences() *NotificationPreference {
	if x != nil {
		return x.Preferences
	}
	return nil
}

// 通知設定更新レスポンス
type UpdateNotificationPreferencesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新された通知設定
	Preferences   *NotificationPreference `protobuf:"bytes,1,opt,name=preferences,proto3" json:"preferences,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNotificationPreferencesResponse) Reset() {
	*x = UpdateNotificationPreferencesResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotificationPreferencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotificationPreferencesResponse) ProtoMessage() {}

func (x *UpdateNotificationPreferencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotificationPreferencesResponse.ProtoReflect.Descriptor instead.
func (*UpdateNotificationPreferencesResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateNotificationPreferencesResponse) GetPreferences() *NotificationPreference {
	if x != nil {
		return x.Preferences
	}
	return nil
}

// 通知送信リクエスト（内部用）
type SendNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知ID
	NotificationId string `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	// 送信チャンネル
	Channels []NotificationChannel `protobuf:"varint,2,rep,packed,name=channels,proto3,enum=avion.notification.v1.NotificationChannel" json:"channels,omitempty"`
	// 即座に送信（キューイングしない）
	Immediate     bool `protobuf:"varint,3,opt,name=immediate,proto3" json:"immediate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationRequest) Reset() {
	*x = SendNotificationRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationRequest) ProtoMessage() {}

func (x *SendNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{21}
}

func (x *SendNotificationRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *SendNotificationRequest) GetChannels() []NotificationChannel {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *SendNotificationRequest) GetImmediate() bool {
	if x != nil {
		return x.Immediate
	}
	return false
}

// 通知送信レスポンス
type SendNotificationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 配信ステータス
	Deliveries    []*NotificationDelivery `protobuf:"bytes,1,rep,name=deliveries,proto3" json:"deliveries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationResponse) Reset() {
	*x = SendNotificationResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationResponse) ProtoMessage() {}

func (x *SendNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendNotificationResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{22}
}

func (x *SendNotificationResponse) GetDeliveries() []*NotificationDelivery {
	if x != nil {
		return x.Deliveries
	}
	return nil
}

// 通知ストリームリクエスト（SSE/WebSocket用）
type StreamNotificationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 通知タイプフィルター（省略時は全タイプ）
	Types []NotificationType `protobuf:"varint,2,rep,packed,name=types,proto3,enum=avion.notification.v1.NotificationType" json:"types,omitempty"`
	// 開始位置（既存通知ID、省略時は現在時刻から）
	AfterNotificationId string `protobuf:"bytes,3,opt,name=after_notification_id,json=afterNotificationId,proto3" json:"after_notification_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *StreamNotificationsRequest) Reset() {
	*x = StreamNotificationsRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamNotificationsRequest) ProtoMessage() {}

func (x *StreamNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamNotificationsRequest.ProtoReflect.Descriptor instead.
func (*StreamNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{23}
}

func (x *StreamNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *StreamNotificationsRequest) GetTypes() []NotificationType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *StreamNotificationsRequest) GetAfterNotificationId() string {
	if x != nil {
		return x.AfterNotificationId
	}
	return ""
}

// 通知ストリームレスポンス
type StreamNotificationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知
	Notification *Notification `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	// イベントタイプ（new, update, delete）
	EventType string `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	// タイムスタンプ
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamNotificationsResponse) Reset() {
	*x = StreamNotificationsResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamNotificationsResponse) ProtoMessage() {}

func (x *StreamNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamNotificationsResponse.ProtoReflect.Descriptor instead.
func (*StreamNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{24}
}

func (x *StreamNotificationsResponse) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *StreamNotificationsResponse) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *StreamNotificationsResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// 未読数取得リクエスト
type GetUnreadCountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 通知タイプ別に取得するか
	ByType        bool `protobuf:"varint,2,opt,name=by_type,json=byType,proto3" json:"by_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnreadCountRequest) Reset() {
	*x = GetUnreadCountRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadCountRequest) ProtoMessage() {}

func (x *GetUnreadCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadCountRequest.ProtoReflect.Descriptor instead.
func (*GetUnreadCountRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetUnreadCountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUnreadCountRequest) GetByType() bool {
	if x != nil {
		return x.ByType
	}
	return false
}

// 未読数取得レスポンス
type GetUnreadCountResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 未読数情報
	UnreadCount   *UnreadCount `protobuf:"bytes,1,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnreadCountResponse) Reset() {
	*x = GetUnreadCountResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadCountResponse) ProtoMessage() {}

func (x *GetUnreadCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadCountResponse.ProtoReflect.Descriptor instead.
func (*GetUnreadCountResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetUnreadCountResponse) GetUnreadCount() *UnreadCount {
	if x != nil {
		return x.UnreadCount
	}
	return nil
}

// バッチ通知作成リクエスト
type BatchCreateNotificationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知作成リクエストのリスト
	Notifications []*CreateNotificationRequest `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	// トランザクション処理（一つでも失敗したら全てロールバック）
	Transactional bool `protobuf:"varint,2,opt,name=transactional,proto3" json:"transactional,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateNotificationsRequest) Reset() {
	*x = BatchCreateNotificationsRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateNotificationsRequest) ProtoMessage() {}

func (x *BatchCreateNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateNotificationsRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{27}
}

func (x *BatchCreateNotificationsRequest) GetNotifications() []*CreateNotificationRequest {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *BatchCreateNotificationsRequest) GetTransactional() bool {
	if x != nil {
		return x.Transactional
	}
	return false
}

// バッチ通知作成レスポンス
type BatchCreateNotificationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 作成された通知リスト
	Notifications []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	// 失敗した通知のインデックスとエラー
	Failures map[int32]string `protobuf:"bytes,2,rep,name=failures,proto3" json:"failures,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 成功数
	SuccessCount int32 `protobuf:"varint,3,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	// 失敗数
	FailureCount  int32 `protobuf:"varint,4,opt,name=failure_count,json=failureCount,proto3" json:"failure_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateNotificationsResponse) Reset() {
	*x = BatchCreateNotificationsResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateNotificationsResponse) ProtoMessage() {}

func (x *BatchCreateNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateNotificationsResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{28}
}

func (x *BatchCreateNotificationsResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *BatchCreateNotificationsResponse) GetFailures() map[int32]string {
	if x != nil {
		return x.Failures
	}
	return nil
}

func (x *BatchCreateNotificationsResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *BatchCreateNotificationsResponse) GetFailureCount() int32 {
	if x != nil {
		return x.FailureCount
	}
	return 0
}

// WebSocketストリームリクエスト（双方向ストリーミング）
type WebSocketStreamRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// リクエストID（一意識別子）
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// ユーザーID（初回接続時に必須）
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// メッセージ
	Message       *WebSocketMessage `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSocketStreamRequest) Reset() {
	*x = WebSocketStreamRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketStreamRequest) ProtoMessage() {}

func (x *WebSocketStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketStreamRequest.ProtoReflect.Descriptor instead.
func (*WebSocketStreamRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{29}
}

func (x *WebSocketStreamRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *WebSocketStreamRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WebSocketStreamRequest) GetMessage() *WebSocketMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// WebSocketストリームレスポンス
type WebSocketStreamResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// レスポンスID（一意識別子）
	ResponseId string `protobuf:"bytes,1,opt,name=response_id,json=responseId,proto3" json:"response_id,omitempty"`
	// リクエストIDへの参照（該当する場合）
	RequestId string `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// メッセージ
	Message       *WebSocketMessage `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSocketStreamResponse) Reset() {
	*x = WebSocketStreamResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketStreamResponse) ProtoMessage() {}

func (x *WebSocketStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketStreamResponse.ProtoReflect.Descriptor instead.
func (*WebSocketStreamResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{30}
}

func (x *WebSocketStreamResponse) GetResponseId() string {
	if x != nil {
		return x.ResponseId
	}
	return ""
}

func (x *WebSocketStreamResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *WebSocketStreamResponse) GetMessage() *WebSocketMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// WebSocket接続管理リクエスト
type ManageWebSocketConnectionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 接続ID
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	// 操作タイプ
	Action ConnectionAction `protobuf:"varint,2,opt,name=action,proto3,enum=avion.notification.v1.ConnectionAction" json:"action,omitempty"`
	// 理由（切断時など）
	Reason        string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManageWebSocketConnectionRequest) Reset() {
	*x = ManageWebSocketConnectionRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManageWebSocketConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageWebSocketConnectionRequest) ProtoMessage() {}

func (x *ManageWebSocketConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageWebSocketConnectionRequest.ProtoReflect.Descriptor instead.
func (*ManageWebSocketConnectionRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{31}
}

func (x *ManageWebSocketConnectionRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ManageWebSocketConnectionRequest) GetAction() ConnectionAction {
	if x != nil {
		return x.Action
	}
	return ConnectionAction_CONNECTION_ACTION_UNSPECIFIED
}

func (x *ManageWebSocketConnectionRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// WebSocket接続管理レスポンス
type ManageWebSocketConnectionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 更新された接続情報
	Connection    *WebSocketConnection `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManageWebSocketConnectionResponse) Reset() {
	*x = ManageWebSocketConnectionResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManageWebSocketConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageWebSocketConnectionResponse) ProtoMessage() {}

func (x *ManageWebSocketConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageWebSocketConnectionResponse.ProtoReflect.Descriptor instead.
func (*ManageWebSocketConnectionResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{32}
}

func (x *ManageWebSocketConnectionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ManageWebSocketConnectionResponse) GetConnection() *WebSocketConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

// アクティブ接続一覧取得リクエスト
type ListActiveConnectionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーIDでフィルター（オプション）
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// プラットフォームでフィルター（オプション）
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	// ページネーション
	Pagination    *v1.PaginationRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListActiveConnectionsRequest) Reset() {
	*x = ListActiveConnectionsRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListActiveConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveConnectionsRequest) ProtoMessage() {}

func (x *ListActiveConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveConnectionsRequest.ProtoReflect.Descriptor instead.
func (*ListActiveConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{33}
}

func (x *ListActiveConnectionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListActiveConnectionsRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ListActiveConnectionsRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// アクティブ接続一覧取得レスポンス
type ListActiveConnectionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 接続リスト
	Connections []*WebSocketConnection `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
	// ページネーション情報
	Pagination *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// 総接続数
	TotalConnections int32 `protobuf:"varint,3,opt,name=total_connections,json=totalConnections,proto3" json:"total_connections,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListActiveConnectionsResponse) Reset() {
	*x = ListActiveConnectionsResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListActiveConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveConnectionsResponse) ProtoMessage() {}

func (x *ListActiveConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveConnectionsResponse.ProtoReflect.Descriptor instead.
func (*ListActiveConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{34}
}

func (x *ListActiveConnectionsResponse) GetConnections() []*WebSocketConnection {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *ListActiveConnectionsResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListActiveConnectionsResponse) GetTotalConnections() int32 {
	if x != nil {
		return x.TotalConnections
	}
	return 0
}

// WebSocketメッセージ送信リクエスト
type SendWebSocketMessageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 宛先ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 送信するメッセージ
	Message *WebSocketMessage `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 特定の接続IDのみに送信（オプション）
	ConnectionId string `protobuf:"bytes,3,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	// 配信保証レベル
	DeliveryGuarantee DeliveryGuarantee `protobuf:"varint,4,opt,name=delivery_guarantee,json=deliveryGuarantee,proto3,enum=avion.notification.v1.DeliveryGuarantee" json:"delivery_guarantee,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SendWebSocketMessageRequest) Reset() {
	*x = SendWebSocketMessageRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendWebSocketMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendWebSocketMessageRequest) ProtoMessage() {}

func (x *SendWebSocketMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendWebSocketMessageRequest.ProtoReflect.Descriptor instead.
func (*SendWebSocketMessageRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{35}
}

func (x *SendWebSocketMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendWebSocketMessageRequest) GetMessage() *WebSocketMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SendWebSocketMessageRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *SendWebSocketMessageRequest) GetDeliveryGuarantee() DeliveryGuarantee {
	if x != nil {
		return x.DeliveryGuarantee
	}
	return DeliveryGuarantee_DELIVERY_GUARANTEE_UNSPECIFIED
}

// WebSocketメッセージ送信レスポンス
type SendWebSocketMessageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 送信成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 配信された接続数
	DeliveredCount int32 `protobuf:"varint,2,opt,name=delivered_count,json=deliveredCount,proto3" json:"delivered_count,omitempty"`
	// 失敗した接続ID
	FailedConnectionIds []string `protobuf:"bytes,3,rep,name=failed_connection_ids,json=failedConnectionIds,proto3" json:"failed_connection_ids,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SendWebSocketMessageResponse) Reset() {
	*x = SendWebSocketMessageResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendWebSocketMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendWebSocketMessageResponse) ProtoMessage() {}

func (x *SendWebSocketMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendWebSocketMessageResponse.ProtoReflect.Descriptor instead.
func (*SendWebSocketMessageResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{36}
}

func (x *SendWebSocketMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendWebSocketMessageResponse) GetDeliveredCount() int32 {
	if x != nil {
		return x.DeliveredCount
	}
	return 0
}

func (x *SendWebSocketMessageResponse) GetFailedConnectionIds() []string {
	if x != nil {
		return x.FailedConnectionIds
	}
	return nil
}

// ブロードキャストメッセージ送信リクエスト
type BroadcastWebSocketMessageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 送信するメッセージ
	Message *WebSocketMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// フィルター条件
	Filter *BroadcastFilter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// 配信保証レベル
	DeliveryGuarantee DeliveryGuarantee `protobuf:"varint,3,opt,name=delivery_guarantee,json=deliveryGuarantee,proto3,enum=avion.notification.v1.DeliveryGuarantee" json:"delivery_guarantee,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BroadcastWebSocketMessageRequest) Reset() {
	*x = BroadcastWebSocketMessageRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastWebSocketMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastWebSocketMessageRequest) ProtoMessage() {}

func (x *BroadcastWebSocketMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastWebSocketMessageRequest.ProtoReflect.Descriptor instead.
func (*BroadcastWebSocketMessageRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{37}
}

func (x *BroadcastWebSocketMessageRequest) GetMessage() *WebSocketMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *BroadcastWebSocketMessageRequest) GetFilter() *BroadcastFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *BroadcastWebSocketMessageRequest) GetDeliveryGuarantee() DeliveryGuarantee {
	if x != nil {
		return x.DeliveryGuarantee
	}
	return DeliveryGuarantee_DELIVERY_GUARANTEE_UNSPECIFIED
}

// ブロードキャストフィルター
type BroadcastFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知タイプでフィルター
	NotificationTypes []NotificationType `protobuf:"varint,1,rep,packed,name=notification_types,json=notificationTypes,proto3,enum=avion.notification.v1.NotificationType" json:"notification_types,omitempty"`
	// プラットフォームでフィルター
	Platforms []string `protobuf:"bytes,2,rep,name=platforms,proto3" json:"platforms,omitempty"`
	// チャンネルでフィルター
	Channels []string `protobuf:"bytes,3,rep,name=channels,proto3" json:"channels,omitempty"`
	// ユーザーIDリスト（特定ユーザーグループ）
	UserIds []string `protobuf:"bytes,4,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	// 除外するユーザーID
	ExcludeUserIds []string `protobuf:"bytes,5,rep,name=exclude_user_ids,json=excludeUserIds,proto3" json:"exclude_user_ids,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BroadcastFilter) Reset() {
	*x = BroadcastFilter{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastFilter) ProtoMessage() {}

func (x *BroadcastFilter) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastFilter.ProtoReflect.Descriptor instead.
func (*BroadcastFilter) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{38}
}

func (x *BroadcastFilter) GetNotificationTypes() []NotificationType {
	if x != nil {
		return x.NotificationTypes
	}
	return nil
}

func (x *BroadcastFilter) GetPlatforms() []string {
	if x != nil {
		return x.Platforms
	}
	return nil
}

func (x *BroadcastFilter) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *BroadcastFilter) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *BroadcastFilter) GetExcludeUserIds() []string {
	if x != nil {
		return x.ExcludeUserIds
	}
	return nil
}

// ブロードキャストメッセージ送信レスポンス
type BroadcastWebSocketMessageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 送信成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 配信された接続数
	DeliveredCount int32 `protobuf:"varint,2,opt,name=delivered_count,json=deliveredCount,proto3" json:"delivered_count,omitempty"`
	// 配信されたユーザー数
	DeliveredUserCount int32 `protobuf:"varint,3,opt,name=delivered_user_count,json=deliveredUserCount,proto3" json:"delivered_user_count,omitempty"`
	// エラーメッセージ（失敗時）
	ErrorMessage  string `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BroadcastWebSocketMessageResponse) Reset() {
	*x = BroadcastWebSocketMessageResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastWebSocketMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastWebSocketMessageResponse) ProtoMessage() {}

func (x *BroadcastWebSocketMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastWebSocketMessageResponse.ProtoReflect.Descriptor instead.
func (*BroadcastWebSocketMessageResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{39}
}

func (x *BroadcastWebSocketMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BroadcastWebSocketMessageResponse) GetDeliveredCount() int32 {
	if x != nil {
		return x.DeliveredCount
	}
	return 0
}

func (x *BroadcastWebSocketMessageResponse) GetDeliveredUserCount() int32 {
	if x != nil {
		return x.DeliveredUserCount
	}
	return 0
}

func (x *BroadcastWebSocketMessageResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// プッシュデバイス登録リクエスト
type RegisterPushDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// デバイストークン（FCM/APNs）
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	// プラットフォーム（ios, android, web）
	Platform string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	// デバイス名
	DeviceName string `protobuf:"bytes,4,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	// デバイスメタデータ（オプション）
	Metadata      map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterPushDeviceRequest) Reset() {
	*x = RegisterPushDeviceRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterPushDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPushDeviceRequest) ProtoMessage() {}

func (x *RegisterPushDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPushDeviceRequest.ProtoReflect.Descriptor instead.
func (*RegisterPushDeviceRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{40}
}

func (x *RegisterPushDeviceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RegisterPushDeviceRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RegisterPushDeviceRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *RegisterPushDeviceRequest) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *RegisterPushDeviceRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// プッシュデバイス登録レスポンス
type RegisterPushDeviceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 登録されたデバイス情報
	Device        *PushDevice `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterPushDeviceResponse) Reset() {
	*x = RegisterPushDeviceResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterPushDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPushDeviceResponse) ProtoMessage() {}

func (x *RegisterPushDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPushDeviceResponse.ProtoReflect.Descriptor instead.
func (*RegisterPushDeviceResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{41}
}

func (x *RegisterPushDeviceResponse) GetDevice() *PushDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

// プッシュデバイス更新リクエスト
type UpdatePushDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// デバイスID
	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// ユーザーID（権限確認用）
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 更新するフィールドのマスク
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// 更新するデバイス情報
	Device        *PushDevice `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePushDeviceRequest) Reset() {
	*x = UpdatePushDeviceRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePushDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePushDeviceRequest) ProtoMessage() {}

func (x *UpdatePushDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePushDeviceRequest.ProtoReflect.Descriptor instead.
func (*UpdatePushDeviceRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{42}
}

func (x *UpdatePushDeviceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *UpdatePushDeviceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdatePushDeviceRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdatePushDeviceRequest) GetDevice() *PushDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

// プッシュデバイス更新レスポンス
type UpdatePushDeviceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新されたデバイス情報
	Device        *PushDevice `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePushDeviceResponse) Reset() {
	*x = UpdatePushDeviceResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePushDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePushDeviceResponse) ProtoMessage() {}

func (x *UpdatePushDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePushDeviceResponse.ProtoReflect.Descriptor instead.
func (*UpdatePushDeviceResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{43}
}

func (x *UpdatePushDeviceResponse) GetDevice() *PushDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

// プッシュデバイス削除リクエスト
type DeletePushDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// デバイスID
	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// ユーザーID（権限確認用）
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePushDeviceRequest) Reset() {
	*x = DeletePushDeviceRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePushDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePushDeviceRequest) ProtoMessage() {}

func (x *DeletePushDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePushDeviceRequest.ProtoReflect.Descriptor instead.
func (*DeletePushDeviceRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{44}
}

func (x *DeletePushDeviceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeletePushDeviceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// プッシュデバイス削除レスポンス
type DeletePushDeviceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 削除成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 削除されたデバイスID
	DeletedDeviceId string `protobuf:"bytes,2,opt,name=deleted_device_id,json=deletedDeviceId,proto3" json:"deleted_device_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeletePushDeviceResponse) Reset() {
	*x = DeletePushDeviceResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePushDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePushDeviceResponse) ProtoMessage() {}

func (x *DeletePushDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePushDeviceResponse.ProtoReflect.Descriptor instead.
func (*DeletePushDeviceResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{45}
}

func (x *DeletePushDeviceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeletePushDeviceResponse) GetDeletedDeviceId() string {
	if x != nil {
		return x.DeletedDeviceId
	}
	return ""
}

// プッシュデバイス一覧取得リクエスト
type ListPushDevicesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// プラットフォームでフィルター（オプション）
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	// アクティブなデバイスのみ取得
	ActiveOnly bool `protobuf:"varint,3,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`
	// ページネーション
	Pagination    *v1.PaginationRequest `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPushDevicesRequest) Reset() {
	*x = ListPushDevicesRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPushDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPushDevicesRequest) ProtoMessage() {}

func (x *ListPushDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPushDevicesRequest.ProtoReflect.Descriptor instead.
func (*ListPushDevicesRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{46}
}

func (x *ListPushDevicesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListPushDevicesRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ListPushDevicesRequest) GetActiveOnly() bool {
	if x != nil {
		return x.ActiveOnly
	}
	return false
}

func (x *ListPushDevicesRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// プッシュデバイス一覧取得レスポンス
type ListPushDevicesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// デバイスリスト
	Devices []*PushDevice `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
	// ページネーション情報
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPushDevicesResponse) Reset() {
	*x = ListPushDevicesResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPushDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPushDevicesResponse) ProtoMessage() {}

func (x *ListPushDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPushDevicesResponse.ProtoReflect.Descriptor instead.
func (*ListPushDevicesResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{47}
}

func (x *ListPushDevicesResponse) GetDevices() []*PushDevice {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *ListPushDevicesResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// プッシュデバイス取得リクエスト
type GetPushDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// デバイスID
	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// ユーザーID（権限確認用）
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPushDeviceRequest) Reset() {
	*x = GetPushDeviceRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPushDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPushDeviceRequest) ProtoMessage() {}

func (x *GetPushDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPushDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetPushDeviceRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{48}
}

func (x *GetPushDeviceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetPushDeviceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// プッシュデバイス取得レスポンス
type GetPushDeviceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// デバイス情報
	Device        *PushDevice `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPushDeviceResponse) Reset() {
	*x = GetPushDeviceResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPushDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPushDeviceResponse) ProtoMessage() {}

func (x *GetPushDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPushDeviceResponse.ProtoReflect.Descriptor instead.
func (*GetPushDeviceResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{49}
}

func (x *GetPushDeviceResponse) GetDevice() *PushDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

// 通知テンプレート作成リクエスト
type CreateNotificationTemplateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// テンプレート名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 通知タイプ
	Type NotificationType `protobuf:"varint,2,opt,name=type,proto3,enum=avion.notification.v1.NotificationType" json:"type,omitempty"`
	// タイトルテンプレート
	TitleTemplate string `protobuf:"bytes,3,opt,name=title_template,json=titleTemplate,proto3" json:"title_template,omitempty"`
	// 本文テンプレート
	BodyTemplate string `protobuf:"bytes,4,opt,name=body_template,json=bodyTemplate,proto3" json:"body_template,omitempty"`
	// デフォルトアクションURLパターン
	ActionUrlPattern string `protobuf:"bytes,5,opt,name=action_url_pattern,json=actionUrlPattern,proto3" json:"action_url_pattern,omitempty"`
	// テンプレートメタデータ
	Metadata      map[string]string `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotificationTemplateRequest) Reset() {
	*x = CreateNotificationTemplateRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotificationTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationTemplateRequest) ProtoMessage() {}

func (x *CreateNotificationTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateNotificationTemplateRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{50}
}

func (x *CreateNotificationTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNotificationTemplateRequest) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_NOTIFICATION_TYPE_UNSPECIFIED
}

func (x *CreateNotificationTemplateRequest) GetTitleTemplate() string {
	if x != nil {
		return x.TitleTemplate
	}
	return ""
}

func (x *CreateNotificationTemplateRequest) GetBodyTemplate() string {
	if x != nil {
		return x.BodyTemplate
	}
	return ""
}

func (x *CreateNotificationTemplateRequest) GetActionUrlPattern() string {
	if x != nil {
		return x.ActionUrlPattern
	}
	return ""
}

func (x *CreateNotificationTemplateRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 通知テンプレート作成レスポンス
type CreateNotificationTemplateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 作成されたテンプレート
	Template      *NotificationTemplate `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotificationTemplateResponse) Reset() {
	*x = CreateNotificationTemplateResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotificationTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationTemplateResponse) ProtoMessage() {}

func (x *CreateNotificationTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateNotificationTemplateResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{51}
}

func (x *CreateNotificationTemplateResponse) GetTemplate() *NotificationTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

// 通知テンプレート取得リクエスト
type GetNotificationTemplateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// テンプレートID
	TemplateId    string `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationTemplateRequest) Reset() {
	*x = GetNotificationTemplateRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationTemplateRequest) ProtoMessage() {}

func (x *GetNotificationTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationTemplateRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{52}
}

func (x *GetNotificationTemplateRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

// 通知テンプレート取得レスポンス
type GetNotificationTemplateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// テンプレート
	Template      *NotificationTemplate `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationTemplateResponse) Reset() {
	*x = GetNotificationTemplateResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationTemplateResponse) ProtoMessage() {}

func (x *GetNotificationTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationTemplateResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{53}
}

func (x *GetNotificationTemplateResponse) GetTemplate() *NotificationTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

// 通知テンプレート更新リクエスト
type UpdateNotificationTemplateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// テンプレートID
	TemplateId string `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	// 更新するフィールドのマスク
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// 更新するテンプレート情報
	Template      *NotificationTemplate `protobuf:"bytes,3,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNotificationTemplateRequest) Reset() {
	*x = UpdateNotificationTemplateRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotificationTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotificationTemplateRequest) ProtoMessage() {}

func (x *UpdateNotificationTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotificationTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotificationTemplateRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateNotificationTemplateRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *UpdateNotificationTemplateRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateNotificationTemplateRequest) GetTemplate() *NotificationTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

// 通知テンプレート更新レスポンス
type UpdateNotificationTemplateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新されたテンプレート
	Template      *NotificationTemplate `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNotificationTemplateResponse) Reset() {
	*x = UpdateNotificationTemplateResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotificationTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotificationTemplateResponse) ProtoMessage() {}

func (x *UpdateNotificationTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotificationTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateNotificationTemplateResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{55}
}

func (x *UpdateNotificationTemplateResponse) GetTemplate() *NotificationTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

// 通知テンプレート削除リクエスト
type DeleteNotificationTemplateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// テンプレートID
	TemplateId    string `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNotificationTemplateRequest) Reset() {
	*x = DeleteNotificationTemplateRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationTemplateRequest) ProtoMessage() {}

func (x *DeleteNotificationTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotificationTemplateRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{56}
}

func (x *DeleteNotificationTemplateRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

// 通知テンプレート削除レスポンス
type DeleteNotificationTemplateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 削除成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 削除されたテンプレートID
	DeletedTemplateId string `protobuf:"bytes,2,opt,name=deleted_template_id,json=deletedTemplateId,proto3" json:"deleted_template_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DeleteNotificationTemplateResponse) Reset() {
	*x = DeleteNotificationTemplateResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationTemplateResponse) ProtoMessage() {}

func (x *DeleteNotificationTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationTemplateResponse.ProtoReflect.Descriptor instead.
func (*DeleteNotificationTemplateResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{57}
}

func (x *DeleteNotificationTemplateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteNotificationTemplateResponse) GetDeletedTemplateId() string {
	if x != nil {
		return x.DeletedTemplateId
	}
	return ""
}

// 通知テンプレート一覧取得リクエスト
type ListNotificationTemplatesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知タイプでフィルター（オプション）
	Type NotificationType `protobuf:"varint,1,opt,name=type,proto3,enum=avion.notification.v1.NotificationType" json:"type,omitempty"`
	// ページネーション
	Pagination    *v1.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationTemplatesRequest) Reset() {
	*x = ListNotificationTemplatesRequest{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationTemplatesRequest) ProtoMessage() {}

func (x *ListNotificationTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationTemplatesRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{58}
}

func (x *ListNotificationTemplatesRequest) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_NOTIFICATION_TYPE_UNSPECIFIED
}

func (x *ListNotificationTemplatesRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// 通知テンプレート一覧取得レスポンス
type ListNotificationTemplatesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// テンプレートリスト
	Templates []*NotificationTemplate `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
	// ページネーション情報
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationTemplatesResponse) Reset() {
	*x = ListNotificationTemplatesResponse{}
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationTemplatesResponse) ProtoMessage() {}

func (x *ListNotificationTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_notification_v1_notification_service_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationTemplatesResponse.ProtoReflect.Descriptor instead.
func (*ListNotificationTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_avion_notification_v1_notification_service_proto_rawDescGZIP(), []int{59}
}

func (x *ListNotificationTemplatesResponse) GetTemplates() []*NotificationTemplate {
	if x != nil {
		return x.Templates
	}
	return nil
}

func (x *ListNotificationTemplatesResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_avion_notification_v1_notification_service_proto protoreflect.FileDescriptor

const file_avion_notification_v1_notification_service_proto_rawDesc = "" +
	"\n" +
	"0avion/notification/v1/notification_service.proto\x12\x15avion.notification.v1\x1a avion/common/v1/pagination.proto\x1a(avion/notification/v1/notification.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x88\x02\n" +
	"\x19CreateNotificationRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12;\n" +
	"\x04type\x18\x02 \x01(\x0e2'.avion.notification.v1.NotificationTypeR\x04type\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x12\n" +
	"\x04body\x18\x04 \x01(\tR\x04body\x12\x12\n" +
	"\x04data\x18\x05 \x01(\tR\x04data\x12\x1d\n" +
	"\n" +
	"action_url\x18\x06 \x01(\tR\tactionUrl\x12\x1b\n" +
	"\tsender_id\x18\a \x01(\tR\bsenderId\x12\x1b\n" +
	"\tentity_id\x18\b \x01(\tR\bentityId\"\xb2\x01\n" +
	"\x1aCreateNotificationResponse\x12G\n" +
	"\fnotification\x18\x01 \x01(\v2#.avion.notification.v1.NotificationR\fnotification\x12K\n" +
	"\n" +
	"deliveries\x18\x02 \x03(\v2+.avion.notification.v1.NotificationDeliveryR\n" +
	"deliveries\"Z\n" +
	"\x16GetNotificationRequest\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"b\n" +
	"\x17GetNotificationResponse\x12G\n" +
	"\fnotification\x18\x01 \x01(\v2#.avion.notification.v1.NotificationR\fnotification\"\xbf\x01\n" +
	"\x18ListNotificationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12B\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\x12F\n" +
	"\x06filter\x18\x03 \x01(\v2..avion.notification.v1.ListNotificationsFilterR\x06filter\"\xf7\x02\n" +
	"\x17ListNotificationsFilter\x12=\n" +
	"\x05types\x18\x01 \x03(\x0e2'.avion.notification.v1.NotificationTypeR\x05types\x12\x1f\n" +
	"\vunread_only\x18\x02 \x01(\bR\n" +
	"unreadOnly\x12.\n" +
	"\x04from\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04from\x12*\n" +
	"\x02to\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x02to\x12\x1d\n" +
	"\n" +
	"sender_ids\x18\x05 \x03(\tR\tsenderIds\x12\x1d\n" +
	"\n" +
	"entity_ids\x18\x06 \x03(\tR\tentityIds\x12\x1b\n" +
	"\tread_only\x18\a \x01(\bR\breadOnly\x12,\n" +
	"\x12action_url_pattern\x18\b \x01(\tR\x10actionUrlPattern\x12\x17\n" +
	"\asort_by\x18\t \x01(\tR\x06sortBy\"\xab\x01\n" +
	"\x19ListNotificationsResponse\x12I\n" +
	"\rnotifications\x18\x01 \x03(\v2#.avion.notification.v1.NotificationR\rnotifications\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\"U\n" +
	"\x11MarkAsReadRequest\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"]\n" +
	"\x12MarkAsReadResponse\x12G\n" +
	"\fnotification\x18\x01 \x01(\v2#.avion.notification.v1.NotificationR\fnotification\"\xa2\x01\n" +
	"\x14MarkAllAsReadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12=\n" +
	"\x05types\x18\x02 \x03(\x0e2'.avion.notification.v1.NotificationTypeR\x05types\x122\n" +
	"\x06before\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x06before\":\n" +
	"\x15MarkAllAsReadResponse\x12!\n" +
	"\fmarked_count\x18\x01 \x01(\x05R\vmarkedCount\"\\\n" +
	"\x16BatchMarkAsReadRequest\x12)\n" +
	"\x10notification_ids\x18\x01 \x03(\tR\x0fnotificationIds\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\xa4\x02\n" +
	"\x17BatchMarkAsReadResponse\x12#\n" +
	"\rsucceeded_ids\x18\x01 \x03(\tR\fsucceededIds\x12\\\n" +
	"\n" +
	"failed_ids\x18\x02 \x03(\v2=.avion.notification.v1.BatchMarkAsReadResponse.FailedIdsEntryR\tfailedIds\x12#\n" +
	"\rsuccess_count\x18\x03 \x01(\x05R\fsuccessCount\x12#\n" +
	"\rfailure_count\x18\x04 \x01(\x05R\ffailureCount\x1a<\n" +
	"\x0eFailedIdsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"]\n" +
	"\x19DeleteNotificationRequest\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"n\n" +
	"\x1aDeleteNotificationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x126\n" +
	"\x17deleted_notification_id\x18\x02 \x01(\tR\x15deletedNotificationId\"e\n" +
	"\x1fBatchDeleteNotificationsRequest\x12)\n" +
	"\x10notification_ids\x18\x01 \x03(\tR\x0fnotificationIds\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\xb6\x02\n" +
	" BatchDeleteNotificationsResponse\x12#\n" +
	"\rsucceeded_ids\x18\x01 \x03(\tR\fsucceededIds\x12e\n" +
	"\n" +
	"failed_ids\x18\x02 \x03(\v2F.avion.notification.v1.BatchDeleteNotificationsResponse.FailedIdsEntryR\tfailedIds\x12#\n" +
	"\rsuccess_count\x18\x03 \x01(\x05R\fsuccessCount\x12#\n" +
	"\rfailure_count\x18\x04 \x01(\x05R\ffailureCount\x1a<\n" +
	"\x0eFailedIdsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"<\n" +
	"!GetNotificationPreferencesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"u\n" +
	"\"GetNotificationPreferencesResponse\x12O\n" +
	"\vpreferences\x18\x01 \x01(\v2-.avion.notification.v1.NotificationPreferenceR\vpreferences\"\xcd\x01\n" +
	"$UpdateNotificationPreferencesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12O\n" +
	"\vpreferences\x18\x03 \x01(\v2-.avion.notification.v1.NotificationPreferenceR\vpreferences\"x\n" +
	"%UpdateNotificationPreferencesResponse\x12O\n" +
	"\vpreferences\x18\x01 \x01(\v2-.avion.notification.v1.NotificationPreferenceR\vpreferences\"\xa8\x01\n" +
	"\x17SendNotificationRequest\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12F\n" +
	"\bchannels\x18\x02 \x03(\x0e2*.avion.notification.v1.NotificationChannelR\bchannels\x12\x1c\n" +
	"\timmediate\x18\x03 \x01(\bR\timmediate\"g\n" +
	"\x18SendNotificationResponse\x12K\n" +
	"\n" +
	"deliveries\x18\x01 \x03(\v2+.avion.notification.v1.NotificationDeliveryR\n" +
	"deliveries\"\xa8\x01\n" +
	"\x1aStreamNotificationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12=\n" +
	"\x05types\x18\x02 \x03(\x0e2'.avion.notification.v1.NotificationTypeR\x05types\x122\n" +
	"\x15after_notification_id\x18\x03 \x01(\tR\x13afterNotificationId\"\xbf\x01\n" +
	"\x1bStreamNotificationsResponse\x12G\n" +
	"\fnotification\x18\x01 \x01(\v2#.avion.notification.v1.NotificationR\fnotification\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"I\n" +
	"\x15GetUnreadCountRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x17\n" +
	"\aby_type\x18\x02 \x01(\bR\x06byType\"_\n" +
	"\x16GetUnreadCountResponse\x12E\n" +
	"\funread_count\x18\x01 \x01(\v2\".avion.notification.v1.UnreadCountR\vunreadCount\"\x9f\x01\n" +
	"\x1fBatchCreateNotificationsRequest\x12V\n" +
	"\rnotifications\x18\x01 \x03(\v20.avion.notification.v1.CreateNotificationRequestR\rnotifications\x12$\n" +
	"\rtransactional\x18\x02 \x01(\bR\rtransactional\"\xd7\x02\n" +
	" BatchCreateNotificationsResponse\x12I\n" +
	"\rnotifications\x18\x01 \x03(\v2#.avion.notification.v1.NotificationR\rnotifications\x12a\n" +
	"\bfailures\x18\x02 \x03(\v2E.avion.notification.v1.BatchCreateNotificationsResponse.FailuresEntryR\bfailures\x12#\n" +
	"\rsuccess_count\x18\x03 \x01(\x05R\fsuccessCount\x12#\n" +
	"\rfailure_count\x18\x04 \x01(\x05R\ffailureCount\x1a;\n" +
	"\rFailuresEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x93\x01\n" +
	"\x16WebSocketStreamRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12A\n" +
	"\amessage\x18\x03 \x01(\v2'.avion.notification.v1.WebSocketMessageR\amessage\"\x9c\x01\n" +
	"\x17WebSocketStreamResponse\x12\x1f\n" +
	"\vresponse_id\x18\x01 \x01(\tR\n" +
	"responseId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\x12A\n" +
	"\amessage\x18\x03 \x01(\v2'.avion.notification.v1.WebSocketMessageR\amessage\"\xa0\x01\n" +
	" ManageWebSocketConnectionRequest\x12#\n" +
	"\rconnection_id\x18\x01 \x01(\tR\fconnectionId\x12?\n" +
	"\x06action\x18\x02 \x01(\x0e2'.avion.notification.v1.ConnectionActionR\x06action\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"\x89\x01\n" +
	"!ManageWebSocketConnectionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12J\n" +
	"\n" +
	"connection\x18\x02 \x01(\v2*.avion.notification.v1.WebSocketConnectionR\n" +
	"connection\"\x97\x01\n" +
	"\x1cListActiveConnectionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bplatform\x18\x02 \x01(\tR\bplatform\x12B\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\"\xdf\x01\n" +
	"\x1dListActiveConnectionsResponse\x12L\n" +
	"\vconnections\x18\x01 \x03(\v2*.avion.notification.v1.WebSocketConnectionR\vconnections\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\x12+\n" +
	"\x11total_connections\x18\x03 \x01(\x05R\x10totalConnections\"\xf7\x01\n" +
	"\x1bSendWebSocketMessageRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12A\n" +
	"\amessage\x18\x02 \x01(\v2'.avion.notification.v1.WebSocketMessageR\amessage\x12#\n" +
	"\rconnection_id\x18\x03 \x01(\tR\fconnectionId\x12W\n" +
	"\x12delivery_guarantee\x18\x04 \x01(\x0e2(.avion.notification.v1.DeliveryGuaranteeR\x11deliveryGuarantee\"\x95\x01\n" +
	"\x1cSendWebSocketMessageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12'\n" +
	"\x0fdelivered_count\x18\x02 \x01(\x05R\x0edeliveredCount\x122\n" +
	"\x15failed_connection_ids\x18\x03 \x03(\tR\x13failedConnectionIds\"\xfe\x01\n" +
	" BroadcastWebSocketMessageRequest\x12A\n" +
	"\amessage\x18\x01 \x01(\v2'.avion.notification.v1.WebSocketMessageR\amessage\x12>\n" +
	"\x06filter\x18\x02 \x01(\v2&.avion.notification.v1.BroadcastFilterR\x06filter\x12W\n" +
	"\x12delivery_guarantee\x18\x03 \x01(\x0e2(.avion.notification.v1.DeliveryGuaranteeR\x11deliveryGuarantee\"\xe8\x01\n" +
	"\x0fBroadcastFilter\x12V\n" +
	"\x12notification_types\x18\x01 \x03(\x0e2'.avion.notification.v1.NotificationTypeR\x11notificationTypes\x12\x1c\n" +
	"\tplatforms\x18\x02 \x03(\tR\tplatforms\x12\x1a\n" +
	"\bchannels\x18\x03 \x03(\tR\bchannels\x12\x19\n" +
	"\buser_ids\x18\x04 \x03(\tR\auserIds\x12(\n" +
	"\x10exclude_user_ids\x18\x05 \x03(\tR\x0eexcludeUserIds\"\xbd\x01\n" +
	"!BroadcastWebSocketMessageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12'\n" +
	"\x0fdelivered_count\x18\x02 \x01(\x05R\x0edeliveredCount\x120\n" +
	"\x14delivered_user_count\x18\x03 \x01(\x05R\x12deliveredUserCount\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"\xa0\x02\n" +
	"\x19RegisterPushDeviceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12\x1a\n" +
	"\bplatform\x18\x03 \x01(\tR\bplatform\x12\x1f\n" +
	"\vdevice_name\x18\x04 \x01(\tR\n" +
	"deviceName\x12Z\n" +
	"\bmetadata\x18\x05 \x03(\v2>.avion.notification.v1.RegisterPushDeviceRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"W\n" +
	"\x1aRegisterPushDeviceResponse\x129\n" +
	"\x06device\x18\x01 \x01(\v2!.avion.notification.v1.PushDeviceR\x06device\"\xc7\x01\n" +
	"\x17UpdatePushDeviceRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x129\n" +
	"\x06device\x18\x04 \x01(\v2!.avion.notification.v1.PushDeviceR\x06device\"U\n" +
	"\x18UpdatePushDeviceResponse\x129\n" +
	"\x06device\x18\x01 \x01(\v2!.avion.notification.v1.PushDeviceR\x06device\"O\n" +
	"\x17DeletePushDeviceRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"`\n" +
	"\x18DeletePushDeviceResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12*\n" +
	"\x11deleted_device_id\x18\x02 \x01(\tR\x0fdeletedDeviceId\"\xb2\x01\n" +
	"\x16ListPushDevicesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bplatform\x18\x02 \x01(\tR\bplatform\x12\x1f\n" +
	"\vactive_only\x18\x03 \x01(\bR\n" +
	"activeOnly\x12B\n" +
	"\n" +
	"pagination\x18\x04 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\"\x9b\x01\n" +
	"\x17ListPushDevicesResponse\x12;\n" +
	"\adevices\x18\x01 \x03(\v2!.avion.notification.v1.PushDeviceR\adevices\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\"L\n" +
	"\x14GetPushDeviceRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"R\n" +
	"\x15GetPushDeviceResponse\x129\n" +
	"\x06device\x18\x01 \x01(\v2!.avion.notification.v1.PushDeviceR\x06device\"\x8f\x03\n" +
	"!CreateNotificationTemplateRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12;\n" +
	"\x04type\x18\x02 \x01(\x0e2'.avion.notification.v1.NotificationTypeR\x04type\x12%\n" +
	"\x0etitle_template\x18\x03 \x01(\tR\rtitleTemplate\x12#\n" +
	"\rbody_template\x18\x04 \x01(\tR\fbodyTemplate\x12,\n" +
	"\x12action_url_pattern\x18\x05 \x01(\tR\x10actionUrlPattern\x12b\n" +
	"\bmetadata\x18\x06 \x03(\v2F.avion.notification.v1.CreateNotificationTemplateRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"m\n" +
	"\"CreateNotificationTemplateResponse\x12G\n" +
	"\btemplate\x18\x01 \x01(\v2+.avion.notification.v1.NotificationTemplateR\btemplate\"A\n" +
	"\x1eGetNotificationTemplateRequest\x12\x1f\n" +
	"\vtemplate_id\x18\x01 \x01(\tR\n" +
	"templateId\"j\n" +
	"\x1fGetNotificationTemplateResponse\x12G\n" +
	"\btemplate\x18\x01 \x01(\v2+.avion.notification.v1.NotificationTemplateR\btemplate\"\xca\x01\n" +
	"!UpdateNotificationTemplateRequest\x12\x1f\n" +
	"\vtemplate_id\x18\x01 \x01(\tR\n" +
	"templateId\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12G\n" +
	"\btemplate\x18\x03 \x01(\v2+.avion.notification.v1.NotificationTemplateR\btemplate\"m\n" +
	"\"UpdateNotificationTemplateResponse\x12G\n" +
	"\btemplate\x18\x01 \x01(\v2+.avion.notification.v1.NotificationTemplateR\btemplate\"D\n" +
	"!DeleteNotificationTemplateRequest\x12\x1f\n" +
	"\vtemplate_id\x18\x01 \x01(\tR\n" +
	"templateId\"n\n" +
	"\"DeleteNotificationTemplateResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12.\n" +
	"\x13deleted_template_id\x18\x02 \x01(\tR\x11deletedTemplateId\"\xa3\x01\n" +
	" ListNotificationTemplatesRequest\x12;\n" +
	"\x04type\x18\x01 \x01(\x0e2'.avion.notification.v1.NotificationTypeR\x04type\x12B\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\"\xb3\x01\n" +
	"!ListNotificationTemplatesResponse\x12I\n" +
	"\ttemplates\x18\x01 \x03(\v2+.avion.notification.v1.NotificationTemplateR\ttemplates\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination*\xb1\x01\n" +
	"\x10ConnectionAction\x12!\n" +
	"\x1dCONNECTION_ACTION_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cCONNECTION_ACTION_DISCONNECT\x10\x01\x12\x1d\n" +
	"\x19CONNECTION_ACTION_REFRESH\x10\x02\x12\x1b\n" +
	"\x17CONNECTION_ACTION_PAUSE\x10\x03\x12\x1c\n" +
	"\x18CONNECTION_ACTION_RESUME\x10\x04*\xa7\x01\n" +
	"\x11DeliveryGuarantee\x12\"\n" +
	"\x1eDELIVERY_GUARANTEE_UNSPECIFIED\x10\x00\x12$\n" +
	" DELIVERY_GUARANTEE_AT_LEAST_ONCE\x10\x01\x12#\n" +
	"\x1fDELIVERY_GUARANTEE_AT_MOST_ONCE\x10\x02\x12#\n" +
	"\x1fDELIVERY_GUARANTEE_EXACTLY_ONCE\x10\x032\xa0\x1d\n" +
	"\x13NotificationService\x12y\n" +
	"\x12CreateNotification\x120.avion.notification.v1.CreateNotificationRequest\x1a1.avion.notification.v1.CreateNotificationResponse\x12p\n" +
	"\x0fGetNotification\x12-.avion.notification.v1.GetNotificationRequest\x1a..avion.notification.v1.GetNotificationResponse\x12v\n" +
	"\x11ListNotifications\x12/.avion.notification.v1.ListNotificationsRequest\x1a0.avion.notification.v1.ListNotificationsResponse\x12a\n" +
	"\n" +
	"MarkAsRead\x12(.avion.notification.v1.MarkAsReadRequest\x1a).avion.notification.v1.MarkAsReadResponse\x12j\n" +
	"\rMarkAllAsRead\x12+.avion.notification.v1.MarkAllAsReadRequest\x1a,.avion.notification.v1.MarkAllAsReadResponse\x12p\n" +
	"\x0fBatchMarkAsRead\x12-.avion.notification.v1.BatchMarkAsReadRequest\x1a..avion.notification.v1.BatchMarkAsReadResponse\x12y\n" +
	"\x12DeleteNotification\x120.avion.notification.v1.DeleteNotificationRequest\x1a1.avion.notification.v1.DeleteNotificationResponse\x12\x8b\x01\n" +
	"\x18BatchDeleteNotifications\x126.avion.notification.v1.BatchDeleteNotificationsRequest\x1a7.avion.notification.v1.BatchDeleteNotificationsResponse\x12\x91\x01\n" +
	"\x1aGetNotificationPreferences\x128.avion.notification.v1.GetNotificationPreferencesRequest\x1a9.avion.notification.v1.GetNotificationPreferencesResponse\x12\x9a\x01\n" +
	"\x1dUpdateNotificationPreferences\x12;.avion.notification.v1.UpdateNotificationPreferencesRequest\x1a<.avion.notification.v1.UpdateNotificationPreferencesResponse\x12s\n" +
	"\x10SendNotification\x12..avion.notification.v1.SendNotificationRequest\x1a/.avion.notification.v1.SendNotificationResponse\x12~\n" +
	"\x13StreamNotifications\x121.avion.notification.v1.StreamNotificationsRequest\x1a2.avion.notification.v1.StreamNotificationsResponse0\x01\x12m\n" +
	"\x0eGetUnreadCount\x12,.avion.notification.v1.GetUnreadCountRequest\x1a-.avion.notification.v1.GetUnreadCountResponse\x12\x8b\x01\n" +
	"\x18BatchCreateNotifications\x126.avion.notification.v1.BatchCreateNotificationsRequest\x1a7.avion.notification.v1.BatchCreateNotificationsResponse\x12t\n" +
	"\x0fWebSocketStream\x12-.avion.notification.v1.WebSocketStreamRequest\x1a..avion.notification.v1.WebSocketStreamResponse(\x010\x01\x12\x8e\x01\n" +
	"\x19ManageWebSocketConnection\x127.avion.notification.v1.ManageWebSocketConnectionRequest\x1a8.avion.notification.v1.ManageWebSocketConnectionResponse\x12\x82\x01\n" +
	"\x15ListActiveConnections\x123.avion.notification.v1.ListActiveConnectionsRequest\x1a4.avion.notification.v1.ListActiveConnectionsResponse\x12\x7f\n" +
	"\x14SendWebSocketMessage\x122.avion.notification.v1.SendWebSocketMessageRequest\x1a3.avion.notification.v1.SendWebSocketMessageResponse\x12\x8e\x01\n" +
	"\x19BroadcastWebSocketMessage\x127.avion.notification.v1.BroadcastWebSocketMessageRequest\x1a8.avion.notification.v1.BroadcastWebSocketMessageResponse\x12y\n" +
	"\x12RegisterPushDevice\x120.avion.notification.v1.RegisterPushDeviceRequest\x1a1.avion.notification.v1.RegisterPushDeviceResponse\x12s\n" +
	"\x10UpdatePushDevice\x12..avion.notification.v1.UpdatePushDeviceRequest\x1a/.avion.notification.v1.UpdatePushDeviceResponse\x12s\n" +
	"\x10DeletePushDevice\x12..avion.notification.v1.DeletePushDeviceRequest\x1a/.avion.notification.v1.DeletePushDeviceResponse\x12p\n" +
	"\x0fListPushDevices\x12-.avion.notification.v1.ListPushDevicesRequest\x1a..avion.notification.v1.ListPushDevicesResponse\x12j\n" +
	"\rGetPushDevice\x12+.avion.notification.v1.GetPushDeviceRequest\x1a,.avion.notification.v1.GetPushDeviceResponse\x12\x91\x01\n" +
	"\x1aCreateNotificationTemplate\x128.avion.notification.v1.CreateNotificationTemplateRequest\x1a9.avion.notification.v1.CreateNotificationTemplateResponse\x12\x88\x01\n" +
	"\x17GetNotificationTemplate\x125.avion.notification.v1.GetNotificationTemplateRequest\x1a6.avion.notification.v1.GetNotificationTemplateResponse\x12\x91\x01\n" +
	"\x1aUpdateNotificationTemplate\x128.avion.notification.v1.UpdateNotificationTemplateRequest\x1a9.avion.notification.v1.UpdateNotificationTemplateResponse\x12\x91\x01\n" +
	"\x1aDeleteNotificationTemplate\x128.avion.notification.v1.DeleteNotificationTemplateRequest\x1a9.avion.notification.v1.DeleteNotificationTemplateResponse\x12\x8e\x01\n" +
	"\x19ListNotificationTemplates\x127.avion.notification.v1.ListNotificationTemplatesRequest\x1a8.avion.notification.v1.ListNotificationTemplatesResponseB\xf0\x01\n" +
	"\x19com.avion.notification.v1B\x18NotificationServiceProtoP\x01ZCgithub.com/na2na-p/avion/proto/avion/notification/v1;notificationv1\xa2\x02\x03ANX\xaa\x02\x15Avion.Notification.V1\xca\x02\x15Avion\\Notification\\V1\xe2\x02!Avion\\Notification\\V1\\GPBMetadata\xea\x02\x17Avion::Notification::V1b\x06proto3"

var (
	file_avion_notification_v1_notification_service_proto_rawDescOnce sync.Once
	file_avion_notification_v1_notification_service_proto_rawDescData []byte
)

func file_avion_notification_v1_notification_service_proto_rawDescGZIP() []byte {
	file_avion_notification_v1_notification_service_proto_rawDescOnce.Do(func() {
		file_avion_notification_v1_notification_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_avion_notification_v1_notification_service_proto_rawDesc), len(file_avion_notification_v1_notification_service_proto_rawDesc)))
	})
	return file_avion_notification_v1_notification_service_proto_rawDescData
}

var file_avion_notification_v1_notification_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_avion_notification_v1_notification_service_proto_msgTypes = make([]protoimpl.MessageInfo, 65)
var file_avion_notification_v1_notification_service_proto_goTypes = []any{
	(ConnectionAction)(0),                         // 0: avion.notification.v1.ConnectionAction
	(DeliveryGuarantee)(0),                        // 1: avion.notification.v1.DeliveryGuarantee
	(*CreateNotificationRequest)(nil),             // 2: avion.notification.v1.CreateNotificationRequest
	(*CreateNotificationResponse)(nil),            // 3: avion.notification.v1.CreateNotificationResponse
	(*GetNotificationRequest)(nil),                // 4: avion.notification.v1.GetNotificationRequest
	(*GetNotificationResponse)(nil),               // 5: avion.notification.v1.GetNotificationResponse
	(*ListNotificationsRequest)(nil),              // 6: avion.notification.v1.ListNotificationsRequest
	(*ListNotificationsFilter)(nil),               // 7: avion.notification.v1.ListNotificationsFilter
	(*ListNotificationsResponse)(nil),             // 8: avion.notification.v1.ListNotificationsResponse
	(*MarkAsReadRequest)(nil),                     // 9: avion.notification.v1.MarkAsReadRequest
	(*MarkAsReadResponse)(nil),                    // 10: avion.notification.v1.MarkAsReadResponse
	(*MarkAllAsReadRequest)(nil),                  // 11: avion.notification.v1.MarkAllAsReadRequest
	(*MarkAllAsReadResponse)(nil),                 // 12: avion.notification.v1.MarkAllAsReadResponse
	(*BatchMarkAsReadRequest)(nil),                // 13: avion.notification.v1.BatchMarkAsReadRequest
	(*BatchMarkAsReadResponse)(nil),               // 14: avion.notification.v1.BatchMarkAsReadResponse
	(*DeleteNotificationRequest)(nil),             // 15: avion.notification.v1.DeleteNotificationRequest
	(*DeleteNotificationResponse)(nil),            // 16: avion.notification.v1.DeleteNotificationResponse
	(*BatchDeleteNotificationsRequest)(nil),       // 17: avion.notification.v1.BatchDeleteNotificationsRequest
	(*BatchDeleteNotificationsResponse)(nil),      // 18: avion.notification.v1.BatchDeleteNotificationsResponse
	(*GetNotificationPreferencesRequest)(nil),     // 19: avion.notification.v1.GetNotificationPreferencesRequest
	(*GetNotificationPreferencesResponse)(nil),    // 20: avion.notification.v1.GetNotificationPreferencesResponse
	(*UpdateNotificationPreferencesRequest)(nil),  // 21: avion.notification.v1.UpdateNotificationPreferencesRequest
	(*UpdateNotificationPreferencesResponse)(nil), // 22: avion.notification.v1.UpdateNotificationPreferencesResponse
	(*SendNotificationRequest)(nil),               // 23: avion.notification.v1.SendNotificationRequest
	(*SendNotificationResponse)(nil),              // 24: avion.notification.v1.SendNotificationResponse
	(*StreamNotificationsRequest)(nil),            // 25: avion.notification.v1.StreamNotificationsRequest
	(*StreamNotificationsResponse)(nil),           // 26: avion.notification.v1.StreamNotificationsResponse
	(*GetUnreadCountRequest)(nil),                 // 27: avion.notification.v1.GetUnreadCountRequest
	(*GetUnreadCountResponse)(nil),                // 28: avion.notification.v1.GetUnreadCountResponse
	(*BatchCreateNotificationsRequest)(nil),       // 29: avion.notification.v1.BatchCreateNotificationsRequest
	(*BatchCreateNotificationsResponse)(nil),      // 30: avion.notification.v1.BatchCreateNotificationsResponse
	(*WebSocketStreamRequest)(nil),                // 31: avion.notification.v1.WebSocketStreamRequest
	(*WebSocketStreamResponse)(nil),               // 32: avion.notification.v1.WebSocketStreamResponse
	(*ManageWebSocketConnectionRequest)(nil),      // 33: avion.notification.v1.ManageWebSocketConnectionRequest
	(*ManageWebSocketConnectionResponse)(nil),     // 34: avion.notification.v1.ManageWebSocketConnectionResponse
	(*ListActiveConnectionsRequest)(nil),          // 35: avion.notification.v1.ListActiveConnectionsRequest
	(*ListActiveConnectionsResponse)(nil),         // 36: avion.notification.v1.ListActiveConnectionsResponse
	(*SendWebSocketMessageRequest)(nil),           // 37: avion.notification.v1.SendWebSocketMessageRequest
	(*SendWebSocketMessageResponse)(nil),          // 38: avion.notification.v1.SendWebSocketMessageResponse
	(*BroadcastWebSocketMessageRequest)(nil),      // 39: avion.notification.v1.BroadcastWebSocketMessageRequest
	(*BroadcastFilter)(nil),                       // 40: avion.notification.v1.BroadcastFilter
	(*BroadcastWebSocketMessageResponse)(nil),     // 41: avion.notification.v1.BroadcastWebSocketMessageResponse
	(*RegisterPushDeviceRequest)(nil),             // 42: avion.notification.v1.RegisterPushDeviceRequest
	(*RegisterPushDeviceResponse)(nil),            // 43: avion.notification.v1.RegisterPushDeviceResponse
	(*UpdatePushDeviceRequest)(nil),               // 44: avion.notification.v1.UpdatePushDeviceRequest
	(*UpdatePushDeviceResponse)(nil),              // 45: avion.notification.v1.UpdatePushDeviceResponse
	(*DeletePushDeviceRequest)(nil),               // 46: avion.notification.v1.DeletePushDeviceRequest
	(*DeletePushDeviceResponse)(nil),              // 47: avion.notification.v1.DeletePushDeviceResponse
	(*ListPushDevicesRequest)(nil),                // 48: avion.notification.v1.ListPushDevicesRequest
	(*ListPushDevicesResponse)(nil),               // 49: avion.notification.v1.ListPushDevicesResponse
	(*GetPushDeviceRequest)(nil),                  // 50: avion.notification.v1.GetPushDeviceRequest
	(*GetPushDeviceResponse)(nil),                 // 51: avion.notification.v1.GetPushDeviceResponse
	(*CreateNotificationTemplateRequest)(nil),     // 52: avion.notification.v1.CreateNotificationTemplateRequest
	(*CreateNotificationTemplateResponse)(nil),    // 53: avion.notification.v1.CreateNotificationTemplateResponse
	(*GetNotificationTemplateRequest)(nil),        // 54: avion.notification.v1.GetNotificationTemplateRequest
	(*GetNotificationTemplateResponse)(nil),       // 55: avion.notification.v1.GetNotificationTemplateResponse
	(*UpdateNotificationTemplateRequest)(nil),     // 56: avion.notification.v1.UpdateNotificationTemplateRequest
	(*UpdateNotificationTemplateResponse)(nil),    // 57: avion.notification.v1.UpdateNotificationTemplateResponse
	(*DeleteNotificationTemplateRequest)(nil),     // 58: avion.notification.v1.DeleteNotificationTemplateRequest
	(*DeleteNotificationTemplateResponse)(nil),    // 59: avion.notification.v1.DeleteNotificationTemplateResponse
	(*ListNotificationTemplatesRequest)(nil),      // 60: avion.notification.v1.ListNotificationTemplatesRequest
	(*ListNotificationTemplatesResponse)(nil),     // 61: avion.notification.v1.ListNotificationTemplatesResponse
	nil,                            // 62: avion.notification.v1.BatchMarkAsReadResponse.FailedIdsEntry
	nil,                            // 63: avion.notification.v1.BatchDeleteNotificationsResponse.FailedIdsEntry
	nil,                            // 64: avion.notification.v1.BatchCreateNotificationsResponse.FailuresEntry
	nil,                            // 65: avion.notification.v1.RegisterPushDeviceRequest.MetadataEntry
	nil,                            // 66: avion.notification.v1.CreateNotificationTemplateRequest.MetadataEntry
	(NotificationType)(0),          // 67: avion.notification.v1.NotificationType
	(*Notification)(nil),           // 68: avion.notification.v1.Notification
	(*NotificationDelivery)(nil),   // 69: avion.notification.v1.NotificationDelivery
	(*v1.PaginationRequest)(nil),   // 70: avion.common.v1.PaginationRequest
	(*timestamppb.Timestamp)(nil),  // 71: google.protobuf.Timestamp
	(*v1.PaginationResponse)(nil),  // 72: avion.common.v1.PaginationResponse
	(*NotificationPreference)(nil), // 73: avion.notification.v1.NotificationPreference
	(*fieldmaskpb.FieldMask)(nil),  // 74: google.protobuf.FieldMask
	(NotificationChannel)(0),       // 75: avion.notification.v1.NotificationChannel
	(*UnreadCount)(nil),            // 76: avion.notification.v1.UnreadCount
	(*WebSocketMessage)(nil),       // 77: avion.notification.v1.WebSocketMessage
	(*WebSocketConnection)(nil),    // 78: avion.notification.v1.WebSocketConnection
	(*PushDevice)(nil),             // 79: avion.notification.v1.PushDevice
	(*NotificationTemplate)(nil),   // 80: avion.notification.v1.NotificationTemplate
}
var file_avion_notification_v1_notification_service_proto_depIdxs = []int32{
	67, // 0: avion.notification.v1.CreateNotificationRequest.type:type_name -> avion.notification.v1.NotificationType
	68, // 1: avion.notification.v1.CreateNotificationResponse.notification:type_name -> avion.notification.v1.Notification
	69, // 2: avion.notification.v1.CreateNotificationResponse.deliveries:type_name -> avion.notification.v1.NotificationDelivery
	68, // 3: avion.notification.v1.GetNotificationResponse.notification:type_name -> avion.notification.v1.Notification
	70, // 4: avion.notification.v1.ListNotificationsRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	7,  // 5: avion.notification.v1.ListNotificationsRequest.filter:type_name -> avion.notification.v1.ListNotificationsFilter
	67, // 6: avion.notification.v1.ListNotificationsFilter.types:type_name -> avion.notification.v1.NotificationType
	71, // 7: avion.notification.v1.ListNotificationsFilter.from:type_name -> google.protobuf.Timestamp
	71, // 8: avion.notification.v1.ListNotificationsFilter.to:type_name -> google.protobuf.Timestamp
	68, // 9: avion.notification.v1.ListNotificationsResponse.notifications:type_name -> avion.notification.v1.Notification
	72, // 10: avion.notification.v1.ListNotificationsResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	68, // 11: avion.notification.v1.MarkAsReadResponse.notification:type_name -> avion.notification.v1.Notification
	67, // 12: avion.notification.v1.MarkAllAsReadRequest.types:type_name -> avion.notification.v1.NotificationType
	71, // 13: avion.notification.v1.MarkAllAsReadRequest.before:type_name -> google.protobuf.Timestamp
	62, // 14: avion.notification.v1.BatchMarkAsReadResponse.failed_ids:type_name -> avion.notification.v1.BatchMarkAsReadResponse.FailedIdsEntry
	63, // 15: avion.notification.v1.BatchDeleteNotificationsResponse.failed_ids:type_name -> avion.notification.v1.BatchDeleteNotificationsResponse.FailedIdsEntry
	73, // 16: avion.notification.v1.GetNotificationPreferencesResponse.preferences:type_name -> avion.notification.v1.NotificationPreference
	74, // 17: avion.notification.v1.UpdateNotificationPreferencesRequest.update_mask:type_name -> google.protobuf.FieldMask
	73, // 18: avion.notification.v1.UpdateNotificationPreferencesRequest.preferences:type_name -> avion.notification.v1.NotificationPreference
	73, // 19: avion.notification.v1.UpdateNotificationPreferencesResponse.preferences:type_name -> avion.notification.v1.NotificationPreference
	75, // 20: avion.notification.v1.SendNotificationRequest.channels:type_name -> avion.notification.v1.NotificationChannel
	69, // 21: avion.notification.v1.SendNotificationResponse.deliveries:type_name -> avion.notification.v1.NotificationDelivery
	67, // 22: avion.notification.v1.StreamNotificationsRequest.types:type_name -> avion.notification.v1.NotificationType
	68, // 23: avion.notification.v1.StreamNotificationsResponse.notification:type_name -> avion.notification.v1.Notification
	71, // 24: avion.notification.v1.StreamNotificationsResponse.timestamp:type_name -> google.protobuf.Timestamp
	76, // 25: avion.notification.v1.GetUnreadCountResponse.unread_count:type_name -> avion.notification.v1.UnreadCount
	2,  // 26: avion.notification.v1.BatchCreateNotificationsRequest.notifications:type_name -> avion.notification.v1.CreateNotificationRequest
	68, // 27: avion.notification.v1.BatchCreateNotificationsResponse.notifications:type_name -> avion.notification.v1.Notification
	64, // 28: avion.notification.v1.BatchCreateNotificationsResponse.failures:type_name -> avion.notification.v1.BatchCreateNotificationsResponse.FailuresEntry
	77, // 29: avion.notification.v1.WebSocketStreamRequest.message:type_name -> avion.notification.v1.WebSocketMessage
	77, // 30: avion.notification.v1.WebSocketStreamResponse.message:type_name -> avion.notification.v1.WebSocketMessage
	0,  // 31: avion.notification.v1.ManageWebSocketConnectionRequest.action:type_name -> avion.notification.v1.ConnectionAction
	78, // 32: avion.notification.v1.ManageWebSocketConnectionResponse.connection:type_name -> avion.notification.v1.WebSocketConnection
	70, // 33: avion.notification.v1.ListActiveConnectionsRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	78, // 34: avion.notification.v1.ListActiveConnectionsResponse.connections:type_name -> avion.notification.v1.WebSocketConnection
	72, // 35: avion.notification.v1.ListActiveConnectionsResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	77, // 36: avion.notification.v1.SendWebSocketMessageRequest.message:type_name -> avion.notification.v1.WebSocketMessage
	1,  // 37: avion.notification.v1.SendWebSocketMessageRequest.delivery_guarantee:type_name -> avion.notification.v1.DeliveryGuarantee
	77, // 38: avion.notification.v1.BroadcastWebSocketMessageRequest.message:type_name -> avion.notification.v1.WebSocketMessage
	40, // 39: avion.notification.v1.BroadcastWebSocketMessageRequest.filter:type_name -> avion.notification.v1.BroadcastFilter
	1,  // 40: avion.notification.v1.BroadcastWebSocketMessageRequest.delivery_guarantee:type_name -> avion.notification.v1.DeliveryGuarantee
	67, // 41: avion.notification.v1.BroadcastFilter.notification_types:type_name -> avion.notification.v1.NotificationType
	65, // 42: avion.notification.v1.RegisterPushDeviceRequest.metadata:type_name -> avion.notification.v1.RegisterPushDeviceRequest.MetadataEntry
	79, // 43: avion.notification.v1.RegisterPushDeviceResponse.device:type_name -> avion.notification.v1.PushDevice
	74, // 44: avion.notification.v1.UpdatePushDeviceRequest.update_mask:type_name -> google.protobuf.FieldMask
	79, // 45: avion.notification.v1.UpdatePushDeviceRequest.device:type_name -> avion.notification.v1.PushDevice
	79, // 46: avion.notification.v1.UpdatePushDeviceResponse.device:type_name -> avion.notification.v1.PushDevice
	70, // 47: avion.notification.v1.ListPushDevicesRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	79, // 48: avion.notification.v1.ListPushDevicesResponse.devices:type_name -> avion.notification.v1.PushDevice
	72, // 49: avion.notification.v1.ListPushDevicesResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	79, // 50: avion.notification.v1.GetPushDeviceResponse.device:type_name -> avion.notification.v1.PushDevice
	67, // 51: avion.notification.v1.CreateNotificationTemplateRequest.type:type_name -> avion.notification.v1.NotificationType
	66, // 52: avion.notification.v1.CreateNotificationTemplateRequest.metadata:type_name -> avion.notification.v1.CreateNotificationTemplateRequest.MetadataEntry
	80, // 53: avion.notification.v1.CreateNotificationTemplateResponse.template:type_name -> avion.notification.v1.NotificationTemplate
	80, // 54: avion.notification.v1.GetNotificationTemplateResponse.template:type_name -> avion.notification.v1.NotificationTemplate
	74, // 55: avion.notification.v1.UpdateNotificationTemplateRequest.update_mask:type_name -> google.protobuf.FieldMask
	80, // 56: avion.notification.v1.UpdateNotificationTemplateRequest.template:type_name -> avion.notification.v1.NotificationTemplate
	80, // 57: avion.notification.v1.UpdateNotificationTemplateResponse.template:type_name -> avion.notification.v1.NotificationTemplate
	67, // 58: avion.notification.v1.ListNotificationTemplatesRequest.type:type_name -> avion.notification.v1.NotificationType
	70, // 59: avion.notification.v1.ListNotificationTemplatesRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	80, // 60: avion.notification.v1.ListNotificationTemplatesResponse.templates:type_name -> avion.notification.v1.NotificationTemplate
	72, // 61: avion.notification.v1.ListNotificationTemplatesResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	2,  // 62: avion.notification.v1.NotificationService.CreateNotification:input_type -> avion.notification.v1.CreateNotificationRequest
	4,  // 63: avion.notification.v1.NotificationService.GetNotification:input_type -> avion.notification.v1.GetNotificationRequest
	6,  // 64: avion.notification.v1.NotificationService.ListNotifications:input_type -> avion.notification.v1.ListNotificationsRequest
	9,  // 65: avion.notification.v1.NotificationService.MarkAsRead:input_type -> avion.notification.v1.MarkAsReadRequest
	11, // 66: avion.notification.v1.NotificationService.MarkAllAsRead:input_type -> avion.notification.v1.MarkAllAsReadRequest
	13, // 67: avion.notification.v1.NotificationService.BatchMarkAsRead:input_type -> avion.notification.v1.BatchMarkAsReadRequest
	15, // 68: avion.notification.v1.NotificationService.DeleteNotification:input_type -> avion.notification.v1.DeleteNotificationRequest
	17, // 69: avion.notification.v1.NotificationService.BatchDeleteNotifications:input_type -> avion.notification.v1.BatchDeleteNotificationsRequest
	19, // 70: avion.notification.v1.NotificationService.GetNotificationPreferences:input_type -> avion.notification.v1.GetNotificationPreferencesRequest
	21, // 71: avion.notification.v1.NotificationService.UpdateNotificationPreferences:input_type -> avion.notification.v1.UpdateNotificationPreferencesRequest
	23, // 72: avion.notification.v1.NotificationService.SendNotification:input_type -> avion.notification.v1.SendNotificationRequest
	25, // 73: avion.notification.v1.NotificationService.StreamNotifications:input_type -> avion.notification.v1.StreamNotificationsRequest
	27, // 74: avion.notification.v1.NotificationService.GetUnreadCount:input_type -> avion.notification.v1.GetUnreadCountRequest
	29, // 75: avion.notification.v1.NotificationService.BatchCreateNotifications:input_type -> avion.notification.v1.BatchCreateNotificationsRequest
	31, // 76: avion.notification.v1.NotificationService.WebSocketStream:input_type -> avion.notification.v1.WebSocketStreamRequest
	33, // 77: avion.notification.v1.NotificationService.ManageWebSocketConnection:input_type -> avion.notification.v1.ManageWebSocketConnectionRequest
	35, // 78: avion.notification.v1.NotificationService.ListActiveConnections:input_type -> avion.notification.v1.ListActiveConnectionsRequest
	37, // 79: avion.notification.v1.NotificationService.SendWebSocketMessage:input_type -> avion.notification.v1.SendWebSocketMessageRequest
	39, // 80: avion.notification.v1.NotificationService.BroadcastWebSocketMessage:input_type -> avion.notification.v1.BroadcastWebSocketMessageRequest
	42, // 81: avion.notification.v1.NotificationService.RegisterPushDevice:input_type -> avion.notification.v1.RegisterPushDeviceRequest
	44, // 82: avion.notification.v1.NotificationService.UpdatePushDevice:input_type -> avion.notification.v1.UpdatePushDeviceRequest
	46, // 83: avion.notification.v1.NotificationService.DeletePushDevice:input_type -> avion.notification.v1.DeletePushDeviceRequest
	48, // 84: avion.notification.v1.NotificationService.ListPushDevices:input_type -> avion.notification.v1.ListPushDevicesRequest
	50, // 85: avion.notification.v1.NotificationService.GetPushDevice:input_type -> avion.notification.v1.GetPushDeviceRequest
	52, // 86: avion.notification.v1.NotificationService.CreateNotificationTemplate:input_type -> avion.notification.v1.CreateNotificationTemplateRequest
	54, // 87: avion.notification.v1.NotificationService.GetNotificationTemplate:input_type -> avion.notification.v1.GetNotificationTemplateRequest
	56, // 88: avion.notification.v1.NotificationService.UpdateNotificationTemplate:input_type -> avion.notification.v1.UpdateNotificationTemplateRequest
	58, // 89: avion.notification.v1.NotificationService.DeleteNotificationTemplate:input_type -> avion.notification.v1.DeleteNotificationTemplateRequest
	60, // 90: avion.notification.v1.NotificationService.ListNotificationTemplates:input_type -> avion.notification.v1.ListNotificationTemplatesRequest
	3,  // 91: avion.notification.v1.NotificationService.CreateNotification:output_type -> avion.notification.v1.CreateNotificationResponse
	5,  // 92: avion.notification.v1.NotificationService.GetNotification:output_type -> avion.notification.v1.GetNotificationResponse
	8,  // 93: avion.notification.v1.NotificationService.ListNotifications:output_type -> avion.notification.v1.ListNotificationsResponse
	10, // 94: avion.notification.v1.NotificationService.MarkAsRead:output_type -> avion.notification.v1.MarkAsReadResponse
	12, // 95: avion.notification.v1.NotificationService.MarkAllAsRead:output_type -> avion.notification.v1.MarkAllAsReadResponse
	14, // 96: avion.notification.v1.NotificationService.BatchMarkAsRead:output_type -> avion.notification.v1.BatchMarkAsReadResponse
	16, // 97: avion.notification.v1.NotificationService.DeleteNotification:output_type -> avion.notification.v1.DeleteNotificationResponse
	18, // 98: avion.notification.v1.NotificationService.BatchDeleteNotifications:output_type -> avion.notification.v1.BatchDeleteNotificationsResponse
	20, // 99: avion.notification.v1.NotificationService.GetNotificationPreferences:output_type -> avion.notification.v1.GetNotificationPreferencesResponse
	22, // 100: avion.notification.v1.NotificationService.UpdateNotificationPreferences:output_type -> avion.notification.v1.UpdateNotificationPreferencesResponse
	24, // 101: avion.notification.v1.NotificationService.SendNotification:output_type -> avion.notification.v1.SendNotificationResponse
	26, // 102: avion.notification.v1.NotificationService.StreamNotifications:output_type -> avion.notification.v1.StreamNotificationsResponse
	28, // 103: avion.notification.v1.NotificationService.GetUnreadCount:output_type -> avion.notification.v1.GetUnreadCountResponse
	30, // 104: avion.notification.v1.NotificationService.BatchCreateNotifications:output_type -> avion.notification.v1.BatchCreateNotificationsResponse
	32, // 105: avion.notification.v1.NotificationService.WebSocketStream:output_type -> avion.notification.v1.WebSocketStreamResponse
	34, // 106: avion.notification.v1.NotificationService.ManageWebSocketConnection:output_type -> avion.notification.v1.ManageWebSocketConnectionResponse
	36, // 107: avion.notification.v1.NotificationService.ListActiveConnections:output_type -> avion.notification.v1.ListActiveConnectionsResponse
	38, // 108: avion.notification.v1.NotificationService.SendWebSocketMessage:output_type -> avion.notification.v1.SendWebSocketMessageResponse
	41, // 109: avion.notification.v1.NotificationService.BroadcastWebSocketMessage:output_type -> avion.notification.v1.BroadcastWebSocketMessageResponse
	43, // 110: avion.notification.v1.NotificationService.RegisterPushDevice:output_type -> avion.notification.v1.RegisterPushDeviceResponse
	45, // 111: avion.notification.v1.NotificationService.UpdatePushDevice:output_type -> avion.notification.v1.UpdatePushDeviceResponse
	47, // 112: avion.notification.v1.NotificationService.DeletePushDevice:output_type -> avion.notification.v1.DeletePushDeviceResponse
	49, // 113: avion.notification.v1.NotificationService.ListPushDevices:output_type -> avion.notification.v1.ListPushDevicesResponse
	51, // 114: avion.notification.v1.NotificationService.GetPushDevice:output_type -> avion.notification.v1.GetPushDeviceResponse
	53, // 115: avion.notification.v1.NotificationService.CreateNotificationTemplate:output_type -> avion.notification.v1.CreateNotificationTemplateResponse
	55, // 116: avion.notification.v1.NotificationService.GetNotificationTemplate:output_type -> avion.notification.v1.GetNotificationTemplateResponse
	57, // 117: avion.notification.v1.NotificationService.UpdateNotificationTemplate:output_type -> avion.notification.v1.UpdateNotificationTemplateResponse
	59, // 118: avion.notification.v1.NotificationService.DeleteNotificationTemplate:output_type -> avion.notification.v1.DeleteNotificationTemplateResponse
	61, // 119: avion.notification.v1.NotificationService.ListNotificationTemplates:output_type -> avion.notification.v1.ListNotificationTemplatesResponse
	91, // [91:120] is the sub-list for method output_type
	62, // [62:91] is the sub-list for method input_type
	62, // [62:62] is the sub-list for extension type_name
	62, // [62:62] is the sub-list for extension extendee
	0,  // [0:62] is the sub-list for field type_name
}

func init() { file_avion_notification_v1_notification_service_proto_init() }
func file_avion_notification_v1_notification_service_proto_init() {
	if File_avion_notification_v1_notification_service_proto != nil {
		return
	}
	file_avion_notification_v1_notification_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_avion_notification_v1_notification_service_proto_rawDesc), len(file_avion_notification_v1_notification_service_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   65,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_avion_notification_v1_notification_service_proto_goTypes,
		DependencyIndexes: file_avion_notification_v1_notification_service_proto_depIdxs,
		EnumInfos:         file_avion_notification_v1_notification_service_proto_enumTypes,
		MessageInfos:      file_avion_notification_v1_notification_service_proto_msgTypes,
	}.Build()
	File_avion_notification_v1_notification_service_proto = out.File
	file_avion_notification_v1_notification_service_proto_goTypes = nil
	file_avion_notification_v1_notification_service_proto_depIdxs = nil
}
