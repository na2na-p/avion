// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: avion/community/v1/community.proto

package communityv1

import (
	v1 "github.com/na2na-p/avion/proto/avion/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// グループの可視性設定
type GroupVisibility int32

const (
	// 未指定
	GroupVisibility_GROUP_VISIBILITY_UNSPECIFIED GroupVisibility = 0
	// 公開（誰でも参加可能）
	GroupVisibility_GROUP_VISIBILITY_PUBLIC GroupVisibility = 1
	// 限定公開（承認制）
	GroupVisibility_GROUP_VISIBILITY_RESTRICTED GroupVisibility = 2
	// 非公開（招待制）
	GroupVisibility_GROUP_VISIBILITY_PRIVATE GroupVisibility = 3
)

// Enum value maps for GroupVisibility.
var (
	GroupVisibility_name = map[int32]string{
		0: "GROUP_VISIBILITY_UNSPECIFIED",
		1: "GROUP_VISIBILITY_PUBLIC",
		2: "GROUP_VISIBILITY_RESTRICTED",
		3: "GROUP_VISIBILITY_PRIVATE",
	}
	GroupVisibility_value = map[string]int32{
		"GROUP_VISIBILITY_UNSPECIFIED": 0,
		"GROUP_VISIBILITY_PUBLIC":      1,
		"GROUP_VISIBILITY_RESTRICTED":  2,
		"GROUP_VISIBILITY_PRIVATE":     3,
	}
)

func (x GroupVisibility) Enum() *GroupVisibility {
	p := new(GroupVisibility)
	*p = x
	return p
}

func (x GroupVisibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupVisibility) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_community_v1_community_proto_enumTypes[0].Descriptor()
}

func (GroupVisibility) Type() protoreflect.EnumType {
	return &file_avion_community_v1_community_proto_enumTypes[0]
}

func (x GroupVisibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupVisibility.Descriptor instead.
func (GroupVisibility) EnumDescriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{0}
}

// グループのステータス
type GroupStatus int32

const (
	// 未指定
	GroupStatus_GROUP_STATUS_UNSPECIFIED GroupStatus = 0
	// アクティブ
	GroupStatus_GROUP_STATUS_ACTIVE GroupStatus = 1
	// 一時停止
	GroupStatus_GROUP_STATUS_SUSPENDED GroupStatus = 2
	// アーカイブ済み
	GroupStatus_GROUP_STATUS_ARCHIVED GroupStatus = 3
	// 削除済み
	GroupStatus_GROUP_STATUS_DELETED GroupStatus = 4
)

// Enum value maps for GroupStatus.
var (
	GroupStatus_name = map[int32]string{
		0: "GROUP_STATUS_UNSPECIFIED",
		1: "GROUP_STATUS_ACTIVE",
		2: "GROUP_STATUS_SUSPENDED",
		3: "GROUP_STATUS_ARCHIVED",
		4: "GROUP_STATUS_DELETED",
	}
	GroupStatus_value = map[string]int32{
		"GROUP_STATUS_UNSPECIFIED": 0,
		"GROUP_STATUS_ACTIVE":      1,
		"GROUP_STATUS_SUSPENDED":   2,
		"GROUP_STATUS_ARCHIVED":    3,
		"GROUP_STATUS_DELETED":     4,
	}
)

func (x GroupStatus) Enum() *GroupStatus {
	p := new(GroupStatus)
	*p = x
	return p
}

func (x GroupStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_community_v1_community_proto_enumTypes[1].Descriptor()
}

func (GroupStatus) Type() protoreflect.EnumType {
	return &file_avion_community_v1_community_proto_enumTypes[1]
}

func (x GroupStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupStatus.Descriptor instead.
func (GroupStatus) EnumDescriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{1}
}

// イベントのステータス
type EventStatus int32

const (
	// 未指定
	EventStatus_EVENT_STATUS_UNSPECIFIED EventStatus = 0
	// 下書き
	EventStatus_EVENT_STATUS_DRAFT EventStatus = 1
	// 公開済み
	EventStatus_EVENT_STATUS_PUBLISHED EventStatus = 2
	// 進行中
	EventStatus_EVENT_STATUS_ONGOING EventStatus = 3
	// 終了
	EventStatus_EVENT_STATUS_ENDED EventStatus = 4
	// キャンセル
	EventStatus_EVENT_STATUS_CANCELLED EventStatus = 5
)

// Enum value maps for EventStatus.
var (
	EventStatus_name = map[int32]string{
		0: "EVENT_STATUS_UNSPECIFIED",
		1: "EVENT_STATUS_DRAFT",
		2: "EVENT_STATUS_PUBLISHED",
		3: "EVENT_STATUS_ONGOING",
		4: "EVENT_STATUS_ENDED",
		5: "EVENT_STATUS_CANCELLED",
	}
	EventStatus_value = map[string]int32{
		"EVENT_STATUS_UNSPECIFIED": 0,
		"EVENT_STATUS_DRAFT":       1,
		"EVENT_STATUS_PUBLISHED":   2,
		"EVENT_STATUS_ONGOING":     3,
		"EVENT_STATUS_ENDED":       4,
		"EVENT_STATUS_CANCELLED":   5,
	}
)

func (x EventStatus) Enum() *EventStatus {
	p := new(EventStatus)
	*p = x
	return p
}

func (x EventStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_community_v1_community_proto_enumTypes[2].Descriptor()
}

func (EventStatus) Type() protoreflect.EnumType {
	return &file_avion_community_v1_community_proto_enumTypes[2]
}

func (x EventStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventStatus.Descriptor instead.
func (EventStatus) EnumDescriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{2}
}

// イベントの形式
type EventFormat int32

const (
	// 未指定
	EventFormat_EVENT_FORMAT_UNSPECIFIED EventFormat = 0
	// オフライン（対面）
	EventFormat_EVENT_FORMAT_OFFLINE EventFormat = 1
	// オンライン
	EventFormat_EVENT_FORMAT_ONLINE EventFormat = 2
	// ハイブリッド
	EventFormat_EVENT_FORMAT_HYBRID EventFormat = 3
)

// Enum value maps for EventFormat.
var (
	EventFormat_name = map[int32]string{
		0: "EVENT_FORMAT_UNSPECIFIED",
		1: "EVENT_FORMAT_OFFLINE",
		2: "EVENT_FORMAT_ONLINE",
		3: "EVENT_FORMAT_HYBRID",
	}
	EventFormat_value = map[string]int32{
		"EVENT_FORMAT_UNSPECIFIED": 0,
		"EVENT_FORMAT_OFFLINE":     1,
		"EVENT_FORMAT_ONLINE":      2,
		"EVENT_FORMAT_HYBRID":      3,
	}
)

func (x EventFormat) Enum() *EventFormat {
	p := new(EventFormat)
	*p = x
	return p
}

func (x EventFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_community_v1_community_proto_enumTypes[3].Descriptor()
}

func (EventFormat) Type() protoreflect.EnumType {
	return &file_avion_community_v1_community_proto_enumTypes[3]
}

func (x EventFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventFormat.Descriptor instead.
func (EventFormat) EnumDescriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{3}
}

// チャンネルのタイプ
type ChannelType int32

const (
	// 未指定
	ChannelType_CHANNEL_TYPE_UNSPECIFIED ChannelType = 0
	// テキストチャンネル
	ChannelType_CHANNEL_TYPE_TEXT ChannelType = 1
	// アナウンスチャンネル（管理者のみ投稿可能）
	ChannelType_CHANNEL_TYPE_ANNOUNCEMENT ChannelType = 2
	// ボイスチャンネル
	ChannelType_CHANNEL_TYPE_VOICE ChannelType = 3
	// ビデオチャンネル
	ChannelType_CHANNEL_TYPE_VIDEO ChannelType = 4
)

// Enum value maps for ChannelType.
var (
	ChannelType_name = map[int32]string{
		0: "CHANNEL_TYPE_UNSPECIFIED",
		1: "CHANNEL_TYPE_TEXT",
		2: "CHANNEL_TYPE_ANNOUNCEMENT",
		3: "CHANNEL_TYPE_VOICE",
		4: "CHANNEL_TYPE_VIDEO",
	}
	ChannelType_value = map[string]int32{
		"CHANNEL_TYPE_UNSPECIFIED":  0,
		"CHANNEL_TYPE_TEXT":         1,
		"CHANNEL_TYPE_ANNOUNCEMENT": 2,
		"CHANNEL_TYPE_VOICE":        3,
		"CHANNEL_TYPE_VIDEO":        4,
	}
)

func (x ChannelType) Enum() *ChannelType {
	p := new(ChannelType)
	*p = x
	return p
}

func (x ChannelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChannelType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_community_v1_community_proto_enumTypes[4].Descriptor()
}

func (ChannelType) Type() protoreflect.EnumType {
	return &file_avion_community_v1_community_proto_enumTypes[4]
}

func (x ChannelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChannelType.Descriptor instead.
func (ChannelType) EnumDescriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{4}
}

// メンバーの役割
type MemberRole int32

const (
	// 未指定
	MemberRole_MEMBER_ROLE_UNSPECIFIED MemberRole = 0
	// オーナー（グループ作成者）
	MemberRole_MEMBER_ROLE_OWNER MemberRole = 1
	// 管理者
	MemberRole_MEMBER_ROLE_ADMIN MemberRole = 2
	// モデレーター
	MemberRole_MEMBER_ROLE_MODERATOR MemberRole = 3
	// 一般メンバー
	MemberRole_MEMBER_ROLE_MEMBER MemberRole = 4
	// ゲスト
	MemberRole_MEMBER_ROLE_GUEST MemberRole = 5
)

// Enum value maps for MemberRole.
var (
	MemberRole_name = map[int32]string{
		0: "MEMBER_ROLE_UNSPECIFIED",
		1: "MEMBER_ROLE_OWNER",
		2: "MEMBER_ROLE_ADMIN",
		3: "MEMBER_ROLE_MODERATOR",
		4: "MEMBER_ROLE_MEMBER",
		5: "MEMBER_ROLE_GUEST",
	}
	MemberRole_value = map[string]int32{
		"MEMBER_ROLE_UNSPECIFIED": 0,
		"MEMBER_ROLE_OWNER":       1,
		"MEMBER_ROLE_ADMIN":       2,
		"MEMBER_ROLE_MODERATOR":   3,
		"MEMBER_ROLE_MEMBER":      4,
		"MEMBER_ROLE_GUEST":       5,
	}
)

func (x MemberRole) Enum() *MemberRole {
	p := new(MemberRole)
	*p = x
	return p
}

func (x MemberRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MemberRole) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_community_v1_community_proto_enumTypes[5].Descriptor()
}

func (MemberRole) Type() protoreflect.EnumType {
	return &file_avion_community_v1_community_proto_enumTypes[5]
}

func (x MemberRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MemberRole.Descriptor instead.
func (MemberRole) EnumDescriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{5}
}

// メンバーのステータス
type MemberStatus int32

const (
	// 未指定
	MemberStatus_MEMBER_STATUS_UNSPECIFIED MemberStatus = 0
	// アクティブ
	MemberStatus_MEMBER_STATUS_ACTIVE MemberStatus = 1
	// 招待中
	MemberStatus_MEMBER_STATUS_INVITED MemberStatus = 2
	// 申請中
	MemberStatus_MEMBER_STATUS_PENDING MemberStatus = 3
	// 停止中
	MemberStatus_MEMBER_STATUS_SUSPENDED MemberStatus = 4
	// 退出済み
	MemberStatus_MEMBER_STATUS_LEFT MemberStatus = 5
	// 追放済み
	MemberStatus_MEMBER_STATUS_BANNED MemberStatus = 6
)

// Enum value maps for MemberStatus.
var (
	MemberStatus_name = map[int32]string{
		0: "MEMBER_STATUS_UNSPECIFIED",
		1: "MEMBER_STATUS_ACTIVE",
		2: "MEMBER_STATUS_INVITED",
		3: "MEMBER_STATUS_PENDING",
		4: "MEMBER_STATUS_SUSPENDED",
		5: "MEMBER_STATUS_LEFT",
		6: "MEMBER_STATUS_BANNED",
	}
	MemberStatus_value = map[string]int32{
		"MEMBER_STATUS_UNSPECIFIED": 0,
		"MEMBER_STATUS_ACTIVE":      1,
		"MEMBER_STATUS_INVITED":     2,
		"MEMBER_STATUS_PENDING":     3,
		"MEMBER_STATUS_SUSPENDED":   4,
		"MEMBER_STATUS_LEFT":        5,
		"MEMBER_STATUS_BANNED":      6,
	}
)

func (x MemberStatus) Enum() *MemberStatus {
	p := new(MemberStatus)
	*p = x
	return p
}

func (x MemberStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MemberStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_community_v1_community_proto_enumTypes[6].Descriptor()
}

func (MemberStatus) Type() protoreflect.EnumType {
	return &file_avion_community_v1_community_proto_enumTypes[6]
}

func (x MemberStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MemberStatus.Descriptor instead.
func (MemberStatus) EnumDescriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{6}
}

// 参加者のステータス
type ParticipantStatus int32

const (
	// 未指定
	ParticipantStatus_PARTICIPANT_STATUS_UNSPECIFIED ParticipantStatus = 0
	// 参加予定
	ParticipantStatus_PARTICIPANT_STATUS_ATTENDING ParticipantStatus = 1
	// 興味あり
	ParticipantStatus_PARTICIPANT_STATUS_INTERESTED ParticipantStatus = 2
	// 不参加
	ParticipantStatus_PARTICIPANT_STATUS_NOT_ATTENDING ParticipantStatus = 3
	// キャンセル
	ParticipantStatus_PARTICIPANT_STATUS_CANCELLED ParticipantStatus = 4
)

// Enum value maps for ParticipantStatus.
var (
	ParticipantStatus_name = map[int32]string{
		0: "PARTICIPANT_STATUS_UNSPECIFIED",
		1: "PARTICIPANT_STATUS_ATTENDING",
		2: "PARTICIPANT_STATUS_INTERESTED",
		3: "PARTICIPANT_STATUS_NOT_ATTENDING",
		4: "PARTICIPANT_STATUS_CANCELLED",
	}
	ParticipantStatus_value = map[string]int32{
		"PARTICIPANT_STATUS_UNSPECIFIED":   0,
		"PARTICIPANT_STATUS_ATTENDING":     1,
		"PARTICIPANT_STATUS_INTERESTED":    2,
		"PARTICIPANT_STATUS_NOT_ATTENDING": 3,
		"PARTICIPANT_STATUS_CANCELLED":     4,
	}
)

func (x ParticipantStatus) Enum() *ParticipantStatus {
	p := new(ParticipantStatus)
	*p = x
	return p
}

func (x ParticipantStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParticipantStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_community_v1_community_proto_enumTypes[7].Descriptor()
}

func (ParticipantStatus) Type() protoreflect.EnumType {
	return &file_avion_community_v1_community_proto_enumTypes[7]
}

func (x ParticipantStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParticipantStatus.Descriptor instead.
func (ParticipantStatus) EnumDescriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{7}
}

// 権限の種類
type Permission int32

const (
	// 未指定
	Permission_PERMISSION_UNSPECIFIED Permission = 0
	// グループ設定の変更
	Permission_PERMISSION_MANAGE_GROUP Permission = 1
	// メンバー管理
	Permission_PERMISSION_MANAGE_MEMBERS Permission = 2
	// チャンネル管理
	Permission_PERMISSION_MANAGE_CHANNELS Permission = 3
	// イベント管理
	Permission_PERMISSION_MANAGE_EVENTS Permission = 4
	// 役割管理
	Permission_PERMISSION_MANAGE_ROLES Permission = 5
	// メッセージ投稿
	Permission_PERMISSION_POST_MESSAGE Permission = 6
	// メッセージ削除
	Permission_PERMISSION_DELETE_MESSAGE Permission = 7
	// メンバー招待
	Permission_PERMISSION_INVITE_MEMBERS Permission = 8
	// メンバー追放
	Permission_PERMISSION_BAN_MEMBERS Permission = 9
	// アナウンス投稿
	Permission_PERMISSION_POST_ANNOUNCEMENT Permission = 10
)

// Enum value maps for Permission.
var (
	Permission_name = map[int32]string{
		0:  "PERMISSION_UNSPECIFIED",
		1:  "PERMISSION_MANAGE_GROUP",
		2:  "PERMISSION_MANAGE_MEMBERS",
		3:  "PERMISSION_MANAGE_CHANNELS",
		4:  "PERMISSION_MANAGE_EVENTS",
		5:  "PERMISSION_MANAGE_ROLES",
		6:  "PERMISSION_POST_MESSAGE",
		7:  "PERMISSION_DELETE_MESSAGE",
		8:  "PERMISSION_INVITE_MEMBERS",
		9:  "PERMISSION_BAN_MEMBERS",
		10: "PERMISSION_POST_ANNOUNCEMENT",
	}
	Permission_value = map[string]int32{
		"PERMISSION_UNSPECIFIED":       0,
		"PERMISSION_MANAGE_GROUP":      1,
		"PERMISSION_MANAGE_MEMBERS":    2,
		"PERMISSION_MANAGE_CHANNELS":   3,
		"PERMISSION_MANAGE_EVENTS":     4,
		"PERMISSION_MANAGE_ROLES":      5,
		"PERMISSION_POST_MESSAGE":      6,
		"PERMISSION_DELETE_MESSAGE":    7,
		"PERMISSION_INVITE_MEMBERS":    8,
		"PERMISSION_BAN_MEMBERS":       9,
		"PERMISSION_POST_ANNOUNCEMENT": 10,
	}
)

func (x Permission) Enum() *Permission {
	p := new(Permission)
	*p = x
	return p
}

func (x Permission) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Permission) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_community_v1_community_proto_enumTypes[8].Descriptor()
}

func (Permission) Type() protoreflect.EnumType {
	return &file_avion_community_v1_community_proto_enumTypes[8]
}

func (x Permission) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Permission.Descriptor instead.
func (Permission) EnumDescriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{8}
}

// グループ情報
type Group struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// グループID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// グループ名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// グループの説明
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// アバター画像URL
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	// ヘッダー画像URL
	HeaderUrl string `protobuf:"bytes,5,opt,name=header_url,json=headerUrl,proto3" json:"header_url,omitempty"`
	// オーナーID
	OwnerId string `protobuf:"bytes,6,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// 可視性設定
	Visibility GroupVisibility `protobuf:"varint,7,opt,name=visibility,proto3,enum=avion.community.v1.GroupVisibility" json:"visibility,omitempty"`
	// ステータス
	Status GroupStatus `protobuf:"varint,8,opt,name=status,proto3,enum=avion.community.v1.GroupStatus" json:"status,omitempty"`
	// メンバー数
	MemberCount int64 `protobuf:"varint,9,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"`
	// 作成日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新日時
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// カテゴリタグ
	Tags []string `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	// メタデータ
	Metadata      *v1.ResourceMetadata `protobuf:"bytes,13,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Group) Reset() {
	*x = Group{}
	mi := &file_avion_community_v1_community_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_avion_community_v1_community_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{0}
}

func (x *Group) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Group) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Group) GetHeaderUrl() string {
	if x != nil {
		return x.HeaderUrl
	}
	return ""
}

func (x *Group) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Group) GetVisibility() GroupVisibility {
	if x != nil {
		return x.Visibility
	}
	return GroupVisibility_GROUP_VISIBILITY_UNSPECIFIED
}

func (x *Group) GetStatus() GroupStatus {
	if x != nil {
		return x.Status
	}
	return GroupStatus_GROUP_STATUS_UNSPECIFIED
}

func (x *Group) GetMemberCount() int64 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *Group) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Group) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Group) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Group) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// グループ設定
type GroupSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// グループID
	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// 新規メンバーの承認が必要か
	RequireApproval bool `protobuf:"varint,2,opt,name=require_approval,json=requireApproval,proto3" json:"require_approval,omitempty"`
	// メンバー上限数
	MaxMembers int32 `protobuf:"varint,3,opt,name=max_members,json=maxMembers,proto3" json:"max_members,omitempty"`
	// 投稿の事前承認が必要か
	RequirePostApproval bool `protobuf:"varint,4,opt,name=require_post_approval,json=requirePostApproval,proto3" json:"require_post_approval,omitempty"`
	// メンバーのみ閲覧可能か
	MembersOnlyView bool `protobuf:"varint,5,opt,name=members_only_view,json=membersOnlyView,proto3" json:"members_only_view,omitempty"`
	// メンバーがイベントを作成可能か
	AllowMemberEvents bool `protobuf:"varint,6,opt,name=allow_member_events,json=allowMemberEvents,proto3" json:"allow_member_events,omitempty"`
	// メンバーがチャンネルを作成可能か
	AllowMemberChannels bool `protobuf:"varint,7,opt,name=allow_member_channels,json=allowMemberChannels,proto3" json:"allow_member_channels,omitempty"`
	// 通知設定
	NotificationSettings *NotificationSettings `protobuf:"bytes,8,opt,name=notification_settings,json=notificationSettings,proto3" json:"notification_settings,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GroupSettings) Reset() {
	*x = GroupSettings{}
	mi := &file_avion_community_v1_community_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSettings) ProtoMessage() {}

func (x *GroupSettings) ProtoReflect() protoreflect.Message {
	mi := &file_avion_community_v1_community_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSettings.ProtoReflect.Descriptor instead.
func (*GroupSettings) Descriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{1}
}

func (x *GroupSettings) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupSettings) GetRequireApproval() bool {
	if x != nil {
		return x.RequireApproval
	}
	return false
}

func (x *GroupSettings) GetMaxMembers() int32 {
	if x != nil {
		return x.MaxMembers
	}
	return 0
}

func (x *GroupSettings) GetRequirePostApproval() bool {
	if x != nil {
		return x.RequirePostApproval
	}
	return false
}

func (x *GroupSettings) GetMembersOnlyView() bool {
	if x != nil {
		return x.MembersOnlyView
	}
	return false
}

func (x *GroupSettings) GetAllowMemberEvents() bool {
	if x != nil {
		return x.AllowMemberEvents
	}
	return false
}

func (x *GroupSettings) GetAllowMemberChannels() bool {
	if x != nil {
		return x.AllowMemberChannels
	}
	return false
}

func (x *GroupSettings) GetNotificationSettings() *NotificationSettings {
	if x != nil {
		return x.NotificationSettings
	}
	return nil
}

// イベント情報
type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// イベントID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// グループID
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// イベントタイトル
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// イベントの説明
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// カバー画像URL
	CoverImageUrl string `protobuf:"bytes,5,opt,name=cover_image_url,json=coverImageUrl,proto3" json:"cover_image_url,omitempty"`
	// 開催者ID
	OrganizerId string `protobuf:"bytes,6,opt,name=organizer_id,json=organizerId,proto3" json:"organizer_id,omitempty"`
	// 開始日時
	StartTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 終了日時
	EndTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 開催形式
	Format EventFormat `protobuf:"varint,9,opt,name=format,proto3,enum=avion.community.v1.EventFormat" json:"format,omitempty"`
	// 開催場所（オフラインの場合）
	Location *EventLocation `protobuf:"bytes,10,opt,name=location,proto3" json:"location,omitempty"`
	// オンラインURL（オンラインの場合）
	OnlineUrl string `protobuf:"bytes,11,opt,name=online_url,json=onlineUrl,proto3" json:"online_url,omitempty"`
	// ステータス
	Status EventStatus `protobuf:"varint,12,opt,name=status,proto3,enum=avion.community.v1.EventStatus" json:"status,omitempty"`
	// 参加者数上限
	MaxParticipants int32 `protobuf:"varint,13,opt,name=max_participants,json=maxParticipants,proto3" json:"max_participants,omitempty"`
	// 現在の参加者数
	ParticipantCount int32 `protobuf:"varint,14,opt,name=participant_count,json=participantCount,proto3" json:"participant_count,omitempty"`
	// 参加費（任意）
	Fee *EventFee `protobuf:"bytes,15,opt,name=fee,proto3" json:"fee,omitempty"`
	// 作成日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新日時
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// タグ
	Tags []string `protobuf:"bytes,18,rep,name=tags,proto3" json:"tags,omitempty"`
	// メタデータ
	Metadata      *v1.ResourceMetadata `protobuf:"bytes,19,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_avion_community_v1_community_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_avion_community_v1_community_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{2}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Event) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Event) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Event) GetCoverImageUrl() string {
	if x != nil {
		return x.CoverImageUrl
	}
	return ""
}

func (x *Event) GetOrganizerId() string {
	if x != nil {
		return x.OrganizerId
	}
	return ""
}

func (x *Event) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Event) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *Event) GetFormat() EventFormat {
	if x != nil {
		return x.Format
	}
	return EventFormat_EVENT_FORMAT_UNSPECIFIED
}

func (x *Event) GetLocation() *EventLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Event) GetOnlineUrl() string {
	if x != nil {
		return x.OnlineUrl
	}
	return ""
}

func (x *Event) GetStatus() EventStatus {
	if x != nil {
		return x.Status
	}
	return EventStatus_EVENT_STATUS_UNSPECIFIED
}

func (x *Event) GetMaxParticipants() int32 {
	if x != nil {
		return x.MaxParticipants
	}
	return 0
}

func (x *Event) GetParticipantCount() int32 {
	if x != nil {
		return x.ParticipantCount
	}
	return 0
}

func (x *Event) GetFee() *EventFee {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *Event) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Event) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Event) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Event) GetMetadata() *v1.ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// イベント開催場所
type EventLocation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 場所名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 住所
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// 緯度
	Latitude float64 `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// 経度
	Longitude float64 `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// 詳細情報
	Details       string `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventLocation) Reset() {
	*x = EventLocation{}
	mi := &file_avion_community_v1_community_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventLocation) ProtoMessage() {}

func (x *EventLocation) ProtoReflect() protoreflect.Message {
	mi := &file_avion_community_v1_community_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventLocation.ProtoReflect.Descriptor instead.
func (*EventLocation) Descriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{3}
}

func (x *EventLocation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventLocation) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EventLocation) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *EventLocation) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *EventLocation) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// イベント参加費
type EventFee struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通貨コード（ISO 4217）
	Currency string `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	// 金額（最小単位）
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// 説明
	Description   string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventFee) Reset() {
	*x = EventFee{}
	mi := &file_avion_community_v1_community_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFee) ProtoMessage() {}

func (x *EventFee) ProtoReflect() protoreflect.Message {
	mi := &file_avion_community_v1_community_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFee.ProtoReflect.Descriptor instead.
func (*EventFee) Descriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{4}
}

func (x *EventFee) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *EventFee) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *EventFee) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// チャンネル情報
type Channel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// チャンネルID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// グループID
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// チャンネル名
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// チャンネルの説明
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// チャンネルタイプ
	Type ChannelType `protobuf:"varint,5,opt,name=type,proto3,enum=avion.community.v1.ChannelType" json:"type,omitempty"`
	// 表示順序
	Position int32 `protobuf:"varint,6,opt,name=position,proto3" json:"position,omitempty"`
	// アーカイブフラグ
	IsArchived bool `protobuf:"varint,7,opt,name=is_archived,json=isArchived,proto3" json:"is_archived,omitempty"`
	// 作成者ID
	CreatorId string `protobuf:"bytes,8,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	// 作成日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新日時
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// 最後のメッセージ日時
	LastMessageAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=last_message_at,json=lastMessageAt,proto3" json:"last_message_at,omitempty"`
	// メッセージ数
	MessageCount int64 `protobuf:"varint,12,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`
	// チャンネル設定
	Settings      *ChannelSettings `protobuf:"bytes,13,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Channel) Reset() {
	*x = Channel{}
	mi := &file_avion_community_v1_community_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_avion_community_v1_community_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{5}
}

func (x *Channel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Channel) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Channel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Channel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Channel) GetType() ChannelType {
	if x != nil {
		return x.Type
	}
	return ChannelType_CHANNEL_TYPE_UNSPECIFIED
}

func (x *Channel) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *Channel) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

func (x *Channel) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *Channel) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Channel) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Channel) GetLastMessageAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastMessageAt
	}
	return nil
}

func (x *Channel) GetMessageCount() int64 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

func (x *Channel) GetSettings() *ChannelSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// チャンネル設定
type ChannelSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// メンバーのみ投稿可能か
	MembersOnlyPost bool `protobuf:"varint,1,opt,name=members_only_post,json=membersOnlyPost,proto3" json:"members_only_post,omitempty"`
	// スレッド作成を許可するか
	AllowThreads bool `protobuf:"varint,2,opt,name=allow_threads,json=allowThreads,proto3" json:"allow_threads,omitempty"`
	// メッセージの自動削除期間（秒）
	AutoDeleteAfter int32 `protobuf:"varint,3,opt,name=auto_delete_after,json=autoDeleteAfter,proto3" json:"auto_delete_after,omitempty"`
	// スローモード間隔（秒）
	SlowModeInterval int32 `protobuf:"varint,4,opt,name=slow_mode_interval,json=slowModeInterval,proto3" json:"slow_mode_interval,omitempty"`
	// ピン留めメッセージ上限
	MaxPinnedMessages int32 `protobuf:"varint,5,opt,name=max_pinned_messages,json=maxPinnedMessages,proto3" json:"max_pinned_messages,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ChannelSettings) Reset() {
	*x = ChannelSettings{}
	mi := &file_avion_community_v1_community_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelSettings) ProtoMessage() {}

func (x *ChannelSettings) ProtoReflect() protoreflect.Message {
	mi := &file_avion_community_v1_community_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelSettings.ProtoReflect.Descriptor instead.
func (*ChannelSettings) Descriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{6}
}

func (x *ChannelSettings) GetMembersOnlyPost() bool {
	if x != nil {
		return x.MembersOnlyPost
	}
	return false
}

func (x *ChannelSettings) GetAllowThreads() bool {
	if x != nil {
		return x.AllowThreads
	}
	return false
}

func (x *ChannelSettings) GetAutoDeleteAfter() int32 {
	if x != nil {
		return x.AutoDeleteAfter
	}
	return 0
}

func (x *ChannelSettings) GetSlowModeInterval() int32 {
	if x != nil {
		return x.SlowModeInterval
	}
	return 0
}

func (x *ChannelSettings) GetMaxPinnedMessages() int32 {
	if x != nil {
		return x.MaxPinnedMessages
	}
	return 0
}

// メンバー情報
type Member struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// メンバーID（複合キー: group_id + user_id）
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// グループID
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 役割
	Role MemberRole `protobuf:"varint,4,opt,name=role,proto3,enum=avion.community.v1.MemberRole" json:"role,omitempty"`
	// ステータス
	Status MemberStatus `protobuf:"varint,5,opt,name=status,proto3,enum=avion.community.v1.MemberStatus" json:"status,omitempty"`
	// 参加日時
	JoinedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	// 招待者ID
	InvitedBy string `protobuf:"bytes,7,opt,name=invited_by,json=invitedBy,proto3" json:"invited_by,omitempty"`
	// カスタム役割ID（任意）
	CustomRoleId string `protobuf:"bytes,8,opt,name=custom_role_id,json=customRoleId,proto3" json:"custom_role_id,omitempty"`
	// 最終活動日時
	LastActiveAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_active_at,json=lastActiveAt,proto3" json:"last_active_at,omitempty"`
	// 通知設定
	NotificationSettings *MemberNotificationSettings `protobuf:"bytes,10,opt,name=notification_settings,json=notificationSettings,proto3" json:"notification_settings,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Member) Reset() {
	*x = Member{}
	mi := &file_avion_community_v1_community_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_avion_community_v1_community_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{7}
}

func (x *Member) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Member) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Member) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Member) GetRole() MemberRole {
	if x != nil {
		return x.Role
	}
	return MemberRole_MEMBER_ROLE_UNSPECIFIED
}

func (x *Member) GetStatus() MemberStatus {
	if x != nil {
		return x.Status
	}
	return MemberStatus_MEMBER_STATUS_UNSPECIFIED
}

func (x *Member) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

func (x *Member) GetInvitedBy() string {
	if x != nil {
		return x.InvitedBy
	}
	return ""
}

func (x *Member) GetCustomRoleId() string {
	if x != nil {
		return x.CustomRoleId
	}
	return ""
}

func (x *Member) GetLastActiveAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActiveAt
	}
	return nil
}

func (x *Member) GetNotificationSettings() *MemberNotificationSettings {
	if x != nil {
		return x.NotificationSettings
	}
	return nil
}

// イベント参加者
type Participant struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 参加者ID（複合キー: event_id + user_id）
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// イベントID
	EventId string `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 参加ステータス
	Status ParticipantStatus `protobuf:"varint,4,opt,name=status,proto3,enum=avion.community.v1.ParticipantStatus" json:"status,omitempty"`
	// 登録日時
	RegisteredAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=registered_at,json=registeredAt,proto3" json:"registered_at,omitempty"`
	// 更新日時
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// コメント
	Comment string `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	// 同伴者数
	GuestCount    int32 `protobuf:"varint,8,opt,name=guest_count,json=guestCount,proto3" json:"guest_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Participant) Reset() {
	*x = Participant{}
	mi := &file_avion_community_v1_community_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_avion_community_v1_community_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{8}
}

func (x *Participant) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Participant) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Participant) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Participant) GetStatus() ParticipantStatus {
	if x != nil {
		return x.Status
	}
	return ParticipantStatus_PARTICIPANT_STATUS_UNSPECIFIED
}

func (x *Participant) GetRegisteredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RegisteredAt
	}
	return nil
}

func (x *Participant) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Participant) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Participant) GetGuestCount() int32 {
	if x != nil {
		return x.GuestCount
	}
	return 0
}

// 役割情報
type Role struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 役割ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// グループID
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// 役割名
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 役割の説明
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// 色（16進数カラーコード）
	Color string `protobuf:"bytes,5,opt,name=color,proto3" json:"color,omitempty"`
	// 表示順序（高い方が上位）
	Position int32 `protobuf:"varint,6,opt,name=position,proto3" json:"position,omitempty"`
	// 権限リスト
	Permissions []Permission `protobuf:"varint,7,rep,packed,name=permissions,proto3,enum=avion.community.v1.Permission" json:"permissions,omitempty"`
	// メンション可能か
	Mentionable bool `protobuf:"varint,8,opt,name=mentionable,proto3" json:"mentionable,omitempty"`
	// 作成日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新日時
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Role) Reset() {
	*x = Role{}
	mi := &file_avion_community_v1_community_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_avion_community_v1_community_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{9}
}

func (x *Role) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Role) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Role) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Role) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *Role) GetPermissions() []Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *Role) GetMentionable() bool {
	if x != nil {
		return x.Mentionable
	}
	return false
}

func (x *Role) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Role) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// 通知設定
type NotificationSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 新規メンバー参加
	NewMember bool `protobuf:"varint,1,opt,name=new_member,json=newMember,proto3" json:"new_member,omitempty"`
	// 新規投稿
	NewPost bool `protobuf:"varint,2,opt,name=new_post,json=newPost,proto3" json:"new_post,omitempty"`
	// 新規イベント
	NewEvent bool `protobuf:"varint,3,opt,name=new_event,json=newEvent,proto3" json:"new_event,omitempty"`
	// メンション
	Mentions bool `protobuf:"varint,4,opt,name=mentions,proto3" json:"mentions,omitempty"`
	// アナウンス
	Announcements bool `protobuf:"varint,5,opt,name=announcements,proto3" json:"announcements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationSettings) Reset() {
	*x = NotificationSettings{}
	mi := &file_avion_community_v1_community_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSettings) ProtoMessage() {}

func (x *NotificationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_avion_community_v1_community_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSettings.ProtoReflect.Descriptor instead.
func (*NotificationSettings) Descriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{10}
}

func (x *NotificationSettings) GetNewMember() bool {
	if x != nil {
		return x.NewMember
	}
	return false
}

func (x *NotificationSettings) GetNewPost() bool {
	if x != nil {
		return x.NewPost
	}
	return false
}

func (x *NotificationSettings) GetNewEvent() bool {
	if x != nil {
		return x.NewEvent
	}
	return false
}

func (x *NotificationSettings) GetMentions() bool {
	if x != nil {
		return x.Mentions
	}
	return false
}

func (x *NotificationSettings) GetAnnouncements() bool {
	if x != nil {
		return x.Announcements
	}
	return false
}

// メンバーの通知設定
type MemberNotificationSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知ミュート
	Muted bool `protobuf:"varint,1,opt,name=muted,proto3" json:"muted,omitempty"`
	// 新規投稿通知
	NewPosts bool `protobuf:"varint,2,opt,name=new_posts,json=newPosts,proto3" json:"new_posts,omitempty"`
	// イベント通知
	Events bool `protobuf:"varint,3,opt,name=events,proto3" json:"events,omitempty"`
	// メンション通知
	Mentions bool `protobuf:"varint,4,opt,name=mentions,proto3" json:"mentions,omitempty"`
	// アナウンス通知
	Announcements bool `protobuf:"varint,5,opt,name=announcements,proto3" json:"announcements,omitempty"`
	// 通知頻度（immediate, daily, weekly）
	Frequency     string `protobuf:"bytes,6,opt,name=frequency,proto3" json:"frequency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemberNotificationSettings) Reset() {
	*x = MemberNotificationSettings{}
	mi := &file_avion_community_v1_community_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberNotificationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberNotificationSettings) ProtoMessage() {}

func (x *MemberNotificationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_avion_community_v1_community_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberNotificationSettings.ProtoReflect.Descriptor instead.
func (*MemberNotificationSettings) Descriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{11}
}

func (x *MemberNotificationSettings) GetMuted() bool {
	if x != nil {
		return x.Muted
	}
	return false
}

func (x *MemberNotificationSettings) GetNewPosts() bool {
	if x != nil {
		return x.NewPosts
	}
	return false
}

func (x *MemberNotificationSettings) GetEvents() bool {
	if x != nil {
		return x.Events
	}
	return false
}

func (x *MemberNotificationSettings) GetMentions() bool {
	if x != nil {
		return x.Mentions
	}
	return false
}

func (x *MemberNotificationSettings) GetAnnouncements() bool {
	if x != nil {
		return x.Announcements
	}
	return false
}

func (x *MemberNotificationSettings) GetFrequency() string {
	if x != nil {
		return x.Frequency
	}
	return ""
}

// グループ招待
type GroupInvite struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 招待ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// グループID
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// 招待コード
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	// 作成者ID
	CreatorId string `protobuf:"bytes,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	// 有効期限
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// 使用回数上限
	MaxUses int32 `protobuf:"varint,6,opt,name=max_uses,json=maxUses,proto3" json:"max_uses,omitempty"`
	// 現在の使用回数
	Uses int32 `protobuf:"varint,7,opt,name=uses,proto3" json:"uses,omitempty"`
	// 作成日時
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupInvite) Reset() {
	*x = GroupInvite{}
	mi := &file_avion_community_v1_community_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupInvite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInvite) ProtoMessage() {}

func (x *GroupInvite) ProtoReflect() protoreflect.Message {
	mi := &file_avion_community_v1_community_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInvite.ProtoReflect.Descriptor instead.
func (*GroupInvite) Descriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{12}
}

func (x *GroupInvite) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GroupInvite) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupInvite) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GroupInvite) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *GroupInvite) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *GroupInvite) GetMaxUses() int32 {
	if x != nil {
		return x.MaxUses
	}
	return 0
}

func (x *GroupInvite) GetUses() int32 {
	if x != nil {
		return x.Uses
	}
	return 0
}

func (x *GroupInvite) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// グループ統計
type GroupStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// グループID
	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// 総メンバー数
	TotalMembers int64 `protobuf:"varint,2,opt,name=total_members,json=totalMembers,proto3" json:"total_members,omitempty"`
	// アクティブメンバー数（30日以内）
	ActiveMembers int64 `protobuf:"varint,3,opt,name=active_members,json=activeMembers,proto3" json:"active_members,omitempty"`
	// 総投稿数
	TotalPosts int64 `protobuf:"varint,4,opt,name=total_posts,json=totalPosts,proto3" json:"total_posts,omitempty"`
	// 総イベント数
	TotalEvents int64 `protobuf:"varint,5,opt,name=total_events,json=totalEvents,proto3" json:"total_events,omitempty"`
	// 今月の新規メンバー数
	NewMembersThisMonth int64 `protobuf:"varint,6,opt,name=new_members_this_month,json=newMembersThisMonth,proto3" json:"new_members_this_month,omitempty"`
	// 今月の投稿数
	PostsThisMonth int64 `protobuf:"varint,7,opt,name=posts_this_month,json=postsThisMonth,proto3" json:"posts_this_month,omitempty"`
	// 成長率（前月比）
	GrowthRate    float64 `protobuf:"fixed64,8,opt,name=growth_rate,json=growthRate,proto3" json:"growth_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupStats) Reset() {
	*x = GroupStats{}
	mi := &file_avion_community_v1_community_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupStats) ProtoMessage() {}

func (x *GroupStats) ProtoReflect() protoreflect.Message {
	mi := &file_avion_community_v1_community_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupStats.ProtoReflect.Descriptor instead.
func (*GroupStats) Descriptor() ([]byte, []int) {
	return file_avion_community_v1_community_proto_rawDescGZIP(), []int{13}
}

func (x *GroupStats) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupStats) GetTotalMembers() int64 {
	if x != nil {
		return x.TotalMembers
	}
	return 0
}

func (x *GroupStats) GetActiveMembers() int64 {
	if x != nil {
		return x.ActiveMembers
	}
	return 0
}

func (x *GroupStats) GetTotalPosts() int64 {
	if x != nil {
		return x.TotalPosts
	}
	return 0
}

func (x *GroupStats) GetTotalEvents() int64 {
	if x != nil {
		return x.TotalEvents
	}
	return 0
}

func (x *GroupStats) GetNewMembersThisMonth() int64 {
	if x != nil {
		return x.NewMembersThisMonth
	}
	return 0
}

func (x *GroupStats) GetPostsThisMonth() int64 {
	if x != nil {
		return x.PostsThisMonth
	}
	return 0
}

func (x *GroupStats) GetGrowthRate() float64 {
	if x != nil {
		return x.GrowthRate
	}
	return 0
}

var File_avion_community_v1_community_proto protoreflect.FileDescriptor

const file_avion_community_v1_community_proto_rawDesc = "" +
	"\n" +
	"\"avion/community/v1/community.proto\x12\x12avion.community.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1eavion/common/v1/metadata.proto\"\x90\x04\n" +
	"\x05Group\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x04 \x01(\tR\tavatarUrl\x12\x1d\n" +
	"\n" +
	"header_url\x18\x05 \x01(\tR\theaderUrl\x12\x19\n" +
	"\bowner_id\x18\x06 \x01(\tR\aownerId\x12C\n" +
	"\n" +
	"visibility\x18\a \x01(\x0e2#.avion.community.v1.GroupVisibilityR\n" +
	"visibility\x127\n" +
	"\x06status\x18\b \x01(\x0e2\x1f.avion.community.v1.GroupStatusR\x06status\x12!\n" +
	"\fmember_count\x18\t \x01(\x03R\vmemberCount\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x12\n" +
	"\x04tags\x18\f \x03(\tR\x04tags\x12=\n" +
	"\bmetadata\x18\r \x01(\v2!.avion.common.v1.ResourceMetadataR\bmetadata\"\x99\x03\n" +
	"\rGroupSettings\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12)\n" +
	"\x10require_approval\x18\x02 \x01(\bR\x0frequireApproval\x12\x1f\n" +
	"\vmax_members\x18\x03 \x01(\x05R\n" +
	"maxMembers\x122\n" +
	"\x15require_post_approval\x18\x04 \x01(\bR\x13requirePostApproval\x12*\n" +
	"\x11members_only_view\x18\x05 \x01(\bR\x0fmembersOnlyView\x12.\n" +
	"\x13allow_member_events\x18\x06 \x01(\bR\x11allowMemberEvents\x122\n" +
	"\x15allow_member_channels\x18\a \x01(\bR\x13allowMemberChannels\x12]\n" +
	"\x15notification_settings\x18\b \x01(\v2(.avion.community.v1.NotificationSettingsR\x14notificationSettings\"\xc8\x06\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12&\n" +
	"\x0fcover_image_url\x18\x05 \x01(\tR\rcoverImageUrl\x12!\n" +
	"\forganizer_id\x18\x06 \x01(\tR\vorganizerId\x129\n" +
	"\n" +
	"start_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x127\n" +
	"\x06format\x18\t \x01(\x0e2\x1f.avion.community.v1.EventFormatR\x06format\x12=\n" +
	"\blocation\x18\n" +
	" \x01(\v2!.avion.community.v1.EventLocationR\blocation\x12\x1d\n" +
	"\n" +
	"online_url\x18\v \x01(\tR\tonlineUrl\x127\n" +
	"\x06status\x18\f \x01(\x0e2\x1f.avion.community.v1.EventStatusR\x06status\x12)\n" +
	"\x10max_participants\x18\r \x01(\x05R\x0fmaxParticipants\x12+\n" +
	"\x11participant_count\x18\x0e \x01(\x05R\x10participantCount\x12.\n" +
	"\x03fee\x18\x0f \x01(\v2\x1c.avion.community.v1.EventFeeR\x03fee\x129\n" +
	"\n" +
	"created_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x12\n" +
	"\x04tags\x18\x12 \x03(\tR\x04tags\x12=\n" +
	"\bmetadata\x18\x13 \x01(\v2!.avion.common.v1.ResourceMetadataR\bmetadata\"\x91\x01\n" +
	"\rEventLocation\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1a\n" +
	"\blatitude\x18\x03 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x04 \x01(\x01R\tlongitude\x12\x18\n" +
	"\adetails\x18\x05 \x01(\tR\adetails\"`\n" +
	"\bEventFee\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"\x9b\x04\n" +
	"\aChannel\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x123\n" +
	"\x04type\x18\x05 \x01(\x0e2\x1f.avion.community.v1.ChannelTypeR\x04type\x12\x1a\n" +
	"\bposition\x18\x06 \x01(\x05R\bposition\x12\x1f\n" +
	"\vis_archived\x18\a \x01(\bR\n" +
	"isArchived\x12\x1d\n" +
	"\n" +
	"creator_id\x18\b \x01(\tR\tcreatorId\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12B\n" +
	"\x0flast_message_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\rlastMessageAt\x12#\n" +
	"\rmessage_count\x18\f \x01(\x03R\fmessageCount\x12?\n" +
	"\bsettings\x18\r \x01(\v2#.avion.community.v1.ChannelSettingsR\bsettings\"\xec\x01\n" +
	"\x0fChannelSettings\x12*\n" +
	"\x11members_only_post\x18\x01 \x01(\bR\x0fmembersOnlyPost\x12#\n" +
	"\rallow_threads\x18\x02 \x01(\bR\fallowThreads\x12*\n" +
	"\x11auto_delete_after\x18\x03 \x01(\x05R\x0fautoDeleteAfter\x12,\n" +
	"\x12slow_mode_interval\x18\x04 \x01(\x05R\x10slowModeInterval\x12.\n" +
	"\x13max_pinned_messages\x18\x05 \x01(\x05R\x11maxPinnedMessages\"\xdf\x03\n" +
	"\x06Member\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x122\n" +
	"\x04role\x18\x04 \x01(\x0e2\x1e.avion.community.v1.MemberRoleR\x04role\x128\n" +
	"\x06status\x18\x05 \x01(\x0e2 .avion.community.v1.MemberStatusR\x06status\x127\n" +
	"\tjoined_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\bjoinedAt\x12\x1d\n" +
	"\n" +
	"invited_by\x18\a \x01(\tR\tinvitedBy\x12$\n" +
	"\x0ecustom_role_id\x18\b \x01(\tR\fcustomRoleId\x12@\n" +
	"\x0elast_active_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\flastActiveAt\x12c\n" +
	"\x15notification_settings\x18\n" +
	" \x01(\v2..avion.community.v1.MemberNotificationSettingsR\x14notificationSettings\"\xc7\x02\n" +
	"\vParticipant\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bevent_id\x18\x02 \x01(\tR\aeventId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12=\n" +
	"\x06status\x18\x04 \x01(\x0e2%.avion.community.v1.ParticipantStatusR\x06status\x12?\n" +
	"\rregistered_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\fregisteredAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x18\n" +
	"\acomment\x18\a \x01(\tR\acomment\x12\x1f\n" +
	"\vguest_count\x18\b \x01(\x05R\n" +
	"guestCount\"\xf3\x02\n" +
	"\x04Role\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x14\n" +
	"\x05color\x18\x05 \x01(\tR\x05color\x12\x1a\n" +
	"\bposition\x18\x06 \x01(\x05R\bposition\x12@\n" +
	"\vpermissions\x18\a \x03(\x0e2\x1e.avion.community.v1.PermissionR\vpermissions\x12 \n" +
	"\vmentionable\x18\b \x01(\bR\vmentionable\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xaf\x01\n" +
	"\x14NotificationSettings\x12\x1d\n" +
	"\n" +
	"new_member\x18\x01 \x01(\bR\tnewMember\x12\x19\n" +
	"\bnew_post\x18\x02 \x01(\bR\anewPost\x12\x1b\n" +
	"\tnew_event\x18\x03 \x01(\bR\bnewEvent\x12\x1a\n" +
	"\bmentions\x18\x04 \x01(\bR\bmentions\x12$\n" +
	"\rannouncements\x18\x05 \x01(\bR\rannouncements\"\xc7\x01\n" +
	"\x1aMemberNotificationSettings\x12\x14\n" +
	"\x05muted\x18\x01 \x01(\bR\x05muted\x12\x1b\n" +
	"\tnew_posts\x18\x02 \x01(\bR\bnewPosts\x12\x16\n" +
	"\x06events\x18\x03 \x01(\bR\x06events\x12\x1a\n" +
	"\bmentions\x18\x04 \x01(\bR\bmentions\x12$\n" +
	"\rannouncements\x18\x05 \x01(\bR\rannouncements\x12\x1c\n" +
	"\tfrequency\x18\x06 \x01(\tR\tfrequency\"\x90\x02\n" +
	"\vGroupInvite\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x12\x1d\n" +
	"\n" +
	"creator_id\x18\x04 \x01(\tR\tcreatorId\x129\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12\x19\n" +
	"\bmax_uses\x18\x06 \x01(\x05R\amaxUses\x12\x12\n" +
	"\x04uses\x18\a \x01(\x05R\x04uses\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xb7\x02\n" +
	"\n" +
	"GroupStats\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12#\n" +
	"\rtotal_members\x18\x02 \x01(\x03R\ftotalMembers\x12%\n" +
	"\x0eactive_members\x18\x03 \x01(\x03R\ractiveMembers\x12\x1f\n" +
	"\vtotal_posts\x18\x04 \x01(\x03R\n" +
	"totalPosts\x12!\n" +
	"\ftotal_events\x18\x05 \x01(\x03R\vtotalEvents\x123\n" +
	"\x16new_members_this_month\x18\x06 \x01(\x03R\x13newMembersThisMonth\x12(\n" +
	"\x10posts_this_month\x18\a \x01(\x03R\x0epostsThisMonth\x12\x1f\n" +
	"\vgrowth_rate\x18\b \x01(\x01R\n" +
	"growthRate*\x8f\x01\n" +
	"\x0fGroupVisibility\x12 \n" +
	"\x1cGROUP_VISIBILITY_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17GROUP_VISIBILITY_PUBLIC\x10\x01\x12\x1f\n" +
	"\x1bGROUP_VISIBILITY_RESTRICTED\x10\x02\x12\x1c\n" +
	"\x18GROUP_VISIBILITY_PRIVATE\x10\x03*\x95\x01\n" +
	"\vGroupStatus\x12\x1c\n" +
	"\x18GROUP_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13GROUP_STATUS_ACTIVE\x10\x01\x12\x1a\n" +
	"\x16GROUP_STATUS_SUSPENDED\x10\x02\x12\x19\n" +
	"\x15GROUP_STATUS_ARCHIVED\x10\x03\x12\x18\n" +
	"\x14GROUP_STATUS_DELETED\x10\x04*\xad\x01\n" +
	"\vEventStatus\x12\x1c\n" +
	"\x18EVENT_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12EVENT_STATUS_DRAFT\x10\x01\x12\x1a\n" +
	"\x16EVENT_STATUS_PUBLISHED\x10\x02\x12\x18\n" +
	"\x14EVENT_STATUS_ONGOING\x10\x03\x12\x16\n" +
	"\x12EVENT_STATUS_ENDED\x10\x04\x12\x1a\n" +
	"\x16EVENT_STATUS_CANCELLED\x10\x05*w\n" +
	"\vEventFormat\x12\x1c\n" +
	"\x18EVENT_FORMAT_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14EVENT_FORMAT_OFFLINE\x10\x01\x12\x17\n" +
	"\x13EVENT_FORMAT_ONLINE\x10\x02\x12\x17\n" +
	"\x13EVENT_FORMAT_HYBRID\x10\x03*\x91\x01\n" +
	"\vChannelType\x12\x1c\n" +
	"\x18CHANNEL_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11CHANNEL_TYPE_TEXT\x10\x01\x12\x1d\n" +
	"\x19CHANNEL_TYPE_ANNOUNCEMENT\x10\x02\x12\x16\n" +
	"\x12CHANNEL_TYPE_VOICE\x10\x03\x12\x16\n" +
	"\x12CHANNEL_TYPE_VIDEO\x10\x04*\xa1\x01\n" +
	"\n" +
	"MemberRole\x12\x1b\n" +
	"\x17MEMBER_ROLE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11MEMBER_ROLE_OWNER\x10\x01\x12\x15\n" +
	"\x11MEMBER_ROLE_ADMIN\x10\x02\x12\x19\n" +
	"\x15MEMBER_ROLE_MODERATOR\x10\x03\x12\x16\n" +
	"\x12MEMBER_ROLE_MEMBER\x10\x04\x12\x15\n" +
	"\x11MEMBER_ROLE_GUEST\x10\x05*\xcc\x01\n" +
	"\fMemberStatus\x12\x1d\n" +
	"\x19MEMBER_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14MEMBER_STATUS_ACTIVE\x10\x01\x12\x19\n" +
	"\x15MEMBER_STATUS_INVITED\x10\x02\x12\x19\n" +
	"\x15MEMBER_STATUS_PENDING\x10\x03\x12\x1b\n" +
	"\x17MEMBER_STATUS_SUSPENDED\x10\x04\x12\x16\n" +
	"\x12MEMBER_STATUS_LEFT\x10\x05\x12\x18\n" +
	"\x14MEMBER_STATUS_BANNED\x10\x06*\xc4\x01\n" +
	"\x11ParticipantStatus\x12\"\n" +
	"\x1ePARTICIPANT_STATUS_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cPARTICIPANT_STATUS_ATTENDING\x10\x01\x12!\n" +
	"\x1dPARTICIPANT_STATUS_INTERESTED\x10\x02\x12$\n" +
	" PARTICIPANT_STATUS_NOT_ATTENDING\x10\x03\x12 \n" +
	"\x1cPARTICIPANT_STATUS_CANCELLED\x10\x04*\xd8\x02\n" +
	"\n" +
	"Permission\x12\x1a\n" +
	"\x16PERMISSION_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17PERMISSION_MANAGE_GROUP\x10\x01\x12\x1d\n" +
	"\x19PERMISSION_MANAGE_MEMBERS\x10\x02\x12\x1e\n" +
	"\x1aPERMISSION_MANAGE_CHANNELS\x10\x03\x12\x1c\n" +
	"\x18PERMISSION_MANAGE_EVENTS\x10\x04\x12\x1b\n" +
	"\x17PERMISSION_MANAGE_ROLES\x10\x05\x12\x1b\n" +
	"\x17PERMISSION_POST_MESSAGE\x10\x06\x12\x1d\n" +
	"\x19PERMISSION_DELETE_MESSAGE\x10\a\x12\x1d\n" +
	"\x19PERMISSION_INVITE_MEMBERS\x10\b\x12\x1a\n" +
	"\x16PERMISSION_BAN_MEMBERS\x10\t\x12 \n" +
	"\x1cPERMISSION_POST_ANNOUNCEMENT\x10\n" +
	"B\xd1\x01\n" +
	"\x16com.avion.community.v1B\x0eCommunityProtoP\x01Z=github.com/na2na-p/avion/proto/avion/community/v1;communityv1\xa2\x02\x03ACX\xaa\x02\x12Avion.Community.V1\xca\x02\x12Avion\\Community\\V1\xe2\x02\x1eAvion\\Community\\V1\\GPBMetadata\xea\x02\x14Avion::Community::V1b\x06proto3"

var (
	file_avion_community_v1_community_proto_rawDescOnce sync.Once
	file_avion_community_v1_community_proto_rawDescData []byte
)

func file_avion_community_v1_community_proto_rawDescGZIP() []byte {
	file_avion_community_v1_community_proto_rawDescOnce.Do(func() {
		file_avion_community_v1_community_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_avion_community_v1_community_proto_rawDesc), len(file_avion_community_v1_community_proto_rawDesc)))
	})
	return file_avion_community_v1_community_proto_rawDescData
}

var file_avion_community_v1_community_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_avion_community_v1_community_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_avion_community_v1_community_proto_goTypes = []any{
	(GroupVisibility)(0),               // 0: avion.community.v1.GroupVisibility
	(GroupStatus)(0),                   // 1: avion.community.v1.GroupStatus
	(EventStatus)(0),                   // 2: avion.community.v1.EventStatus
	(EventFormat)(0),                   // 3: avion.community.v1.EventFormat
	(ChannelType)(0),                   // 4: avion.community.v1.ChannelType
	(MemberRole)(0),                    // 5: avion.community.v1.MemberRole
	(MemberStatus)(0),                  // 6: avion.community.v1.MemberStatus
	(ParticipantStatus)(0),             // 7: avion.community.v1.ParticipantStatus
	(Permission)(0),                    // 8: avion.community.v1.Permission
	(*Group)(nil),                      // 9: avion.community.v1.Group
	(*GroupSettings)(nil),              // 10: avion.community.v1.GroupSettings
	(*Event)(nil),                      // 11: avion.community.v1.Event
	(*EventLocation)(nil),              // 12: avion.community.v1.EventLocation
	(*EventFee)(nil),                   // 13: avion.community.v1.EventFee
	(*Channel)(nil),                    // 14: avion.community.v1.Channel
	(*ChannelSettings)(nil),            // 15: avion.community.v1.ChannelSettings
	(*Member)(nil),                     // 16: avion.community.v1.Member
	(*Participant)(nil),                // 17: avion.community.v1.Participant
	(*Role)(nil),                       // 18: avion.community.v1.Role
	(*NotificationSettings)(nil),       // 19: avion.community.v1.NotificationSettings
	(*MemberNotificationSettings)(nil), // 20: avion.community.v1.MemberNotificationSettings
	(*GroupInvite)(nil),                // 21: avion.community.v1.GroupInvite
	(*GroupStats)(nil),                 // 22: avion.community.v1.GroupStats
	(*timestamppb.Timestamp)(nil),      // 23: google.protobuf.Timestamp
	(*v1.ResourceMetadata)(nil),        // 24: avion.common.v1.ResourceMetadata
}
var file_avion_community_v1_community_proto_depIdxs = []int32{
	0,  // 0: avion.community.v1.Group.visibility:type_name -> avion.community.v1.GroupVisibility
	1,  // 1: avion.community.v1.Group.status:type_name -> avion.community.v1.GroupStatus
	23, // 2: avion.community.v1.Group.created_at:type_name -> google.protobuf.Timestamp
	23, // 3: avion.community.v1.Group.updated_at:type_name -> google.protobuf.Timestamp
	24, // 4: avion.community.v1.Group.metadata:type_name -> avion.common.v1.ResourceMetadata
	19, // 5: avion.community.v1.GroupSettings.notification_settings:type_name -> avion.community.v1.NotificationSettings
	23, // 6: avion.community.v1.Event.start_time:type_name -> google.protobuf.Timestamp
	23, // 7: avion.community.v1.Event.end_time:type_name -> google.protobuf.Timestamp
	3,  // 8: avion.community.v1.Event.format:type_name -> avion.community.v1.EventFormat
	12, // 9: avion.community.v1.Event.location:type_name -> avion.community.v1.EventLocation
	2,  // 10: avion.community.v1.Event.status:type_name -> avion.community.v1.EventStatus
	13, // 11: avion.community.v1.Event.fee:type_name -> avion.community.v1.EventFee
	23, // 12: avion.community.v1.Event.created_at:type_name -> google.protobuf.Timestamp
	23, // 13: avion.community.v1.Event.updated_at:type_name -> google.protobuf.Timestamp
	24, // 14: avion.community.v1.Event.metadata:type_name -> avion.common.v1.ResourceMetadata
	4,  // 15: avion.community.v1.Channel.type:type_name -> avion.community.v1.ChannelType
	23, // 16: avion.community.v1.Channel.created_at:type_name -> google.protobuf.Timestamp
	23, // 17: avion.community.v1.Channel.updated_at:type_name -> google.protobuf.Timestamp
	23, // 18: avion.community.v1.Channel.last_message_at:type_name -> google.protobuf.Timestamp
	15, // 19: avion.community.v1.Channel.settings:type_name -> avion.community.v1.ChannelSettings
	5,  // 20: avion.community.v1.Member.role:type_name -> avion.community.v1.MemberRole
	6,  // 21: avion.community.v1.Member.status:type_name -> avion.community.v1.MemberStatus
	23, // 22: avion.community.v1.Member.joined_at:type_name -> google.protobuf.Timestamp
	23, // 23: avion.community.v1.Member.last_active_at:type_name -> google.protobuf.Timestamp
	20, // 24: avion.community.v1.Member.notification_settings:type_name -> avion.community.v1.MemberNotificationSettings
	7,  // 25: avion.community.v1.Participant.status:type_name -> avion.community.v1.ParticipantStatus
	23, // 26: avion.community.v1.Participant.registered_at:type_name -> google.protobuf.Timestamp
	23, // 27: avion.community.v1.Participant.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 28: avion.community.v1.Role.permissions:type_name -> avion.community.v1.Permission
	23, // 29: avion.community.v1.Role.created_at:type_name -> google.protobuf.Timestamp
	23, // 30: avion.community.v1.Role.updated_at:type_name -> google.protobuf.Timestamp
	23, // 31: avion.community.v1.GroupInvite.expires_at:type_name -> google.protobuf.Timestamp
	23, // 32: avion.community.v1.GroupInvite.created_at:type_name -> google.protobuf.Timestamp
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_avion_community_v1_community_proto_init() }
func file_avion_community_v1_community_proto_init() {
	if File_avion_community_v1_community_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_avion_community_v1_community_proto_rawDesc), len(file_avion_community_v1_community_proto_rawDesc)),
			NumEnums:      9,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_avion_community_v1_community_proto_goTypes,
		DependencyIndexes: file_avion_community_v1_community_proto_depIdxs,
		EnumInfos:         file_avion_community_v1_community_proto_enumTypes,
		MessageInfos:      file_avion_community_v1_community_proto_msgTypes,
	}.Build()
	File_avion_community_v1_community_proto = out.File
	file_avion_community_v1_community_proto_goTypes = nil
	file_avion_community_v1_community_proto_depIdxs = nil
}
