// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: avion/auth/v1/mfa.proto

package authv1

import (
	v1 "github.com/na2na-p/avion/proto/avion/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MFA（多要素認証）の種類
type MfaType int32

const (
	// 未指定
	MfaType_MFA_TYPE_UNSPECIFIED MfaType = 0
	// TOTP（Time-based One-Time Password）
	MfaType_MFA_TYPE_TOTP MfaType = 1
	// SMS認証
	MfaType_MFA_TYPE_SMS MfaType = 2
	// メール認証
	MfaType_MFA_TYPE_EMAIL MfaType = 3
	// バックアップコード
	MfaType_MFA_TYPE_BACKUP_CODE MfaType = 4
	// Passkey/WebAuthn
	MfaType_MFA_TYPE_PASSKEY MfaType = 5
)

// Enum value maps for MfaType.
var (
	MfaType_name = map[int32]string{
		0: "MFA_TYPE_UNSPECIFIED",
		1: "MFA_TYPE_TOTP",
		2: "MFA_TYPE_SMS",
		3: "MFA_TYPE_EMAIL",
		4: "MFA_TYPE_BACKUP_CODE",
		5: "MFA_TYPE_PASSKEY",
	}
	MfaType_value = map[string]int32{
		"MFA_TYPE_UNSPECIFIED": 0,
		"MFA_TYPE_TOTP":        1,
		"MFA_TYPE_SMS":         2,
		"MFA_TYPE_EMAIL":       3,
		"MFA_TYPE_BACKUP_CODE": 4,
		"MFA_TYPE_PASSKEY":     5,
	}
)

func (x MfaType) Enum() *MfaType {
	p := new(MfaType)
	*p = x
	return p
}

func (x MfaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MfaType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_auth_v1_mfa_proto_enumTypes[0].Descriptor()
}

func (MfaType) Type() protoreflect.EnumType {
	return &file_avion_auth_v1_mfa_proto_enumTypes[0]
}

func (x MfaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MfaType.Descriptor instead.
func (MfaType) EnumDescriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{0}
}

// MFAの状態
type MfaStatus int32

const (
	// 未指定
	MfaStatus_MFA_STATUS_UNSPECIFIED MfaStatus = 0
	// 無効
	MfaStatus_MFA_STATUS_DISABLED MfaStatus = 1
	// 有効化中（セットアップ中）
	MfaStatus_MFA_STATUS_PENDING MfaStatus = 2
	// 有効
	MfaStatus_MFA_STATUS_ENABLED MfaStatus = 3
)

// Enum value maps for MfaStatus.
var (
	MfaStatus_name = map[int32]string{
		0: "MFA_STATUS_UNSPECIFIED",
		1: "MFA_STATUS_DISABLED",
		2: "MFA_STATUS_PENDING",
		3: "MFA_STATUS_ENABLED",
	}
	MfaStatus_value = map[string]int32{
		"MFA_STATUS_UNSPECIFIED": 0,
		"MFA_STATUS_DISABLED":    1,
		"MFA_STATUS_PENDING":     2,
		"MFA_STATUS_ENABLED":     3,
	}
)

func (x MfaStatus) Enum() *MfaStatus {
	p := new(MfaStatus)
	*p = x
	return p
}

func (x MfaStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MfaStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_auth_v1_mfa_proto_enumTypes[1].Descriptor()
}

func (MfaStatus) Type() protoreflect.EnumType {
	return &file_avion_auth_v1_mfa_proto_enumTypes[1]
}

func (x MfaStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MfaStatus.Descriptor instead.
func (MfaStatus) EnumDescriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{1}
}

// MFAデバイス情報
type MfaDevice struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// デバイスID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// MFAタイプ
	Type MfaType `protobuf:"varint,3,opt,name=type,proto3,enum=avion.auth.v1.MfaType" json:"type,omitempty"`
	// デバイス名（ユーザーが設定）
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// 状態
	Status MfaStatus `protobuf:"varint,5,opt,name=status,proto3,enum=avion.auth.v1.MfaStatus" json:"status,omitempty"`
	// 作成日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 最終使用日時
	LastUsedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_used_at,json=lastUsedAt,proto3" json:"last_used_at,omitempty"`
	// デバイス固有のメタデータ
	Metadata      map[string]string `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MfaDevice) Reset() {
	*x = MfaDevice{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MfaDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MfaDevice) ProtoMessage() {}

func (x *MfaDevice) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MfaDevice.ProtoReflect.Descriptor instead.
func (*MfaDevice) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{0}
}

func (x *MfaDevice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MfaDevice) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MfaDevice) GetType() MfaType {
	if x != nil {
		return x.Type
	}
	return MfaType_MFA_TYPE_UNSPECIFIED
}

func (x *MfaDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MfaDevice) GetStatus() MfaStatus {
	if x != nil {
		return x.Status
	}
	return MfaStatus_MFA_STATUS_UNSPECIFIED
}

func (x *MfaDevice) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MfaDevice) GetLastUsedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsedAt
	}
	return nil
}

func (x *MfaDevice) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// TOTPセットアップ情報
type TotpSetup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// シークレットキー（Base32エンコード）
	Secret string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	// QRコード用URI
	QrCodeUri string `protobuf:"bytes,2,opt,name=qr_code_uri,json=qrCodeUri,proto3" json:"qr_code_uri,omitempty"`
	// 手動入力用のアカウント名
	AccountName string `protobuf:"bytes,3,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// 発行者名
	Issuer string `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// アルゴリズム（SHA1, SHA256, SHA512）
	Algorithm string `protobuf:"bytes,5,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	// 桁数（通常6桁）
	Digits int32 `protobuf:"varint,6,opt,name=digits,proto3" json:"digits,omitempty"`
	// 有効期間（秒、通常30秒）
	Period        int32 `protobuf:"varint,7,opt,name=period,proto3" json:"period,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TotpSetup) Reset() {
	*x = TotpSetup{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TotpSetup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotpSetup) ProtoMessage() {}

func (x *TotpSetup) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotpSetup.ProtoReflect.Descriptor instead.
func (*TotpSetup) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{1}
}

func (x *TotpSetup) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *TotpSetup) GetQrCodeUri() string {
	if x != nil {
		return x.QrCodeUri
	}
	return ""
}

func (x *TotpSetup) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *TotpSetup) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *TotpSetup) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *TotpSetup) GetDigits() int32 {
	if x != nil {
		return x.Digits
	}
	return 0
}

func (x *TotpSetup) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

// バックアップコード
type BackupCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// コードID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// コード値（ハッシュ化されていない場合のみ）
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// 使用済みフラグ
	Used bool `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
	// 使用日時
	UsedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=used_at,json=usedAt,proto3" json:"used_at,omitempty"`
	// 作成日時
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupCode) Reset() {
	*x = BackupCode{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupCode) ProtoMessage() {}

func (x *BackupCode) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupCode.ProtoReflect.Descriptor instead.
func (*BackupCode) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{2}
}

func (x *BackupCode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BackupCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BackupCode) GetUsed() bool {
	if x != nil {
		return x.Used
	}
	return false
}

func (x *BackupCode) GetUsedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UsedAt
	}
	return nil
}

func (x *BackupCode) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// MFA有効化リクエスト
type EnableMfaRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// MFAタイプ
	MfaType MfaType `protobuf:"varint,2,opt,name=mfa_type,json=mfaType,proto3,enum=avion.auth.v1.MfaType" json:"mfa_type,omitempty"`
	// デバイス名
	DeviceName    string `protobuf:"bytes,3,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableMfaRequest) Reset() {
	*x = EnableMfaRequest{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableMfaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableMfaRequest) ProtoMessage() {}

func (x *EnableMfaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableMfaRequest.ProtoReflect.Descriptor instead.
func (*EnableMfaRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{3}
}

func (x *EnableMfaRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EnableMfaRequest) GetMfaType() MfaType {
	if x != nil {
		return x.MfaType
	}
	return MfaType_MFA_TYPE_UNSPECIFIED
}

func (x *EnableMfaRequest) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

// MFA有効化レスポンス
type EnableMfaResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// MFAデバイス
	Device *MfaDevice `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	// TOTPセットアップ情報（MFA_TYPE_TOTPの場合）
	TotpSetup *TotpSetup `protobuf:"bytes,2,opt,name=totp_setup,json=totpSetup,proto3" json:"totp_setup,omitempty"`
	// バックアップコード
	BackupCodes   []*BackupCode `protobuf:"bytes,3,rep,name=backup_codes,json=backupCodes,proto3" json:"backup_codes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableMfaResponse) Reset() {
	*x = EnableMfaResponse{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableMfaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableMfaResponse) ProtoMessage() {}

func (x *EnableMfaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableMfaResponse.ProtoReflect.Descriptor instead.
func (*EnableMfaResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{4}
}

func (x *EnableMfaResponse) GetDevice() *MfaDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *EnableMfaResponse) GetTotpSetup() *TotpSetup {
	if x != nil {
		return x.TotpSetup
	}
	return nil
}

func (x *EnableMfaResponse) GetBackupCodes() []*BackupCode {
	if x != nil {
		return x.BackupCodes
	}
	return nil
}

// MFA無効化リクエスト
type DisableMfaRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// デバイスID（特定のデバイスを無効化）
	DeviceId string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// 全てのMFAを無効化
	DisableAll bool `protobuf:"varint,3,opt,name=disable_all,json=disableAll,proto3" json:"disable_all,omitempty"`
	// 確認用パスワード
	Password      string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableMfaRequest) Reset() {
	*x = DisableMfaRequest{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableMfaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableMfaRequest) ProtoMessage() {}

func (x *DisableMfaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableMfaRequest.ProtoReflect.Descriptor instead.
func (*DisableMfaRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{5}
}

func (x *DisableMfaRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DisableMfaRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DisableMfaRequest) GetDisableAll() bool {
	if x != nil {
		return x.DisableAll
	}
	return false
}

func (x *DisableMfaRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// MFA無効化レスポンス
type DisableMfaResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 無効化されたデバイス数
	DisabledCount int32 `protobuf:"varint,2,opt,name=disabled_count,json=disabledCount,proto3" json:"disabled_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableMfaResponse) Reset() {
	*x = DisableMfaResponse{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableMfaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableMfaResponse) ProtoMessage() {}

func (x *DisableMfaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableMfaResponse.ProtoReflect.Descriptor instead.
func (*DisableMfaResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{6}
}

func (x *DisableMfaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DisableMfaResponse) GetDisabledCount() int32 {
	if x != nil {
		return x.DisabledCount
	}
	return 0
}

// TOTPセットアップ開始リクエスト
type SetupTotpRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// デバイス名
	DeviceName    string `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetupTotpRequest) Reset() {
	*x = SetupTotpRequest{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetupTotpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupTotpRequest) ProtoMessage() {}

func (x *SetupTotpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupTotpRequest.ProtoReflect.Descriptor instead.
func (*SetupTotpRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{7}
}

func (x *SetupTotpRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetupTotpRequest) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

// TOTPセットアップ開始レスポンス
type SetupTotpResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// セットアップID（確認時に使用）
	SetupId string `protobuf:"bytes,1,opt,name=setup_id,json=setupId,proto3" json:"setup_id,omitempty"`
	// TOTPセットアップ情報
	TotpSetup     *TotpSetup `protobuf:"bytes,2,opt,name=totp_setup,json=totpSetup,proto3" json:"totp_setup,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetupTotpResponse) Reset() {
	*x = SetupTotpResponse{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetupTotpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupTotpResponse) ProtoMessage() {}

func (x *SetupTotpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupTotpResponse.ProtoReflect.Descriptor instead.
func (*SetupTotpResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{8}
}

func (x *SetupTotpResponse) GetSetupId() string {
	if x != nil {
		return x.SetupId
	}
	return ""
}

func (x *SetupTotpResponse) GetTotpSetup() *TotpSetup {
	if x != nil {
		return x.TotpSetup
	}
	return nil
}

// TOTP確認リクエスト
type VerifyTotpRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// セットアップID（初回セットアップ時）
	SetupId string `protobuf:"bytes,1,opt,name=setup_id,json=setupId,proto3" json:"setup_id,omitempty"`
	// ユーザーID（通常の認証時）
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// デバイスID（通常の認証時）
	DeviceId string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// TOTPコード
	Code          string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyTotpRequest) Reset() {
	*x = VerifyTotpRequest{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyTotpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTotpRequest) ProtoMessage() {}

func (x *VerifyTotpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTotpRequest.ProtoReflect.Descriptor instead.
func (*VerifyTotpRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{9}
}

func (x *VerifyTotpRequest) GetSetupId() string {
	if x != nil {
		return x.SetupId
	}
	return ""
}

func (x *VerifyTotpRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VerifyTotpRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *VerifyTotpRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// TOTP確認レスポンス
type VerifyTotpResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 検証成功フラグ
	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	// MFAデバイス（セットアップ完了時）
	Device *MfaDevice `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	// バックアップコード（セットアップ完了時）
	BackupCodes   []*BackupCode `protobuf:"bytes,3,rep,name=backup_codes,json=backupCodes,proto3" json:"backup_codes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyTotpResponse) Reset() {
	*x = VerifyTotpResponse{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyTotpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTotpResponse) ProtoMessage() {}

func (x *VerifyTotpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTotpResponse.ProtoReflect.Descriptor instead.
func (*VerifyTotpResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{10}
}

func (x *VerifyTotpResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *VerifyTotpResponse) GetDevice() *MfaDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *VerifyTotpResponse) GetBackupCodes() []*BackupCode {
	if x != nil {
		return x.BackupCodes
	}
	return nil
}

// バックアップコード生成リクエスト
type GenerateBackupCodesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 生成するコード数（デフォルト: 10）
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// 既存のコードを無効化
	InvalidateExisting bool `protobuf:"varint,3,opt,name=invalidate_existing,json=invalidateExisting,proto3" json:"invalidate_existing,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GenerateBackupCodesRequest) Reset() {
	*x = GenerateBackupCodesRequest{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateBackupCodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateBackupCodesRequest) ProtoMessage() {}

func (x *GenerateBackupCodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateBackupCodesRequest.ProtoReflect.Descriptor instead.
func (*GenerateBackupCodesRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{11}
}

func (x *GenerateBackupCodesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GenerateBackupCodesRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GenerateBackupCodesRequest) GetInvalidateExisting() bool {
	if x != nil {
		return x.InvalidateExisting
	}
	return false
}

// バックアップコード生成レスポンス
type GenerateBackupCodesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// バックアップコード
	BackupCodes   []*BackupCode `protobuf:"bytes,1,rep,name=backup_codes,json=backupCodes,proto3" json:"backup_codes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateBackupCodesResponse) Reset() {
	*x = GenerateBackupCodesResponse{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateBackupCodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateBackupCodesResponse) ProtoMessage() {}

func (x *GenerateBackupCodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateBackupCodesResponse.ProtoReflect.Descriptor instead.
func (*GenerateBackupCodesResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{12}
}

func (x *GenerateBackupCodesResponse) GetBackupCodes() []*BackupCode {
	if x != nil {
		return x.BackupCodes
	}
	return nil
}

// バックアップコード検証リクエスト
type VerifyBackupCodeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// バックアップコード
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// 使用済みとしてマーク
	MarkAsUsed    bool `protobuf:"varint,3,opt,name=mark_as_used,json=markAsUsed,proto3" json:"mark_as_used,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyBackupCodeRequest) Reset() {
	*x = VerifyBackupCodeRequest{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyBackupCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyBackupCodeRequest) ProtoMessage() {}

func (x *VerifyBackupCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyBackupCodeRequest.ProtoReflect.Descriptor instead.
func (*VerifyBackupCodeRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{13}
}

func (x *VerifyBackupCodeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VerifyBackupCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *VerifyBackupCodeRequest) GetMarkAsUsed() bool {
	if x != nil {
		return x.MarkAsUsed
	}
	return false
}

// バックアップコード検証レスポンス
type VerifyBackupCodeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 検証成功フラグ
	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	// 残りのコード数
	RemainingCodes int32 `protobuf:"varint,2,opt,name=remaining_codes,json=remainingCodes,proto3" json:"remaining_codes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VerifyBackupCodeResponse) Reset() {
	*x = VerifyBackupCodeResponse{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyBackupCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyBackupCodeResponse) ProtoMessage() {}

func (x *VerifyBackupCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyBackupCodeResponse.ProtoReflect.Descriptor instead.
func (*VerifyBackupCodeResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{14}
}

func (x *VerifyBackupCodeResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *VerifyBackupCodeResponse) GetRemainingCodes() int32 {
	if x != nil {
		return x.RemainingCodes
	}
	return 0
}

// MFAデバイス一覧取得リクエスト
type ListMfaDevicesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ページネーション情報
	Pagination *v1.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// MFAタイプでフィルタ（オプション）
	MfaType MfaType `protobuf:"varint,3,opt,name=mfa_type,json=mfaType,proto3,enum=avion.auth.v1.MfaType" json:"mfa_type,omitempty"`
	// アクティブなデバイスのみ
	ActiveOnly    bool `protobuf:"varint,4,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMfaDevicesRequest) Reset() {
	*x = ListMfaDevicesRequest{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMfaDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMfaDevicesRequest) ProtoMessage() {}

func (x *ListMfaDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMfaDevicesRequest.ProtoReflect.Descriptor instead.
func (*ListMfaDevicesRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{15}
}

func (x *ListMfaDevicesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListMfaDevicesRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListMfaDevicesRequest) GetMfaType() MfaType {
	if x != nil {
		return x.MfaType
	}
	return MfaType_MFA_TYPE_UNSPECIFIED
}

func (x *ListMfaDevicesRequest) GetActiveOnly() bool {
	if x != nil {
		return x.ActiveOnly
	}
	return false
}

// MFAデバイス一覧取得レスポンス
type ListMfaDevicesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// MFAデバイスのリスト
	Devices []*MfaDevice `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
	// ページネーション情報
	Pagination *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// MFAが有効かどうか
	MfaEnabled    bool `protobuf:"varint,3,opt,name=mfa_enabled,json=mfaEnabled,proto3" json:"mfa_enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMfaDevicesResponse) Reset() {
	*x = ListMfaDevicesResponse{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMfaDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMfaDevicesResponse) ProtoMessage() {}

func (x *ListMfaDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMfaDevicesResponse.ProtoReflect.Descriptor instead.
func (*ListMfaDevicesResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{16}
}

func (x *ListMfaDevicesResponse) GetDevices() []*MfaDevice {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *ListMfaDevicesResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListMfaDevicesResponse) GetMfaEnabled() bool {
	if x != nil {
		return x.MfaEnabled
	}
	return false
}

// MFAデバイス取得リクエスト
type GetMfaDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// デバイスID
	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// ユーザーID
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMfaDeviceRequest) Reset() {
	*x = GetMfaDeviceRequest{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMfaDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMfaDeviceRequest) ProtoMessage() {}

func (x *GetMfaDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMfaDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetMfaDeviceRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{17}
}

func (x *GetMfaDeviceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetMfaDeviceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// MFAデバイス取得レスポンス
type GetMfaDeviceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// MFAデバイス
	Device        *MfaDevice `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMfaDeviceResponse) Reset() {
	*x = GetMfaDeviceResponse{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMfaDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMfaDeviceResponse) ProtoMessage() {}

func (x *GetMfaDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMfaDeviceResponse.ProtoReflect.Descriptor instead.
func (*GetMfaDeviceResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{18}
}

func (x *GetMfaDeviceResponse) GetDevice() *MfaDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

// MFAデバイス更新リクエスト
type UpdateMfaDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// デバイスID
	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 新しいデバイス名
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// メタデータの更新
	Metadata      map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMfaDeviceRequest) Reset() {
	*x = UpdateMfaDeviceRequest{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMfaDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMfaDeviceRequest) ProtoMessage() {}

func (x *UpdateMfaDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMfaDeviceRequest.ProtoReflect.Descriptor instead.
func (*UpdateMfaDeviceRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateMfaDeviceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *UpdateMfaDeviceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateMfaDeviceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateMfaDeviceRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// MFAデバイス更新レスポンス
type UpdateMfaDeviceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新されたMFAデバイス
	Device        *MfaDevice `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMfaDeviceResponse) Reset() {
	*x = UpdateMfaDeviceResponse{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMfaDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMfaDeviceResponse) ProtoMessage() {}

func (x *UpdateMfaDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMfaDeviceResponse.ProtoReflect.Descriptor instead.
func (*UpdateMfaDeviceResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateMfaDeviceResponse) GetDevice() *MfaDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

// MFAチャレンジリクエスト
type MfaChallengeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// セッションID
	SessionId string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// 使用するMFAタイプ（指定しない場合は利用可能な全タイプ）
	PreferredType MfaType `protobuf:"varint,3,opt,name=preferred_type,json=preferredType,proto3,enum=avion.auth.v1.MfaType" json:"preferred_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MfaChallengeRequest) Reset() {
	*x = MfaChallengeRequest{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MfaChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MfaChallengeRequest) ProtoMessage() {}

func (x *MfaChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MfaChallengeRequest.ProtoReflect.Descriptor instead.
func (*MfaChallengeRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{21}
}

func (x *MfaChallengeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MfaChallengeRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *MfaChallengeRequest) GetPreferredType() MfaType {
	if x != nil {
		return x.PreferredType
	}
	return MfaType_MFA_TYPE_UNSPECIFIED
}

// MFAチャレンジレスポンス
type MfaChallengeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// チャレンジID
	ChallengeId string `protobuf:"bytes,1,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`
	// 利用可能なMFAタイプ
	AvailableTypes []MfaType `protobuf:"varint,2,rep,packed,name=available_types,json=availableTypes,proto3,enum=avion.auth.v1.MfaType" json:"available_types,omitempty"`
	// チャレンジの有効期限
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// 追加情報（SMS送信先の末尾4桁など）
	Hints         map[string]string `protobuf:"bytes,4,rep,name=hints,proto3" json:"hints,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MfaChallengeResponse) Reset() {
	*x = MfaChallengeResponse{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MfaChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MfaChallengeResponse) ProtoMessage() {}

func (x *MfaChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MfaChallengeResponse.ProtoReflect.Descriptor instead.
func (*MfaChallengeResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{22}
}

func (x *MfaChallengeResponse) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *MfaChallengeResponse) GetAvailableTypes() []MfaType {
	if x != nil {
		return x.AvailableTypes
	}
	return nil
}

func (x *MfaChallengeResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *MfaChallengeResponse) GetHints() map[string]string {
	if x != nil {
		return x.Hints
	}
	return nil
}

// MFAチャレンジ検証リクエスト
type VerifyMfaChallengeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// チャレンジID
	ChallengeId string `protobuf:"bytes,1,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`
	// MFAタイプ
	MfaType MfaType `protobuf:"varint,2,opt,name=mfa_type,json=mfaType,proto3,enum=avion.auth.v1.MfaType" json:"mfa_type,omitempty"`
	// 認証コード
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	// デバイスID（TOTP/Passkeyの場合）
	DeviceId      string `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyMfaChallengeRequest) Reset() {
	*x = VerifyMfaChallengeRequest{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyMfaChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMfaChallengeRequest) ProtoMessage() {}

func (x *VerifyMfaChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMfaChallengeRequest.ProtoReflect.Descriptor instead.
func (*VerifyMfaChallengeRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{23}
}

func (x *VerifyMfaChallengeRequest) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *VerifyMfaChallengeRequest) GetMfaType() MfaType {
	if x != nil {
		return x.MfaType
	}
	return MfaType_MFA_TYPE_UNSPECIFIED
}

func (x *VerifyMfaChallengeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *VerifyMfaChallengeRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

// MFAチャレンジ検証レスポンス
type VerifyMfaChallengeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 検証成功フラグ
	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	// セッション更新トークン（成功時）
	SessionToken string `protobuf:"bytes,2,opt,name=session_token,json=sessionToken,proto3" json:"session_token,omitempty"`
	// エラー詳細（失敗時）
	Error *v1.ErrorDetail `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	// 残り試行回数
	RemainingAttempts int32 `protobuf:"varint,4,opt,name=remaining_attempts,json=remainingAttempts,proto3" json:"remaining_attempts,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *VerifyMfaChallengeResponse) Reset() {
	*x = VerifyMfaChallengeResponse{}
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyMfaChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMfaChallengeResponse) ProtoMessage() {}

func (x *VerifyMfaChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_mfa_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMfaChallengeResponse.ProtoReflect.Descriptor instead.
func (*VerifyMfaChallengeResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_mfa_proto_rawDescGZIP(), []int{24}
}

func (x *VerifyMfaChallengeResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *VerifyMfaChallengeResponse) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *VerifyMfaChallengeResponse) GetError() *v1.ErrorDetail {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *VerifyMfaChallengeResponse) GetRemainingAttempts() int32 {
	if x != nil {
		return x.RemainingAttempts
	}
	return 0
}

var File_avion_auth_v1_mfa_proto protoreflect.FileDescriptor

const file_avion_auth_v1_mfa_proto_rawDesc = "" +
	"\n" +
	"\x17avion/auth/v1/mfa.proto\x12\ravion.auth.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bavion/common/v1/error.proto\x1a avion/common/v1/pagination.proto\"\xa0\x03\n" +
	"\tMfaDevice\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12*\n" +
	"\x04type\x18\x03 \x01(\x0e2\x16.avion.auth.v1.MfaTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x120\n" +
	"\x06status\x18\x05 \x01(\x0e2\x18.avion.auth.v1.MfaStatusR\x06status\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12<\n" +
	"\flast_used_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastUsedAt\x12B\n" +
	"\bmetadata\x18\b \x03(\v2&.avion.auth.v1.MfaDevice.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcc\x01\n" +
	"\tTotpSetup\x12\x16\n" +
	"\x06secret\x18\x01 \x01(\tR\x06secret\x12\x1e\n" +
	"\vqr_code_uri\x18\x02 \x01(\tR\tqrCodeUri\x12!\n" +
	"\faccount_name\x18\x03 \x01(\tR\vaccountName\x12\x16\n" +
	"\x06issuer\x18\x04 \x01(\tR\x06issuer\x12\x1c\n" +
	"\talgorithm\x18\x05 \x01(\tR\talgorithm\x12\x16\n" +
	"\x06digits\x18\x06 \x01(\x05R\x06digits\x12\x16\n" +
	"\x06period\x18\a \x01(\x05R\x06period\"\xb4\x01\n" +
	"\n" +
	"BackupCode\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x12\n" +
	"\x04used\x18\x03 \x01(\bR\x04used\x123\n" +
	"\aused_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06usedAt\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x7f\n" +
	"\x10EnableMfaRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x121\n" +
	"\bmfa_type\x18\x02 \x01(\x0e2\x16.avion.auth.v1.MfaTypeR\amfaType\x12\x1f\n" +
	"\vdevice_name\x18\x03 \x01(\tR\n" +
	"deviceName\"\xbc\x01\n" +
	"\x11EnableMfaResponse\x120\n" +
	"\x06device\x18\x01 \x01(\v2\x18.avion.auth.v1.MfaDeviceR\x06device\x127\n" +
	"\n" +
	"totp_setup\x18\x02 \x01(\v2\x18.avion.auth.v1.TotpSetupR\ttotpSetup\x12<\n" +
	"\fbackup_codes\x18\x03 \x03(\v2\x19.avion.auth.v1.BackupCodeR\vbackupCodes\"\x86\x01\n" +
	"\x11DisableMfaRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\x12\x1f\n" +
	"\vdisable_all\x18\x03 \x01(\bR\n" +
	"disableAll\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\"U\n" +
	"\x12DisableMfaResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0edisabled_count\x18\x02 \x01(\x05R\rdisabledCount\"L\n" +
	"\x10SetupTotpRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1f\n" +
	"\vdevice_name\x18\x02 \x01(\tR\n" +
	"deviceName\"g\n" +
	"\x11SetupTotpResponse\x12\x19\n" +
	"\bsetup_id\x18\x01 \x01(\tR\asetupId\x127\n" +
	"\n" +
	"totp_setup\x18\x02 \x01(\v2\x18.avion.auth.v1.TotpSetupR\ttotpSetup\"x\n" +
	"\x11VerifyTotpRequest\x12\x19\n" +
	"\bsetup_id\x18\x01 \x01(\tR\asetupId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1b\n" +
	"\tdevice_id\x18\x03 \x01(\tR\bdeviceId\x12\x12\n" +
	"\x04code\x18\x04 \x01(\tR\x04code\"\x9a\x01\n" +
	"\x12VerifyTotpResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x120\n" +
	"\x06device\x18\x02 \x01(\v2\x18.avion.auth.v1.MfaDeviceR\x06device\x12<\n" +
	"\fbackup_codes\x18\x03 \x03(\v2\x19.avion.auth.v1.BackupCodeR\vbackupCodes\"|\n" +
	"\x1aGenerateBackupCodesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x12/\n" +
	"\x13invalidate_existing\x18\x03 \x01(\bR\x12invalidateExisting\"[\n" +
	"\x1bGenerateBackupCodesResponse\x12<\n" +
	"\fbackup_codes\x18\x01 \x03(\v2\x19.avion.auth.v1.BackupCodeR\vbackupCodes\"h\n" +
	"\x17VerifyBackupCodeRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12 \n" +
	"\fmark_as_used\x18\x03 \x01(\bR\n" +
	"markAsUsed\"Y\n" +
	"\x18VerifyBackupCodeResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12'\n" +
	"\x0fremaining_codes\x18\x02 \x01(\x05R\x0eremainingCodes\"\xc8\x01\n" +
	"\x15ListMfaDevicesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12B\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\x121\n" +
	"\bmfa_type\x18\x03 \x01(\x0e2\x16.avion.auth.v1.MfaTypeR\amfaType\x12\x1f\n" +
	"\vactive_only\x18\x04 \x01(\bR\n" +
	"activeOnly\"\xb2\x01\n" +
	"\x16ListMfaDevicesResponse\x122\n" +
	"\adevices\x18\x01 \x03(\v2\x18.avion.auth.v1.MfaDeviceR\adevices\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\x12\x1f\n" +
	"\vmfa_enabled\x18\x03 \x01(\bR\n" +
	"mfaEnabled\"K\n" +
	"\x13GetMfaDeviceRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"H\n" +
	"\x14GetMfaDeviceResponse\x120\n" +
	"\x06device\x18\x01 \x01(\v2\x18.avion.auth.v1.MfaDeviceR\x06device\"\xf0\x01\n" +
	"\x16UpdateMfaDeviceRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12O\n" +
	"\bmetadata\x18\x04 \x03(\v23.avion.auth.v1.UpdateMfaDeviceRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"K\n" +
	"\x17UpdateMfaDeviceResponse\x120\n" +
	"\x06device\x18\x01 \x01(\v2\x18.avion.auth.v1.MfaDeviceR\x06device\"\x8c\x01\n" +
	"\x13MfaChallengeRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12=\n" +
	"\x0epreferred_type\x18\x03 \x01(\x0e2\x16.avion.auth.v1.MfaTypeR\rpreferredType\"\xb5\x02\n" +
	"\x14MfaChallengeResponse\x12!\n" +
	"\fchallenge_id\x18\x01 \x01(\tR\vchallengeId\x12?\n" +
	"\x0favailable_types\x18\x02 \x03(\x0e2\x16.avion.auth.v1.MfaTypeR\x0eavailableTypes\x129\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12D\n" +
	"\x05hints\x18\x04 \x03(\v2..avion.auth.v1.MfaChallengeResponse.HintsEntryR\x05hints\x1a8\n" +
	"\n" +
	"HintsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa2\x01\n" +
	"\x19VerifyMfaChallengeRequest\x12!\n" +
	"\fchallenge_id\x18\x01 \x01(\tR\vchallengeId\x121\n" +
	"\bmfa_type\x18\x02 \x01(\x0e2\x16.avion.auth.v1.MfaTypeR\amfaType\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x12\x1b\n" +
	"\tdevice_id\x18\x04 \x01(\tR\bdeviceId\"\xba\x01\n" +
	"\x1aVerifyMfaChallengeResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12#\n" +
	"\rsession_token\x18\x02 \x01(\tR\fsessionToken\x122\n" +
	"\x05error\x18\x03 \x01(\v2\x1c.avion.common.v1.ErrorDetailR\x05error\x12-\n" +
	"\x12remaining_attempts\x18\x04 \x01(\x05R\x11remainingAttempts*\x8c\x01\n" +
	"\aMfaType\x12\x18\n" +
	"\x14MFA_TYPE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rMFA_TYPE_TOTP\x10\x01\x12\x10\n" +
	"\fMFA_TYPE_SMS\x10\x02\x12\x12\n" +
	"\x0eMFA_TYPE_EMAIL\x10\x03\x12\x18\n" +
	"\x14MFA_TYPE_BACKUP_CODE\x10\x04\x12\x14\n" +
	"\x10MFA_TYPE_PASSKEY\x10\x05*p\n" +
	"\tMfaStatus\x12\x1a\n" +
	"\x16MFA_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13MFA_STATUS_DISABLED\x10\x01\x12\x16\n" +
	"\x12MFA_STATUS_PENDING\x10\x02\x12\x16\n" +
	"\x12MFA_STATUS_ENABLED\x10\x03B\xa8\x01\n" +
	"\x11com.avion.auth.v1B\bMfaProtoP\x01Z3github.com/na2na-p/avion/proto/avion/auth/v1;authv1\xa2\x02\x03AAX\xaa\x02\rAvion.Auth.V1\xca\x02\rAvion\\Auth\\V1\xe2\x02\x19Avion\\Auth\\V1\\GPBMetadata\xea\x02\x0fAvion::Auth::V1b\x06proto3"

var (
	file_avion_auth_v1_mfa_proto_rawDescOnce sync.Once
	file_avion_auth_v1_mfa_proto_rawDescData []byte
)

func file_avion_auth_v1_mfa_proto_rawDescGZIP() []byte {
	file_avion_auth_v1_mfa_proto_rawDescOnce.Do(func() {
		file_avion_auth_v1_mfa_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_avion_auth_v1_mfa_proto_rawDesc), len(file_avion_auth_v1_mfa_proto_rawDesc)))
	})
	return file_avion_auth_v1_mfa_proto_rawDescData
}

var file_avion_auth_v1_mfa_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_avion_auth_v1_mfa_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_avion_auth_v1_mfa_proto_goTypes = []any{
	(MfaType)(0),                        // 0: avion.auth.v1.MfaType
	(MfaStatus)(0),                      // 1: avion.auth.v1.MfaStatus
	(*MfaDevice)(nil),                   // 2: avion.auth.v1.MfaDevice
	(*TotpSetup)(nil),                   // 3: avion.auth.v1.TotpSetup
	(*BackupCode)(nil),                  // 4: avion.auth.v1.BackupCode
	(*EnableMfaRequest)(nil),            // 5: avion.auth.v1.EnableMfaRequest
	(*EnableMfaResponse)(nil),           // 6: avion.auth.v1.EnableMfaResponse
	(*DisableMfaRequest)(nil),           // 7: avion.auth.v1.DisableMfaRequest
	(*DisableMfaResponse)(nil),          // 8: avion.auth.v1.DisableMfaResponse
	(*SetupTotpRequest)(nil),            // 9: avion.auth.v1.SetupTotpRequest
	(*SetupTotpResponse)(nil),           // 10: avion.auth.v1.SetupTotpResponse
	(*VerifyTotpRequest)(nil),           // 11: avion.auth.v1.VerifyTotpRequest
	(*VerifyTotpResponse)(nil),          // 12: avion.auth.v1.VerifyTotpResponse
	(*GenerateBackupCodesRequest)(nil),  // 13: avion.auth.v1.GenerateBackupCodesRequest
	(*GenerateBackupCodesResponse)(nil), // 14: avion.auth.v1.GenerateBackupCodesResponse
	(*VerifyBackupCodeRequest)(nil),     // 15: avion.auth.v1.VerifyBackupCodeRequest
	(*VerifyBackupCodeResponse)(nil),    // 16: avion.auth.v1.VerifyBackupCodeResponse
	(*ListMfaDevicesRequest)(nil),       // 17: avion.auth.v1.ListMfaDevicesRequest
	(*ListMfaDevicesResponse)(nil),      // 18: avion.auth.v1.ListMfaDevicesResponse
	(*GetMfaDeviceRequest)(nil),         // 19: avion.auth.v1.GetMfaDeviceRequest
	(*GetMfaDeviceResponse)(nil),        // 20: avion.auth.v1.GetMfaDeviceResponse
	(*UpdateMfaDeviceRequest)(nil),      // 21: avion.auth.v1.UpdateMfaDeviceRequest
	(*UpdateMfaDeviceResponse)(nil),     // 22: avion.auth.v1.UpdateMfaDeviceResponse
	(*MfaChallengeRequest)(nil),         // 23: avion.auth.v1.MfaChallengeRequest
	(*MfaChallengeResponse)(nil),        // 24: avion.auth.v1.MfaChallengeResponse
	(*VerifyMfaChallengeRequest)(nil),   // 25: avion.auth.v1.VerifyMfaChallengeRequest
	(*VerifyMfaChallengeResponse)(nil),  // 26: avion.auth.v1.VerifyMfaChallengeResponse
	nil,                                 // 27: avion.auth.v1.MfaDevice.MetadataEntry
	nil,                                 // 28: avion.auth.v1.UpdateMfaDeviceRequest.MetadataEntry
	nil,                                 // 29: avion.auth.v1.MfaChallengeResponse.HintsEntry
	(*timestamppb.Timestamp)(nil),       // 30: google.protobuf.Timestamp
	(*v1.PaginationRequest)(nil),        // 31: avion.common.v1.PaginationRequest
	(*v1.PaginationResponse)(nil),       // 32: avion.common.v1.PaginationResponse
	(*v1.ErrorDetail)(nil),              // 33: avion.common.v1.ErrorDetail
}
var file_avion_auth_v1_mfa_proto_depIdxs = []int32{
	0,  // 0: avion.auth.v1.MfaDevice.type:type_name -> avion.auth.v1.MfaType
	1,  // 1: avion.auth.v1.MfaDevice.status:type_name -> avion.auth.v1.MfaStatus
	30, // 2: avion.auth.v1.MfaDevice.created_at:type_name -> google.protobuf.Timestamp
	30, // 3: avion.auth.v1.MfaDevice.last_used_at:type_name -> google.protobuf.Timestamp
	27, // 4: avion.auth.v1.MfaDevice.metadata:type_name -> avion.auth.v1.MfaDevice.MetadataEntry
	30, // 5: avion.auth.v1.BackupCode.used_at:type_name -> google.protobuf.Timestamp
	30, // 6: avion.auth.v1.BackupCode.created_at:type_name -> google.protobuf.Timestamp
	0,  // 7: avion.auth.v1.EnableMfaRequest.mfa_type:type_name -> avion.auth.v1.MfaType
	2,  // 8: avion.auth.v1.EnableMfaResponse.device:type_name -> avion.auth.v1.MfaDevice
	3,  // 9: avion.auth.v1.EnableMfaResponse.totp_setup:type_name -> avion.auth.v1.TotpSetup
	4,  // 10: avion.auth.v1.EnableMfaResponse.backup_codes:type_name -> avion.auth.v1.BackupCode
	3,  // 11: avion.auth.v1.SetupTotpResponse.totp_setup:type_name -> avion.auth.v1.TotpSetup
	2,  // 12: avion.auth.v1.VerifyTotpResponse.device:type_name -> avion.auth.v1.MfaDevice
	4,  // 13: avion.auth.v1.VerifyTotpResponse.backup_codes:type_name -> avion.auth.v1.BackupCode
	4,  // 14: avion.auth.v1.GenerateBackupCodesResponse.backup_codes:type_name -> avion.auth.v1.BackupCode
	31, // 15: avion.auth.v1.ListMfaDevicesRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	0,  // 16: avion.auth.v1.ListMfaDevicesRequest.mfa_type:type_name -> avion.auth.v1.MfaType
	2,  // 17: avion.auth.v1.ListMfaDevicesResponse.devices:type_name -> avion.auth.v1.MfaDevice
	32, // 18: avion.auth.v1.ListMfaDevicesResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	2,  // 19: avion.auth.v1.GetMfaDeviceResponse.device:type_name -> avion.auth.v1.MfaDevice
	28, // 20: avion.auth.v1.UpdateMfaDeviceRequest.metadata:type_name -> avion.auth.v1.UpdateMfaDeviceRequest.MetadataEntry
	2,  // 21: avion.auth.v1.UpdateMfaDeviceResponse.device:type_name -> avion.auth.v1.MfaDevice
	0,  // 22: avion.auth.v1.MfaChallengeRequest.preferred_type:type_name -> avion.auth.v1.MfaType
	0,  // 23: avion.auth.v1.MfaChallengeResponse.available_types:type_name -> avion.auth.v1.MfaType
	30, // 24: avion.auth.v1.MfaChallengeResponse.expires_at:type_name -> google.protobuf.Timestamp
	29, // 25: avion.auth.v1.MfaChallengeResponse.hints:type_name -> avion.auth.v1.MfaChallengeResponse.HintsEntry
	0,  // 26: avion.auth.v1.VerifyMfaChallengeRequest.mfa_type:type_name -> avion.auth.v1.MfaType
	33, // 27: avion.auth.v1.VerifyMfaChallengeResponse.error:type_name -> avion.common.v1.ErrorDetail
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_avion_auth_v1_mfa_proto_init() }
func file_avion_auth_v1_mfa_proto_init() {
	if File_avion_auth_v1_mfa_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_avion_auth_v1_mfa_proto_rawDesc), len(file_avion_auth_v1_mfa_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_avion_auth_v1_mfa_proto_goTypes,
		DependencyIndexes: file_avion_auth_v1_mfa_proto_depIdxs,
		EnumInfos:         file_avion_auth_v1_mfa_proto_enumTypes,
		MessageInfos:      file_avion_auth_v1_mfa_proto_msgTypes,
	}.Build()
	File_avion_auth_v1_mfa_proto = out.File
	file_avion_auth_v1_mfa_proto_goTypes = nil
	file_avion_auth_v1_mfa_proto_depIdxs = nil
}
