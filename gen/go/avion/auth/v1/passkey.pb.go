// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: avion/auth/v1/passkey.proto

package authv1

import (
	v1 "github.com/na2na-p/avion/proto/avion/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Passkeyの状態
type PasskeyStatus int32

const (
	// 未指定
	PasskeyStatus_PASSKEY_STATUS_UNSPECIFIED PasskeyStatus = 0
	// アクティブ
	PasskeyStatus_PASSKEY_STATUS_ACTIVE PasskeyStatus = 1
	// 無効化済み
	PasskeyStatus_PASSKEY_STATUS_DISABLED PasskeyStatus = 2
	// 失効済み
	PasskeyStatus_PASSKEY_STATUS_REVOKED PasskeyStatus = 3
)

// Enum value maps for PasskeyStatus.
var (
	PasskeyStatus_name = map[int32]string{
		0: "PASSKEY_STATUS_UNSPECIFIED",
		1: "PASSKEY_STATUS_ACTIVE",
		2: "PASSKEY_STATUS_DISABLED",
		3: "PASSKEY_STATUS_REVOKED",
	}
	PasskeyStatus_value = map[string]int32{
		"PASSKEY_STATUS_UNSPECIFIED": 0,
		"PASSKEY_STATUS_ACTIVE":      1,
		"PASSKEY_STATUS_DISABLED":    2,
		"PASSKEY_STATUS_REVOKED":     3,
	}
)

func (x PasskeyStatus) Enum() *PasskeyStatus {
	p := new(PasskeyStatus)
	*p = x
	return p
}

func (x PasskeyStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PasskeyStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_auth_v1_passkey_proto_enumTypes[0].Descriptor()
}

func (PasskeyStatus) Type() protoreflect.EnumType {
	return &file_avion_auth_v1_passkey_proto_enumTypes[0]
}

func (x PasskeyStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PasskeyStatus.Descriptor instead.
func (PasskeyStatus) EnumDescriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{0}
}

// Passkey認証器のタイプ
type AuthenticatorType int32

const (
	// 未指定
	AuthenticatorType_AUTHENTICATOR_TYPE_UNSPECIFIED AuthenticatorType = 0
	// プラットフォーム認証器（Touch ID, Face ID, Windows Hello等）
	AuthenticatorType_AUTHENTICATOR_TYPE_PLATFORM AuthenticatorType = 1
	// クロスプラットフォーム認証器（セキュリティキー等）
	AuthenticatorType_AUTHENTICATOR_TYPE_CROSS_PLATFORM AuthenticatorType = 2
)

// Enum value maps for AuthenticatorType.
var (
	AuthenticatorType_name = map[int32]string{
		0: "AUTHENTICATOR_TYPE_UNSPECIFIED",
		1: "AUTHENTICATOR_TYPE_PLATFORM",
		2: "AUTHENTICATOR_TYPE_CROSS_PLATFORM",
	}
	AuthenticatorType_value = map[string]int32{
		"AUTHENTICATOR_TYPE_UNSPECIFIED":    0,
		"AUTHENTICATOR_TYPE_PLATFORM":       1,
		"AUTHENTICATOR_TYPE_CROSS_PLATFORM": 2,
	}
)

func (x AuthenticatorType) Enum() *AuthenticatorType {
	p := new(AuthenticatorType)
	*p = x
	return p
}

func (x AuthenticatorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthenticatorType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_auth_v1_passkey_proto_enumTypes[1].Descriptor()
}

func (AuthenticatorType) Type() protoreflect.EnumType {
	return &file_avion_auth_v1_passkey_proto_enumTypes[1]
}

func (x AuthenticatorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthenticatorType.Descriptor instead.
func (AuthenticatorType) EnumDescriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{1}
}

// Passkey情報
type Passkey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PasskeyのID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Credential ID（Base64エンコード）
	CredentialId string `protobuf:"bytes,3,opt,name=credential_id,json=credentialId,proto3" json:"credential_id,omitempty"`
	// Public Key（Base64エンコード）
	PublicKey string `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// Passkeyの名前（ユーザーが設定）
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// 認証器のタイプ
	AuthenticatorType AuthenticatorType `protobuf:"varint,6,opt,name=authenticator_type,json=authenticatorType,proto3,enum=avion.auth.v1.AuthenticatorType" json:"authenticator_type,omitempty"`
	// 状態
	Status PasskeyStatus `protobuf:"varint,7,opt,name=status,proto3,enum=avion.auth.v1.PasskeyStatus" json:"status,omitempty"`
	// 署名カウンター
	SignCount uint32 `protobuf:"varint,8,opt,name=sign_count,json=signCount,proto3" json:"sign_count,omitempty"`
	// 作成日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 最終使用日時
	LastUsedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_used_at,json=lastUsedAt,proto3" json:"last_used_at,omitempty"`
	// デバイス情報
	DeviceInfo string `protobuf:"bytes,11,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	// 認証器のAAGUID
	Aaguid string `protobuf:"bytes,12,opt,name=aaguid,proto3" json:"aaguid,omitempty"`
	// バックアップ可能フラグ
	BackupEligible bool `protobuf:"varint,13,opt,name=backup_eligible,json=backupEligible,proto3" json:"backup_eligible,omitempty"`
	// バックアップ済みフラグ
	BackedUp bool `protobuf:"varint,14,opt,name=backed_up,json=backedUp,proto3" json:"backed_up,omitempty"`
	// メタデータ
	Metadata      map[string]string `protobuf:"bytes,15,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Passkey) Reset() {
	*x = Passkey{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Passkey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Passkey) ProtoMessage() {}

func (x *Passkey) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Passkey.ProtoReflect.Descriptor instead.
func (*Passkey) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{0}
}

func (x *Passkey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Passkey) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Passkey) GetCredentialId() string {
	if x != nil {
		return x.CredentialId
	}
	return ""
}

func (x *Passkey) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Passkey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Passkey) GetAuthenticatorType() AuthenticatorType {
	if x != nil {
		return x.AuthenticatorType
	}
	return AuthenticatorType_AUTHENTICATOR_TYPE_UNSPECIFIED
}

func (x *Passkey) GetStatus() PasskeyStatus {
	if x != nil {
		return x.Status
	}
	return PasskeyStatus_PASSKEY_STATUS_UNSPECIFIED
}

func (x *Passkey) GetSignCount() uint32 {
	if x != nil {
		return x.SignCount
	}
	return 0
}

func (x *Passkey) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Passkey) GetLastUsedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsedAt
	}
	return nil
}

func (x *Passkey) GetDeviceInfo() string {
	if x != nil {
		return x.DeviceInfo
	}
	return ""
}

func (x *Passkey) GetAaguid() string {
	if x != nil {
		return x.Aaguid
	}
	return ""
}

func (x *Passkey) GetBackupEligible() bool {
	if x != nil {
		return x.BackupEligible
	}
	return false
}

func (x *Passkey) GetBackedUp() bool {
	if x != nil {
		return x.BackedUp
	}
	return false
}

func (x *Passkey) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// WebAuthn登録オプション
type RegisterPasskeyOptionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ユーザー名
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// 表示名
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// 認証器のタイプ指定（オプション）
	AuthenticatorType AuthenticatorType `protobuf:"varint,4,opt,name=authenticator_type,json=authenticatorType,proto3,enum=avion.auth.v1.AuthenticatorType" json:"authenticator_type,omitempty"`
	// ユーザー検証要求レベル（required, preferred, discouraged）
	UserVerification string `protobuf:"bytes,5,opt,name=user_verification,json=userVerification,proto3" json:"user_verification,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RegisterPasskeyOptionsRequest) Reset() {
	*x = RegisterPasskeyOptionsRequest{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterPasskeyOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPasskeyOptionsRequest) ProtoMessage() {}

func (x *RegisterPasskeyOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPasskeyOptionsRequest.ProtoReflect.Descriptor instead.
func (*RegisterPasskeyOptionsRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterPasskeyOptionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RegisterPasskeyOptionsRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterPasskeyOptionsRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *RegisterPasskeyOptionsRequest) GetAuthenticatorType() AuthenticatorType {
	if x != nil {
		return x.AuthenticatorType
	}
	return AuthenticatorType_AUTHENTICATOR_TYPE_UNSPECIFIED
}

func (x *RegisterPasskeyOptionsRequest) GetUserVerification() string {
	if x != nil {
		return x.UserVerification
	}
	return ""
}

// WebAuthn登録オプションレスポンス
type RegisterPasskeyOptionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// チャレンジID（検証時に使用）
	ChallengeId string `protobuf:"bytes,1,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`
	// WebAuthn登録オプション（JSON形式）
	CreationOptions *structpb.Struct `protobuf:"bytes,2,opt,name=creation_options,json=creationOptions,proto3" json:"creation_options,omitempty"`
	// オプションの有効期限
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterPasskeyOptionsResponse) Reset() {
	*x = RegisterPasskeyOptionsResponse{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterPasskeyOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPasskeyOptionsResponse) ProtoMessage() {}

func (x *RegisterPasskeyOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPasskeyOptionsResponse.ProtoReflect.Descriptor instead.
func (*RegisterPasskeyOptionsResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterPasskeyOptionsResponse) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *RegisterPasskeyOptionsResponse) GetCreationOptions() *structpb.Struct {
	if x != nil {
		return x.CreationOptions
	}
	return nil
}

func (x *RegisterPasskeyOptionsResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// Passkey登録リクエスト
type RegisterPasskeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// チャレンジID
	ChallengeId string `protobuf:"bytes,1,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Passkeyの名前
	PasskeyName string `protobuf:"bytes,3,opt,name=passkey_name,json=passkeyName,proto3" json:"passkey_name,omitempty"`
	// WebAuthn認証レスポンス（JSON形式）
	Credential *structpb.Struct `protobuf:"bytes,4,opt,name=credential,proto3" json:"credential,omitempty"`
	// デバイス情報
	DeviceInfo    string `protobuf:"bytes,5,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterPasskeyRequest) Reset() {
	*x = RegisterPasskeyRequest{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterPasskeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPasskeyRequest) ProtoMessage() {}

func (x *RegisterPasskeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPasskeyRequest.ProtoReflect.Descriptor instead.
func (*RegisterPasskeyRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterPasskeyRequest) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *RegisterPasskeyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RegisterPasskeyRequest) GetPasskeyName() string {
	if x != nil {
		return x.PasskeyName
	}
	return ""
}

func (x *RegisterPasskeyRequest) GetCredential() *structpb.Struct {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *RegisterPasskeyRequest) GetDeviceInfo() string {
	if x != nil {
		return x.DeviceInfo
	}
	return ""
}

// Passkey登録レスポンス
type RegisterPasskeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 登録されたPasskey
	Passkey *Passkey `protobuf:"bytes,1,opt,name=passkey,proto3" json:"passkey,omitempty"`
	// 登録成功フラグ
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// エラーメッセージ（失敗時）
	ErrorMessage  string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterPasskeyResponse) Reset() {
	*x = RegisterPasskeyResponse{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterPasskeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPasskeyResponse) ProtoMessage() {}

func (x *RegisterPasskeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPasskeyResponse.ProtoReflect.Descriptor instead.
func (*RegisterPasskeyResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterPasskeyResponse) GetPasskey() *Passkey {
	if x != nil {
		return x.Passkey
	}
	return nil
}

func (x *RegisterPasskeyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterPasskeyResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// WebAuthn認証オプションリクエスト
type AuthenticatePasskeyOptionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザー名またはメールアドレス（オプション）
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// ユーザーID（オプション）
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ユーザー検証要求レベル
	UserVerification string `protobuf:"bytes,3,opt,name=user_verification,json=userVerification,proto3" json:"user_verification,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AuthenticatePasskeyOptionsRequest) Reset() {
	*x = AuthenticatePasskeyOptionsRequest{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticatePasskeyOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticatePasskeyOptionsRequest) ProtoMessage() {}

func (x *AuthenticatePasskeyOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticatePasskeyOptionsRequest.ProtoReflect.Descriptor instead.
func (*AuthenticatePasskeyOptionsRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{5}
}

func (x *AuthenticatePasskeyOptionsRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthenticatePasskeyOptionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuthenticatePasskeyOptionsRequest) GetUserVerification() string {
	if x != nil {
		return x.UserVerification
	}
	return ""
}

// WebAuthn認証オプションレスポンス
type AuthenticatePasskeyOptionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// チャレンジID
	ChallengeId string `protobuf:"bytes,1,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`
	// WebAuthn認証オプション（JSON形式）
	RequestOptions *structpb.Struct `protobuf:"bytes,2,opt,name=request_options,json=requestOptions,proto3" json:"request_options,omitempty"`
	// オプションの有効期限
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticatePasskeyOptionsResponse) Reset() {
	*x = AuthenticatePasskeyOptionsResponse{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticatePasskeyOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticatePasskeyOptionsResponse) ProtoMessage() {}

func (x *AuthenticatePasskeyOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticatePasskeyOptionsResponse.ProtoReflect.Descriptor instead.
func (*AuthenticatePasskeyOptionsResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{6}
}

func (x *AuthenticatePasskeyOptionsResponse) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *AuthenticatePasskeyOptionsResponse) GetRequestOptions() *structpb.Struct {
	if x != nil {
		return x.RequestOptions
	}
	return nil
}

func (x *AuthenticatePasskeyOptionsResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// Passkey認証リクエスト
type AuthenticatePasskeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// チャレンジID
	ChallengeId string `protobuf:"bytes,1,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`
	// WebAuthn認証レスポンス（JSON形式）
	Credential *structpb.Struct `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	// デバイス情報
	DeviceInfo    string `protobuf:"bytes,3,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticatePasskeyRequest) Reset() {
	*x = AuthenticatePasskeyRequest{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticatePasskeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticatePasskeyRequest) ProtoMessage() {}

func (x *AuthenticatePasskeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticatePasskeyRequest.ProtoReflect.Descriptor instead.
func (*AuthenticatePasskeyRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{7}
}

func (x *AuthenticatePasskeyRequest) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *AuthenticatePasskeyRequest) GetCredential() *structpb.Struct {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *AuthenticatePasskeyRequest) GetDeviceInfo() string {
	if x != nil {
		return x.DeviceInfo
	}
	return ""
}

// Passkey認証レスポンス
type AuthenticatePasskeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 認証成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// アクセストークン
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// リフレッシュトークン
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// ユーザー情報
	User *User `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	// 使用されたPasskey
	Passkey *Passkey `protobuf:"bytes,5,opt,name=passkey,proto3" json:"passkey,omitempty"`
	// エラーメッセージ（失敗時）
	ErrorMessage  string `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticatePasskeyResponse) Reset() {
	*x = AuthenticatePasskeyResponse{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticatePasskeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticatePasskeyResponse) ProtoMessage() {}

func (x *AuthenticatePasskeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticatePasskeyResponse.ProtoReflect.Descriptor instead.
func (*AuthenticatePasskeyResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{8}
}

func (x *AuthenticatePasskeyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuthenticatePasskeyResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *AuthenticatePasskeyResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *AuthenticatePasskeyResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *AuthenticatePasskeyResponse) GetPasskey() *Passkey {
	if x != nil {
		return x.Passkey
	}
	return nil
}

func (x *AuthenticatePasskeyResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Passkey一覧取得リクエスト
type ListPasskeysRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ページネーション情報
	Pagination *v1.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// アクティブなもののみ
	ActiveOnly    bool `protobuf:"varint,3,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPasskeysRequest) Reset() {
	*x = ListPasskeysRequest{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPasskeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPasskeysRequest) ProtoMessage() {}

func (x *ListPasskeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPasskeysRequest.ProtoReflect.Descriptor instead.
func (*ListPasskeysRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{9}
}

func (x *ListPasskeysRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListPasskeysRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListPasskeysRequest) GetActiveOnly() bool {
	if x != nil {
		return x.ActiveOnly
	}
	return false
}

// Passkey一覧取得レスポンス
type ListPasskeysResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Passkeyのリスト
	Passkeys []*Passkey `protobuf:"bytes,1,rep,name=passkeys,proto3" json:"passkeys,omitempty"`
	// ページネーション情報
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPasskeysResponse) Reset() {
	*x = ListPasskeysResponse{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPasskeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPasskeysResponse) ProtoMessage() {}

func (x *ListPasskeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPasskeysResponse.ProtoReflect.Descriptor instead.
func (*ListPasskeysResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{10}
}

func (x *ListPasskeysResponse) GetPasskeys() []*Passkey {
	if x != nil {
		return x.Passkeys
	}
	return nil
}

func (x *ListPasskeysResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Passkey取得リクエスト
type GetPasskeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PasskeyのID
	PasskeyId string `protobuf:"bytes,1,opt,name=passkey_id,json=passkeyId,proto3" json:"passkey_id,omitempty"`
	// ユーザーID
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPasskeyRequest) Reset() {
	*x = GetPasskeyRequest{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPasskeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPasskeyRequest) ProtoMessage() {}

func (x *GetPasskeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPasskeyRequest.ProtoReflect.Descriptor instead.
func (*GetPasskeyRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{11}
}

func (x *GetPasskeyRequest) GetPasskeyId() string {
	if x != nil {
		return x.PasskeyId
	}
	return ""
}

func (x *GetPasskeyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Passkey取得レスポンス
type GetPasskeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Passkey
	Passkey       *Passkey `protobuf:"bytes,1,opt,name=passkey,proto3" json:"passkey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPasskeyResponse) Reset() {
	*x = GetPasskeyResponse{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPasskeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPasskeyResponse) ProtoMessage() {}

func (x *GetPasskeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPasskeyResponse.ProtoReflect.Descriptor instead.
func (*GetPasskeyResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{12}
}

func (x *GetPasskeyResponse) GetPasskey() *Passkey {
	if x != nil {
		return x.Passkey
	}
	return nil
}

// Passkey更新リクエスト
type UpdatePasskeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PasskeyのID
	PasskeyId string `protobuf:"bytes,1,opt,name=passkey_id,json=passkeyId,proto3" json:"passkey_id,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 新しい名前
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// メタデータの更新
	Metadata      map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePasskeyRequest) Reset() {
	*x = UpdatePasskeyRequest{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePasskeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasskeyRequest) ProtoMessage() {}

func (x *UpdatePasskeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasskeyRequest.ProtoReflect.Descriptor instead.
func (*UpdatePasskeyRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{13}
}

func (x *UpdatePasskeyRequest) GetPasskeyId() string {
	if x != nil {
		return x.PasskeyId
	}
	return ""
}

func (x *UpdatePasskeyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdatePasskeyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePasskeyRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Passkey更新レスポンス
type UpdatePasskeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新されたPasskey
	Passkey       *Passkey `protobuf:"bytes,1,opt,name=passkey,proto3" json:"passkey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePasskeyResponse) Reset() {
	*x = UpdatePasskeyResponse{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePasskeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasskeyResponse) ProtoMessage() {}

func (x *UpdatePasskeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasskeyResponse.ProtoReflect.Descriptor instead.
func (*UpdatePasskeyResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{14}
}

func (x *UpdatePasskeyResponse) GetPasskey() *Passkey {
	if x != nil {
		return x.Passkey
	}
	return nil
}

// Passkey削除リクエスト
type DeletePasskeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PasskeyのID
	PasskeyId string `protobuf:"bytes,1,opt,name=passkey_id,json=passkeyId,proto3" json:"passkey_id,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 確認用パスワード（セキュリティのため）
	Password      string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePasskeyRequest) Reset() {
	*x = DeletePasskeyRequest{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePasskeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePasskeyRequest) ProtoMessage() {}

func (x *DeletePasskeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePasskeyRequest.ProtoReflect.Descriptor instead.
func (*DeletePasskeyRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{15}
}

func (x *DeletePasskeyRequest) GetPasskeyId() string {
	if x != nil {
		return x.PasskeyId
	}
	return ""
}

func (x *DeletePasskeyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeletePasskeyRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Passkey削除レスポンス
type DeletePasskeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 削除成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// エラーメッセージ（失敗時）
	ErrorMessage  string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePasskeyResponse) Reset() {
	*x = DeletePasskeyResponse{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePasskeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePasskeyResponse) ProtoMessage() {}

func (x *DeletePasskeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePasskeyResponse.ProtoReflect.Descriptor instead.
func (*DeletePasskeyResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{16}
}

func (x *DeletePasskeyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeletePasskeyResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Passkey無効化リクエスト
type RevokePasskeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PasskeyのID
	PasskeyId string `protobuf:"bytes,1,opt,name=passkey_id,json=passkeyId,proto3" json:"passkey_id,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 無効化理由
	Reason        string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokePasskeyRequest) Reset() {
	*x = RevokePasskeyRequest{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokePasskeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokePasskeyRequest) ProtoMessage() {}

func (x *RevokePasskeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokePasskeyRequest.ProtoReflect.Descriptor instead.
func (*RevokePasskeyRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{17}
}

func (x *RevokePasskeyRequest) GetPasskeyId() string {
	if x != nil {
		return x.PasskeyId
	}
	return ""
}

func (x *RevokePasskeyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RevokePasskeyRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Passkey無効化レスポンス
type RevokePasskeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 無効化成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 無効化されたPasskey
	Passkey       *Passkey `protobuf:"bytes,2,opt,name=passkey,proto3" json:"passkey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokePasskeyResponse) Reset() {
	*x = RevokePasskeyResponse{}
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokePasskeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokePasskeyResponse) ProtoMessage() {}

func (x *RevokePasskeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_passkey_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokePasskeyResponse.ProtoReflect.Descriptor instead.
func (*RevokePasskeyResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_passkey_proto_rawDescGZIP(), []int{18}
}

func (x *RevokePasskeyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RevokePasskeyResponse) GetPasskey() *Passkey {
	if x != nil {
		return x.Passkey
	}
	return nil
}

var File_avion_auth_v1_passkey_proto protoreflect.FileDescriptor

const file_avion_auth_v1_passkey_proto_rawDesc = "" +
	"\n" +
	"\x1bavion/auth/v1/passkey.proto\x12\ravion.auth.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x18avion/auth/v1/auth.proto\x1a avion/common/v1/pagination.proto\"\xa7\x05\n" +
	"\aPasskey\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12#\n" +
	"\rcredential_id\x18\x03 \x01(\tR\fcredentialId\x12\x1d\n" +
	"\n" +
	"public_key\x18\x04 \x01(\tR\tpublicKey\x12\x12\n" +
	"\x04name\x18\x05 \x01(\tR\x04name\x12O\n" +
	"\x12authenticator_type\x18\x06 \x01(\x0e2 .avion.auth.v1.AuthenticatorTypeR\x11authenticatorType\x124\n" +
	"\x06status\x18\a \x01(\x0e2\x1c.avion.auth.v1.PasskeyStatusR\x06status\x12\x1d\n" +
	"\n" +
	"sign_count\x18\b \x01(\rR\tsignCount\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12<\n" +
	"\flast_used_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastUsedAt\x12\x1f\n" +
	"\vdevice_info\x18\v \x01(\tR\n" +
	"deviceInfo\x12\x16\n" +
	"\x06aaguid\x18\f \x01(\tR\x06aaguid\x12'\n" +
	"\x0fbackup_eligible\x18\r \x01(\bR\x0ebackupEligible\x12\x1b\n" +
	"\tbacked_up\x18\x0e \x01(\bR\bbackedUp\x12@\n" +
	"\bmetadata\x18\x0f \x03(\v2$.avion.auth.v1.Passkey.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf5\x01\n" +
	"\x1dRegisterPasskeyOptionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12O\n" +
	"\x12authenticator_type\x18\x04 \x01(\x0e2 .avion.auth.v1.AuthenticatorTypeR\x11authenticatorType\x12+\n" +
	"\x11user_verification\x18\x05 \x01(\tR\x10userVerification\"\xc2\x01\n" +
	"\x1eRegisterPasskeyOptionsResponse\x12!\n" +
	"\fchallenge_id\x18\x01 \x01(\tR\vchallengeId\x12B\n" +
	"\x10creation_options\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x0fcreationOptions\x129\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"\xd1\x01\n" +
	"\x16RegisterPasskeyRequest\x12!\n" +
	"\fchallenge_id\x18\x01 \x01(\tR\vchallengeId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12!\n" +
	"\fpasskey_name\x18\x03 \x01(\tR\vpasskeyName\x127\n" +
	"\n" +
	"credential\x18\x04 \x01(\v2\x17.google.protobuf.StructR\n" +
	"credential\x12\x1f\n" +
	"\vdevice_info\x18\x05 \x01(\tR\n" +
	"deviceInfo\"\x8a\x01\n" +
	"\x17RegisterPasskeyResponse\x120\n" +
	"\apasskey\x18\x01 \x01(\v2\x16.avion.auth.v1.PasskeyR\apasskey\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"\x85\x01\n" +
	"!AuthenticatePasskeyOptionsRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12+\n" +
	"\x11user_verification\x18\x03 \x01(\tR\x10userVerification\"\xc4\x01\n" +
	"\"AuthenticatePasskeyOptionsResponse\x12!\n" +
	"\fchallenge_id\x18\x01 \x01(\tR\vchallengeId\x12@\n" +
	"\x0frequest_options\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x0erequestOptions\x129\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"\x99\x01\n" +
	"\x1aAuthenticatePasskeyRequest\x12!\n" +
	"\fchallenge_id\x18\x01 \x01(\tR\vchallengeId\x127\n" +
	"\n" +
	"credential\x18\x02 \x01(\v2\x17.google.protobuf.StructR\n" +
	"credential\x12\x1f\n" +
	"\vdevice_info\x18\x03 \x01(\tR\n" +
	"deviceInfo\"\xff\x01\n" +
	"\x1bAuthenticatePasskeyResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\faccess_token\x18\x02 \x01(\tR\vaccessToken\x12#\n" +
	"\rrefresh_token\x18\x03 \x01(\tR\frefreshToken\x12'\n" +
	"\x04user\x18\x04 \x01(\v2\x13.avion.auth.v1.UserR\x04user\x120\n" +
	"\apasskey\x18\x05 \x01(\v2\x16.avion.auth.v1.PasskeyR\apasskey\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\"\x93\x01\n" +
	"\x13ListPasskeysRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12B\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\x12\x1f\n" +
	"\vactive_only\x18\x03 \x01(\bR\n" +
	"activeOnly\"\x8f\x01\n" +
	"\x14ListPasskeysResponse\x122\n" +
	"\bpasskeys\x18\x01 \x03(\v2\x16.avion.auth.v1.PasskeyR\bpasskeys\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\"K\n" +
	"\x11GetPasskeyRequest\x12\x1d\n" +
	"\n" +
	"passkey_id\x18\x01 \x01(\tR\tpasskeyId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"F\n" +
	"\x12GetPasskeyResponse\x120\n" +
	"\apasskey\x18\x01 \x01(\v2\x16.avion.auth.v1.PasskeyR\apasskey\"\xee\x01\n" +
	"\x14UpdatePasskeyRequest\x12\x1d\n" +
	"\n" +
	"passkey_id\x18\x01 \x01(\tR\tpasskeyId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12M\n" +
	"\bmetadata\x18\x04 \x03(\v21.avion.auth.v1.UpdatePasskeyRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"I\n" +
	"\x15UpdatePasskeyResponse\x120\n" +
	"\apasskey\x18\x01 \x01(\v2\x16.avion.auth.v1.PasskeyR\apasskey\"j\n" +
	"\x14DeletePasskeyRequest\x12\x1d\n" +
	"\n" +
	"passkey_id\x18\x01 \x01(\tR\tpasskeyId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\"V\n" +
	"\x15DeletePasskeyResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"f\n" +
	"\x14RevokePasskeyRequest\x12\x1d\n" +
	"\n" +
	"passkey_id\x18\x01 \x01(\tR\tpasskeyId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"c\n" +
	"\x15RevokePasskeyResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x120\n" +
	"\apasskey\x18\x02 \x01(\v2\x16.avion.auth.v1.PasskeyR\apasskey*\x83\x01\n" +
	"\rPasskeyStatus\x12\x1e\n" +
	"\x1aPASSKEY_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15PASSKEY_STATUS_ACTIVE\x10\x01\x12\x1b\n" +
	"\x17PASSKEY_STATUS_DISABLED\x10\x02\x12\x1a\n" +
	"\x16PASSKEY_STATUS_REVOKED\x10\x03*\x7f\n" +
	"\x11AuthenticatorType\x12\"\n" +
	"\x1eAUTHENTICATOR_TYPE_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bAUTHENTICATOR_TYPE_PLATFORM\x10\x01\x12%\n" +
	"!AUTHENTICATOR_TYPE_CROSS_PLATFORM\x10\x02B\xac\x01\n" +
	"\x11com.avion.auth.v1B\fPasskeyProtoP\x01Z3github.com/na2na-p/avion/proto/avion/auth/v1;authv1\xa2\x02\x03AAX\xaa\x02\rAvion.Auth.V1\xca\x02\rAvion\\Auth\\V1\xe2\x02\x19Avion\\Auth\\V1\\GPBMetadata\xea\x02\x0fAvion::Auth::V1b\x06proto3"

var (
	file_avion_auth_v1_passkey_proto_rawDescOnce sync.Once
	file_avion_auth_v1_passkey_proto_rawDescData []byte
)

func file_avion_auth_v1_passkey_proto_rawDescGZIP() []byte {
	file_avion_auth_v1_passkey_proto_rawDescOnce.Do(func() {
		file_avion_auth_v1_passkey_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_avion_auth_v1_passkey_proto_rawDesc), len(file_avion_auth_v1_passkey_proto_rawDesc)))
	})
	return file_avion_auth_v1_passkey_proto_rawDescData
}

var file_avion_auth_v1_passkey_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_avion_auth_v1_passkey_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_avion_auth_v1_passkey_proto_goTypes = []any{
	(PasskeyStatus)(0),                         // 0: avion.auth.v1.PasskeyStatus
	(AuthenticatorType)(0),                     // 1: avion.auth.v1.AuthenticatorType
	(*Passkey)(nil),                            // 2: avion.auth.v1.Passkey
	(*RegisterPasskeyOptionsRequest)(nil),      // 3: avion.auth.v1.RegisterPasskeyOptionsRequest
	(*RegisterPasskeyOptionsResponse)(nil),     // 4: avion.auth.v1.RegisterPasskeyOptionsResponse
	(*RegisterPasskeyRequest)(nil),             // 5: avion.auth.v1.RegisterPasskeyRequest
	(*RegisterPasskeyResponse)(nil),            // 6: avion.auth.v1.RegisterPasskeyResponse
	(*AuthenticatePasskeyOptionsRequest)(nil),  // 7: avion.auth.v1.AuthenticatePasskeyOptionsRequest
	(*AuthenticatePasskeyOptionsResponse)(nil), // 8: avion.auth.v1.AuthenticatePasskeyOptionsResponse
	(*AuthenticatePasskeyRequest)(nil),         // 9: avion.auth.v1.AuthenticatePasskeyRequest
	(*AuthenticatePasskeyResponse)(nil),        // 10: avion.auth.v1.AuthenticatePasskeyResponse
	(*ListPasskeysRequest)(nil),                // 11: avion.auth.v1.ListPasskeysRequest
	(*ListPasskeysResponse)(nil),               // 12: avion.auth.v1.ListPasskeysResponse
	(*GetPasskeyRequest)(nil),                  // 13: avion.auth.v1.GetPasskeyRequest
	(*GetPasskeyResponse)(nil),                 // 14: avion.auth.v1.GetPasskeyResponse
	(*UpdatePasskeyRequest)(nil),               // 15: avion.auth.v1.UpdatePasskeyRequest
	(*UpdatePasskeyResponse)(nil),              // 16: avion.auth.v1.UpdatePasskeyResponse
	(*DeletePasskeyRequest)(nil),               // 17: avion.auth.v1.DeletePasskeyRequest
	(*DeletePasskeyResponse)(nil),              // 18: avion.auth.v1.DeletePasskeyResponse
	(*RevokePasskeyRequest)(nil),               // 19: avion.auth.v1.RevokePasskeyRequest
	(*RevokePasskeyResponse)(nil),              // 20: avion.auth.v1.RevokePasskeyResponse
	nil,                                        // 21: avion.auth.v1.Passkey.MetadataEntry
	nil,                                        // 22: avion.auth.v1.UpdatePasskeyRequest.MetadataEntry
	(*timestamppb.Timestamp)(nil),              // 23: google.protobuf.Timestamp
	(*structpb.Struct)(nil),                    // 24: google.protobuf.Struct
	(*User)(nil),                               // 25: avion.auth.v1.User
	(*v1.PaginationRequest)(nil),               // 26: avion.common.v1.PaginationRequest
	(*v1.PaginationResponse)(nil),              // 27: avion.common.v1.PaginationResponse
}
var file_avion_auth_v1_passkey_proto_depIdxs = []int32{
	1,  // 0: avion.auth.v1.Passkey.authenticator_type:type_name -> avion.auth.v1.AuthenticatorType
	0,  // 1: avion.auth.v1.Passkey.status:type_name -> avion.auth.v1.PasskeyStatus
	23, // 2: avion.auth.v1.Passkey.created_at:type_name -> google.protobuf.Timestamp
	23, // 3: avion.auth.v1.Passkey.last_used_at:type_name -> google.protobuf.Timestamp
	21, // 4: avion.auth.v1.Passkey.metadata:type_name -> avion.auth.v1.Passkey.MetadataEntry
	1,  // 5: avion.auth.v1.RegisterPasskeyOptionsRequest.authenticator_type:type_name -> avion.auth.v1.AuthenticatorType
	24, // 6: avion.auth.v1.RegisterPasskeyOptionsResponse.creation_options:type_name -> google.protobuf.Struct
	23, // 7: avion.auth.v1.RegisterPasskeyOptionsResponse.expires_at:type_name -> google.protobuf.Timestamp
	24, // 8: avion.auth.v1.RegisterPasskeyRequest.credential:type_name -> google.protobuf.Struct
	2,  // 9: avion.auth.v1.RegisterPasskeyResponse.passkey:type_name -> avion.auth.v1.Passkey
	24, // 10: avion.auth.v1.AuthenticatePasskeyOptionsResponse.request_options:type_name -> google.protobuf.Struct
	23, // 11: avion.auth.v1.AuthenticatePasskeyOptionsResponse.expires_at:type_name -> google.protobuf.Timestamp
	24, // 12: avion.auth.v1.AuthenticatePasskeyRequest.credential:type_name -> google.protobuf.Struct
	25, // 13: avion.auth.v1.AuthenticatePasskeyResponse.user:type_name -> avion.auth.v1.User
	2,  // 14: avion.auth.v1.AuthenticatePasskeyResponse.passkey:type_name -> avion.auth.v1.Passkey
	26, // 15: avion.auth.v1.ListPasskeysRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	2,  // 16: avion.auth.v1.ListPasskeysResponse.passkeys:type_name -> avion.auth.v1.Passkey
	27, // 17: avion.auth.v1.ListPasskeysResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	2,  // 18: avion.auth.v1.GetPasskeyResponse.passkey:type_name -> avion.auth.v1.Passkey
	22, // 19: avion.auth.v1.UpdatePasskeyRequest.metadata:type_name -> avion.auth.v1.UpdatePasskeyRequest.MetadataEntry
	2,  // 20: avion.auth.v1.UpdatePasskeyResponse.passkey:type_name -> avion.auth.v1.Passkey
	2,  // 21: avion.auth.v1.RevokePasskeyResponse.passkey:type_name -> avion.auth.v1.Passkey
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_avion_auth_v1_passkey_proto_init() }
func file_avion_auth_v1_passkey_proto_init() {
	if File_avion_auth_v1_passkey_proto != nil {
		return
	}
	file_avion_auth_v1_auth_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_avion_auth_v1_passkey_proto_rawDesc), len(file_avion_auth_v1_passkey_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_avion_auth_v1_passkey_proto_goTypes,
		DependencyIndexes: file_avion_auth_v1_passkey_proto_depIdxs,
		EnumInfos:         file_avion_auth_v1_passkey_proto_enumTypes,
		MessageInfos:      file_avion_auth_v1_passkey_proto_msgTypes,
	}.Build()
	File_avion_auth_v1_passkey_proto = out.File
	file_avion_auth_v1_passkey_proto_goTypes = nil
	file_avion_auth_v1_passkey_proto_depIdxs = nil
}
