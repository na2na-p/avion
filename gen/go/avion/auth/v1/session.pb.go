// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: avion/auth/v1/session.proto

package authv1

import (
	v1 "github.com/na2na-p/avion/proto/avion/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// セッションの状態を表す列挙型
type SessionStatus int32

const (
	// 未指定
	SessionStatus_SESSION_STATUS_UNSPECIFIED SessionStatus = 0
	// アクティブ
	SessionStatus_SESSION_STATUS_ACTIVE SessionStatus = 1
	// 期限切れ
	SessionStatus_SESSION_STATUS_EXPIRED SessionStatus = 2
	// 無効化済み
	SessionStatus_SESSION_STATUS_REVOKED SessionStatus = 3
)

// Enum value maps for SessionStatus.
var (
	SessionStatus_name = map[int32]string{
		0: "SESSION_STATUS_UNSPECIFIED",
		1: "SESSION_STATUS_ACTIVE",
		2: "SESSION_STATUS_EXPIRED",
		3: "SESSION_STATUS_REVOKED",
	}
	SessionStatus_value = map[string]int32{
		"SESSION_STATUS_UNSPECIFIED": 0,
		"SESSION_STATUS_ACTIVE":      1,
		"SESSION_STATUS_EXPIRED":     2,
		"SESSION_STATUS_REVOKED":     3,
	}
)

func (x SessionStatus) Enum() *SessionStatus {
	p := new(SessionStatus)
	*p = x
	return p
}

func (x SessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_auth_v1_session_proto_enumTypes[0].Descriptor()
}

func (SessionStatus) Type() protoreflect.EnumType {
	return &file_avion_auth_v1_session_proto_enumTypes[0]
}

func (x SessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionStatus.Descriptor instead.
func (SessionStatus) EnumDescriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{0}
}

// セッションを表すメッセージ
type Session struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// セッションID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// アクセストークン
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	// リフレッシュトークン
	RefreshToken string `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// 有効期限
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// 作成日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 最終アクセス日時
	LastAccessedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_accessed_at,json=lastAccessedAt,proto3" json:"last_accessed_at,omitempty"`
	// IPアドレス
	IpAddress string `protobuf:"bytes,8,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// ユーザーエージェント
	UserAgent string `protobuf:"bytes,9,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	// デバイスID（オプション）
	DeviceId string `protobuf:"bytes,10,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// デバイス名（オプション）
	DeviceName string `protobuf:"bytes,11,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	// セッションの状態
	Status SessionStatus `protobuf:"varint,12,opt,name=status,proto3,enum=avion.auth.v1.SessionStatus" json:"status,omitempty"`
	// メタデータ（JSON形式の追加情報）
	Metadata map[string]string `protobuf:"bytes,13,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 2要素認証完了フラグ
	IsMfaVerified bool `protobuf:"varint,14,opt,name=is_mfa_verified,json=isMfaVerified,proto3" json:"is_mfa_verified,omitempty"`
	// 認証方法（password, passkey, oauth等）
	AuthMethod    string `protobuf:"bytes,15,opt,name=auth_method,json=authMethod,proto3" json:"auth_method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{0}
}

func (x *Session) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Session) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Session) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Session) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *Session) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Session) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Session) GetLastAccessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastAccessedAt
	}
	return nil
}

func (x *Session) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Session) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *Session) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Session) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *Session) GetStatus() SessionStatus {
	if x != nil {
		return x.Status
	}
	return SessionStatus_SESSION_STATUS_UNSPECIFIED
}

func (x *Session) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Session) GetIsMfaVerified() bool {
	if x != nil {
		return x.IsMfaVerified
	}
	return false
}

func (x *Session) GetAuthMethod() string {
	if x != nil {
		return x.AuthMethod
	}
	return ""
}

// リフレッシュトークンリクエスト
type RefreshTokenRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// リフレッシュトークン
	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// デバイスID（オプション）
	DeviceId      string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{1}
}

func (x *RefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *RefreshTokenRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

// リフレッシュトークンレスポンス
type RefreshTokenResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 新しいアクセストークン
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// 新しいリフレッシュトークン
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// トークンの有効期限
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenResponse) Reset() {
	*x = RefreshTokenResponse{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenResponse) ProtoMessage() {}

func (x *RefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{2}
}

func (x *RefreshTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RefreshTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *RefreshTokenResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// セッション無効化リクエスト
type RevokeSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// セッションID（指定された場合、特定のセッションを無効化）
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// ユーザーID（指定された場合、そのユーザーの全セッションを無効化）
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 現在のセッションを除外するフラグ
	ExcludeCurrent bool `protobuf:"varint,3,opt,name=exclude_current,json=excludeCurrent,proto3" json:"exclude_current,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RevokeSessionRequest) Reset() {
	*x = RevokeSessionRequest{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeSessionRequest) ProtoMessage() {}

func (x *RevokeSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeSessionRequest.ProtoReflect.Descriptor instead.
func (*RevokeSessionRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{3}
}

func (x *RevokeSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RevokeSessionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RevokeSessionRequest) GetExcludeCurrent() bool {
	if x != nil {
		return x.ExcludeCurrent
	}
	return false
}

// セッション無効化レスポンス
type RevokeSessionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 無効化されたセッション数
	RevokedCount int32 `protobuf:"varint,1,opt,name=revoked_count,json=revokedCount,proto3" json:"revoked_count,omitempty"`
	// 無効化成功フラグ
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// エラーメッセージ（失敗時）
	ErrorMessage  string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeSessionResponse) Reset() {
	*x = RevokeSessionResponse{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeSessionResponse) ProtoMessage() {}

func (x *RevokeSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeSessionResponse.ProtoReflect.Descriptor instead.
func (*RevokeSessionResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{4}
}

func (x *RevokeSessionResponse) GetRevokedCount() int32 {
	if x != nil {
		return x.RevokedCount
	}
	return 0
}

func (x *RevokeSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RevokeSessionResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// セッション作成リクエスト
type CreateSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// IPアドレス
	IpAddress string `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// ユーザーエージェント
	UserAgent string `protobuf:"bytes,3,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	// デバイスID（オプション）
	DeviceId string `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// デバイス名（オプション）
	DeviceName string `protobuf:"bytes,5,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	// 認証方法
	AuthMethod string `protobuf:"bytes,6,opt,name=auth_method,json=authMethod,proto3" json:"auth_method,omitempty"`
	// 2要素認証完了フラグ
	IsMfaVerified bool `protobuf:"varint,7,opt,name=is_mfa_verified,json=isMfaVerified,proto3" json:"is_mfa_verified,omitempty"`
	// メタデータ
	Metadata      map[string]string `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{5}
}

func (x *CreateSessionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateSessionRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *CreateSessionRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *CreateSessionRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *CreateSessionRequest) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *CreateSessionRequest) GetAuthMethod() string {
	if x != nil {
		return x.AuthMethod
	}
	return ""
}

func (x *CreateSessionRequest) GetIsMfaVerified() bool {
	if x != nil {
		return x.IsMfaVerified
	}
	return false
}

func (x *CreateSessionRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// セッション作成レスポンス
type CreateSessionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 作成されたセッション
	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	// アクセストークン
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// リフレッシュトークン
	RefreshToken  string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{6}
}

func (x *CreateSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *CreateSessionResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateSessionResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

// セッション取得リクエスト
type GetSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// セッションID
	SessionId     string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionRequest) Reset() {
	*x = GetSessionRequest{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionRequest) ProtoMessage() {}

func (x *GetSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionRequest.ProtoReflect.Descriptor instead.
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{7}
}

func (x *GetSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// セッション取得レスポンス
type GetSessionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// セッション
	Session       *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionResponse) Reset() {
	*x = GetSessionResponse{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionResponse) ProtoMessage() {}

func (x *GetSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionResponse.ProtoReflect.Descriptor instead.
func (*GetSessionResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{8}
}

func (x *GetSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

// セッション一覧取得リクエスト
type ListSessionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ページネーション情報
	Pagination *v1.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// アクティブなセッションのみを取得
	ActiveOnly    bool `protobuf:"varint,3,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSessionsRequest) Reset() {
	*x = ListSessionsRequest{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsRequest) ProtoMessage() {}

func (x *ListSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListSessionsRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{9}
}

func (x *ListSessionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListSessionsRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListSessionsRequest) GetActiveOnly() bool {
	if x != nil {
		return x.ActiveOnly
	}
	return false
}

// セッション一覧取得レスポンス
type ListSessionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// セッションのリスト
	Sessions []*Session `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	// ページネーション情報
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSessionsResponse) Reset() {
	*x = ListSessionsResponse{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsResponse) ProtoMessage() {}

func (x *ListSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListSessionsResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{10}
}

func (x *ListSessionsResponse) GetSessions() []*Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *ListSessionsResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// セッション検証リクエスト
type ValidateSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// アクセストークン
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// IPアドレス（オプション、セキュリティチェック用）
	IpAddress     string `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateSessionRequest) Reset() {
	*x = ValidateSessionRequest{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSessionRequest) ProtoMessage() {}

func (x *ValidateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSessionRequest.ProtoReflect.Descriptor instead.
func (*ValidateSessionRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{11}
}

func (x *ValidateSessionRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ValidateSessionRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

// セッション検証レスポンス
type ValidateSessionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 有効フラグ
	IsValid bool `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	// セッション
	Session *Session `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	// エラーメッセージ（無効な場合）
	ErrorMessage  string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateSessionResponse) Reset() {
	*x = ValidateSessionResponse{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSessionResponse) ProtoMessage() {}

func (x *ValidateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSessionResponse.ProtoReflect.Descriptor instead.
func (*ValidateSessionResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{12}
}

func (x *ValidateSessionResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *ValidateSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *ValidateSessionResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// セッション更新リクエスト
type UpdateSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// セッションID
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// 最終アクセス日時を更新
	UpdateLastAccessed bool `protobuf:"varint,2,opt,name=update_last_accessed,json=updateLastAccessed,proto3" json:"update_last_accessed,omitempty"`
	// 新しいIPアドレス（オプション）
	IpAddress string `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// 新しいユーザーエージェント（オプション）
	UserAgent string `protobuf:"bytes,4,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	// メタデータの更新
	Metadata      map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSessionRequest) Reset() {
	*x = UpdateSessionRequest{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSessionRequest) ProtoMessage() {}

func (x *UpdateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSessionRequest.ProtoReflect.Descriptor instead.
func (*UpdateSessionRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UpdateSessionRequest) GetUpdateLastAccessed() bool {
	if x != nil {
		return x.UpdateLastAccessed
	}
	return false
}

func (x *UpdateSessionRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *UpdateSessionRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *UpdateSessionRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// セッション更新レスポンス
type UpdateSessionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新されたセッション
	Session       *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSessionResponse) Reset() {
	*x = UpdateSessionResponse{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSessionResponse) ProtoMessage() {}

func (x *UpdateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSessionResponse.ProtoReflect.Descriptor instead.
func (*UpdateSessionResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

// セッション延長リクエスト
type ExtendSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// セッションID
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// 延長時間（秒）
	ExtensionSeconds int32 `protobuf:"varint,2,opt,name=extension_seconds,json=extensionSeconds,proto3" json:"extension_seconds,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ExtendSessionRequest) Reset() {
	*x = ExtendSessionRequest{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendSessionRequest) ProtoMessage() {}

func (x *ExtendSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendSessionRequest.ProtoReflect.Descriptor instead.
func (*ExtendSessionRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{15}
}

func (x *ExtendSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ExtendSessionRequest) GetExtensionSeconds() int32 {
	if x != nil {
		return x.ExtensionSeconds
	}
	return 0
}

// セッション延長レスポンス
type ExtendSessionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新されたセッション
	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	// 新しい有効期限
	NewExpiresAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=new_expires_at,json=newExpiresAt,proto3" json:"new_expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtendSessionResponse) Reset() {
	*x = ExtendSessionResponse{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendSessionResponse) ProtoMessage() {}

func (x *ExtendSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendSessionResponse.ProtoReflect.Descriptor instead.
func (*ExtendSessionResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{16}
}

func (x *ExtendSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *ExtendSessionResponse) GetNewExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.NewExpiresAt
	}
	return nil
}

// アクティブセッション統計リクエスト
type GetSessionStatsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID（指定された場合、特定ユーザーの統計）
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 期間（過去N日間）
	Days          int32 `protobuf:"varint,2,opt,name=days,proto3" json:"days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionStatsRequest) Reset() {
	*x = GetSessionStatsRequest{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionStatsRequest) ProtoMessage() {}

func (x *GetSessionStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionStatsRequest.ProtoReflect.Descriptor instead.
func (*GetSessionStatsRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{17}
}

func (x *GetSessionStatsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetSessionStatsRequest) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

// アクティブセッション統計レスポンス
type GetSessionStatsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// アクティブセッション数
	ActiveSessions int32 `protobuf:"varint,1,opt,name=active_sessions,json=activeSessions,proto3" json:"active_sessions,omitempty"`
	// 期限切れセッション数
	ExpiredSessions int32 `protobuf:"varint,2,opt,name=expired_sessions,json=expiredSessions,proto3" json:"expired_sessions,omitempty"`
	// 無効化されたセッション数
	RevokedSessions int32 `protobuf:"varint,3,opt,name=revoked_sessions,json=revokedSessions,proto3" json:"revoked_sessions,omitempty"`
	// ユニークユーザー数
	UniqueUsers int32 `protobuf:"varint,4,opt,name=unique_users,json=uniqueUsers,proto3" json:"unique_users,omitempty"`
	// デバイス別セッション数
	SessionsByDevice map[string]int32 `protobuf:"bytes,5,rep,name=sessions_by_device,json=sessionsByDevice,proto3" json:"sessions_by_device,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// 認証方法別セッション数
	SessionsByAuthMethod map[string]int32 `protobuf:"bytes,6,rep,name=sessions_by_auth_method,json=sessionsByAuthMethod,proto3" json:"sessions_by_auth_method,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetSessionStatsResponse) Reset() {
	*x = GetSessionStatsResponse{}
	mi := &file_avion_auth_v1_session_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionStatsResponse) ProtoMessage() {}

func (x *GetSessionStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_session_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionStatsResponse.ProtoReflect.Descriptor instead.
func (*GetSessionStatsResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_session_proto_rawDescGZIP(), []int{18}
}

func (x *GetSessionStatsResponse) GetActiveSessions() int32 {
	if x != nil {
		return x.ActiveSessions
	}
	return 0
}

func (x *GetSessionStatsResponse) GetExpiredSessions() int32 {
	if x != nil {
		return x.ExpiredSessions
	}
	return 0
}

func (x *GetSessionStatsResponse) GetRevokedSessions() int32 {
	if x != nil {
		return x.RevokedSessions
	}
	return 0
}

func (x *GetSessionStatsResponse) GetUniqueUsers() int32 {
	if x != nil {
		return x.UniqueUsers
	}
	return 0
}

func (x *GetSessionStatsResponse) GetSessionsByDevice() map[string]int32 {
	if x != nil {
		return x.SessionsByDevice
	}
	return nil
}

func (x *GetSessionStatsResponse) GetSessionsByAuthMethod() map[string]int32 {
	if x != nil {
		return x.SessionsByAuthMethod
	}
	return nil
}

var File_avion_auth_v1_session_proto protoreflect.FileDescriptor

const file_avion_auth_v1_session_proto_rawDesc = "" +
	"\n" +
	"\x1bavion/auth/v1/session.proto\x12\ravion.auth.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a avion/common/v1/pagination.proto\"\xa3\x05\n" +
	"\aSession\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\x12#\n" +
	"\rrefresh_token\x18\x04 \x01(\tR\frefreshToken\x129\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12D\n" +
	"\x10last_accessed_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x0elastAccessedAt\x12\x1d\n" +
	"\n" +
	"ip_address\x18\b \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"user_agent\x18\t \x01(\tR\tuserAgent\x12\x1b\n" +
	"\tdevice_id\x18\n" +
	" \x01(\tR\bdeviceId\x12\x1f\n" +
	"\vdevice_name\x18\v \x01(\tR\n" +
	"deviceName\x124\n" +
	"\x06status\x18\f \x01(\x0e2\x1c.avion.auth.v1.SessionStatusR\x06status\x12@\n" +
	"\bmetadata\x18\r \x03(\v2$.avion.auth.v1.Session.MetadataEntryR\bmetadata\x12&\n" +
	"\x0fis_mfa_verified\x18\x0e \x01(\bR\risMfaVerified\x12\x1f\n" +
	"\vauth_method\x18\x0f \x01(\tR\n" +
	"authMethod\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"W\n" +
	"\x13RefreshTokenRequest\x12#\n" +
	"\rrefresh_token\x18\x01 \x01(\tR\frefreshToken\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\"\x99\x01\n" +
	"\x14RefreshTokenResponse\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12#\n" +
	"\rrefresh_token\x18\x02 \x01(\tR\frefreshToken\x129\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"w\n" +
	"\x14RevokeSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12'\n" +
	"\x0fexclude_current\x18\x03 \x01(\bR\x0eexcludeCurrent\"{\n" +
	"\x15RevokeSessionResponse\x12#\n" +
	"\rrevoked_count\x18\x01 \x01(\x05R\frevokedCount\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"\x80\x03\n" +
	"\x14CreateSessionRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x03 \x01(\tR\tuserAgent\x12\x1b\n" +
	"\tdevice_id\x18\x04 \x01(\tR\bdeviceId\x12\x1f\n" +
	"\vdevice_name\x18\x05 \x01(\tR\n" +
	"deviceName\x12\x1f\n" +
	"\vauth_method\x18\x06 \x01(\tR\n" +
	"authMethod\x12&\n" +
	"\x0fis_mfa_verified\x18\a \x01(\bR\risMfaVerified\x12M\n" +
	"\bmetadata\x18\b \x03(\v21.avion.auth.v1.CreateSessionRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x91\x01\n" +
	"\x15CreateSessionResponse\x120\n" +
	"\asession\x18\x01 \x01(\v2\x16.avion.auth.v1.SessionR\asession\x12!\n" +
	"\faccess_token\x18\x02 \x01(\tR\vaccessToken\x12#\n" +
	"\rrefresh_token\x18\x03 \x01(\tR\frefreshToken\"2\n" +
	"\x11GetSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"F\n" +
	"\x12GetSessionResponse\x120\n" +
	"\asession\x18\x01 \x01(\v2\x16.avion.auth.v1.SessionR\asession\"\x93\x01\n" +
	"\x13ListSessionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12B\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\x12\x1f\n" +
	"\vactive_only\x18\x03 \x01(\bR\n" +
	"activeOnly\"\x8f\x01\n" +
	"\x14ListSessionsResponse\x122\n" +
	"\bsessions\x18\x01 \x03(\v2\x16.avion.auth.v1.SessionR\bsessions\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\"Z\n" +
	"\x16ValidateSessionRequest\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress\"\x8b\x01\n" +
	"\x17ValidateSessionResponse\x12\x19\n" +
	"\bis_valid\x18\x01 \x01(\bR\aisValid\x120\n" +
	"\asession\x18\x02 \x01(\v2\x16.avion.auth.v1.SessionR\asession\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"\xb1\x02\n" +
	"\x14UpdateSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x120\n" +
	"\x14update_last_accessed\x18\x02 \x01(\bR\x12updateLastAccessed\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x03 \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x04 \x01(\tR\tuserAgent\x12M\n" +
	"\bmetadata\x18\x05 \x03(\v21.avion.auth.v1.UpdateSessionRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"I\n" +
	"\x15UpdateSessionResponse\x120\n" +
	"\asession\x18\x01 \x01(\v2\x16.avion.auth.v1.SessionR\asession\"b\n" +
	"\x14ExtendSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12+\n" +
	"\x11extension_seconds\x18\x02 \x01(\x05R\x10extensionSeconds\"\x8b\x01\n" +
	"\x15ExtendSessionResponse\x120\n" +
	"\asession\x18\x01 \x01(\v2\x16.avion.auth.v1.SessionR\asession\x12@\n" +
	"\x0enew_expires_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\fnewExpiresAt\"E\n" +
	"\x16GetSessionStatsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04days\x18\x02 \x01(\x05R\x04days\"\xae\x04\n" +
	"\x17GetSessionStatsResponse\x12'\n" +
	"\x0factive_sessions\x18\x01 \x01(\x05R\x0eactiveSessions\x12)\n" +
	"\x10expired_sessions\x18\x02 \x01(\x05R\x0fexpiredSessions\x12)\n" +
	"\x10revoked_sessions\x18\x03 \x01(\x05R\x0frevokedSessions\x12!\n" +
	"\funique_users\x18\x04 \x01(\x05R\vuniqueUsers\x12j\n" +
	"\x12sessions_by_device\x18\x05 \x03(\v2<.avion.auth.v1.GetSessionStatsResponse.SessionsByDeviceEntryR\x10sessionsByDevice\x12w\n" +
	"\x17sessions_by_auth_method\x18\x06 \x03(\v2@.avion.auth.v1.GetSessionStatsResponse.SessionsByAuthMethodEntryR\x14sessionsByAuthMethod\x1aC\n" +
	"\x15SessionsByDeviceEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1aG\n" +
	"\x19SessionsByAuthMethodEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01*\x82\x01\n" +
	"\rSessionStatus\x12\x1e\n" +
	"\x1aSESSION_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15SESSION_STATUS_ACTIVE\x10\x01\x12\x1a\n" +
	"\x16SESSION_STATUS_EXPIRED\x10\x02\x12\x1a\n" +
	"\x16SESSION_STATUS_REVOKED\x10\x03B\xac\x01\n" +
	"\x11com.avion.auth.v1B\fSessionProtoP\x01Z3github.com/na2na-p/avion/proto/avion/auth/v1;authv1\xa2\x02\x03AAX\xaa\x02\rAvion.Auth.V1\xca\x02\rAvion\\Auth\\V1\xe2\x02\x19Avion\\Auth\\V1\\GPBMetadata\xea\x02\x0fAvion::Auth::V1b\x06proto3"

var (
	file_avion_auth_v1_session_proto_rawDescOnce sync.Once
	file_avion_auth_v1_session_proto_rawDescData []byte
)

func file_avion_auth_v1_session_proto_rawDescGZIP() []byte {
	file_avion_auth_v1_session_proto_rawDescOnce.Do(func() {
		file_avion_auth_v1_session_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_avion_auth_v1_session_proto_rawDesc), len(file_avion_auth_v1_session_proto_rawDesc)))
	})
	return file_avion_auth_v1_session_proto_rawDescData
}

var file_avion_auth_v1_session_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_avion_auth_v1_session_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_avion_auth_v1_session_proto_goTypes = []any{
	(SessionStatus)(0),              // 0: avion.auth.v1.SessionStatus
	(*Session)(nil),                 // 1: avion.auth.v1.Session
	(*RefreshTokenRequest)(nil),     // 2: avion.auth.v1.RefreshTokenRequest
	(*RefreshTokenResponse)(nil),    // 3: avion.auth.v1.RefreshTokenResponse
	(*RevokeSessionRequest)(nil),    // 4: avion.auth.v1.RevokeSessionRequest
	(*RevokeSessionResponse)(nil),   // 5: avion.auth.v1.RevokeSessionResponse
	(*CreateSessionRequest)(nil),    // 6: avion.auth.v1.CreateSessionRequest
	(*CreateSessionResponse)(nil),   // 7: avion.auth.v1.CreateSessionResponse
	(*GetSessionRequest)(nil),       // 8: avion.auth.v1.GetSessionRequest
	(*GetSessionResponse)(nil),      // 9: avion.auth.v1.GetSessionResponse
	(*ListSessionsRequest)(nil),     // 10: avion.auth.v1.ListSessionsRequest
	(*ListSessionsResponse)(nil),    // 11: avion.auth.v1.ListSessionsResponse
	(*ValidateSessionRequest)(nil),  // 12: avion.auth.v1.ValidateSessionRequest
	(*ValidateSessionResponse)(nil), // 13: avion.auth.v1.ValidateSessionResponse
	(*UpdateSessionRequest)(nil),    // 14: avion.auth.v1.UpdateSessionRequest
	(*UpdateSessionResponse)(nil),   // 15: avion.auth.v1.UpdateSessionResponse
	(*ExtendSessionRequest)(nil),    // 16: avion.auth.v1.ExtendSessionRequest
	(*ExtendSessionResponse)(nil),   // 17: avion.auth.v1.ExtendSessionResponse
	(*GetSessionStatsRequest)(nil),  // 18: avion.auth.v1.GetSessionStatsRequest
	(*GetSessionStatsResponse)(nil), // 19: avion.auth.v1.GetSessionStatsResponse
	nil,                             // 20: avion.auth.v1.Session.MetadataEntry
	nil,                             // 21: avion.auth.v1.CreateSessionRequest.MetadataEntry
	nil,                             // 22: avion.auth.v1.UpdateSessionRequest.MetadataEntry
	nil,                             // 23: avion.auth.v1.GetSessionStatsResponse.SessionsByDeviceEntry
	nil,                             // 24: avion.auth.v1.GetSessionStatsResponse.SessionsByAuthMethodEntry
	(*timestamppb.Timestamp)(nil),   // 25: google.protobuf.Timestamp
	(*v1.PaginationRequest)(nil),    // 26: avion.common.v1.PaginationRequest
	(*v1.PaginationResponse)(nil),   // 27: avion.common.v1.PaginationResponse
}
var file_avion_auth_v1_session_proto_depIdxs = []int32{
	25, // 0: avion.auth.v1.Session.expires_at:type_name -> google.protobuf.Timestamp
	25, // 1: avion.auth.v1.Session.created_at:type_name -> google.protobuf.Timestamp
	25, // 2: avion.auth.v1.Session.last_accessed_at:type_name -> google.protobuf.Timestamp
	0,  // 3: avion.auth.v1.Session.status:type_name -> avion.auth.v1.SessionStatus
	20, // 4: avion.auth.v1.Session.metadata:type_name -> avion.auth.v1.Session.MetadataEntry
	25, // 5: avion.auth.v1.RefreshTokenResponse.expires_at:type_name -> google.protobuf.Timestamp
	21, // 6: avion.auth.v1.CreateSessionRequest.metadata:type_name -> avion.auth.v1.CreateSessionRequest.MetadataEntry
	1,  // 7: avion.auth.v1.CreateSessionResponse.session:type_name -> avion.auth.v1.Session
	1,  // 8: avion.auth.v1.GetSessionResponse.session:type_name -> avion.auth.v1.Session
	26, // 9: avion.auth.v1.ListSessionsRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	1,  // 10: avion.auth.v1.ListSessionsResponse.sessions:type_name -> avion.auth.v1.Session
	27, // 11: avion.auth.v1.ListSessionsResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	1,  // 12: avion.auth.v1.ValidateSessionResponse.session:type_name -> avion.auth.v1.Session
	22, // 13: avion.auth.v1.UpdateSessionRequest.metadata:type_name -> avion.auth.v1.UpdateSessionRequest.MetadataEntry
	1,  // 14: avion.auth.v1.UpdateSessionResponse.session:type_name -> avion.auth.v1.Session
	1,  // 15: avion.auth.v1.ExtendSessionResponse.session:type_name -> avion.auth.v1.Session
	25, // 16: avion.auth.v1.ExtendSessionResponse.new_expires_at:type_name -> google.protobuf.Timestamp
	23, // 17: avion.auth.v1.GetSessionStatsResponse.sessions_by_device:type_name -> avion.auth.v1.GetSessionStatsResponse.SessionsByDeviceEntry
	24, // 18: avion.auth.v1.GetSessionStatsResponse.sessions_by_auth_method:type_name -> avion.auth.v1.GetSessionStatsResponse.SessionsByAuthMethodEntry
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_avion_auth_v1_session_proto_init() }
func file_avion_auth_v1_session_proto_init() {
	if File_avion_auth_v1_session_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_avion_auth_v1_session_proto_rawDesc), len(file_avion_auth_v1_session_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_avion_auth_v1_session_proto_goTypes,
		DependencyIndexes: file_avion_auth_v1_session_proto_depIdxs,
		EnumInfos:         file_avion_auth_v1_session_proto_enumTypes,
		MessageInfos:      file_avion_auth_v1_session_proto_msgTypes,
	}.Build()
	File_avion_auth_v1_session_proto = out.File
	file_avion_auth_v1_session_proto_goTypes = nil
	file_avion_auth_v1_session_proto_depIdxs = nil
}
