// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: avion/auth/v1/jwt.proto

package authv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// JWTトークンのタイプ
type TokenType int32

const (
	// 未指定
	TokenType_TOKEN_TYPE_UNSPECIFIED TokenType = 0
	// アクセストークン
	TokenType_TOKEN_TYPE_ACCESS TokenType = 1
	// リフレッシュトークン
	TokenType_TOKEN_TYPE_REFRESH TokenType = 2
	// IDトークン（OpenID Connect）
	TokenType_TOKEN_TYPE_ID TokenType = 3
)

// Enum value maps for TokenType.
var (
	TokenType_name = map[int32]string{
		0: "TOKEN_TYPE_UNSPECIFIED",
		1: "TOKEN_TYPE_ACCESS",
		2: "TOKEN_TYPE_REFRESH",
		3: "TOKEN_TYPE_ID",
	}
	TokenType_value = map[string]int32{
		"TOKEN_TYPE_UNSPECIFIED": 0,
		"TOKEN_TYPE_ACCESS":      1,
		"TOKEN_TYPE_REFRESH":     2,
		"TOKEN_TYPE_ID":          3,
	}
)

func (x TokenType) Enum() *TokenType {
	p := new(TokenType)
	*p = x
	return p
}

func (x TokenType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TokenType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_auth_v1_jwt_proto_enumTypes[0].Descriptor()
}

func (TokenType) Type() protoreflect.EnumType {
	return &file_avion_auth_v1_jwt_proto_enumTypes[0]
}

func (x TokenType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TokenType.Descriptor instead.
func (TokenType) EnumDescriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{0}
}

// JWT検証エラーコード
type JwtVerificationError int32

const (
	// 未指定
	JwtVerificationError_JWT_VERIFICATION_ERROR_UNSPECIFIED JwtVerificationError = 0
	// 無効な署名
	JwtVerificationError_JWT_VERIFICATION_ERROR_INVALID_SIGNATURE JwtVerificationError = 1
	// 期限切れ
	JwtVerificationError_JWT_VERIFICATION_ERROR_EXPIRED JwtVerificationError = 2
	// まだ有効でない
	JwtVerificationError_JWT_VERIFICATION_ERROR_NOT_YET_VALID JwtVerificationError = 3
	// 無効な発行者
	JwtVerificationError_JWT_VERIFICATION_ERROR_INVALID_ISSUER JwtVerificationError = 4
	// 無効なオーディエンス
	JwtVerificationError_JWT_VERIFICATION_ERROR_INVALID_AUDIENCE JwtVerificationError = 5
	// 無効なフォーマット
	JwtVerificationError_JWT_VERIFICATION_ERROR_INVALID_FORMAT JwtVerificationError = 6
	// 無効なキーID
	JwtVerificationError_JWT_VERIFICATION_ERROR_INVALID_KEY_ID JwtVerificationError = 7
	// 失効済み
	JwtVerificationError_JWT_VERIFICATION_ERROR_REVOKED JwtVerificationError = 8
)

// Enum value maps for JwtVerificationError.
var (
	JwtVerificationError_name = map[int32]string{
		0: "JWT_VERIFICATION_ERROR_UNSPECIFIED",
		1: "JWT_VERIFICATION_ERROR_INVALID_SIGNATURE",
		2: "JWT_VERIFICATION_ERROR_EXPIRED",
		3: "JWT_VERIFICATION_ERROR_NOT_YET_VALID",
		4: "JWT_VERIFICATION_ERROR_INVALID_ISSUER",
		5: "JWT_VERIFICATION_ERROR_INVALID_AUDIENCE",
		6: "JWT_VERIFICATION_ERROR_INVALID_FORMAT",
		7: "JWT_VERIFICATION_ERROR_INVALID_KEY_ID",
		8: "JWT_VERIFICATION_ERROR_REVOKED",
	}
	JwtVerificationError_value = map[string]int32{
		"JWT_VERIFICATION_ERROR_UNSPECIFIED":       0,
		"JWT_VERIFICATION_ERROR_INVALID_SIGNATURE": 1,
		"JWT_VERIFICATION_ERROR_EXPIRED":           2,
		"JWT_VERIFICATION_ERROR_NOT_YET_VALID":     3,
		"JWT_VERIFICATION_ERROR_INVALID_ISSUER":    4,
		"JWT_VERIFICATION_ERROR_INVALID_AUDIENCE":  5,
		"JWT_VERIFICATION_ERROR_INVALID_FORMAT":    6,
		"JWT_VERIFICATION_ERROR_INVALID_KEY_ID":    7,
		"JWT_VERIFICATION_ERROR_REVOKED":           8,
	}
)

func (x JwtVerificationError) Enum() *JwtVerificationError {
	p := new(JwtVerificationError)
	*p = x
	return p
}

func (x JwtVerificationError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JwtVerificationError) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_auth_v1_jwt_proto_enumTypes[1].Descriptor()
}

func (JwtVerificationError) Type() protoreflect.EnumType {
	return &file_avion_auth_v1_jwt_proto_enumTypes[1]
}

func (x JwtVerificationError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JwtVerificationError.Descriptor instead.
func (JwtVerificationError) EnumDescriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{1}
}

// JWTクレーム
type JwtClaims struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 発行者（iss）
	Issuer string `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// サブジェクト（sub）- ユーザーID
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// オーディエンス（aud）
	Audience []string `protobuf:"bytes,3,rep,name=audience,proto3" json:"audience,omitempty"`
	// 有効期限（exp）
	Expiration *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiration,proto3" json:"expiration,omitempty"`
	// 有効開始時刻（nbf）
	NotBefore *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	// 発行時刻（iat）
	IssuedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	// JWT ID（jti）
	JwtId string `protobuf:"bytes,7,opt,name=jwt_id,json=jwtId,proto3" json:"jwt_id,omitempty"`
	// カスタムクレーム
	CustomClaims  map[string]string `protobuf:"bytes,8,rep,name=custom_claims,json=customClaims,proto3" json:"custom_claims,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JwtClaims) Reset() {
	*x = JwtClaims{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JwtClaims) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtClaims) ProtoMessage() {}

func (x *JwtClaims) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtClaims.ProtoReflect.Descriptor instead.
func (*JwtClaims) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{0}
}

func (x *JwtClaims) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *JwtClaims) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *JwtClaims) GetAudience() []string {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *JwtClaims) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *JwtClaims) GetNotBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.NotBefore
	}
	return nil
}

func (x *JwtClaims) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

func (x *JwtClaims) GetJwtId() string {
	if x != nil {
		return x.JwtId
	}
	return ""
}

func (x *JwtClaims) GetCustomClaims() map[string]string {
	if x != nil {
		return x.CustomClaims
	}
	return nil
}

// JWTトークン情報
type JwtToken struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// トークン文字列
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// トークンタイプ
	Type TokenType `protobuf:"varint,2,opt,name=type,proto3,enum=avion.auth.v1.TokenType" json:"type,omitempty"`
	// クレーム情報
	Claims *JwtClaims `protobuf:"bytes,3,opt,name=claims,proto3" json:"claims,omitempty"`
	// 署名アルゴリズム（RS256, HS256等）
	Algorithm string `protobuf:"bytes,4,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	// キーID（複数の署名キーを管理する場合）
	KeyId         string `protobuf:"bytes,5,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JwtToken) Reset() {
	*x = JwtToken{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JwtToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtToken) ProtoMessage() {}

func (x *JwtToken) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtToken.ProtoReflect.Descriptor instead.
func (*JwtToken) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{1}
}

func (x *JwtToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *JwtToken) GetType() TokenType {
	if x != nil {
		return x.Type
	}
	return TokenType_TOKEN_TYPE_UNSPECIFIED
}

func (x *JwtToken) GetClaims() *JwtClaims {
	if x != nil {
		return x.Claims
	}
	return nil
}

func (x *JwtToken) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *JwtToken) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

// JWT生成リクエスト
type GenerateJwtRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// トークンタイプ
	TokenType TokenType `protobuf:"varint,2,opt,name=token_type,json=tokenType,proto3,enum=avion.auth.v1.TokenType" json:"token_type,omitempty"`
	// スコープ（権限）
	Scopes []string `protobuf:"bytes,3,rep,name=scopes,proto3" json:"scopes,omitempty"`
	// カスタムクレーム
	CustomClaims map[string]string `protobuf:"bytes,4,rep,name=custom_claims,json=customClaims,proto3" json:"custom_claims,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 有効期限（秒）
	ExpiresIn int32 `protobuf:"varint,5,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	// オーディエンス
	Audience      []string `protobuf:"bytes,6,rep,name=audience,proto3" json:"audience,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateJwtRequest) Reset() {
	*x = GenerateJwtRequest{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateJwtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateJwtRequest) ProtoMessage() {}

func (x *GenerateJwtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateJwtRequest.ProtoReflect.Descriptor instead.
func (*GenerateJwtRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{2}
}

func (x *GenerateJwtRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GenerateJwtRequest) GetTokenType() TokenType {
	if x != nil {
		return x.TokenType
	}
	return TokenType_TOKEN_TYPE_UNSPECIFIED
}

func (x *GenerateJwtRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *GenerateJwtRequest) GetCustomClaims() map[string]string {
	if x != nil {
		return x.CustomClaims
	}
	return nil
}

func (x *GenerateJwtRequest) GetExpiresIn() int32 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *GenerateJwtRequest) GetAudience() []string {
	if x != nil {
		return x.Audience
	}
	return nil
}

// JWT生成レスポンス
type GenerateJwtResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 生成されたトークン
	Token *JwtToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// トークンの有効期限
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateJwtResponse) Reset() {
	*x = GenerateJwtResponse{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateJwtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateJwtResponse) ProtoMessage() {}

func (x *GenerateJwtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateJwtResponse.ProtoReflect.Descriptor instead.
func (*GenerateJwtResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{3}
}

func (x *GenerateJwtResponse) GetToken() *JwtToken {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *GenerateJwtResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// JWT検証リクエスト
type VerifyJwtRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 検証するトークン
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// 期待するトークンタイプ（オプション）
	ExpectedType TokenType `protobuf:"varint,2,opt,name=expected_type,json=expectedType,proto3,enum=avion.auth.v1.TokenType" json:"expected_type,omitempty"`
	// 期待するオーディエンス（オプション）
	ExpectedAudience []string `protobuf:"bytes,3,rep,name=expected_audience,json=expectedAudience,proto3" json:"expected_audience,omitempty"`
	// 期待する発行者（オプション）
	ExpectedIssuer string `protobuf:"bytes,4,opt,name=expected_issuer,json=expectedIssuer,proto3" json:"expected_issuer,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VerifyJwtRequest) Reset() {
	*x = VerifyJwtRequest{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyJwtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyJwtRequest) ProtoMessage() {}

func (x *VerifyJwtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyJwtRequest.ProtoReflect.Descriptor instead.
func (*VerifyJwtRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{4}
}

func (x *VerifyJwtRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VerifyJwtRequest) GetExpectedType() TokenType {
	if x != nil {
		return x.ExpectedType
	}
	return TokenType_TOKEN_TYPE_UNSPECIFIED
}

func (x *VerifyJwtRequest) GetExpectedAudience() []string {
	if x != nil {
		return x.ExpectedAudience
	}
	return nil
}

func (x *VerifyJwtRequest) GetExpectedIssuer() string {
	if x != nil {
		return x.ExpectedIssuer
	}
	return ""
}

// JWT検証レスポンス
type VerifyJwtResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 検証結果
	IsValid bool `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	// トークン情報（有効な場合）
	TokenInfo *JwtToken `protobuf:"bytes,2,opt,name=token_info,json=tokenInfo,proto3" json:"token_info,omitempty"`
	// エラーメッセージ（無効な場合）
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// エラーコード（無効な場合）
	ErrorCode     JwtVerificationError `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3,enum=avion.auth.v1.JwtVerificationError" json:"error_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyJwtResponse) Reset() {
	*x = VerifyJwtResponse{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyJwtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyJwtResponse) ProtoMessage() {}

func (x *VerifyJwtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyJwtResponse.ProtoReflect.Descriptor instead.
func (*VerifyJwtResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{5}
}

func (x *VerifyJwtResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *VerifyJwtResponse) GetTokenInfo() *JwtToken {
	if x != nil {
		return x.TokenInfo
	}
	return nil
}

func (x *VerifyJwtResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *VerifyJwtResponse) GetErrorCode() JwtVerificationError {
	if x != nil {
		return x.ErrorCode
	}
	return JwtVerificationError_JWT_VERIFICATION_ERROR_UNSPECIFIED
}

// JWTリフレッシュリクエスト
type RefreshJwtRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// リフレッシュトークン
	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// 新しいスコープ（オプション、元のスコープ以下である必要がある）
	Scopes        []string `protobuf:"bytes,2,rep,name=scopes,proto3" json:"scopes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshJwtRequest) Reset() {
	*x = RefreshJwtRequest{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshJwtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshJwtRequest) ProtoMessage() {}

func (x *RefreshJwtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshJwtRequest.ProtoReflect.Descriptor instead.
func (*RefreshJwtRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{6}
}

func (x *RefreshJwtRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *RefreshJwtRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

// JWTリフレッシュレスポンス
type RefreshJwtResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 新しいアクセストークン
	AccessToken *JwtToken `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// 新しいリフレッシュトークン（ローテーションする場合）
	RefreshToken *JwtToken `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// アクセストークンの有効期限
	AccessTokenExpiresAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=access_token_expires_at,json=accessTokenExpiresAt,proto3" json:"access_token_expires_at,omitempty"`
	// リフレッシュトークンの有効期限
	RefreshTokenExpiresAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=refresh_token_expires_at,json=refreshTokenExpiresAt,proto3" json:"refresh_token_expires_at,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RefreshJwtResponse) Reset() {
	*x = RefreshJwtResponse{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshJwtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshJwtResponse) ProtoMessage() {}

func (x *RefreshJwtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshJwtResponse.ProtoReflect.Descriptor instead.
func (*RefreshJwtResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{7}
}

func (x *RefreshJwtResponse) GetAccessToken() *JwtToken {
	if x != nil {
		return x.AccessToken
	}
	return nil
}

func (x *RefreshJwtResponse) GetRefreshToken() *JwtToken {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

func (x *RefreshJwtResponse) GetAccessTokenExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AccessTokenExpiresAt
	}
	return nil
}

func (x *RefreshJwtResponse) GetRefreshTokenExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RefreshTokenExpiresAt
	}
	return nil
}

// JWT失効リクエスト
type RevokeJwtRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 失効させるトークン
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// トークンタイプ
	TokenType TokenType `protobuf:"varint,2,opt,name=token_type,json=tokenType,proto3,enum=avion.auth.v1.TokenType" json:"token_type,omitempty"`
	// 全トークンを失効させる（ユーザーの全セッション終了）
	RevokeAll     bool `protobuf:"varint,3,opt,name=revoke_all,json=revokeAll,proto3" json:"revoke_all,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeJwtRequest) Reset() {
	*x = RevokeJwtRequest{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeJwtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeJwtRequest) ProtoMessage() {}

func (x *RevokeJwtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeJwtRequest.ProtoReflect.Descriptor instead.
func (*RevokeJwtRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{8}
}

func (x *RevokeJwtRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RevokeJwtRequest) GetTokenType() TokenType {
	if x != nil {
		return x.TokenType
	}
	return TokenType_TOKEN_TYPE_UNSPECIFIED
}

func (x *RevokeJwtRequest) GetRevokeAll() bool {
	if x != nil {
		return x.RevokeAll
	}
	return false
}

// JWT失効レスポンス
type RevokeJwtResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 失効成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 失効したトークン数
	RevokedCount  int32 `protobuf:"varint,2,opt,name=revoked_count,json=revokedCount,proto3" json:"revoked_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeJwtResponse) Reset() {
	*x = RevokeJwtResponse{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeJwtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeJwtResponse) ProtoMessage() {}

func (x *RevokeJwtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeJwtResponse.ProtoReflect.Descriptor instead.
func (*RevokeJwtResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{9}
}

func (x *RevokeJwtResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RevokeJwtResponse) GetRevokedCount() int32 {
	if x != nil {
		return x.RevokedCount
	}
	return 0
}

// JWTイントロスペクションリクエスト（RFC 7662準拠）
type IntrospectJwtRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// イントロスペクション対象のトークン
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// トークンタイプヒント（オプション）
	TokenTypeHint string `protobuf:"bytes,2,opt,name=token_type_hint,json=tokenTypeHint,proto3" json:"token_type_hint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntrospectJwtRequest) Reset() {
	*x = IntrospectJwtRequest{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntrospectJwtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectJwtRequest) ProtoMessage() {}

func (x *IntrospectJwtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectJwtRequest.ProtoReflect.Descriptor instead.
func (*IntrospectJwtRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{10}
}

func (x *IntrospectJwtRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *IntrospectJwtRequest) GetTokenTypeHint() string {
	if x != nil {
		return x.TokenTypeHint
	}
	return ""
}

// JWTイントロスペクションレスポンス（RFC 7662準拠）
type IntrospectJwtResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// トークンがアクティブかどうか
	Active bool `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	// スコープ
	Scope string `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	// クライアントID
	ClientId string `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// ユーザー名
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	// トークンタイプ
	TokenType string `protobuf:"bytes,5,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	// 有効期限
	Exp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=exp,proto3" json:"exp,omitempty"`
	// 発行時刻
	Iat *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=iat,proto3" json:"iat,omitempty"`
	// 有効開始時刻
	Nbf *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=nbf,proto3" json:"nbf,omitempty"`
	// サブジェクト
	Sub string `protobuf:"bytes,9,opt,name=sub,proto3" json:"sub,omitempty"`
	// オーディエンス
	Aud []string `protobuf:"bytes,10,rep,name=aud,proto3" json:"aud,omitempty"`
	// 発行者
	Iss string `protobuf:"bytes,11,opt,name=iss,proto3" json:"iss,omitempty"`
	// JWT ID
	Jti string `protobuf:"bytes,12,opt,name=jti,proto3" json:"jti,omitempty"`
	// 追加情報
	Extra         *structpb.Struct `protobuf:"bytes,13,opt,name=extra,proto3" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntrospectJwtResponse) Reset() {
	*x = IntrospectJwtResponse{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntrospectJwtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectJwtResponse) ProtoMessage() {}

func (x *IntrospectJwtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectJwtResponse.ProtoReflect.Descriptor instead.
func (*IntrospectJwtResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{11}
}

func (x *IntrospectJwtResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *IntrospectJwtResponse) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *IntrospectJwtResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *IntrospectJwtResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *IntrospectJwtResponse) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *IntrospectJwtResponse) GetExp() *timestamppb.Timestamp {
	if x != nil {
		return x.Exp
	}
	return nil
}

func (x *IntrospectJwtResponse) GetIat() *timestamppb.Timestamp {
	if x != nil {
		return x.Iat
	}
	return nil
}

func (x *IntrospectJwtResponse) GetNbf() *timestamppb.Timestamp {
	if x != nil {
		return x.Nbf
	}
	return nil
}

func (x *IntrospectJwtResponse) GetSub() string {
	if x != nil {
		return x.Sub
	}
	return ""
}

func (x *IntrospectJwtResponse) GetAud() []string {
	if x != nil {
		return x.Aud
	}
	return nil
}

func (x *IntrospectJwtResponse) GetIss() string {
	if x != nil {
		return x.Iss
	}
	return ""
}

func (x *IntrospectJwtResponse) GetJti() string {
	if x != nil {
		return x.Jti
	}
	return ""
}

func (x *IntrospectJwtResponse) GetExtra() *structpb.Struct {
	if x != nil {
		return x.Extra
	}
	return nil
}

// JWT署名キー情報
type JwtSigningKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// キーID
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// アルゴリズム（RS256, HS256等）
	Algorithm string `protobuf:"bytes,2,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	// 公開鍵（RSA等の場合）
	PublicKey string `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// キーの用途（sig, enc）
	Use string `protobuf:"bytes,4,opt,name=use,proto3" json:"use,omitempty"`
	// キータイプ（RSA, EC等）
	KeyType string `protobuf:"bytes,5,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	// 作成日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 有効期限
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// アクティブフラグ
	IsActive      bool `protobuf:"varint,8,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JwtSigningKey) Reset() {
	*x = JwtSigningKey{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JwtSigningKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtSigningKey) ProtoMessage() {}

func (x *JwtSigningKey) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtSigningKey.ProtoReflect.Descriptor instead.
func (*JwtSigningKey) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{12}
}

func (x *JwtSigningKey) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *JwtSigningKey) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *JwtSigningKey) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *JwtSigningKey) GetUse() string {
	if x != nil {
		return x.Use
	}
	return ""
}

func (x *JwtSigningKey) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *JwtSigningKey) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *JwtSigningKey) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *JwtSigningKey) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

// JWKS（JSON Web Key Set）取得リクエスト
type GetJwksRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 特定のキーIDを指定（オプション）
	KeyId         string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJwksRequest) Reset() {
	*x = GetJwksRequest{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJwksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJwksRequest) ProtoMessage() {}

func (x *GetJwksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJwksRequest.ProtoReflect.Descriptor instead.
func (*GetJwksRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{13}
}

func (x *GetJwksRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

// JWKS（JSON Web Key Set）取得レスポンス
type GetJwksResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JWKSのJSON表現
	Keys          *structpb.Struct `protobuf:"bytes,1,opt,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJwksResponse) Reset() {
	*x = GetJwksResponse{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJwksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJwksResponse) ProtoMessage() {}

func (x *GetJwksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJwksResponse.ProtoReflect.Descriptor instead.
func (*GetJwksResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{14}
}

func (x *GetJwksResponse) GetKeys() *structpb.Struct {
	if x != nil {
		return x.Keys
	}
	return nil
}

// JWT設定取得リクエスト
type GetJwtConfigRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 設定名（オプション）
	ConfigName    string `protobuf:"bytes,1,opt,name=config_name,json=configName,proto3" json:"config_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJwtConfigRequest) Reset() {
	*x = GetJwtConfigRequest{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJwtConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJwtConfigRequest) ProtoMessage() {}

func (x *GetJwtConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJwtConfigRequest.ProtoReflect.Descriptor instead.
func (*GetJwtConfigRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{15}
}

func (x *GetJwtConfigRequest) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

// JWT設定取得レスポンス
type GetJwtConfigResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// アクセストークンの有効期限（秒）
	AccessTokenTtl int32 `protobuf:"varint,1,opt,name=access_token_ttl,json=accessTokenTtl,proto3" json:"access_token_ttl,omitempty"`
	// リフレッシュトークンの有効期限（秒）
	RefreshTokenTtl int32 `protobuf:"varint,2,opt,name=refresh_token_ttl,json=refreshTokenTtl,proto3" json:"refresh_token_ttl,omitempty"`
	// IDトークンの有効期限（秒）
	IdTokenTtl int32 `protobuf:"varint,3,opt,name=id_token_ttl,json=idTokenTtl,proto3" json:"id_token_ttl,omitempty"`
	// 署名アルゴリズム
	SigningAlgorithm string `protobuf:"bytes,4,opt,name=signing_algorithm,json=signingAlgorithm,proto3" json:"signing_algorithm,omitempty"`
	// 発行者
	Issuer string `protobuf:"bytes,5,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// デフォルトオーディエンス
	DefaultAudience []string `protobuf:"bytes,6,rep,name=default_audience,json=defaultAudience,proto3" json:"default_audience,omitempty"`
	// リフレッシュトークンのローテーション有効フラグ
	RefreshTokenRotation bool `protobuf:"varint,7,opt,name=refresh_token_rotation,json=refreshTokenRotation,proto3" json:"refresh_token_rotation,omitempty"`
	// JTI（JWT ID）の使用フラグ
	UseJti bool `protobuf:"varint,8,opt,name=use_jti,json=useJti,proto3" json:"use_jti,omitempty"`
	// クロックスキュー（秒）
	ClockSkew     int32 `protobuf:"varint,9,opt,name=clock_skew,json=clockSkew,proto3" json:"clock_skew,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJwtConfigResponse) Reset() {
	*x = GetJwtConfigResponse{}
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJwtConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJwtConfigResponse) ProtoMessage() {}

func (x *GetJwtConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_jwt_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJwtConfigResponse.ProtoReflect.Descriptor instead.
func (*GetJwtConfigResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_jwt_proto_rawDescGZIP(), []int{16}
}

func (x *GetJwtConfigResponse) GetAccessTokenTtl() int32 {
	if x != nil {
		return x.AccessTokenTtl
	}
	return 0
}

func (x *GetJwtConfigResponse) GetRefreshTokenTtl() int32 {
	if x != nil {
		return x.RefreshTokenTtl
	}
	return 0
}

func (x *GetJwtConfigResponse) GetIdTokenTtl() int32 {
	if x != nil {
		return x.IdTokenTtl
	}
	return 0
}

func (x *GetJwtConfigResponse) GetSigningAlgorithm() string {
	if x != nil {
		return x.SigningAlgorithm
	}
	return ""
}

func (x *GetJwtConfigResponse) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *GetJwtConfigResponse) GetDefaultAudience() []string {
	if x != nil {
		return x.DefaultAudience
	}
	return nil
}

func (x *GetJwtConfigResponse) GetRefreshTokenRotation() bool {
	if x != nil {
		return x.RefreshTokenRotation
	}
	return false
}

func (x *GetJwtConfigResponse) GetUseJti() bool {
	if x != nil {
		return x.UseJti
	}
	return false
}

func (x *GetJwtConfigResponse) GetClockSkew() int32 {
	if x != nil {
		return x.ClockSkew
	}
	return 0
}

var File_avion_auth_v1_jwt_proto protoreflect.FileDescriptor

const file_avion_auth_v1_jwt_proto_rawDesc = "" +
	"\n" +
	"\x17avion/auth/v1/jwt.proto\x12\ravion.auth.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xb2\x03\n" +
	"\tJwtClaims\x12\x16\n" +
	"\x06issuer\x18\x01 \x01(\tR\x06issuer\x12\x18\n" +
	"\asubject\x18\x02 \x01(\tR\asubject\x12\x1a\n" +
	"\baudience\x18\x03 \x03(\tR\baudience\x12:\n" +
	"\n" +
	"expiration\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"expiration\x129\n" +
	"\n" +
	"not_before\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tnotBefore\x127\n" +
	"\tissued_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\bissuedAt\x12\x15\n" +
	"\x06jwt_id\x18\a \x01(\tR\x05jwtId\x12O\n" +
	"\rcustom_claims\x18\b \x03(\v2*.avion.auth.v1.JwtClaims.CustomClaimsEntryR\fcustomClaims\x1a?\n" +
	"\x11CustomClaimsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb5\x01\n" +
	"\bJwtToken\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12,\n" +
	"\x04type\x18\x02 \x01(\x0e2\x18.avion.auth.v1.TokenTypeR\x04type\x120\n" +
	"\x06claims\x18\x03 \x01(\v2\x18.avion.auth.v1.JwtClaimsR\x06claims\x12\x1c\n" +
	"\talgorithm\x18\x04 \x01(\tR\talgorithm\x12\x15\n" +
	"\x06key_id\x18\x05 \x01(\tR\x05keyId\"\xd4\x02\n" +
	"\x12GenerateJwtRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x127\n" +
	"\n" +
	"token_type\x18\x02 \x01(\x0e2\x18.avion.auth.v1.TokenTypeR\ttokenType\x12\x16\n" +
	"\x06scopes\x18\x03 \x03(\tR\x06scopes\x12X\n" +
	"\rcustom_claims\x18\x04 \x03(\v23.avion.auth.v1.GenerateJwtRequest.CustomClaimsEntryR\fcustomClaims\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x05 \x01(\x05R\texpiresIn\x12\x1a\n" +
	"\baudience\x18\x06 \x03(\tR\baudience\x1a?\n" +
	"\x11CustomClaimsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x7f\n" +
	"\x13GenerateJwtResponse\x12-\n" +
	"\x05token\x18\x01 \x01(\v2\x17.avion.auth.v1.JwtTokenR\x05token\x129\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"\xbd\x01\n" +
	"\x10VerifyJwtRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12=\n" +
	"\rexpected_type\x18\x02 \x01(\x0e2\x18.avion.auth.v1.TokenTypeR\fexpectedType\x12+\n" +
	"\x11expected_audience\x18\x03 \x03(\tR\x10expectedAudience\x12'\n" +
	"\x0fexpected_issuer\x18\x04 \x01(\tR\x0eexpectedIssuer\"\xcf\x01\n" +
	"\x11VerifyJwtResponse\x12\x19\n" +
	"\bis_valid\x18\x01 \x01(\bR\aisValid\x126\n" +
	"\n" +
	"token_info\x18\x02 \x01(\v2\x17.avion.auth.v1.JwtTokenR\ttokenInfo\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12B\n" +
	"\n" +
	"error_code\x18\x04 \x01(\x0e2#.avion.auth.v1.JwtVerificationErrorR\terrorCode\"P\n" +
	"\x11RefreshJwtRequest\x12#\n" +
	"\rrefresh_token\x18\x01 \x01(\tR\frefreshToken\x12\x16\n" +
	"\x06scopes\x18\x02 \x03(\tR\x06scopes\"\xb6\x02\n" +
	"\x12RefreshJwtResponse\x12:\n" +
	"\faccess_token\x18\x01 \x01(\v2\x17.avion.auth.v1.JwtTokenR\vaccessToken\x12<\n" +
	"\rrefresh_token\x18\x02 \x01(\v2\x17.avion.auth.v1.JwtTokenR\frefreshToken\x12Q\n" +
	"\x17access_token_expires_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x14accessTokenExpiresAt\x12S\n" +
	"\x18refresh_token_expires_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x15refreshTokenExpiresAt\"\x80\x01\n" +
	"\x10RevokeJwtRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x127\n" +
	"\n" +
	"token_type\x18\x02 \x01(\x0e2\x18.avion.auth.v1.TokenTypeR\ttokenType\x12\x1d\n" +
	"\n" +
	"revoke_all\x18\x03 \x01(\bR\trevokeAll\"R\n" +
	"\x11RevokeJwtResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rrevoked_count\x18\x02 \x01(\x05R\frevokedCount\"T\n" +
	"\x14IntrospectJwtRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12&\n" +
	"\x0ftoken_type_hint\x18\x02 \x01(\tR\rtokenTypeHint\"\x9e\x03\n" +
	"\x15IntrospectJwtResponse\x12\x16\n" +
	"\x06active\x18\x01 \x01(\bR\x06active\x12\x14\n" +
	"\x05scope\x18\x02 \x01(\tR\x05scope\x12\x1b\n" +
	"\tclient_id\x18\x03 \x01(\tR\bclientId\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x12\x1d\n" +
	"\n" +
	"token_type\x18\x05 \x01(\tR\ttokenType\x12,\n" +
	"\x03exp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x03exp\x12,\n" +
	"\x03iat\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x03iat\x12,\n" +
	"\x03nbf\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x03nbf\x12\x10\n" +
	"\x03sub\x18\t \x01(\tR\x03sub\x12\x10\n" +
	"\x03aud\x18\n" +
	" \x03(\tR\x03aud\x12\x10\n" +
	"\x03iss\x18\v \x01(\tR\x03iss\x12\x10\n" +
	"\x03jti\x18\f \x01(\tR\x03jti\x12-\n" +
	"\x05extra\x18\r \x01(\v2\x17.google.protobuf.StructR\x05extra\"\xa3\x02\n" +
	"\rJwtSigningKey\x12\x15\n" +
	"\x06key_id\x18\x01 \x01(\tR\x05keyId\x12\x1c\n" +
	"\talgorithm\x18\x02 \x01(\tR\talgorithm\x12\x1d\n" +
	"\n" +
	"public_key\x18\x03 \x01(\tR\tpublicKey\x12\x10\n" +
	"\x03use\x18\x04 \x01(\tR\x03use\x12\x19\n" +
	"\bkey_type\x18\x05 \x01(\tR\akeyType\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"expires_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12\x1b\n" +
	"\tis_active\x18\b \x01(\bR\bisActive\"'\n" +
	"\x0eGetJwksRequest\x12\x15\n" +
	"\x06key_id\x18\x01 \x01(\tR\x05keyId\">\n" +
	"\x0fGetJwksResponse\x12+\n" +
	"\x04keys\x18\x01 \x01(\v2\x17.google.protobuf.StructR\x04keys\"6\n" +
	"\x13GetJwtConfigRequest\x12\x1f\n" +
	"\vconfig_name\x18\x01 \x01(\tR\n" +
	"configName\"\xec\x02\n" +
	"\x14GetJwtConfigResponse\x12(\n" +
	"\x10access_token_ttl\x18\x01 \x01(\x05R\x0eaccessTokenTtl\x12*\n" +
	"\x11refresh_token_ttl\x18\x02 \x01(\x05R\x0frefreshTokenTtl\x12 \n" +
	"\fid_token_ttl\x18\x03 \x01(\x05R\n" +
	"idTokenTtl\x12+\n" +
	"\x11signing_algorithm\x18\x04 \x01(\tR\x10signingAlgorithm\x12\x16\n" +
	"\x06issuer\x18\x05 \x01(\tR\x06issuer\x12)\n" +
	"\x10default_audience\x18\x06 \x03(\tR\x0fdefaultAudience\x124\n" +
	"\x16refresh_token_rotation\x18\a \x01(\bR\x14refreshTokenRotation\x12\x17\n" +
	"\ause_jti\x18\b \x01(\bR\x06useJti\x12\x1d\n" +
	"\n" +
	"clock_skew\x18\t \x01(\x05R\tclockSkew*i\n" +
	"\tTokenType\x12\x1a\n" +
	"\x16TOKEN_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11TOKEN_TYPE_ACCESS\x10\x01\x12\x16\n" +
	"\x12TOKEN_TYPE_REFRESH\x10\x02\x12\x11\n" +
	"\rTOKEN_TYPE_ID\x10\x03*\x8c\x03\n" +
	"\x14JwtVerificationError\x12&\n" +
	"\"JWT_VERIFICATION_ERROR_UNSPECIFIED\x10\x00\x12,\n" +
	"(JWT_VERIFICATION_ERROR_INVALID_SIGNATURE\x10\x01\x12\"\n" +
	"\x1eJWT_VERIFICATION_ERROR_EXPIRED\x10\x02\x12(\n" +
	"$JWT_VERIFICATION_ERROR_NOT_YET_VALID\x10\x03\x12)\n" +
	"%JWT_VERIFICATION_ERROR_INVALID_ISSUER\x10\x04\x12+\n" +
	"'JWT_VERIFICATION_ERROR_INVALID_AUDIENCE\x10\x05\x12)\n" +
	"%JWT_VERIFICATION_ERROR_INVALID_FORMAT\x10\x06\x12)\n" +
	"%JWT_VERIFICATION_ERROR_INVALID_KEY_ID\x10\a\x12\"\n" +
	"\x1eJWT_VERIFICATION_ERROR_REVOKED\x10\bB\xa8\x01\n" +
	"\x11com.avion.auth.v1B\bJwtProtoP\x01Z3github.com/na2na-p/avion/proto/avion/auth/v1;authv1\xa2\x02\x03AAX\xaa\x02\rAvion.Auth.V1\xca\x02\rAvion\\Auth\\V1\xe2\x02\x19Avion\\Auth\\V1\\GPBMetadata\xea\x02\x0fAvion::Auth::V1b\x06proto3"

var (
	file_avion_auth_v1_jwt_proto_rawDescOnce sync.Once
	file_avion_auth_v1_jwt_proto_rawDescData []byte
)

func file_avion_auth_v1_jwt_proto_rawDescGZIP() []byte {
	file_avion_auth_v1_jwt_proto_rawDescOnce.Do(func() {
		file_avion_auth_v1_jwt_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_avion_auth_v1_jwt_proto_rawDesc), len(file_avion_auth_v1_jwt_proto_rawDesc)))
	})
	return file_avion_auth_v1_jwt_proto_rawDescData
}

var file_avion_auth_v1_jwt_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_avion_auth_v1_jwt_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_avion_auth_v1_jwt_proto_goTypes = []any{
	(TokenType)(0),                // 0: avion.auth.v1.TokenType
	(JwtVerificationError)(0),     // 1: avion.auth.v1.JwtVerificationError
	(*JwtClaims)(nil),             // 2: avion.auth.v1.JwtClaims
	(*JwtToken)(nil),              // 3: avion.auth.v1.JwtToken
	(*GenerateJwtRequest)(nil),    // 4: avion.auth.v1.GenerateJwtRequest
	(*GenerateJwtResponse)(nil),   // 5: avion.auth.v1.GenerateJwtResponse
	(*VerifyJwtRequest)(nil),      // 6: avion.auth.v1.VerifyJwtRequest
	(*VerifyJwtResponse)(nil),     // 7: avion.auth.v1.VerifyJwtResponse
	(*RefreshJwtRequest)(nil),     // 8: avion.auth.v1.RefreshJwtRequest
	(*RefreshJwtResponse)(nil),    // 9: avion.auth.v1.RefreshJwtResponse
	(*RevokeJwtRequest)(nil),      // 10: avion.auth.v1.RevokeJwtRequest
	(*RevokeJwtResponse)(nil),     // 11: avion.auth.v1.RevokeJwtResponse
	(*IntrospectJwtRequest)(nil),  // 12: avion.auth.v1.IntrospectJwtRequest
	(*IntrospectJwtResponse)(nil), // 13: avion.auth.v1.IntrospectJwtResponse
	(*JwtSigningKey)(nil),         // 14: avion.auth.v1.JwtSigningKey
	(*GetJwksRequest)(nil),        // 15: avion.auth.v1.GetJwksRequest
	(*GetJwksResponse)(nil),       // 16: avion.auth.v1.GetJwksResponse
	(*GetJwtConfigRequest)(nil),   // 17: avion.auth.v1.GetJwtConfigRequest
	(*GetJwtConfigResponse)(nil),  // 18: avion.auth.v1.GetJwtConfigResponse
	nil,                           // 19: avion.auth.v1.JwtClaims.CustomClaimsEntry
	nil,                           // 20: avion.auth.v1.GenerateJwtRequest.CustomClaimsEntry
	(*timestamppb.Timestamp)(nil), // 21: google.protobuf.Timestamp
	(*structpb.Struct)(nil),       // 22: google.protobuf.Struct
}
var file_avion_auth_v1_jwt_proto_depIdxs = []int32{
	21, // 0: avion.auth.v1.JwtClaims.expiration:type_name -> google.protobuf.Timestamp
	21, // 1: avion.auth.v1.JwtClaims.not_before:type_name -> google.protobuf.Timestamp
	21, // 2: avion.auth.v1.JwtClaims.issued_at:type_name -> google.protobuf.Timestamp
	19, // 3: avion.auth.v1.JwtClaims.custom_claims:type_name -> avion.auth.v1.JwtClaims.CustomClaimsEntry
	0,  // 4: avion.auth.v1.JwtToken.type:type_name -> avion.auth.v1.TokenType
	2,  // 5: avion.auth.v1.JwtToken.claims:type_name -> avion.auth.v1.JwtClaims
	0,  // 6: avion.auth.v1.GenerateJwtRequest.token_type:type_name -> avion.auth.v1.TokenType
	20, // 7: avion.auth.v1.GenerateJwtRequest.custom_claims:type_name -> avion.auth.v1.GenerateJwtRequest.CustomClaimsEntry
	3,  // 8: avion.auth.v1.GenerateJwtResponse.token:type_name -> avion.auth.v1.JwtToken
	21, // 9: avion.auth.v1.GenerateJwtResponse.expires_at:type_name -> google.protobuf.Timestamp
	0,  // 10: avion.auth.v1.VerifyJwtRequest.expected_type:type_name -> avion.auth.v1.TokenType
	3,  // 11: avion.auth.v1.VerifyJwtResponse.token_info:type_name -> avion.auth.v1.JwtToken
	1,  // 12: avion.auth.v1.VerifyJwtResponse.error_code:type_name -> avion.auth.v1.JwtVerificationError
	3,  // 13: avion.auth.v1.RefreshJwtResponse.access_token:type_name -> avion.auth.v1.JwtToken
	3,  // 14: avion.auth.v1.RefreshJwtResponse.refresh_token:type_name -> avion.auth.v1.JwtToken
	21, // 15: avion.auth.v1.RefreshJwtResponse.access_token_expires_at:type_name -> google.protobuf.Timestamp
	21, // 16: avion.auth.v1.RefreshJwtResponse.refresh_token_expires_at:type_name -> google.protobuf.Timestamp
	0,  // 17: avion.auth.v1.RevokeJwtRequest.token_type:type_name -> avion.auth.v1.TokenType
	21, // 18: avion.auth.v1.IntrospectJwtResponse.exp:type_name -> google.protobuf.Timestamp
	21, // 19: avion.auth.v1.IntrospectJwtResponse.iat:type_name -> google.protobuf.Timestamp
	21, // 20: avion.auth.v1.IntrospectJwtResponse.nbf:type_name -> google.protobuf.Timestamp
	22, // 21: avion.auth.v1.IntrospectJwtResponse.extra:type_name -> google.protobuf.Struct
	21, // 22: avion.auth.v1.JwtSigningKey.created_at:type_name -> google.protobuf.Timestamp
	21, // 23: avion.auth.v1.JwtSigningKey.expires_at:type_name -> google.protobuf.Timestamp
	22, // 24: avion.auth.v1.GetJwksResponse.keys:type_name -> google.protobuf.Struct
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_avion_auth_v1_jwt_proto_init() }
func file_avion_auth_v1_jwt_proto_init() {
	if File_avion_auth_v1_jwt_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_avion_auth_v1_jwt_proto_rawDesc), len(file_avion_auth_v1_jwt_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_avion_auth_v1_jwt_proto_goTypes,
		DependencyIndexes: file_avion_auth_v1_jwt_proto_depIdxs,
		EnumInfos:         file_avion_auth_v1_jwt_proto_enumTypes,
		MessageInfos:      file_avion_auth_v1_jwt_proto_msgTypes,
	}.Build()
	File_avion_auth_v1_jwt_proto = out.File
	file_avion_auth_v1_jwt_proto_goTypes = nil
	file_avion_auth_v1_jwt_proto_depIdxs = nil
}
