// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: avion/auth/v1/policy.proto

package authv1

import (
	v1 "github.com/na2na-p/avion/proto/avion/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ポリシーの効果を表す列挙型
type PolicyEffect int32

const (
	// 未指定
	PolicyEffect_POLICY_EFFECT_UNSPECIFIED PolicyEffect = 0
	// 許可
	PolicyEffect_POLICY_EFFECT_ALLOW PolicyEffect = 1
	// 拒否
	PolicyEffect_POLICY_EFFECT_DENY PolicyEffect = 2
)

// Enum value maps for PolicyEffect.
var (
	PolicyEffect_name = map[int32]string{
		0: "POLICY_EFFECT_UNSPECIFIED",
		1: "POLICY_EFFECT_ALLOW",
		2: "POLICY_EFFECT_DENY",
	}
	PolicyEffect_value = map[string]int32{
		"POLICY_EFFECT_UNSPECIFIED": 0,
		"POLICY_EFFECT_ALLOW":       1,
		"POLICY_EFFECT_DENY":        2,
	}
)

func (x PolicyEffect) Enum() *PolicyEffect {
	p := new(PolicyEffect)
	*p = x
	return p
}

func (x PolicyEffect) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PolicyEffect) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_auth_v1_policy_proto_enumTypes[0].Descriptor()
}

func (PolicyEffect) Type() protoreflect.EnumType {
	return &file_avion_auth_v1_policy_proto_enumTypes[0]
}

func (x PolicyEffect) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PolicyEffect.Descriptor instead.
func (PolicyEffect) EnumDescriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{0}
}

// ポリシーのアクションを表す列挙型
type PolicyAction int32

const (
	// 未指定
	PolicyAction_POLICY_ACTION_UNSPECIFIED PolicyAction = 0
	// 読み取り
	PolicyAction_POLICY_ACTION_READ PolicyAction = 1
	// 書き込み
	PolicyAction_POLICY_ACTION_WRITE PolicyAction = 2
	// 削除
	PolicyAction_POLICY_ACTION_DELETE PolicyAction = 3
	// 実行
	PolicyAction_POLICY_ACTION_EXECUTE PolicyAction = 4
)

// Enum value maps for PolicyAction.
var (
	PolicyAction_name = map[int32]string{
		0: "POLICY_ACTION_UNSPECIFIED",
		1: "POLICY_ACTION_READ",
		2: "POLICY_ACTION_WRITE",
		3: "POLICY_ACTION_DELETE",
		4: "POLICY_ACTION_EXECUTE",
	}
	PolicyAction_value = map[string]int32{
		"POLICY_ACTION_UNSPECIFIED": 0,
		"POLICY_ACTION_READ":        1,
		"POLICY_ACTION_WRITE":       2,
		"POLICY_ACTION_DELETE":      3,
		"POLICY_ACTION_EXECUTE":     4,
	}
)

func (x PolicyAction) Enum() *PolicyAction {
	p := new(PolicyAction)
	*p = x
	return p
}

func (x PolicyAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PolicyAction) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_auth_v1_policy_proto_enumTypes[1].Descriptor()
}

func (PolicyAction) Type() protoreflect.EnumType {
	return &file_avion_auth_v1_policy_proto_enumTypes[1]
}

func (x PolicyAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PolicyAction.Descriptor instead.
func (PolicyAction) EnumDescriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{1}
}

// ポリシールールを表すメッセージ
type PolicyRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// リソース識別子（例: "drops:*", "users:123", "timeline:read"）
	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	// アクション
	Action PolicyAction `protobuf:"varint,2,opt,name=action,proto3,enum=avion.auth.v1.PolicyAction" json:"action,omitempty"`
	// 効果（許可または拒否）
	Effect PolicyEffect `protobuf:"varint,3,opt,name=effect,proto3,enum=avion.auth.v1.PolicyEffect" json:"effect,omitempty"`
	// 条件（オプション、JSON形式の条件式）
	Conditions    string `protobuf:"bytes,4,opt,name=conditions,proto3" json:"conditions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolicyRule) Reset() {
	*x = PolicyRule{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyRule) ProtoMessage() {}

func (x *PolicyRule) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyRule.ProtoReflect.Descriptor instead.
func (*PolicyRule) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{0}
}

func (x *PolicyRule) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *PolicyRule) GetAction() PolicyAction {
	if x != nil {
		return x.Action
	}
	return PolicyAction_POLICY_ACTION_UNSPECIFIED
}

func (x *PolicyRule) GetEffect() PolicyEffect {
	if x != nil {
		return x.Effect
	}
	return PolicyEffect_POLICY_EFFECT_UNSPECIFIED
}

func (x *PolicyRule) GetConditions() string {
	if x != nil {
		return x.Conditions
	}
	return ""
}

// ポリシーを表すメッセージ
type Policy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ポリシーID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ポリシー名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// ポリシーの説明
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// ポリシールールのリスト
	Rules []*PolicyRule `protobuf:"bytes,4,rep,name=rules,proto3" json:"rules,omitempty"`
	// 作成日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新日時
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// 有効/無効フラグ
	IsActive bool `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// バージョン番号（楽観的ロック用）
	Version       int32 `protobuf:"varint,8,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Policy) Reset() {
	*x = Policy{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{1}
}

func (x *Policy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Policy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Policy) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Policy) GetRules() []*PolicyRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *Policy) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Policy) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Policy) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Policy) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// ポリシー割り当てを表すメッセージ
type PolicyAssignment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 割り当てID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ポリシーID
	PolicyId string `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	// ユーザーID（user_idまたはgroup_idのいずれか一方が設定される）
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// グループID（user_idまたはgroup_idのいずれか一方が設定される）
	GroupId string `protobuf:"bytes,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// 割り当て日時
	AssignedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=assigned_at,json=assignedAt,proto3" json:"assigned_at,omitempty"`
	// 割り当てを行ったユーザーID
	AssignedBy string `protobuf:"bytes,6,opt,name=assigned_by,json=assignedBy,proto3" json:"assigned_by,omitempty"`
	// 有効期限（オプション）
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolicyAssignment) Reset() {
	*x = PolicyAssignment{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyAssignment) ProtoMessage() {}

func (x *PolicyAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyAssignment.ProtoReflect.Descriptor instead.
func (*PolicyAssignment) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{2}
}

func (x *PolicyAssignment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PolicyAssignment) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *PolicyAssignment) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PolicyAssignment) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *PolicyAssignment) GetAssignedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AssignedAt
	}
	return nil
}

func (x *PolicyAssignment) GetAssignedBy() string {
	if x != nil {
		return x.AssignedBy
	}
	return ""
}

func (x *PolicyAssignment) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// ポリシー評価リクエスト
type EvaluatePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// リソース識別子
	Resource string `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	// アクション
	Action PolicyAction `protobuf:"varint,3,opt,name=action,proto3,enum=avion.auth.v1.PolicyAction" json:"action,omitempty"`
	// コンテキスト情報（JSON形式）
	Context       string `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvaluatePolicyRequest) Reset() {
	*x = EvaluatePolicyRequest{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvaluatePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluatePolicyRequest) ProtoMessage() {}

func (x *EvaluatePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluatePolicyRequest.ProtoReflect.Descriptor instead.
func (*EvaluatePolicyRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{3}
}

func (x *EvaluatePolicyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EvaluatePolicyRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *EvaluatePolicyRequest) GetAction() PolicyAction {
	if x != nil {
		return x.Action
	}
	return PolicyAction_POLICY_ACTION_UNSPECIFIED
}

func (x *EvaluatePolicyRequest) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

// ポリシー評価レスポンス
type EvaluatePolicyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 評価結果
	Effect PolicyEffect `protobuf:"varint,1,opt,name=effect,proto3,enum=avion.auth.v1.PolicyEffect" json:"effect,omitempty"`
	// 適用されたポリシーID
	AppliedPolicyIds []string `protobuf:"bytes,2,rep,name=applied_policy_ids,json=appliedPolicyIds,proto3" json:"applied_policy_ids,omitempty"`
	// 評価理由
	Reason        string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvaluatePolicyResponse) Reset() {
	*x = EvaluatePolicyResponse{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvaluatePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluatePolicyResponse) ProtoMessage() {}

func (x *EvaluatePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluatePolicyResponse.ProtoReflect.Descriptor instead.
func (*EvaluatePolicyResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{4}
}

func (x *EvaluatePolicyResponse) GetEffect() PolicyEffect {
	if x != nil {
		return x.Effect
	}
	return PolicyEffect_POLICY_EFFECT_UNSPECIFIED
}

func (x *EvaluatePolicyResponse) GetAppliedPolicyIds() []string {
	if x != nil {
		return x.AppliedPolicyIds
	}
	return nil
}

func (x *EvaluatePolicyResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// ポリシー作成リクエスト
type CreatePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ポリシー名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// ポリシーの説明
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// ポリシールールのリスト
	Rules         []*PolicyRule `protobuf:"bytes,3,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePolicyRequest) Reset() {
	*x = CreatePolicyRequest{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePolicyRequest) ProtoMessage() {}

func (x *CreatePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePolicyRequest.ProtoReflect.Descriptor instead.
func (*CreatePolicyRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{5}
}

func (x *CreatePolicyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePolicyRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePolicyRequest) GetRules() []*PolicyRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

// ポリシー作成レスポンス
type CreatePolicyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 作成されたポリシー
	Policy        *Policy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePolicyResponse) Reset() {
	*x = CreatePolicyResponse{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePolicyResponse) ProtoMessage() {}

func (x *CreatePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePolicyResponse.ProtoReflect.Descriptor instead.
func (*CreatePolicyResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePolicyResponse) GetPolicy() *Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

// ポリシー更新リクエスト
type UpdatePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ポリシーID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ポリシー名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// ポリシーの説明
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// ポリシールールのリスト
	Rules []*PolicyRule `protobuf:"bytes,4,rep,name=rules,proto3" json:"rules,omitempty"`
	// バージョン番号（楽観的ロック用）
	Version       int32 `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePolicyRequest) Reset() {
	*x = UpdatePolicyRequest{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePolicyRequest) ProtoMessage() {}

func (x *UpdatePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdatePolicyRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePolicyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePolicyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePolicyRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdatePolicyRequest) GetRules() []*PolicyRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *UpdatePolicyRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// ポリシー更新レスポンス
type UpdatePolicyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新されたポリシー
	Policy        *Policy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePolicyResponse) Reset() {
	*x = UpdatePolicyResponse{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePolicyResponse) ProtoMessage() {}

func (x *UpdatePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePolicyResponse.ProtoReflect.Descriptor instead.
func (*UpdatePolicyResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{8}
}

func (x *UpdatePolicyResponse) GetPolicy() *Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

// ポリシー削除リクエスト
type DeletePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ポリシーID
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePolicyRequest) Reset() {
	*x = DeletePolicyRequest{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePolicyRequest) ProtoMessage() {}

func (x *DeletePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePolicyRequest.ProtoReflect.Descriptor instead.
func (*DeletePolicyRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePolicyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// ポリシー削除レスポンス
type DeletePolicyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 削除成功フラグ
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePolicyResponse) Reset() {
	*x = DeletePolicyResponse{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePolicyResponse) ProtoMessage() {}

func (x *DeletePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePolicyResponse.ProtoReflect.Descriptor instead.
func (*DeletePolicyResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{10}
}

func (x *DeletePolicyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// ポリシー取得リクエスト
type GetPolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ポリシーID
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPolicyRequest) Reset() {
	*x = GetPolicyRequest{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyRequest) ProtoMessage() {}

func (x *GetPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetPolicyRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{11}
}

func (x *GetPolicyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// ポリシー取得レスポンス
type GetPolicyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ポリシー
	Policy        *Policy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPolicyResponse) Reset() {
	*x = GetPolicyResponse{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyResponse) ProtoMessage() {}

func (x *GetPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetPolicyResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{12}
}

func (x *GetPolicyResponse) GetPolicy() *Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

// ポリシー一覧取得リクエスト
type ListPoliciesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ページネーション情報
	Pagination *v1.PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// アクティブなポリシーのみを取得
	ActiveOnly    bool `protobuf:"varint,2,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPoliciesRequest) Reset() {
	*x = ListPoliciesRequest{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesRequest) ProtoMessage() {}

func (x *ListPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesRequest.ProtoReflect.Descriptor instead.
func (*ListPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{13}
}

func (x *ListPoliciesRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListPoliciesRequest) GetActiveOnly() bool {
	if x != nil {
		return x.ActiveOnly
	}
	return false
}

// ポリシー一覧取得レスポンス
type ListPoliciesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ポリシーのリスト
	Policies []*Policy `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
	// ページネーション情報
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPoliciesResponse) Reset() {
	*x = ListPoliciesResponse{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesResponse) ProtoMessage() {}

func (x *ListPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesResponse.ProtoReflect.Descriptor instead.
func (*ListPoliciesResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{14}
}

func (x *ListPoliciesResponse) GetPolicies() []*Policy {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *ListPoliciesResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ポリシー割り当てリクエスト
type AssignPolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ポリシーID
	PolicyId string `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	// ユーザーID（user_idまたはgroup_idのいずれか一方を設定）
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// グループID（user_idまたはgroup_idのいずれか一方を設定）
	GroupId string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// 有効期限（オプション）
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignPolicyRequest) Reset() {
	*x = AssignPolicyRequest{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignPolicyRequest) ProtoMessage() {}

func (x *AssignPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignPolicyRequest.ProtoReflect.Descriptor instead.
func (*AssignPolicyRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{15}
}

func (x *AssignPolicyRequest) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *AssignPolicyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AssignPolicyRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *AssignPolicyRequest) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// ポリシー割り当てレスポンス
type AssignPolicyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 作成された割り当て
	Assignment    *PolicyAssignment `protobuf:"bytes,1,opt,name=assignment,proto3" json:"assignment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignPolicyResponse) Reset() {
	*x = AssignPolicyResponse{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignPolicyResponse) ProtoMessage() {}

func (x *AssignPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignPolicyResponse.ProtoReflect.Descriptor instead.
func (*AssignPolicyResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{16}
}

func (x *AssignPolicyResponse) GetAssignment() *PolicyAssignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

// ポリシー割り当て解除リクエスト
type UnassignPolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 割り当てID
	AssignmentId  string `protobuf:"bytes,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnassignPolicyRequest) Reset() {
	*x = UnassignPolicyRequest{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnassignPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignPolicyRequest) ProtoMessage() {}

func (x *UnassignPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignPolicyRequest.ProtoReflect.Descriptor instead.
func (*UnassignPolicyRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{17}
}

func (x *UnassignPolicyRequest) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

// ポリシー割り当て解除レスポンス
type UnassignPolicyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 解除成功フラグ
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnassignPolicyResponse) Reset() {
	*x = UnassignPolicyResponse{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnassignPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignPolicyResponse) ProtoMessage() {}

func (x *UnassignPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignPolicyResponse.ProtoReflect.Descriptor instead.
func (*UnassignPolicyResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{18}
}

func (x *UnassignPolicyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// ユーザーのポリシー一覧取得リクエスト
type ListUserPoliciesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ページネーション情報
	Pagination    *v1.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserPoliciesRequest) Reset() {
	*x = ListUserPoliciesRequest{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserPoliciesRequest) ProtoMessage() {}

func (x *ListUserPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserPoliciesRequest.ProtoReflect.Descriptor instead.
func (*ListUserPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{19}
}

func (x *ListUserPoliciesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListUserPoliciesRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ユーザーのポリシー一覧取得レスポンス
type ListUserPoliciesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ポリシーのリスト
	Policies []*Policy `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
	// ページネーション情報
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserPoliciesResponse) Reset() {
	*x = ListUserPoliciesResponse{}
	mi := &file_avion_auth_v1_policy_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserPoliciesResponse) ProtoMessage() {}

func (x *ListUserPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_auth_v1_policy_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserPoliciesResponse.ProtoReflect.Descriptor instead.
func (*ListUserPoliciesResponse) Descriptor() ([]byte, []int) {
	return file_avion_auth_v1_policy_proto_rawDescGZIP(), []int{20}
}

func (x *ListUserPoliciesResponse) GetPolicies() []*Policy {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *ListUserPoliciesResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_avion_auth_v1_policy_proto protoreflect.FileDescriptor

const file_avion_auth_v1_policy_proto_rawDesc = "" +
	"\n" +
	"\x1aavion/auth/v1/policy.proto\x12\ravion.auth.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a avion/common/v1/pagination.proto\"\xb2\x01\n" +
	"\n" +
	"PolicyRule\x12\x1a\n" +
	"\bresource\x18\x01 \x01(\tR\bresource\x123\n" +
	"\x06action\x18\x02 \x01(\x0e2\x1b.avion.auth.v1.PolicyActionR\x06action\x123\n" +
	"\x06effect\x18\x03 \x01(\x0e2\x1b.avion.auth.v1.PolicyEffectR\x06effect\x12\x1e\n" +
	"\n" +
	"conditions\x18\x04 \x01(\tR\n" +
	"conditions\"\xac\x02\n" +
	"\x06Policy\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12/\n" +
	"\x05rules\x18\x04 \x03(\v2\x19.avion.auth.v1.PolicyRuleR\x05rules\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1b\n" +
	"\tis_active\x18\a \x01(\bR\bisActive\x12\x18\n" +
	"\aversion\x18\b \x01(\x05R\aversion\"\x8c\x02\n" +
	"\x10PolicyAssignment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tpolicy_id\x18\x02 \x01(\tR\bpolicyId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x19\n" +
	"\bgroup_id\x18\x04 \x01(\tR\agroupId\x12;\n" +
	"\vassigned_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"assignedAt\x12\x1f\n" +
	"\vassigned_by\x18\x06 \x01(\tR\n" +
	"assignedBy\x129\n" +
	"\n" +
	"expires_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"\x9b\x01\n" +
	"\x15EvaluatePolicyRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bresource\x18\x02 \x01(\tR\bresource\x123\n" +
	"\x06action\x18\x03 \x01(\x0e2\x1b.avion.auth.v1.PolicyActionR\x06action\x12\x18\n" +
	"\acontext\x18\x04 \x01(\tR\acontext\"\x93\x01\n" +
	"\x16EvaluatePolicyResponse\x123\n" +
	"\x06effect\x18\x01 \x01(\x0e2\x1b.avion.auth.v1.PolicyEffectR\x06effect\x12,\n" +
	"\x12applied_policy_ids\x18\x02 \x03(\tR\x10appliedPolicyIds\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"|\n" +
	"\x13CreatePolicyRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12/\n" +
	"\x05rules\x18\x03 \x03(\v2\x19.avion.auth.v1.PolicyRuleR\x05rules\"E\n" +
	"\x14CreatePolicyResponse\x12-\n" +
	"\x06policy\x18\x01 \x01(\v2\x15.avion.auth.v1.PolicyR\x06policy\"\xa6\x01\n" +
	"\x13UpdatePolicyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12/\n" +
	"\x05rules\x18\x04 \x03(\v2\x19.avion.auth.v1.PolicyRuleR\x05rules\x12\x18\n" +
	"\aversion\x18\x05 \x01(\x05R\aversion\"E\n" +
	"\x14UpdatePolicyResponse\x12-\n" +
	"\x06policy\x18\x01 \x01(\v2\x15.avion.auth.v1.PolicyR\x06policy\"%\n" +
	"\x13DeletePolicyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"0\n" +
	"\x14DeletePolicyResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\"\n" +
	"\x10GetPolicyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"B\n" +
	"\x11GetPolicyResponse\x12-\n" +
	"\x06policy\x18\x01 \x01(\v2\x15.avion.auth.v1.PolicyR\x06policy\"z\n" +
	"\x13ListPoliciesRequest\x12B\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\x12\x1f\n" +
	"\vactive_only\x18\x02 \x01(\bR\n" +
	"activeOnly\"\x8e\x01\n" +
	"\x14ListPoliciesResponse\x121\n" +
	"\bpolicies\x18\x01 \x03(\v2\x15.avion.auth.v1.PolicyR\bpolicies\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\"\xa1\x01\n" +
	"\x13AssignPolicyRequest\x12\x1b\n" +
	"\tpolicy_id\x18\x01 \x01(\tR\bpolicyId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x19\n" +
	"\bgroup_id\x18\x03 \x01(\tR\agroupId\x129\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"W\n" +
	"\x14AssignPolicyResponse\x12?\n" +
	"\n" +
	"assignment\x18\x01 \x01(\v2\x1f.avion.auth.v1.PolicyAssignmentR\n" +
	"assignment\"<\n" +
	"\x15UnassignPolicyRequest\x12#\n" +
	"\rassignment_id\x18\x01 \x01(\tR\fassignmentId\"2\n" +
	"\x16UnassignPolicyResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"v\n" +
	"\x17ListUserPoliciesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12B\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\"\x92\x01\n" +
	"\x18ListUserPoliciesResponse\x121\n" +
	"\bpolicies\x18\x01 \x03(\v2\x15.avion.auth.v1.PolicyR\bpolicies\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination*^\n" +
	"\fPolicyEffect\x12\x1d\n" +
	"\x19POLICY_EFFECT_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13POLICY_EFFECT_ALLOW\x10\x01\x12\x16\n" +
	"\x12POLICY_EFFECT_DENY\x10\x02*\x93\x01\n" +
	"\fPolicyAction\x12\x1d\n" +
	"\x19POLICY_ACTION_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12POLICY_ACTION_READ\x10\x01\x12\x17\n" +
	"\x13POLICY_ACTION_WRITE\x10\x02\x12\x18\n" +
	"\x14POLICY_ACTION_DELETE\x10\x03\x12\x19\n" +
	"\x15POLICY_ACTION_EXECUTE\x10\x04B\xab\x01\n" +
	"\x11com.avion.auth.v1B\vPolicyProtoP\x01Z3github.com/na2na-p/avion/proto/avion/auth/v1;authv1\xa2\x02\x03AAX\xaa\x02\rAvion.Auth.V1\xca\x02\rAvion\\Auth\\V1\xe2\x02\x19Avion\\Auth\\V1\\GPBMetadata\xea\x02\x0fAvion::Auth::V1b\x06proto3"

var (
	file_avion_auth_v1_policy_proto_rawDescOnce sync.Once
	file_avion_auth_v1_policy_proto_rawDescData []byte
)

func file_avion_auth_v1_policy_proto_rawDescGZIP() []byte {
	file_avion_auth_v1_policy_proto_rawDescOnce.Do(func() {
		file_avion_auth_v1_policy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_avion_auth_v1_policy_proto_rawDesc), len(file_avion_auth_v1_policy_proto_rawDesc)))
	})
	return file_avion_auth_v1_policy_proto_rawDescData
}

var file_avion_auth_v1_policy_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_avion_auth_v1_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_avion_auth_v1_policy_proto_goTypes = []any{
	(PolicyEffect)(0),                // 0: avion.auth.v1.PolicyEffect
	(PolicyAction)(0),                // 1: avion.auth.v1.PolicyAction
	(*PolicyRule)(nil),               // 2: avion.auth.v1.PolicyRule
	(*Policy)(nil),                   // 3: avion.auth.v1.Policy
	(*PolicyAssignment)(nil),         // 4: avion.auth.v1.PolicyAssignment
	(*EvaluatePolicyRequest)(nil),    // 5: avion.auth.v1.EvaluatePolicyRequest
	(*EvaluatePolicyResponse)(nil),   // 6: avion.auth.v1.EvaluatePolicyResponse
	(*CreatePolicyRequest)(nil),      // 7: avion.auth.v1.CreatePolicyRequest
	(*CreatePolicyResponse)(nil),     // 8: avion.auth.v1.CreatePolicyResponse
	(*UpdatePolicyRequest)(nil),      // 9: avion.auth.v1.UpdatePolicyRequest
	(*UpdatePolicyResponse)(nil),     // 10: avion.auth.v1.UpdatePolicyResponse
	(*DeletePolicyRequest)(nil),      // 11: avion.auth.v1.DeletePolicyRequest
	(*DeletePolicyResponse)(nil),     // 12: avion.auth.v1.DeletePolicyResponse
	(*GetPolicyRequest)(nil),         // 13: avion.auth.v1.GetPolicyRequest
	(*GetPolicyResponse)(nil),        // 14: avion.auth.v1.GetPolicyResponse
	(*ListPoliciesRequest)(nil),      // 15: avion.auth.v1.ListPoliciesRequest
	(*ListPoliciesResponse)(nil),     // 16: avion.auth.v1.ListPoliciesResponse
	(*AssignPolicyRequest)(nil),      // 17: avion.auth.v1.AssignPolicyRequest
	(*AssignPolicyResponse)(nil),     // 18: avion.auth.v1.AssignPolicyResponse
	(*UnassignPolicyRequest)(nil),    // 19: avion.auth.v1.UnassignPolicyRequest
	(*UnassignPolicyResponse)(nil),   // 20: avion.auth.v1.UnassignPolicyResponse
	(*ListUserPoliciesRequest)(nil),  // 21: avion.auth.v1.ListUserPoliciesRequest
	(*ListUserPoliciesResponse)(nil), // 22: avion.auth.v1.ListUserPoliciesResponse
	(*timestamppb.Timestamp)(nil),    // 23: google.protobuf.Timestamp
	(*v1.PaginationRequest)(nil),     // 24: avion.common.v1.PaginationRequest
	(*v1.PaginationResponse)(nil),    // 25: avion.common.v1.PaginationResponse
}
var file_avion_auth_v1_policy_proto_depIdxs = []int32{
	1,  // 0: avion.auth.v1.PolicyRule.action:type_name -> avion.auth.v1.PolicyAction
	0,  // 1: avion.auth.v1.PolicyRule.effect:type_name -> avion.auth.v1.PolicyEffect
	2,  // 2: avion.auth.v1.Policy.rules:type_name -> avion.auth.v1.PolicyRule
	23, // 3: avion.auth.v1.Policy.created_at:type_name -> google.protobuf.Timestamp
	23, // 4: avion.auth.v1.Policy.updated_at:type_name -> google.protobuf.Timestamp
	23, // 5: avion.auth.v1.PolicyAssignment.assigned_at:type_name -> google.protobuf.Timestamp
	23, // 6: avion.auth.v1.PolicyAssignment.expires_at:type_name -> google.protobuf.Timestamp
	1,  // 7: avion.auth.v1.EvaluatePolicyRequest.action:type_name -> avion.auth.v1.PolicyAction
	0,  // 8: avion.auth.v1.EvaluatePolicyResponse.effect:type_name -> avion.auth.v1.PolicyEffect
	2,  // 9: avion.auth.v1.CreatePolicyRequest.rules:type_name -> avion.auth.v1.PolicyRule
	3,  // 10: avion.auth.v1.CreatePolicyResponse.policy:type_name -> avion.auth.v1.Policy
	2,  // 11: avion.auth.v1.UpdatePolicyRequest.rules:type_name -> avion.auth.v1.PolicyRule
	3,  // 12: avion.auth.v1.UpdatePolicyResponse.policy:type_name -> avion.auth.v1.Policy
	3,  // 13: avion.auth.v1.GetPolicyResponse.policy:type_name -> avion.auth.v1.Policy
	24, // 14: avion.auth.v1.ListPoliciesRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	3,  // 15: avion.auth.v1.ListPoliciesResponse.policies:type_name -> avion.auth.v1.Policy
	25, // 16: avion.auth.v1.ListPoliciesResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	23, // 17: avion.auth.v1.AssignPolicyRequest.expires_at:type_name -> google.protobuf.Timestamp
	4,  // 18: avion.auth.v1.AssignPolicyResponse.assignment:type_name -> avion.auth.v1.PolicyAssignment
	24, // 19: avion.auth.v1.ListUserPoliciesRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	3,  // 20: avion.auth.v1.ListUserPoliciesResponse.policies:type_name -> avion.auth.v1.Policy
	25, // 21: avion.auth.v1.ListUserPoliciesResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_avion_auth_v1_policy_proto_init() }
func file_avion_auth_v1_policy_proto_init() {
	if File_avion_auth_v1_policy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_avion_auth_v1_policy_proto_rawDesc), len(file_avion_auth_v1_policy_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_avion_auth_v1_policy_proto_goTypes,
		DependencyIndexes: file_avion_auth_v1_policy_proto_depIdxs,
		EnumInfos:         file_avion_auth_v1_policy_proto_enumTypes,
		MessageInfos:      file_avion_auth_v1_policy_proto_msgTypes,
	}.Build()
	File_avion_auth_v1_policy_proto = out.File
	file_avion_auth_v1_policy_proto_goTypes = nil
	file_avion_auth_v1_policy_proto_depIdxs = nil
}
