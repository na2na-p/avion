// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: avion/drop/v1/drop.proto

package dropv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Dropの可視性
type DropVisibility int32

const (
	// 未指定
	DropVisibility_DROP_VISIBILITY_UNSPECIFIED DropVisibility = 0
	// 公開
	DropVisibility_DROP_VISIBILITY_PUBLIC DropVisibility = 1
	// フォロワーのみ
	DropVisibility_DROP_VISIBILITY_FOLLOWERS_ONLY DropVisibility = 2
	// メンションされたユーザーのみ
	DropVisibility_DROP_VISIBILITY_MENTIONED_ONLY DropVisibility = 3
	// 非公開（本人のみ）
	DropVisibility_DROP_VISIBILITY_PRIVATE DropVisibility = 4
)

// Enum value maps for DropVisibility.
var (
	DropVisibility_name = map[int32]string{
		0: "DROP_VISIBILITY_UNSPECIFIED",
		1: "DROP_VISIBILITY_PUBLIC",
		2: "DROP_VISIBILITY_FOLLOWERS_ONLY",
		3: "DROP_VISIBILITY_MENTIONED_ONLY",
		4: "DROP_VISIBILITY_PRIVATE",
	}
	DropVisibility_value = map[string]int32{
		"DROP_VISIBILITY_UNSPECIFIED":    0,
		"DROP_VISIBILITY_PUBLIC":         1,
		"DROP_VISIBILITY_FOLLOWERS_ONLY": 2,
		"DROP_VISIBILITY_MENTIONED_ONLY": 3,
		"DROP_VISIBILITY_PRIVATE":        4,
	}
)

func (x DropVisibility) Enum() *DropVisibility {
	p := new(DropVisibility)
	*p = x
	return p
}

func (x DropVisibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DropVisibility) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_drop_v1_drop_proto_enumTypes[0].Descriptor()
}

func (DropVisibility) Type() protoreflect.EnumType {
	return &file_avion_drop_v1_drop_proto_enumTypes[0]
}

func (x DropVisibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DropVisibility.Descriptor instead.
func (DropVisibility) EnumDescriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{0}
}

// リアクションタイプ
type ReactionType int32

const (
	// 未指定
	ReactionType_REACTION_TYPE_UNSPECIFIED ReactionType = 0
	// いいね
	ReactionType_REACTION_TYPE_LIKE ReactionType = 1
	// リドロップ（リツイート相当）
	ReactionType_REACTION_TYPE_REDROP ReactionType = 2
	// ブックマーク
	ReactionType_REACTION_TYPE_BOOKMARK ReactionType = 3
)

// Enum value maps for ReactionType.
var (
	ReactionType_name = map[int32]string{
		0: "REACTION_TYPE_UNSPECIFIED",
		1: "REACTION_TYPE_LIKE",
		2: "REACTION_TYPE_REDROP",
		3: "REACTION_TYPE_BOOKMARK",
	}
	ReactionType_value = map[string]int32{
		"REACTION_TYPE_UNSPECIFIED": 0,
		"REACTION_TYPE_LIKE":        1,
		"REACTION_TYPE_REDROP":      2,
		"REACTION_TYPE_BOOKMARK":    3,
	}
)

func (x ReactionType) Enum() *ReactionType {
	p := new(ReactionType)
	*p = x
	return p
}

func (x ReactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_drop_v1_drop_proto_enumTypes[1].Descriptor()
}

func (ReactionType) Type() protoreflect.EnumType {
	return &file_avion_drop_v1_drop_proto_enumTypes[1]
}

func (x ReactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReactionType.Descriptor instead.
func (ReactionType) EnumDescriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{1}
}

// メディアタイプ
type MediaType int32

const (
	// 未指定
	MediaType_MEDIA_TYPE_UNSPECIFIED MediaType = 0
	// 画像
	MediaType_MEDIA_TYPE_IMAGE MediaType = 1
	// 動画
	MediaType_MEDIA_TYPE_VIDEO MediaType = 2
	// 音声
	MediaType_MEDIA_TYPE_AUDIO MediaType = 3
	// GIF画像
	MediaType_MEDIA_TYPE_GIF MediaType = 4
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "MEDIA_TYPE_UNSPECIFIED",
		1: "MEDIA_TYPE_IMAGE",
		2: "MEDIA_TYPE_VIDEO",
		3: "MEDIA_TYPE_AUDIO",
		4: "MEDIA_TYPE_GIF",
	}
	MediaType_value = map[string]int32{
		"MEDIA_TYPE_UNSPECIFIED": 0,
		"MEDIA_TYPE_IMAGE":       1,
		"MEDIA_TYPE_VIDEO":       2,
		"MEDIA_TYPE_AUDIO":       3,
		"MEDIA_TYPE_GIF":         4,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_drop_v1_drop_proto_enumTypes[2].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_avion_drop_v1_drop_proto_enumTypes[2]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{2}
}

// Dropステータス
type DropStatus int32

const (
	// 未指定
	DropStatus_DROP_STATUS_UNSPECIFIED DropStatus = 0
	// アクティブ
	DropStatus_DROP_STATUS_ACTIVE DropStatus = 1
	// 削除済み
	DropStatus_DROP_STATUS_DELETED DropStatus = 2
	// 一時停止
	DropStatus_DROP_STATUS_SUSPENDED DropStatus = 3
	// アーカイブ済み
	DropStatus_DROP_STATUS_ARCHIVED DropStatus = 4
)

// Enum value maps for DropStatus.
var (
	DropStatus_name = map[int32]string{
		0: "DROP_STATUS_UNSPECIFIED",
		1: "DROP_STATUS_ACTIVE",
		2: "DROP_STATUS_DELETED",
		3: "DROP_STATUS_SUSPENDED",
		4: "DROP_STATUS_ARCHIVED",
	}
	DropStatus_value = map[string]int32{
		"DROP_STATUS_UNSPECIFIED": 0,
		"DROP_STATUS_ACTIVE":      1,
		"DROP_STATUS_DELETED":     2,
		"DROP_STATUS_SUSPENDED":   3,
		"DROP_STATUS_ARCHIVED":    4,
	}
)

func (x DropStatus) Enum() *DropStatus {
	p := new(DropStatus)
	*p = x
	return p
}

func (x DropStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DropStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_drop_v1_drop_proto_enumTypes[3].Descriptor()
}

func (DropStatus) Type() protoreflect.EnumType {
	return &file_avion_drop_v1_drop_proto_enumTypes[3]
}

func (x DropStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DropStatus.Descriptor instead.
func (DropStatus) EnumDescriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{3}
}

// 下書きステータス
type DraftStatus int32

const (
	// 未指定
	DraftStatus_DRAFT_STATUS_UNSPECIFIED DraftStatus = 0
	// 下書き中
	DraftStatus_DRAFT_STATUS_DRAFT DraftStatus = 1
	// 自動保存済み
	DraftStatus_DRAFT_STATUS_AUTO_SAVED DraftStatus = 2
	// 投稿済み（下書きから投稿に変換済み）
	DraftStatus_DRAFT_STATUS_PUBLISHED DraftStatus = 3
)

// Enum value maps for DraftStatus.
var (
	DraftStatus_name = map[int32]string{
		0: "DRAFT_STATUS_UNSPECIFIED",
		1: "DRAFT_STATUS_DRAFT",
		2: "DRAFT_STATUS_AUTO_SAVED",
		3: "DRAFT_STATUS_PUBLISHED",
	}
	DraftStatus_value = map[string]int32{
		"DRAFT_STATUS_UNSPECIFIED": 0,
		"DRAFT_STATUS_DRAFT":       1,
		"DRAFT_STATUS_AUTO_SAVED":  2,
		"DRAFT_STATUS_PUBLISHED":   3,
	}
)

func (x DraftStatus) Enum() *DraftStatus {
	p := new(DraftStatus)
	*p = x
	return p
}

func (x DraftStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DraftStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_drop_v1_drop_proto_enumTypes[4].Descriptor()
}

func (DraftStatus) Type() protoreflect.EnumType {
	return &file_avion_drop_v1_drop_proto_enumTypes[4]
}

func (x DraftStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DraftStatus.Descriptor instead.
func (DraftStatus) EnumDescriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{4}
}

// コンテンツ警告タイプ
type ContentWarningType int32

const (
	// 未指定
	ContentWarningType_CONTENT_WARNING_TYPE_UNSPECIFIED ContentWarningType = 0
	// ネタバレ
	ContentWarningType_CONTENT_WARNING_TYPE_SPOILER ContentWarningType = 1
	// センシティブコンテンツ
	ContentWarningType_CONTENT_WARNING_TYPE_SENSITIVE ContentWarningType = 2
	// 暴力的コンテンツ
	ContentWarningType_CONTENT_WARNING_TYPE_VIOLENCE ContentWarningType = 3
	// 成人向けコンテンツ
	ContentWarningType_CONTENT_WARNING_TYPE_ADULT ContentWarningType = 4
	// その他（カスタム警告）
	ContentWarningType_CONTENT_WARNING_TYPE_CUSTOM ContentWarningType = 5
)

// Enum value maps for ContentWarningType.
var (
	ContentWarningType_name = map[int32]string{
		0: "CONTENT_WARNING_TYPE_UNSPECIFIED",
		1: "CONTENT_WARNING_TYPE_SPOILER",
		2: "CONTENT_WARNING_TYPE_SENSITIVE",
		3: "CONTENT_WARNING_TYPE_VIOLENCE",
		4: "CONTENT_WARNING_TYPE_ADULT",
		5: "CONTENT_WARNING_TYPE_CUSTOM",
	}
	ContentWarningType_value = map[string]int32{
		"CONTENT_WARNING_TYPE_UNSPECIFIED": 0,
		"CONTENT_WARNING_TYPE_SPOILER":     1,
		"CONTENT_WARNING_TYPE_SENSITIVE":   2,
		"CONTENT_WARNING_TYPE_VIOLENCE":    3,
		"CONTENT_WARNING_TYPE_ADULT":       4,
		"CONTENT_WARNING_TYPE_CUSTOM":      5,
	}
)

func (x ContentWarningType) Enum() *ContentWarningType {
	p := new(ContentWarningType)
	*p = x
	return p
}

func (x ContentWarningType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentWarningType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_drop_v1_drop_proto_enumTypes[5].Descriptor()
}

func (ContentWarningType) Type() protoreflect.EnumType {
	return &file_avion_drop_v1_drop_proto_enumTypes[5]
}

func (x ContentWarningType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentWarningType.Descriptor instead.
func (ContentWarningType) EnumDescriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{5}
}

// Drop（投稿）メッセージ
type Drop struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DropのID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 投稿者のユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 投稿内容
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// 作成日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新日時
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// リプライ元のDropID（リプライの場合）
	ReplyToId string `protobuf:"bytes,6,opt,name=reply_to_id,json=replyToId,proto3" json:"reply_to_id,omitempty"`
	// 引用元のDropID（引用の場合）
	QuoteDropId string `protobuf:"bytes,7,opt,name=quote_drop_id,json=quoteDropId,proto3" json:"quote_drop_id,omitempty"`
	// 削除フラグ
	IsDeleted bool `protobuf:"varint,8,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// 可視性
	Visibility DropVisibility `protobuf:"varint,9,opt,name=visibility,proto3,enum=avion.drop.v1.DropVisibility" json:"visibility,omitempty"`
	// いいね数
	LikeCount int32 `protobuf:"varint,10,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	// リドロップ数
	RedropCount int32 `protobuf:"varint,11,opt,name=redrop_count,json=redropCount,proto3" json:"redrop_count,omitempty"`
	// リプライ数
	ReplyCount int32 `protobuf:"varint,12,opt,name=reply_count,json=replyCount,proto3" json:"reply_count,omitempty"`
	// ブックマーク数
	BookmarkCount int32 `protobuf:"varint,13,opt,name=bookmark_count,json=bookmarkCount,proto3" json:"bookmark_count,omitempty"`
	// コンテンツ警告（オプション）
	ContentWarning *ContentWarning `protobuf:"bytes,14,opt,name=content_warning,json=contentWarning,proto3" json:"content_warning,omitempty"`
	// 編集済みフラグ
	IsEdited bool `protobuf:"varint,15,opt,name=is_edited,json=isEdited,proto3" json:"is_edited,omitempty"`
	// 最終編集日時
	EditedAt *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=edited_at,json=editedAt,proto3" json:"edited_at,omitempty"`
	// ステータス
	Status        DropStatus `protobuf:"varint,17,opt,name=status,proto3,enum=avion.drop.v1.DropStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Drop) Reset() {
	*x = Drop{}
	mi := &file_avion_drop_v1_drop_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Drop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Drop) ProtoMessage() {}

func (x *Drop) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Drop.ProtoReflect.Descriptor instead.
func (*Drop) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{0}
}

func (x *Drop) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Drop) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Drop) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Drop) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Drop) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Drop) GetReplyToId() string {
	if x != nil {
		return x.ReplyToId
	}
	return ""
}

func (x *Drop) GetQuoteDropId() string {
	if x != nil {
		return x.QuoteDropId
	}
	return ""
}

func (x *Drop) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Drop) GetVisibility() DropVisibility {
	if x != nil {
		return x.Visibility
	}
	return DropVisibility_DROP_VISIBILITY_UNSPECIFIED
}

func (x *Drop) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *Drop) GetRedropCount() int32 {
	if x != nil {
		return x.RedropCount
	}
	return 0
}

func (x *Drop) GetReplyCount() int32 {
	if x != nil {
		return x.ReplyCount
	}
	return 0
}

func (x *Drop) GetBookmarkCount() int32 {
	if x != nil {
		return x.BookmarkCount
	}
	return 0
}

func (x *Drop) GetContentWarning() *ContentWarning {
	if x != nil {
		return x.ContentWarning
	}
	return nil
}

func (x *Drop) GetIsEdited() bool {
	if x != nil {
		return x.IsEdited
	}
	return false
}

func (x *Drop) GetEditedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EditedAt
	}
	return nil
}

func (x *Drop) GetStatus() DropStatus {
	if x != nil {
		return x.Status
	}
	return DropStatus_DROP_STATUS_UNSPECIFIED
}

// Dropに添付されるメディア
type DropMedia struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 関連するDropのID
	DropId string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	// メディアのURL
	MediaUrl string `protobuf:"bytes,2,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	// メディアタイプ
	MediaType MediaType `protobuf:"varint,3,opt,name=media_type,json=mediaType,proto3,enum=avion.drop.v1.MediaType" json:"media_type,omitempty"`
	// サムネイルURL
	ThumbnailUrl string `protobuf:"bytes,4,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	// 代替テキスト（アクセシビリティ用）
	AltText       string `protobuf:"bytes,5,opt,name=alt_text,json=altText,proto3" json:"alt_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropMedia) Reset() {
	*x = DropMedia{}
	mi := &file_avion_drop_v1_drop_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropMedia) ProtoMessage() {}

func (x *DropMedia) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropMedia.ProtoReflect.Descriptor instead.
func (*DropMedia) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{1}
}

func (x *DropMedia) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

func (x *DropMedia) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *DropMedia) GetMediaType() MediaType {
	if x != nil {
		return x.MediaType
	}
	return MediaType_MEDIA_TYPE_UNSPECIFIED
}

func (x *DropMedia) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *DropMedia) GetAltText() string {
	if x != nil {
		return x.AltText
	}
	return ""
}

// Dropへのリアクション
type DropReaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 対象のDropID
	DropId string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	// リアクションしたユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// リアクションタイプ
	ReactionType ReactionType `protobuf:"varint,3,opt,name=reaction_type,json=reactionType,proto3,enum=avion.drop.v1.ReactionType" json:"reaction_type,omitempty"`
	// リアクション日時
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropReaction) Reset() {
	*x = DropReaction{}
	mi := &file_avion_drop_v1_drop_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropReaction) ProtoMessage() {}

func (x *DropReaction) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropReaction.ProtoReflect.Descriptor instead.
func (*DropReaction) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{2}
}

func (x *DropReaction) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

func (x *DropReaction) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DropReaction) GetReactionType() ReactionType {
	if x != nil {
		return x.ReactionType
	}
	return ReactionType_REACTION_TYPE_UNSPECIFIED
}

func (x *DropReaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Dropのハッシュタグ
type DropHashtag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 関連するDropのID
	DropId string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	// ハッシュタグ（#を含む）
	Hashtag string `protobuf:"bytes,2,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	// Drop内での位置（文字位置）
	Position      int32 `protobuf:"varint,3,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropHashtag) Reset() {
	*x = DropHashtag{}
	mi := &file_avion_drop_v1_drop_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropHashtag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropHashtag) ProtoMessage() {}

func (x *DropHashtag) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropHashtag.ProtoReflect.Descriptor instead.
func (*DropHashtag) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{3}
}

func (x *DropHashtag) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

func (x *DropHashtag) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *DropHashtag) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

// Dropのメンション
type DropMention struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 関連するDropのID
	DropId string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	// メンションされたユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// メンションされたユーザー名（@を含む）
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// Drop内での位置（文字位置）
	Position      int32 `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropMention) Reset() {
	*x = DropMention{}
	mi := &file_avion_drop_v1_drop_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropMention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropMention) ProtoMessage() {}

func (x *DropMention) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropMention.ProtoReflect.Descriptor instead.
func (*DropMention) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{4}
}

func (x *DropMention) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

func (x *DropMention) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DropMention) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DropMention) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

// Drop下書き
type DropDraft struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 下書きID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 作成者のユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 下書き内容
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// 作成日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新日時
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// 下書きステータス
	Status DraftStatus `protobuf:"varint,6,opt,name=status,proto3,enum=avion.drop.v1.DraftStatus" json:"status,omitempty"`
	// 可視性（投稿時の設定）
	Visibility DropVisibility `protobuf:"varint,7,opt,name=visibility,proto3,enum=avion.drop.v1.DropVisibility" json:"visibility,omitempty"`
	// リプライ元のDropID（リプライの下書きの場合）
	ReplyToId string `protobuf:"bytes,8,opt,name=reply_to_id,json=replyToId,proto3" json:"reply_to_id,omitempty"`
	// 引用元のDropID（引用の下書きの場合）
	QuoteDropId string `protobuf:"bytes,9,opt,name=quote_drop_id,json=quoteDropId,proto3" json:"quote_drop_id,omitempty"`
	// メディア添付情報（下書きに保存されたメディア）
	MediaAttachments []*DraftMedia `protobuf:"bytes,10,rep,name=media_attachments,json=mediaAttachments,proto3" json:"media_attachments,omitempty"`
	// 自動保存フラグ
	IsAutoSaved bool `protobuf:"varint,11,opt,name=is_auto_saved,json=isAutoSaved,proto3" json:"is_auto_saved,omitempty"`
	// 投稿予定日時（スケジュール投稿用）
	ScheduledAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`
	// 投稿済みDropID（投稿後に参照）
	PublishedDropId string `protobuf:"bytes,13,opt,name=published_drop_id,json=publishedDropId,proto3" json:"published_drop_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DropDraft) Reset() {
	*x = DropDraft{}
	mi := &file_avion_drop_v1_drop_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropDraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropDraft) ProtoMessage() {}

func (x *DropDraft) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropDraft.ProtoReflect.Descriptor instead.
func (*DropDraft) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{5}
}

func (x *DropDraft) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DropDraft) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DropDraft) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DropDraft) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DropDraft) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DropDraft) GetStatus() DraftStatus {
	if x != nil {
		return x.Status
	}
	return DraftStatus_DRAFT_STATUS_UNSPECIFIED
}

func (x *DropDraft) GetVisibility() DropVisibility {
	if x != nil {
		return x.Visibility
	}
	return DropVisibility_DROP_VISIBILITY_UNSPECIFIED
}

func (x *DropDraft) GetReplyToId() string {
	if x != nil {
		return x.ReplyToId
	}
	return ""
}

func (x *DropDraft) GetQuoteDropId() string {
	if x != nil {
		return x.QuoteDropId
	}
	return ""
}

func (x *DropDraft) GetMediaAttachments() []*DraftMedia {
	if x != nil {
		return x.MediaAttachments
	}
	return nil
}

func (x *DropDraft) GetIsAutoSaved() bool {
	if x != nil {
		return x.IsAutoSaved
	}
	return false
}

func (x *DropDraft) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *DropDraft) GetPublishedDropId() string {
	if x != nil {
		return x.PublishedDropId
	}
	return ""
}

// 下書きに添付されるメディア
type DraftMedia struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// メディアURL（一時保存先）
	MediaUrl string `protobuf:"bytes,1,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	// メディアタイプ
	MediaType MediaType `protobuf:"varint,2,opt,name=media_type,json=mediaType,proto3,enum=avion.drop.v1.MediaType" json:"media_type,omitempty"`
	// サムネイルURL
	ThumbnailUrl string `protobuf:"bytes,3,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	// 代替テキスト
	AltText string `protobuf:"bytes,4,opt,name=alt_text,json=altText,proto3" json:"alt_text,omitempty"`
	// アップロード状態（processing, ready, failed）
	UploadStatus  string `protobuf:"bytes,5,opt,name=upload_status,json=uploadStatus,proto3" json:"upload_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DraftMedia) Reset() {
	*x = DraftMedia{}
	mi := &file_avion_drop_v1_drop_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DraftMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftMedia) ProtoMessage() {}

func (x *DraftMedia) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftMedia.ProtoReflect.Descriptor instead.
func (*DraftMedia) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{6}
}

func (x *DraftMedia) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *DraftMedia) GetMediaType() MediaType {
	if x != nil {
		return x.MediaType
	}
	return MediaType_MEDIA_TYPE_UNSPECIFIED
}

func (x *DraftMedia) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *DraftMedia) GetAltText() string {
	if x != nil {
		return x.AltText
	}
	return ""
}

func (x *DraftMedia) GetUploadStatus() string {
	if x != nil {
		return x.UploadStatus
	}
	return ""
}

// 投票オプション
type PollOption struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// オプションID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// オプションテキスト
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 投票数
	VoteCount int32 `protobuf:"varint,3,opt,name=vote_count,json=voteCount,proto3" json:"vote_count,omitempty"`
	// 投票割合（パーセンテージ）
	VotePercentage float32 `protobuf:"fixed32,4,opt,name=vote_percentage,json=votePercentage,proto3" json:"vote_percentage,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PollOption) Reset() {
	*x = PollOption{}
	mi := &file_avion_drop_v1_drop_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollOption) ProtoMessage() {}

func (x *PollOption) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollOption.ProtoReflect.Descriptor instead.
func (*PollOption) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{7}
}

func (x *PollOption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PollOption) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PollOption) GetVoteCount() int32 {
	if x != nil {
		return x.VoteCount
	}
	return 0
}

func (x *PollOption) GetVotePercentage() float32 {
	if x != nil {
		return x.VotePercentage
	}
	return 0
}

// 投票
type Poll struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 投票ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 関連するDropID
	DropId string `protobuf:"bytes,2,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	// 質問文
	Question string `protobuf:"bytes,3,opt,name=question,proto3" json:"question,omitempty"`
	// 投票オプション一覧
	Options []*PollOption `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	// 複数選択可能か
	MultipleChoice bool `protobuf:"varint,5,opt,name=multiple_choice,json=multipleChoice,proto3" json:"multiple_choice,omitempty"`
	// 投票期限
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// 総投票数
	TotalVotes int32 `protobuf:"varint,7,opt,name=total_votes,json=totalVotes,proto3" json:"total_votes,omitempty"`
	// 投票が終了しているか
	IsClosed bool `protobuf:"varint,8,opt,name=is_closed,json=isClosed,proto3" json:"is_closed,omitempty"`
	// 作成日時
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Poll) Reset() {
	*x = Poll{}
	mi := &file_avion_drop_v1_drop_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Poll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Poll) ProtoMessage() {}

func (x *Poll) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Poll.ProtoReflect.Descriptor instead.
func (*Poll) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{8}
}

func (x *Poll) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Poll) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

func (x *Poll) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *Poll) GetOptions() []*PollOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Poll) GetMultipleChoice() bool {
	if x != nil {
		return x.MultipleChoice
	}
	return false
}

func (x *Poll) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Poll) GetTotalVotes() int32 {
	if x != nil {
		return x.TotalVotes
	}
	return 0
}

func (x *Poll) GetIsClosed() bool {
	if x != nil {
		return x.IsClosed
	}
	return false
}

func (x *Poll) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// ユーザーの投票
type UserPollVote struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 投票ID
	PollId string `protobuf:"bytes,1,opt,name=poll_id,json=pollId,proto3" json:"poll_id,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 選択したオプションID一覧
	OptionIds []string `protobuf:"bytes,3,rep,name=option_ids,json=optionIds,proto3" json:"option_ids,omitempty"`
	// 投票日時
	VotedAt       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=voted_at,json=votedAt,proto3" json:"voted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserPollVote) Reset() {
	*x = UserPollVote{}
	mi := &file_avion_drop_v1_drop_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPollVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPollVote) ProtoMessage() {}

func (x *UserPollVote) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPollVote.ProtoReflect.Descriptor instead.
func (*UserPollVote) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{9}
}

func (x *UserPollVote) GetPollId() string {
	if x != nil {
		return x.PollId
	}
	return ""
}

func (x *UserPollVote) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserPollVote) GetOptionIds() []string {
	if x != nil {
		return x.OptionIds
	}
	return nil
}

func (x *UserPollVote) GetVotedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.VotedAt
	}
	return nil
}

// コンテンツ警告
type ContentWarning struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 警告タイプ
	Type ContentWarningType `protobuf:"varint,1,opt,name=type,proto3,enum=avion.drop.v1.ContentWarningType" json:"type,omitempty"`
	// 警告メッセージ（カスタム警告の場合）
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 警告の重要度（1-5）
	Severity      int32 `protobuf:"varint,3,opt,name=severity,proto3" json:"severity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentWarning) Reset() {
	*x = ContentWarning{}
	mi := &file_avion_drop_v1_drop_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentWarning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentWarning) ProtoMessage() {}

func (x *ContentWarning) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentWarning.ProtoReflect.Descriptor instead.
func (*ContentWarning) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{10}
}

func (x *ContentWarning) GetType() ContentWarningType {
	if x != nil {
		return x.Type
	}
	return ContentWarningType_CONTENT_WARNING_TYPE_UNSPECIFIED
}

func (x *ContentWarning) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ContentWarning) GetSeverity() int32 {
	if x != nil {
		return x.Severity
	}
	return 0
}

// 編集履歴
type EditHistory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DropID
	DropId string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	// 編集バージョン
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// 編集前の内容
	PreviousContent string `protobuf:"bytes,3,opt,name=previous_content,json=previousContent,proto3" json:"previous_content,omitempty"`
	// 編集後の内容
	NewContent string `protobuf:"bytes,4,opt,name=new_content,json=newContent,proto3" json:"new_content,omitempty"`
	// 編集日時
	EditedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=edited_at,json=editedAt,proto3" json:"edited_at,omitempty"`
	// 編集理由（オプション）
	EditReason    string `protobuf:"bytes,6,opt,name=edit_reason,json=editReason,proto3" json:"edit_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditHistory) Reset() {
	*x = EditHistory{}
	mi := &file_avion_drop_v1_drop_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditHistory) ProtoMessage() {}

func (x *EditHistory) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditHistory.ProtoReflect.Descriptor instead.
func (*EditHistory) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{11}
}

func (x *EditHistory) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

func (x *EditHistory) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *EditHistory) GetPreviousContent() string {
	if x != nil {
		return x.PreviousContent
	}
	return ""
}

func (x *EditHistory) GetNewContent() string {
	if x != nil {
		return x.NewContent
	}
	return ""
}

func (x *EditHistory) GetEditedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EditedAt
	}
	return nil
}

func (x *EditHistory) GetEditReason() string {
	if x != nil {
		return x.EditReason
	}
	return ""
}

// Drop統計情報
type DropStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DropID
	DropId string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	// 閲覧数
	ViewCount int64 `protobuf:"varint,2,opt,name=view_count,json=viewCount,proto3" json:"view_count,omitempty"`
	// ユニーク閲覧者数
	UniqueViewerCount int64 `protobuf:"varint,3,opt,name=unique_viewer_count,json=uniqueViewerCount,proto3" json:"unique_viewer_count,omitempty"`
	// エンゲージメント率
	EngagementRate float32 `protobuf:"fixed32,4,opt,name=engagement_rate,json=engagementRate,proto3" json:"engagement_rate,omitempty"`
	// リーチ数
	ReachCount int64 `protobuf:"varint,5,opt,name=reach_count,json=reachCount,proto3" json:"reach_count,omitempty"`
	// インプレッション数
	ImpressionCount int64 `protobuf:"varint,6,opt,name=impression_count,json=impressionCount,proto3" json:"impression_count,omitempty"`
	// 最終更新日時
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropStats) Reset() {
	*x = DropStats{}
	mi := &file_avion_drop_v1_drop_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropStats) ProtoMessage() {}

func (x *DropStats) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropStats.ProtoReflect.Descriptor instead.
func (*DropStats) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_proto_rawDescGZIP(), []int{12}
}

func (x *DropStats) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

func (x *DropStats) GetViewCount() int64 {
	if x != nil {
		return x.ViewCount
	}
	return 0
}

func (x *DropStats) GetUniqueViewerCount() int64 {
	if x != nil {
		return x.UniqueViewerCount
	}
	return 0
}

func (x *DropStats) GetEngagementRate() float32 {
	if x != nil {
		return x.EngagementRate
	}
	return 0
}

func (x *DropStats) GetReachCount() int64 {
	if x != nil {
		return x.ReachCount
	}
	return 0
}

func (x *DropStats) GetImpressionCount() int64 {
	if x != nil {
		return x.ImpressionCount
	}
	return 0
}

func (x *DropStats) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_avion_drop_v1_drop_proto protoreflect.FileDescriptor

const file_avion_drop_v1_drop_proto_rawDesc = "" +
	"\n" +
	"\x18avion/drop/v1/drop.proto\x12\ravion.drop.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xbc\x05\n" +
	"\x04Drop\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1e\n" +
	"\vreply_to_id\x18\x06 \x01(\tR\treplyToId\x12\"\n" +
	"\rquote_drop_id\x18\a \x01(\tR\vquoteDropId\x12\x1d\n" +
	"\n" +
	"is_deleted\x18\b \x01(\bR\tisDeleted\x12=\n" +
	"\n" +
	"visibility\x18\t \x01(\x0e2\x1d.avion.drop.v1.DropVisibilityR\n" +
	"visibility\x12\x1d\n" +
	"\n" +
	"like_count\x18\n" +
	" \x01(\x05R\tlikeCount\x12!\n" +
	"\fredrop_count\x18\v \x01(\x05R\vredropCount\x12\x1f\n" +
	"\vreply_count\x18\f \x01(\x05R\n" +
	"replyCount\x12%\n" +
	"\x0ebookmark_count\x18\r \x01(\x05R\rbookmarkCount\x12F\n" +
	"\x0fcontent_warning\x18\x0e \x01(\v2\x1d.avion.drop.v1.ContentWarningR\x0econtentWarning\x12\x1b\n" +
	"\tis_edited\x18\x0f \x01(\bR\bisEdited\x127\n" +
	"\tedited_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\beditedAt\x121\n" +
	"\x06status\x18\x11 \x01(\x0e2\x19.avion.drop.v1.DropStatusR\x06status\"\xba\x01\n" +
	"\tDropMedia\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\x12\x1b\n" +
	"\tmedia_url\x18\x02 \x01(\tR\bmediaUrl\x127\n" +
	"\n" +
	"media_type\x18\x03 \x01(\x0e2\x18.avion.drop.v1.MediaTypeR\tmediaType\x12#\n" +
	"\rthumbnail_url\x18\x04 \x01(\tR\fthumbnailUrl\x12\x19\n" +
	"\balt_text\x18\x05 \x01(\tR\aaltText\"\xbd\x01\n" +
	"\fDropReaction\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12@\n" +
	"\rreaction_type\x18\x03 \x01(\x0e2\x1b.avion.drop.v1.ReactionTypeR\freactionType\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\\\n" +
	"\vDropHashtag\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\x12\x18\n" +
	"\ahashtag\x18\x02 \x01(\tR\ahashtag\x12\x1a\n" +
	"\bposition\x18\x03 \x01(\x05R\bposition\"w\n" +
	"\vDropMention\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bposition\x18\x04 \x01(\x05R\bposition\"\xd2\x04\n" +
	"\tDropDraft\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x122\n" +
	"\x06status\x18\x06 \x01(\x0e2\x1a.avion.drop.v1.DraftStatusR\x06status\x12=\n" +
	"\n" +
	"visibility\x18\a \x01(\x0e2\x1d.avion.drop.v1.DropVisibilityR\n" +
	"visibility\x12\x1e\n" +
	"\vreply_to_id\x18\b \x01(\tR\treplyToId\x12\"\n" +
	"\rquote_drop_id\x18\t \x01(\tR\vquoteDropId\x12F\n" +
	"\x11media_attachments\x18\n" +
	" \x03(\v2\x19.avion.drop.v1.DraftMediaR\x10mediaAttachments\x12\"\n" +
	"\ris_auto_saved\x18\v \x01(\bR\visAutoSaved\x12=\n" +
	"\fscheduled_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\vscheduledAt\x12*\n" +
	"\x11published_drop_id\x18\r \x01(\tR\x0fpublishedDropId\"\xc7\x01\n" +
	"\n" +
	"DraftMedia\x12\x1b\n" +
	"\tmedia_url\x18\x01 \x01(\tR\bmediaUrl\x127\n" +
	"\n" +
	"media_type\x18\x02 \x01(\x0e2\x18.avion.drop.v1.MediaTypeR\tmediaType\x12#\n" +
	"\rthumbnail_url\x18\x03 \x01(\tR\fthumbnailUrl\x12\x19\n" +
	"\balt_text\x18\x04 \x01(\tR\aaltText\x12#\n" +
	"\rupload_status\x18\x05 \x01(\tR\fuploadStatus\"x\n" +
	"\n" +
	"PollOption\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x1d\n" +
	"\n" +
	"vote_count\x18\x03 \x01(\x05R\tvoteCount\x12'\n" +
	"\x0fvote_percentage\x18\x04 \x01(\x02R\x0evotePercentage\"\xdd\x02\n" +
	"\x04Poll\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\adrop_id\x18\x02 \x01(\tR\x06dropId\x12\x1a\n" +
	"\bquestion\x18\x03 \x01(\tR\bquestion\x123\n" +
	"\aoptions\x18\x04 \x03(\v2\x19.avion.drop.v1.PollOptionR\aoptions\x12'\n" +
	"\x0fmultiple_choice\x18\x05 \x01(\bR\x0emultipleChoice\x129\n" +
	"\n" +
	"expires_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12\x1f\n" +
	"\vtotal_votes\x18\a \x01(\x05R\n" +
	"totalVotes\x12\x1b\n" +
	"\tis_closed\x18\b \x01(\bR\bisClosed\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x96\x01\n" +
	"\fUserPollVote\x12\x17\n" +
	"\apoll_id\x18\x01 \x01(\tR\x06pollId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"option_ids\x18\x03 \x03(\tR\toptionIds\x125\n" +
	"\bvoted_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\avotedAt\"}\n" +
	"\x0eContentWarning\x125\n" +
	"\x04type\x18\x01 \x01(\x0e2!.avion.drop.v1.ContentWarningTypeR\x04type\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1a\n" +
	"\bseverity\x18\x03 \x01(\x05R\bseverity\"\xe6\x01\n" +
	"\vEditHistory\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x05R\aversion\x12)\n" +
	"\x10previous_content\x18\x03 \x01(\tR\x0fpreviousContent\x12\x1f\n" +
	"\vnew_content\x18\x04 \x01(\tR\n" +
	"newContent\x127\n" +
	"\tedited_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\beditedAt\x12\x1f\n" +
	"\vedit_reason\x18\x06 \x01(\tR\n" +
	"editReason\"\xa3\x02\n" +
	"\tDropStats\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\x12\x1d\n" +
	"\n" +
	"view_count\x18\x02 \x01(\x03R\tviewCount\x12.\n" +
	"\x13unique_viewer_count\x18\x03 \x01(\x03R\x11uniqueViewerCount\x12'\n" +
	"\x0fengagement_rate\x18\x04 \x01(\x02R\x0eengagementRate\x12\x1f\n" +
	"\vreach_count\x18\x05 \x01(\x03R\n" +
	"reachCount\x12)\n" +
	"\x10impression_count\x18\x06 \x01(\x03R\x0fimpressionCount\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt*\xb2\x01\n" +
	"\x0eDropVisibility\x12\x1f\n" +
	"\x1bDROP_VISIBILITY_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16DROP_VISIBILITY_PUBLIC\x10\x01\x12\"\n" +
	"\x1eDROP_VISIBILITY_FOLLOWERS_ONLY\x10\x02\x12\"\n" +
	"\x1eDROP_VISIBILITY_MENTIONED_ONLY\x10\x03\x12\x1b\n" +
	"\x17DROP_VISIBILITY_PRIVATE\x10\x04*{\n" +
	"\fReactionType\x12\x1d\n" +
	"\x19REACTION_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12REACTION_TYPE_LIKE\x10\x01\x12\x18\n" +
	"\x14REACTION_TYPE_REDROP\x10\x02\x12\x1a\n" +
	"\x16REACTION_TYPE_BOOKMARK\x10\x03*}\n" +
	"\tMediaType\x12\x1a\n" +
	"\x16MEDIA_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10MEDIA_TYPE_IMAGE\x10\x01\x12\x14\n" +
	"\x10MEDIA_TYPE_VIDEO\x10\x02\x12\x14\n" +
	"\x10MEDIA_TYPE_AUDIO\x10\x03\x12\x12\n" +
	"\x0eMEDIA_TYPE_GIF\x10\x04*\x8f\x01\n" +
	"\n" +
	"DropStatus\x12\x1b\n" +
	"\x17DROP_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12DROP_STATUS_ACTIVE\x10\x01\x12\x17\n" +
	"\x13DROP_STATUS_DELETED\x10\x02\x12\x19\n" +
	"\x15DROP_STATUS_SUSPENDED\x10\x03\x12\x18\n" +
	"\x14DROP_STATUS_ARCHIVED\x10\x04*|\n" +
	"\vDraftStatus\x12\x1c\n" +
	"\x18DRAFT_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12DRAFT_STATUS_DRAFT\x10\x01\x12\x1b\n" +
	"\x17DRAFT_STATUS_AUTO_SAVED\x10\x02\x12\x1a\n" +
	"\x16DRAFT_STATUS_PUBLISHED\x10\x03*\xe4\x01\n" +
	"\x12ContentWarningType\x12$\n" +
	" CONTENT_WARNING_TYPE_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cCONTENT_WARNING_TYPE_SPOILER\x10\x01\x12\"\n" +
	"\x1eCONTENT_WARNING_TYPE_SENSITIVE\x10\x02\x12!\n" +
	"\x1dCONTENT_WARNING_TYPE_VIOLENCE\x10\x03\x12\x1e\n" +
	"\x1aCONTENT_WARNING_TYPE_ADULT\x10\x04\x12\x1f\n" +
	"\x1bCONTENT_WARNING_TYPE_CUSTOM\x10\x05B\xa9\x01\n" +
	"\x11com.avion.drop.v1B\tDropProtoP\x01Z3github.com/na2na-p/avion/proto/avion/drop/v1;dropv1\xa2\x02\x03ADX\xaa\x02\rAvion.Drop.V1\xca\x02\rAvion\\Drop\\V1\xe2\x02\x19Avion\\Drop\\V1\\GPBMetadata\xea\x02\x0fAvion::Drop::V1b\x06proto3"

var (
	file_avion_drop_v1_drop_proto_rawDescOnce sync.Once
	file_avion_drop_v1_drop_proto_rawDescData []byte
)

func file_avion_drop_v1_drop_proto_rawDescGZIP() []byte {
	file_avion_drop_v1_drop_proto_rawDescOnce.Do(func() {
		file_avion_drop_v1_drop_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_avion_drop_v1_drop_proto_rawDesc), len(file_avion_drop_v1_drop_proto_rawDesc)))
	})
	return file_avion_drop_v1_drop_proto_rawDescData
}

var file_avion_drop_v1_drop_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_avion_drop_v1_drop_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_avion_drop_v1_drop_proto_goTypes = []any{
	(DropVisibility)(0),           // 0: avion.drop.v1.DropVisibility
	(ReactionType)(0),             // 1: avion.drop.v1.ReactionType
	(MediaType)(0),                // 2: avion.drop.v1.MediaType
	(DropStatus)(0),               // 3: avion.drop.v1.DropStatus
	(DraftStatus)(0),              // 4: avion.drop.v1.DraftStatus
	(ContentWarningType)(0),       // 5: avion.drop.v1.ContentWarningType
	(*Drop)(nil),                  // 6: avion.drop.v1.Drop
	(*DropMedia)(nil),             // 7: avion.drop.v1.DropMedia
	(*DropReaction)(nil),          // 8: avion.drop.v1.DropReaction
	(*DropHashtag)(nil),           // 9: avion.drop.v1.DropHashtag
	(*DropMention)(nil),           // 10: avion.drop.v1.DropMention
	(*DropDraft)(nil),             // 11: avion.drop.v1.DropDraft
	(*DraftMedia)(nil),            // 12: avion.drop.v1.DraftMedia
	(*PollOption)(nil),            // 13: avion.drop.v1.PollOption
	(*Poll)(nil),                  // 14: avion.drop.v1.Poll
	(*UserPollVote)(nil),          // 15: avion.drop.v1.UserPollVote
	(*ContentWarning)(nil),        // 16: avion.drop.v1.ContentWarning
	(*EditHistory)(nil),           // 17: avion.drop.v1.EditHistory
	(*DropStats)(nil),             // 18: avion.drop.v1.DropStats
	(*timestamppb.Timestamp)(nil), // 19: google.protobuf.Timestamp
}
var file_avion_drop_v1_drop_proto_depIdxs = []int32{
	19, // 0: avion.drop.v1.Drop.created_at:type_name -> google.protobuf.Timestamp
	19, // 1: avion.drop.v1.Drop.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: avion.drop.v1.Drop.visibility:type_name -> avion.drop.v1.DropVisibility
	16, // 3: avion.drop.v1.Drop.content_warning:type_name -> avion.drop.v1.ContentWarning
	19, // 4: avion.drop.v1.Drop.edited_at:type_name -> google.protobuf.Timestamp
	3,  // 5: avion.drop.v1.Drop.status:type_name -> avion.drop.v1.DropStatus
	2,  // 6: avion.drop.v1.DropMedia.media_type:type_name -> avion.drop.v1.MediaType
	1,  // 7: avion.drop.v1.DropReaction.reaction_type:type_name -> avion.drop.v1.ReactionType
	19, // 8: avion.drop.v1.DropReaction.created_at:type_name -> google.protobuf.Timestamp
	19, // 9: avion.drop.v1.DropDraft.created_at:type_name -> google.protobuf.Timestamp
	19, // 10: avion.drop.v1.DropDraft.updated_at:type_name -> google.protobuf.Timestamp
	4,  // 11: avion.drop.v1.DropDraft.status:type_name -> avion.drop.v1.DraftStatus
	0,  // 12: avion.drop.v1.DropDraft.visibility:type_name -> avion.drop.v1.DropVisibility
	12, // 13: avion.drop.v1.DropDraft.media_attachments:type_name -> avion.drop.v1.DraftMedia
	19, // 14: avion.drop.v1.DropDraft.scheduled_at:type_name -> google.protobuf.Timestamp
	2,  // 15: avion.drop.v1.DraftMedia.media_type:type_name -> avion.drop.v1.MediaType
	13, // 16: avion.drop.v1.Poll.options:type_name -> avion.drop.v1.PollOption
	19, // 17: avion.drop.v1.Poll.expires_at:type_name -> google.protobuf.Timestamp
	19, // 18: avion.drop.v1.Poll.created_at:type_name -> google.protobuf.Timestamp
	19, // 19: avion.drop.v1.UserPollVote.voted_at:type_name -> google.protobuf.Timestamp
	5,  // 20: avion.drop.v1.ContentWarning.type:type_name -> avion.drop.v1.ContentWarningType
	19, // 21: avion.drop.v1.EditHistory.edited_at:type_name -> google.protobuf.Timestamp
	19, // 22: avion.drop.v1.DropStats.updated_at:type_name -> google.protobuf.Timestamp
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_avion_drop_v1_drop_proto_init() }
func file_avion_drop_v1_drop_proto_init() {
	if File_avion_drop_v1_drop_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_avion_drop_v1_drop_proto_rawDesc), len(file_avion_drop_v1_drop_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_avion_drop_v1_drop_proto_goTypes,
		DependencyIndexes: file_avion_drop_v1_drop_proto_depIdxs,
		EnumInfos:         file_avion_drop_v1_drop_proto_enumTypes,
		MessageInfos:      file_avion_drop_v1_drop_proto_msgTypes,
	}.Build()
	File_avion_drop_v1_drop_proto = out.File
	file_avion_drop_v1_drop_proto_goTypes = nil
	file_avion_drop_v1_drop_proto_depIdxs = nil
}
