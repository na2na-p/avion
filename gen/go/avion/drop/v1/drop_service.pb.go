// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: avion/drop/v1/drop_service.proto

package dropv1

import (
	v1 "github.com/na2na-p/avion/proto/avion/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Drop作成リクエスト
type CreateDropRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 投稿内容
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// 可視性
	Visibility DropVisibility `protobuf:"varint,2,opt,name=visibility,proto3,enum=avion.drop.v1.DropVisibility" json:"visibility,omitempty"`
	// リプライ元のDropID（オプション）
	ReplyToId string `protobuf:"bytes,3,opt,name=reply_to_id,json=replyToId,proto3" json:"reply_to_id,omitempty"`
	// 引用元のDropID（オプション）
	QuoteDropId string `protobuf:"bytes,4,opt,name=quote_drop_id,json=quoteDropId,proto3" json:"quote_drop_id,omitempty"`
	// メディアURL一覧（オプション）
	MediaAttachments []*MediaAttachment `protobuf:"bytes,5,rep,name=media_attachments,json=mediaAttachments,proto3" json:"media_attachments,omitempty"`
	// コンテンツ警告（オプション）
	ContentWarning *ContentWarning `protobuf:"bytes,6,opt,name=content_warning,json=contentWarning,proto3" json:"content_warning,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateDropRequest) Reset() {
	*x = CreateDropRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDropRequest) ProtoMessage() {}

func (x *CreateDropRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDropRequest.ProtoReflect.Descriptor instead.
func (*CreateDropRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDropRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateDropRequest) GetVisibility() DropVisibility {
	if x != nil {
		return x.Visibility
	}
	return DropVisibility_DROP_VISIBILITY_UNSPECIFIED
}

func (x *CreateDropRequest) GetReplyToId() string {
	if x != nil {
		return x.ReplyToId
	}
	return ""
}

func (x *CreateDropRequest) GetQuoteDropId() string {
	if x != nil {
		return x.QuoteDropId
	}
	return ""
}

func (x *CreateDropRequest) GetMediaAttachments() []*MediaAttachment {
	if x != nil {
		return x.MediaAttachments
	}
	return nil
}

func (x *CreateDropRequest) GetContentWarning() *ContentWarning {
	if x != nil {
		return x.ContentWarning
	}
	return nil
}

// メディア添付情報
type MediaAttachment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// メディアURL
	MediaUrl string `protobuf:"bytes,1,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	// メディアタイプ
	MediaType MediaType `protobuf:"varint,2,opt,name=media_type,json=mediaType,proto3,enum=avion.drop.v1.MediaType" json:"media_type,omitempty"`
	// サムネイルURL（オプション）
	ThumbnailUrl string `protobuf:"bytes,3,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	// 代替テキスト（オプション）
	AltText       string `protobuf:"bytes,4,opt,name=alt_text,json=altText,proto3" json:"alt_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaAttachment) Reset() {
	*x = MediaAttachment{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaAttachment) ProtoMessage() {}

func (x *MediaAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaAttachment.ProtoReflect.Descriptor instead.
func (*MediaAttachment) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{1}
}

func (x *MediaAttachment) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *MediaAttachment) GetMediaType() MediaType {
	if x != nil {
		return x.MediaType
	}
	return MediaType_MEDIA_TYPE_UNSPECIFIED
}

func (x *MediaAttachment) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *MediaAttachment) GetAltText() string {
	if x != nil {
		return x.AltText
	}
	return ""
}

// Drop作成レスポンス
type CreateDropResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 作成されたDrop
	Drop          *Drop `protobuf:"bytes,1,opt,name=drop,proto3" json:"drop,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDropResponse) Reset() {
	*x = CreateDropResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDropResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDropResponse) ProtoMessage() {}

func (x *CreateDropResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDropResponse.ProtoReflect.Descriptor instead.
func (*CreateDropResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDropResponse) GetDrop() *Drop {
	if x != nil {
		return x.Drop
	}
	return nil
}

// Drop取得リクエスト
type GetDropRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DropのID
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDropRequest) Reset() {
	*x = GetDropRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDropRequest) ProtoMessage() {}

func (x *GetDropRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDropRequest.ProtoReflect.Descriptor instead.
func (*GetDropRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetDropRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Drop取得レスポンス
type GetDropResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 取得したDrop
	Drop *Drop `protobuf:"bytes,1,opt,name=drop,proto3" json:"drop,omitempty"`
	// 添付メディア一覧
	Media []*DropMedia `protobuf:"bytes,2,rep,name=media,proto3" json:"media,omitempty"`
	// ハッシュタグ一覧
	Hashtags []*DropHashtag `protobuf:"bytes,3,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
	// メンション一覧
	Mentions      []*DropMention `protobuf:"bytes,4,rep,name=mentions,proto3" json:"mentions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDropResponse) Reset() {
	*x = GetDropResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDropResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDropResponse) ProtoMessage() {}

func (x *GetDropResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDropResponse.ProtoReflect.Descriptor instead.
func (*GetDropResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetDropResponse) GetDrop() *Drop {
	if x != nil {
		return x.Drop
	}
	return nil
}

func (x *GetDropResponse) GetMedia() []*DropMedia {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *GetDropResponse) GetHashtags() []*DropHashtag {
	if x != nil {
		return x.Hashtags
	}
	return nil
}

func (x *GetDropResponse) GetMentions() []*DropMention {
	if x != nil {
		return x.Mentions
	}
	return nil
}

// Drop更新リクエスト
type UpdateDropRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新対象のDropID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 新しい投稿内容
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// 新しい可視性
	Visibility DropVisibility `protobuf:"varint,3,opt,name=visibility,proto3,enum=avion.drop.v1.DropVisibility" json:"visibility,omitempty"`
	// 新しいコンテンツ警告（オプション）
	ContentWarning *ContentWarning `protobuf:"bytes,4,opt,name=content_warning,json=contentWarning,proto3" json:"content_warning,omitempty"`
	// 編集理由（オプション）
	EditReason    string `protobuf:"bytes,5,opt,name=edit_reason,json=editReason,proto3" json:"edit_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDropRequest) Reset() {
	*x = UpdateDropRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDropRequest) ProtoMessage() {}

func (x *UpdateDropRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDropRequest.ProtoReflect.Descriptor instead.
func (*UpdateDropRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDropRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDropRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateDropRequest) GetVisibility() DropVisibility {
	if x != nil {
		return x.Visibility
	}
	return DropVisibility_DROP_VISIBILITY_UNSPECIFIED
}

func (x *UpdateDropRequest) GetContentWarning() *ContentWarning {
	if x != nil {
		return x.ContentWarning
	}
	return nil
}

func (x *UpdateDropRequest) GetEditReason() string {
	if x != nil {
		return x.EditReason
	}
	return ""
}

// Drop更新レスポンス
type UpdateDropResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新されたDrop
	Drop          *Drop `protobuf:"bytes,1,opt,name=drop,proto3" json:"drop,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDropResponse) Reset() {
	*x = UpdateDropResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDropResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDropResponse) ProtoMessage() {}

func (x *UpdateDropResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDropResponse.ProtoReflect.Descriptor instead.
func (*UpdateDropResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDropResponse) GetDrop() *Drop {
	if x != nil {
		return x.Drop
	}
	return nil
}

// Drop削除リクエスト
type DeleteDropRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 削除対象のDropID
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDropRequest) Reset() {
	*x = DeleteDropRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDropRequest) ProtoMessage() {}

func (x *DeleteDropRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDropRequest.ProtoReflect.Descriptor instead.
func (*DeleteDropRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteDropRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Drop削除レスポンス
type DeleteDropResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 削除成功フラグ
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDropResponse) Reset() {
	*x = DeleteDropResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDropResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDropResponse) ProtoMessage() {}

func (x *DeleteDropResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDropResponse.ProtoReflect.Descriptor instead.
func (*DeleteDropResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDropResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Drop一覧取得リクエスト
type ListDropsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ページネーション
	Pagination *v1.PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// フィルター条件（オプション）
	Filter        *DropFilter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDropsRequest) Reset() {
	*x = ListDropsRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDropsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDropsRequest) ProtoMessage() {}

func (x *ListDropsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDropsRequest.ProtoReflect.Descriptor instead.
func (*ListDropsRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListDropsRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListDropsRequest) GetFilter() *DropFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// Dropフィルター条件
type DropFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 可視性でフィルター
	Visibility DropVisibility `protobuf:"varint,1,opt,name=visibility,proto3,enum=avion.drop.v1.DropVisibility" json:"visibility,omitempty"`
	// 開始日時
	From *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	// 終了日時
	To *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	// ハッシュタグでフィルター
	Hashtag       string `protobuf:"bytes,4,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropFilter) Reset() {
	*x = DropFilter{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropFilter) ProtoMessage() {}

func (x *DropFilter) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropFilter.ProtoReflect.Descriptor instead.
func (*DropFilter) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{10}
}

func (x *DropFilter) GetVisibility() DropVisibility {
	if x != nil {
		return x.Visibility
	}
	return DropVisibility_DROP_VISIBILITY_UNSPECIFIED
}

func (x *DropFilter) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *DropFilter) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *DropFilter) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

// Drop一覧取得レスポンス
type ListDropsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Drop一覧
	Drops []*Drop `protobuf:"bytes,1,rep,name=drops,proto3" json:"drops,omitempty"`
	// ページネーション情報
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDropsResponse) Reset() {
	*x = ListDropsResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDropsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDropsResponse) ProtoMessage() {}

func (x *ListDropsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDropsResponse.ProtoReflect.Descriptor instead.
func (*ListDropsResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListDropsResponse) GetDrops() []*Drop {
	if x != nil {
		return x.Drops
	}
	return nil
}

func (x *ListDropsResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ユーザーのDrop一覧取得リクエスト
type ListUserDropsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ページネーション
	Pagination *v1.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// リプライを含むか
	IncludeReplies bool `protobuf:"varint,3,opt,name=include_replies,json=includeReplies,proto3" json:"include_replies,omitempty"`
	// リドロップを含むか
	IncludeRedrops bool `protobuf:"varint,4,opt,name=include_redrops,json=includeRedrops,proto3" json:"include_redrops,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListUserDropsRequest) Reset() {
	*x = ListUserDropsRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserDropsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserDropsRequest) ProtoMessage() {}

func (x *ListUserDropsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserDropsRequest.ProtoReflect.Descriptor instead.
func (*ListUserDropsRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListUserDropsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListUserDropsRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListUserDropsRequest) GetIncludeReplies() bool {
	if x != nil {
		return x.IncludeReplies
	}
	return false
}

func (x *ListUserDropsRequest) GetIncludeRedrops() bool {
	if x != nil {
		return x.IncludeRedrops
	}
	return false
}

// ユーザーのDrop一覧取得レスポンス
type ListUserDropsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Drop一覧
	Drops []*Drop `protobuf:"bytes,1,rep,name=drops,proto3" json:"drops,omitempty"`
	// ページネーション情報
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserDropsResponse) Reset() {
	*x = ListUserDropsResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserDropsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserDropsResponse) ProtoMessage() {}

func (x *ListUserDropsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserDropsResponse.ProtoReflect.Descriptor instead.
func (*ListUserDropsResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListUserDropsResponse) GetDrops() []*Drop {
	if x != nil {
		return x.Drops
	}
	return nil
}

func (x *ListUserDropsResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// いいね追加リクエスト
type AddLikeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 対象のDropID
	DropId        string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddLikeRequest) Reset() {
	*x = AddLikeRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLikeRequest) ProtoMessage() {}

func (x *AddLikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLikeRequest.ProtoReflect.Descriptor instead.
func (*AddLikeRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{14}
}

func (x *AddLikeRequest) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

// いいね追加レスポンス
type AddLikeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 更新後のいいね数
	LikeCount     int32 `protobuf:"varint,2,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddLikeResponse) Reset() {
	*x = AddLikeResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLikeResponse) ProtoMessage() {}

func (x *AddLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLikeResponse.ProtoReflect.Descriptor instead.
func (*AddLikeResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{15}
}

func (x *AddLikeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddLikeResponse) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

// いいね削除リクエスト
type RemoveLikeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 対象のDropID
	DropId        string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveLikeRequest) Reset() {
	*x = RemoveLikeRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveLikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLikeRequest) ProtoMessage() {}

func (x *RemoveLikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLikeRequest.ProtoReflect.Descriptor instead.
func (*RemoveLikeRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{16}
}

func (x *RemoveLikeRequest) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

// いいね削除レスポンス
type RemoveLikeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 更新後のいいね数
	LikeCount     int32 `protobuf:"varint,2,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveLikeResponse) Reset() {
	*x = RemoveLikeResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLikeResponse) ProtoMessage() {}

func (x *RemoveLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLikeResponse.ProtoReflect.Descriptor instead.
func (*RemoveLikeResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{17}
}

func (x *RemoveLikeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveLikeResponse) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

// リドロップ追加リクエスト
type AddRedropRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 対象のDropID
	DropId        string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRedropRequest) Reset() {
	*x = AddRedropRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRedropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRedropRequest) ProtoMessage() {}

func (x *AddRedropRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRedropRequest.ProtoReflect.Descriptor instead.
func (*AddRedropRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{18}
}

func (x *AddRedropRequest) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

// リドロップ追加レスポンス
type AddRedropResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 更新後のリドロップ数
	RedropCount   int32 `protobuf:"varint,2,opt,name=redrop_count,json=redropCount,proto3" json:"redrop_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRedropResponse) Reset() {
	*x = AddRedropResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRedropResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRedropResponse) ProtoMessage() {}

func (x *AddRedropResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRedropResponse.ProtoReflect.Descriptor instead.
func (*AddRedropResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{19}
}

func (x *AddRedropResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddRedropResponse) GetRedropCount() int32 {
	if x != nil {
		return x.RedropCount
	}
	return 0
}

// リドロップ削除リクエスト
type RemoveRedropRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 対象のDropID
	DropId        string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveRedropRequest) Reset() {
	*x = RemoveRedropRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRedropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRedropRequest) ProtoMessage() {}

func (x *RemoveRedropRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRedropRequest.ProtoReflect.Descriptor instead.
func (*RemoveRedropRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{20}
}

func (x *RemoveRedropRequest) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

// リドロップ削除レスポンス
type RemoveRedropResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 更新後のリドロップ数
	RedropCount   int32 `protobuf:"varint,2,opt,name=redrop_count,json=redropCount,proto3" json:"redrop_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveRedropResponse) Reset() {
	*x = RemoveRedropResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRedropResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRedropResponse) ProtoMessage() {}

func (x *RemoveRedropResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRedropResponse.ProtoReflect.Descriptor instead.
func (*RemoveRedropResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{21}
}

func (x *RemoveRedropResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveRedropResponse) GetRedropCount() int32 {
	if x != nil {
		return x.RedropCount
	}
	return 0
}

// ブックマーク追加リクエスト
type AddBookmarkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 対象のDropID
	DropId        string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBookmarkRequest) Reset() {
	*x = AddBookmarkRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBookmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBookmarkRequest) ProtoMessage() {}

func (x *AddBookmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBookmarkRequest.ProtoReflect.Descriptor instead.
func (*AddBookmarkRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{22}
}

func (x *AddBookmarkRequest) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

// ブックマーク追加レスポンス
type AddBookmarkResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 更新後のブックマーク数
	BookmarkCount int32 `protobuf:"varint,2,opt,name=bookmark_count,json=bookmarkCount,proto3" json:"bookmark_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBookmarkResponse) Reset() {
	*x = AddBookmarkResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBookmarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBookmarkResponse) ProtoMessage() {}

func (x *AddBookmarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBookmarkResponse.ProtoReflect.Descriptor instead.
func (*AddBookmarkResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{23}
}

func (x *AddBookmarkResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddBookmarkResponse) GetBookmarkCount() int32 {
	if x != nil {
		return x.BookmarkCount
	}
	return 0
}

// ブックマーク削除リクエスト
type RemoveBookmarkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 対象のDropID
	DropId        string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBookmarkRequest) Reset() {
	*x = RemoveBookmarkRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBookmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBookmarkRequest) ProtoMessage() {}

func (x *RemoveBookmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBookmarkRequest.ProtoReflect.Descriptor instead.
func (*RemoveBookmarkRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{24}
}

func (x *RemoveBookmarkRequest) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

// ブックマーク削除レスポンス
type RemoveBookmarkResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 更新後のブックマーク数
	BookmarkCount int32 `protobuf:"varint,2,opt,name=bookmark_count,json=bookmarkCount,proto3" json:"bookmark_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBookmarkResponse) Reset() {
	*x = RemoveBookmarkResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBookmarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBookmarkResponse) ProtoMessage() {}

func (x *RemoveBookmarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBookmarkResponse.ProtoReflect.Descriptor instead.
func (*RemoveBookmarkResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{25}
}

func (x *RemoveBookmarkResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveBookmarkResponse) GetBookmarkCount() int32 {
	if x != nil {
		return x.BookmarkCount
	}
	return 0
}

// Dropにリプライリクエスト
type ReplyToDropRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// リプライ元のDropID
	ReplyToId string `protobuf:"bytes,1,opt,name=reply_to_id,json=replyToId,proto3" json:"reply_to_id,omitempty"`
	// リプライ内容
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// 可視性
	Visibility DropVisibility `protobuf:"varint,3,opt,name=visibility,proto3,enum=avion.drop.v1.DropVisibility" json:"visibility,omitempty"`
	// メディア添付（オプション）
	MediaAttachments []*MediaAttachment `protobuf:"bytes,4,rep,name=media_attachments,json=mediaAttachments,proto3" json:"media_attachments,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReplyToDropRequest) Reset() {
	*x = ReplyToDropRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyToDropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyToDropRequest) ProtoMessage() {}

func (x *ReplyToDropRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyToDropRequest.ProtoReflect.Descriptor instead.
func (*ReplyToDropRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{26}
}

func (x *ReplyToDropRequest) GetReplyToId() string {
	if x != nil {
		return x.ReplyToId
	}
	return ""
}

func (x *ReplyToDropRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReplyToDropRequest) GetVisibility() DropVisibility {
	if x != nil {
		return x.Visibility
	}
	return DropVisibility_DROP_VISIBILITY_UNSPECIFIED
}

func (x *ReplyToDropRequest) GetMediaAttachments() []*MediaAttachment {
	if x != nil {
		return x.MediaAttachments
	}
	return nil
}

// Dropにリプライレスポンス
type ReplyToDropResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 作成されたリプライDrop
	Drop          *Drop `protobuf:"bytes,1,opt,name=drop,proto3" json:"drop,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyToDropResponse) Reset() {
	*x = ReplyToDropResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyToDropResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyToDropResponse) ProtoMessage() {}

func (x *ReplyToDropResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyToDropResponse.ProtoReflect.Descriptor instead.
func (*ReplyToDropResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{27}
}

func (x *ReplyToDropResponse) GetDrop() *Drop {
	if x != nil {
		return x.Drop
	}
	return nil
}

// Dropを引用リクエスト
type QuoteDropRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 引用元のDropID
	QuoteDropId string `protobuf:"bytes,1,opt,name=quote_drop_id,json=quoteDropId,proto3" json:"quote_drop_id,omitempty"`
	// 引用コメント
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// 可視性
	Visibility DropVisibility `protobuf:"varint,3,opt,name=visibility,proto3,enum=avion.drop.v1.DropVisibility" json:"visibility,omitempty"`
	// メディア添付（オプション）
	MediaAttachments []*MediaAttachment `protobuf:"bytes,4,rep,name=media_attachments,json=mediaAttachments,proto3" json:"media_attachments,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *QuoteDropRequest) Reset() {
	*x = QuoteDropRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuoteDropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteDropRequest) ProtoMessage() {}

func (x *QuoteDropRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteDropRequest.ProtoReflect.Descriptor instead.
func (*QuoteDropRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{28}
}

func (x *QuoteDropRequest) GetQuoteDropId() string {
	if x != nil {
		return x.QuoteDropId
	}
	return ""
}

func (x *QuoteDropRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *QuoteDropRequest) GetVisibility() DropVisibility {
	if x != nil {
		return x.Visibility
	}
	return DropVisibility_DROP_VISIBILITY_UNSPECIFIED
}

func (x *QuoteDropRequest) GetMediaAttachments() []*MediaAttachment {
	if x != nil {
		return x.MediaAttachments
	}
	return nil
}

// Dropを引用レスポンス
type QuoteDropResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 作成された引用Drop
	Drop          *Drop `protobuf:"bytes,1,opt,name=drop,proto3" json:"drop,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuoteDropResponse) Reset() {
	*x = QuoteDropResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuoteDropResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteDropResponse) ProtoMessage() {}

func (x *QuoteDropResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteDropResponse.ProtoReflect.Descriptor instead.
func (*QuoteDropResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{29}
}

func (x *QuoteDropResponse) GetDrop() *Drop {
	if x != nil {
		return x.Drop
	}
	return nil
}

// Drop検索リクエスト
type SearchDropsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 検索クエリ
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// ページネーション
	Pagination *v1.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// 検索フィルター（オプション）
	Filter        *SearchFilter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchDropsRequest) Reset() {
	*x = SearchDropsRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchDropsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDropsRequest) ProtoMessage() {}

func (x *SearchDropsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDropsRequest.ProtoReflect.Descriptor instead.
func (*SearchDropsRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{30}
}

func (x *SearchDropsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchDropsRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchDropsRequest) GetFilter() *SearchFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// 検索フィルター
type SearchFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーIDでフィルター
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ハッシュタグでフィルター
	Hashtags []string `protobuf:"bytes,2,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
	// 期間（開始）
	From *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// 期間（終了）
	To *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	// メディアを含むDropのみ
	HasMedia      bool `protobuf:"varint,5,opt,name=has_media,json=hasMedia,proto3" json:"has_media,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchFilter) Reset() {
	*x = SearchFilter{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFilter) ProtoMessage() {}

func (x *SearchFilter) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFilter.ProtoReflect.Descriptor instead.
func (*SearchFilter) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{31}
}

func (x *SearchFilter) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SearchFilter) GetHashtags() []string {
	if x != nil {
		return x.Hashtags
	}
	return nil
}

func (x *SearchFilter) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *SearchFilter) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SearchFilter) GetHasMedia() bool {
	if x != nil {
		return x.HasMedia
	}
	return false
}

// Drop検索レスポンス
type SearchDropsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 検索結果のDrop一覧
	Drops []*Drop `protobuf:"bytes,1,rep,name=drops,proto3" json:"drops,omitempty"`
	// ページネーション情報
	Pagination *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// 検索結果の総件数
	TotalResults  int32 `protobuf:"varint,3,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchDropsResponse) Reset() {
	*x = SearchDropsResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchDropsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDropsResponse) ProtoMessage() {}

func (x *SearchDropsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDropsResponse.ProtoReflect.Descriptor instead.
func (*SearchDropsResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{32}
}

func (x *SearchDropsResponse) GetDrops() []*Drop {
	if x != nil {
		return x.Drops
	}
	return nil
}

func (x *SearchDropsResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchDropsResponse) GetTotalResults() int32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

// Dropスレッド取得リクエスト
type GetDropThreadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// スレッドのルートDropID
	DropId string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	// 取得する階層の深さ（0は無制限）
	Depth         int32 `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDropThreadRequest) Reset() {
	*x = GetDropThreadRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDropThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDropThreadRequest) ProtoMessage() {}

func (x *GetDropThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDropThreadRequest.ProtoReflect.Descriptor instead.
func (*GetDropThreadRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{33}
}

func (x *GetDropThreadRequest) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

func (x *GetDropThreadRequest) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

// Dropスレッド取得レスポンス
type GetDropThreadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// スレッドのルートDrop
	RootDrop *Drop `protobuf:"bytes,1,opt,name=root_drop,json=rootDrop,proto3" json:"root_drop,omitempty"`
	// リプライツリー
	Replies       []*ThreadNode `protobuf:"bytes,2,rep,name=replies,proto3" json:"replies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDropThreadResponse) Reset() {
	*x = GetDropThreadResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDropThreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDropThreadResponse) ProtoMessage() {}

func (x *GetDropThreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDropThreadResponse.ProtoReflect.Descriptor instead.
func (*GetDropThreadResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{34}
}

func (x *GetDropThreadResponse) GetRootDrop() *Drop {
	if x != nil {
		return x.RootDrop
	}
	return nil
}

func (x *GetDropThreadResponse) GetReplies() []*ThreadNode {
	if x != nil {
		return x.Replies
	}
	return nil
}

// スレッドノード（リプライツリー構造）
type ThreadNode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Drop本体
	Drop *Drop `protobuf:"bytes,1,opt,name=drop,proto3" json:"drop,omitempty"`
	// 子リプライ
	Children []*ThreadNode `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty"`
	// ツリー内の深さ
	Depth         int32 `protobuf:"varint,3,opt,name=depth,proto3" json:"depth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreadNode) Reset() {
	*x = ThreadNode{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadNode) ProtoMessage() {}

func (x *ThreadNode) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadNode.ProtoReflect.Descriptor instead.
func (*ThreadNode) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{35}
}

func (x *ThreadNode) GetDrop() *Drop {
	if x != nil {
		return x.Drop
	}
	return nil
}

func (x *ThreadNode) GetChildren() []*ThreadNode {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *ThreadNode) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

// 下書き作成リクエスト
type CreateDraftRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 下書き内容
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// 可視性（投稿時の設定）
	Visibility DropVisibility `protobuf:"varint,2,opt,name=visibility,proto3,enum=avion.drop.v1.DropVisibility" json:"visibility,omitempty"`
	// リプライ元のDropID（オプション）
	ReplyToId string `protobuf:"bytes,3,opt,name=reply_to_id,json=replyToId,proto3" json:"reply_to_id,omitempty"`
	// 引用元のDropID（オプション）
	QuoteDropId string `protobuf:"bytes,4,opt,name=quote_drop_id,json=quoteDropId,proto3" json:"quote_drop_id,omitempty"`
	// メディア添付情報（オプション）
	MediaAttachments []*MediaAttachment `protobuf:"bytes,5,rep,name=media_attachments,json=mediaAttachments,proto3" json:"media_attachments,omitempty"`
	// 投稿予定日時（スケジュール投稿用、オプション）
	ScheduledAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDraftRequest) Reset() {
	*x = CreateDraftRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDraftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDraftRequest) ProtoMessage() {}

func (x *CreateDraftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDraftRequest.ProtoReflect.Descriptor instead.
func (*CreateDraftRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{36}
}

func (x *CreateDraftRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateDraftRequest) GetVisibility() DropVisibility {
	if x != nil {
		return x.Visibility
	}
	return DropVisibility_DROP_VISIBILITY_UNSPECIFIED
}

func (x *CreateDraftRequest) GetReplyToId() string {
	if x != nil {
		return x.ReplyToId
	}
	return ""
}

func (x *CreateDraftRequest) GetQuoteDropId() string {
	if x != nil {
		return x.QuoteDropId
	}
	return ""
}

func (x *CreateDraftRequest) GetMediaAttachments() []*MediaAttachment {
	if x != nil {
		return x.MediaAttachments
	}
	return nil
}

func (x *CreateDraftRequest) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

// 下書き作成レスポンス
type CreateDraftResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 作成された下書き
	Draft         *DropDraft `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDraftResponse) Reset() {
	*x = CreateDraftResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDraftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDraftResponse) ProtoMessage() {}

func (x *CreateDraftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDraftResponse.ProtoReflect.Descriptor instead.
func (*CreateDraftResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{37}
}

func (x *CreateDraftResponse) GetDraft() *DropDraft {
	if x != nil {
		return x.Draft
	}
	return nil
}

// 下書き取得リクエスト
type GetDraftRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 下書きID
	DraftId string `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	// ユーザーID（権限確認用）
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDraftRequest) Reset() {
	*x = GetDraftRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDraftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDraftRequest) ProtoMessage() {}

func (x *GetDraftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDraftRequest.ProtoReflect.Descriptor instead.
func (*GetDraftRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{38}
}

func (x *GetDraftRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

func (x *GetDraftRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 下書き取得レスポンス
type GetDraftResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 取得した下書き
	Draft         *DropDraft `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDraftResponse) Reset() {
	*x = GetDraftResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDraftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDraftResponse) ProtoMessage() {}

func (x *GetDraftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDraftResponse.ProtoReflect.Descriptor instead.
func (*GetDraftResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{39}
}

func (x *GetDraftResponse) GetDraft() *DropDraft {
	if x != nil {
		return x.Draft
	}
	return nil
}

// 下書き更新リクエスト
type UpdateDraftRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 下書きID
	DraftId string `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	// ユーザーID（権限確認用）
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 下書き内容
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// 可視性
	Visibility DropVisibility `protobuf:"varint,4,opt,name=visibility,proto3,enum=avion.drop.v1.DropVisibility" json:"visibility,omitempty"`
	// メディア添付情報
	MediaAttachments []*MediaAttachment `protobuf:"bytes,5,rep,name=media_attachments,json=mediaAttachments,proto3" json:"media_attachments,omitempty"`
	// 投稿予定日時（スケジュール投稿用）
	ScheduledAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`
	// ステータス（自動保存時に使用）
	Status        DraftStatus `protobuf:"varint,7,opt,name=status,proto3,enum=avion.drop.v1.DraftStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDraftRequest) Reset() {
	*x = UpdateDraftRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDraftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDraftRequest) ProtoMessage() {}

func (x *UpdateDraftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDraftRequest.ProtoReflect.Descriptor instead.
func (*UpdateDraftRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateDraftRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

func (x *UpdateDraftRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateDraftRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateDraftRequest) GetVisibility() DropVisibility {
	if x != nil {
		return x.Visibility
	}
	return DropVisibility_DROP_VISIBILITY_UNSPECIFIED
}

func (x *UpdateDraftRequest) GetMediaAttachments() []*MediaAttachment {
	if x != nil {
		return x.MediaAttachments
	}
	return nil
}

func (x *UpdateDraftRequest) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *UpdateDraftRequest) GetStatus() DraftStatus {
	if x != nil {
		return x.Status
	}
	return DraftStatus_DRAFT_STATUS_UNSPECIFIED
}

// 下書き更新レスポンス
type UpdateDraftResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新された下書き
	Draft         *DropDraft `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDraftResponse) Reset() {
	*x = UpdateDraftResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDraftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDraftResponse) ProtoMessage() {}

func (x *UpdateDraftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDraftResponse.ProtoReflect.Descriptor instead.
func (*UpdateDraftResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateDraftResponse) GetDraft() *DropDraft {
	if x != nil {
		return x.Draft
	}
	return nil
}

// 下書き削除リクエスト
type DeleteDraftRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 下書きID
	DraftId string `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	// ユーザーID（権限確認用）
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDraftRequest) Reset() {
	*x = DeleteDraftRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDraftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDraftRequest) ProtoMessage() {}

func (x *DeleteDraftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDraftRequest.ProtoReflect.Descriptor instead.
func (*DeleteDraftRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{42}
}

func (x *DeleteDraftRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

func (x *DeleteDraftRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 下書き削除レスポンス
type DeleteDraftResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 削除成功フラグ
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDraftResponse) Reset() {
	*x = DeleteDraftResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDraftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDraftResponse) ProtoMessage() {}

func (x *DeleteDraftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDraftResponse.ProtoReflect.Descriptor instead.
func (*DeleteDraftResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{43}
}

func (x *DeleteDraftResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 下書き一覧取得リクエスト
type ListDraftsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ページネーション
	Pagination *v1.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// フィルター
	Filter        *DraftFilter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDraftsRequest) Reset() {
	*x = ListDraftsRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDraftsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDraftsRequest) ProtoMessage() {}

func (x *ListDraftsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDraftsRequest.ProtoReflect.Descriptor instead.
func (*ListDraftsRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{44}
}

func (x *ListDraftsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListDraftsRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListDraftsRequest) GetFilter() *DraftFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// 下書きフィルター
type DraftFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ステータスでフィルター
	Status DraftStatus `protobuf:"varint,1,opt,name=status,proto3,enum=avion.drop.v1.DraftStatus" json:"status,omitempty"`
	// スケジュール投稿のみ
	ScheduledOnly bool `protobuf:"varint,2,opt,name=scheduled_only,json=scheduledOnly,proto3" json:"scheduled_only,omitempty"`
	// 開始日時
	From *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// 終了日時
	To            *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DraftFilter) Reset() {
	*x = DraftFilter{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DraftFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftFilter) ProtoMessage() {}

func (x *DraftFilter) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftFilter.ProtoReflect.Descriptor instead.
func (*DraftFilter) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{45}
}

func (x *DraftFilter) GetStatus() DraftStatus {
	if x != nil {
		return x.Status
	}
	return DraftStatus_DRAFT_STATUS_UNSPECIFIED
}

func (x *DraftFilter) GetScheduledOnly() bool {
	if x != nil {
		return x.ScheduledOnly
	}
	return false
}

func (x *DraftFilter) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *DraftFilter) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

// 下書き一覧取得レスポンス
type ListDraftsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 下書き一覧
	Drafts []*DropDraft `protobuf:"bytes,1,rep,name=drafts,proto3" json:"drafts,omitempty"`
	// ページネーション情報
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDraftsResponse) Reset() {
	*x = ListDraftsResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDraftsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDraftsResponse) ProtoMessage() {}

func (x *ListDraftsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDraftsResponse.ProtoReflect.Descriptor instead.
func (*ListDraftsResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{46}
}

func (x *ListDraftsResponse) GetDrafts() []*DropDraft {
	if x != nil {
		return x.Drafts
	}
	return nil
}

func (x *ListDraftsResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// 下書きから投稿リクエスト
type PublishDraftRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 下書きID
	DraftId string `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	// ユーザーID（権限確認用）
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 投稿時に上書きする内容（オプション）
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// 投稿時に上書きする可視性（オプション）
	Visibility    DropVisibility `protobuf:"varint,4,opt,name=visibility,proto3,enum=avion.drop.v1.DropVisibility" json:"visibility,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishDraftRequest) Reset() {
	*x = PublishDraftRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishDraftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishDraftRequest) ProtoMessage() {}

func (x *PublishDraftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishDraftRequest.ProtoReflect.Descriptor instead.
func (*PublishDraftRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{47}
}

func (x *PublishDraftRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

func (x *PublishDraftRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PublishDraftRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PublishDraftRequest) GetVisibility() DropVisibility {
	if x != nil {
		return x.Visibility
	}
	return DropVisibility_DROP_VISIBILITY_UNSPECIFIED
}

// 下書きから投稿レスポンス
type PublishDraftResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 投稿されたDrop
	Drop *Drop `protobuf:"bytes,1,opt,name=drop,proto3" json:"drop,omitempty"`
	// 更新された下書き（ステータスがPUBLISHEDに変更）
	Draft         *DropDraft `protobuf:"bytes,2,opt,name=draft,proto3" json:"draft,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishDraftResponse) Reset() {
	*x = PublishDraftResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishDraftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishDraftResponse) ProtoMessage() {}

func (x *PublishDraftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishDraftResponse.ProtoReflect.Descriptor instead.
func (*PublishDraftResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{48}
}

func (x *PublishDraftResponse) GetDrop() *Drop {
	if x != nil {
		return x.Drop
	}
	return nil
}

func (x *PublishDraftResponse) GetDraft() *DropDraft {
	if x != nil {
		return x.Draft
	}
	return nil
}

// 自動保存リクエスト（ストリーミング）
type AutoSaveDraftRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 下書きID（初回はempty、新規作成時）
	DraftId string `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 下書き内容
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// 可視性
	Visibility DropVisibility `protobuf:"varint,4,opt,name=visibility,proto3,enum=avion.drop.v1.DropVisibility" json:"visibility,omitempty"`
	// リプライ元のDropID（オプション）
	ReplyToId string `protobuf:"bytes,5,opt,name=reply_to_id,json=replyToId,proto3" json:"reply_to_id,omitempty"`
	// 引用元のDropID（オプション）
	QuoteDropId string `protobuf:"bytes,6,opt,name=quote_drop_id,json=quoteDropId,proto3" json:"quote_drop_id,omitempty"`
	// タイムスタンプ（クライアント側の保存時刻）
	ClientTimestamp *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=client_timestamp,json=clientTimestamp,proto3" json:"client_timestamp,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AutoSaveDraftRequest) Reset() {
	*x = AutoSaveDraftRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoSaveDraftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoSaveDraftRequest) ProtoMessage() {}

func (x *AutoSaveDraftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoSaveDraftRequest.ProtoReflect.Descriptor instead.
func (*AutoSaveDraftRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{49}
}

func (x *AutoSaveDraftRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

func (x *AutoSaveDraftRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AutoSaveDraftRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AutoSaveDraftRequest) GetVisibility() DropVisibility {
	if x != nil {
		return x.Visibility
	}
	return DropVisibility_DROP_VISIBILITY_UNSPECIFIED
}

func (x *AutoSaveDraftRequest) GetReplyToId() string {
	if x != nil {
		return x.ReplyToId
	}
	return ""
}

func (x *AutoSaveDraftRequest) GetQuoteDropId() string {
	if x != nil {
		return x.QuoteDropId
	}
	return ""
}

func (x *AutoSaveDraftRequest) GetClientTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.ClientTimestamp
	}
	return nil
}

// 自動保存レスポンス（ストリーミング）
type AutoSaveDraftResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 下書きID
	DraftId string `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	// 保存成功フラグ
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// サーバー側の保存時刻
	ServerTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=server_timestamp,json=serverTimestamp,proto3" json:"server_timestamp,omitempty"`
	// エラーメッセージ（失敗時）
	ErrorMessage  string `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoSaveDraftResponse) Reset() {
	*x = AutoSaveDraftResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoSaveDraftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoSaveDraftResponse) ProtoMessage() {}

func (x *AutoSaveDraftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoSaveDraftResponse.ProtoReflect.Descriptor instead.
func (*AutoSaveDraftResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{50}
}

func (x *AutoSaveDraftResponse) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

func (x *AutoSaveDraftResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AutoSaveDraftResponse) GetServerTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerTimestamp
	}
	return nil
}

func (x *AutoSaveDraftResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 投票作成リクエスト
type CreatePollRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 関連するDropID
	DropId string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	// 質問文
	Question string `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	// 投票オプション（2～10個）
	Options []string `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	// 複数選択可能か
	MultipleChoice bool `protobuf:"varint,4,opt,name=multiple_choice,json=multipleChoice,proto3" json:"multiple_choice,omitempty"`
	// 投票期限（時間単位、最小1時間、最大7日）
	DurationHours int32 `protobuf:"varint,5,opt,name=duration_hours,json=durationHours,proto3" json:"duration_hours,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePollRequest) Reset() {
	*x = CreatePollRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePollRequest) ProtoMessage() {}

func (x *CreatePollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePollRequest.ProtoReflect.Descriptor instead.
func (*CreatePollRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{51}
}

func (x *CreatePollRequest) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

func (x *CreatePollRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *CreatePollRequest) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreatePollRequest) GetMultipleChoice() bool {
	if x != nil {
		return x.MultipleChoice
	}
	return false
}

func (x *CreatePollRequest) GetDurationHours() int32 {
	if x != nil {
		return x.DurationHours
	}
	return 0
}

// 投票作成レスポンス
type CreatePollResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 作成された投票
	Poll          *Poll `protobuf:"bytes,1,opt,name=poll,proto3" json:"poll,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePollResponse) Reset() {
	*x = CreatePollResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePollResponse) ProtoMessage() {}

func (x *CreatePollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePollResponse.ProtoReflect.Descriptor instead.
func (*CreatePollResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{52}
}

func (x *CreatePollResponse) GetPoll() *Poll {
	if x != nil {
		return x.Poll
	}
	return nil
}

// 投票に投票リクエスト
type VotePollRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 投票ID
	PollId string `protobuf:"bytes,1,opt,name=poll_id,json=pollId,proto3" json:"poll_id,omitempty"`
	// 選択したオプションID一覧
	OptionIds     []string `protobuf:"bytes,2,rep,name=option_ids,json=optionIds,proto3" json:"option_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VotePollRequest) Reset() {
	*x = VotePollRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VotePollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotePollRequest) ProtoMessage() {}

func (x *VotePollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotePollRequest.ProtoReflect.Descriptor instead.
func (*VotePollRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{53}
}

func (x *VotePollRequest) GetPollId() string {
	if x != nil {
		return x.PollId
	}
	return ""
}

func (x *VotePollRequest) GetOptionIds() []string {
	if x != nil {
		return x.OptionIds
	}
	return nil
}

// 投票に投票レスポンス
type VotePollResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 更新後の投票
	Poll *Poll `protobuf:"bytes,2,opt,name=poll,proto3" json:"poll,omitempty"`
	// エラーメッセージ（失敗時）
	ErrorMessage  string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VotePollResponse) Reset() {
	*x = VotePollResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VotePollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotePollResponse) ProtoMessage() {}

func (x *VotePollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotePollResponse.ProtoReflect.Descriptor instead.
func (*VotePollResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{54}
}

func (x *VotePollResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *VotePollResponse) GetPoll() *Poll {
	if x != nil {
		return x.Poll
	}
	return nil
}

func (x *VotePollResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 投票結果取得リクエスト
type GetPollResultsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 投票ID
	PollId        string `protobuf:"bytes,1,opt,name=poll_id,json=pollId,proto3" json:"poll_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPollResultsRequest) Reset() {
	*x = GetPollResultsRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPollResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPollResultsRequest) ProtoMessage() {}

func (x *GetPollResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPollResultsRequest.ProtoReflect.Descriptor instead.
func (*GetPollResultsRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{55}
}

func (x *GetPollResultsRequest) GetPollId() string {
	if x != nil {
		return x.PollId
	}
	return ""
}

// 投票結果取得レスポンス
type GetPollResultsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 投票
	Poll *Poll `protobuf:"bytes,1,opt,name=poll,proto3" json:"poll,omitempty"`
	// 現在のユーザーの投票（ログインしている場合）
	UserVote      *UserPollVote `protobuf:"bytes,2,opt,name=user_vote,json=userVote,proto3" json:"user_vote,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPollResultsResponse) Reset() {
	*x = GetPollResultsResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPollResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPollResultsResponse) ProtoMessage() {}

func (x *GetPollResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPollResultsResponse.ProtoReflect.Descriptor instead.
func (*GetPollResultsResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{56}
}

func (x *GetPollResultsResponse) GetPoll() *Poll {
	if x != nil {
		return x.Poll
	}
	return nil
}

func (x *GetPollResultsResponse) GetUserVote() *UserPollVote {
	if x != nil {
		return x.UserVote
	}
	return nil
}

// 投票を閉じるリクエスト
type ClosePollRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 投票ID
	PollId string `protobuf:"bytes,1,opt,name=poll_id,json=pollId,proto3" json:"poll_id,omitempty"`
	// DropオーナーのユーザーID（権限確認用）
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClosePollRequest) Reset() {
	*x = ClosePollRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClosePollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePollRequest) ProtoMessage() {}

func (x *ClosePollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePollRequest.ProtoReflect.Descriptor instead.
func (*ClosePollRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{57}
}

func (x *ClosePollRequest) GetPollId() string {
	if x != nil {
		return x.PollId
	}
	return ""
}

func (x *ClosePollRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 投票を閉じるレスポンス
type ClosePollResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 成功フラグ
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 最終的な投票結果
	Poll          *Poll `protobuf:"bytes,2,opt,name=poll,proto3" json:"poll,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClosePollResponse) Reset() {
	*x = ClosePollResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClosePollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePollResponse) ProtoMessage() {}

func (x *ClosePollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePollResponse.ProtoReflect.Descriptor instead.
func (*ClosePollResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{58}
}

func (x *ClosePollResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ClosePollResponse) GetPoll() *Poll {
	if x != nil {
		return x.Poll
	}
	return nil
}

// Dropリアクション詳細取得リクエスト
type GetDropReactionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DropID
	DropId string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	// リアクションタイプでフィルター（オプション）
	ReactionType ReactionType `protobuf:"varint,2,opt,name=reaction_type,json=reactionType,proto3,enum=avion.drop.v1.ReactionType" json:"reaction_type,omitempty"`
	// ページネーション
	Pagination    *v1.PaginationRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDropReactionsRequest) Reset() {
	*x = GetDropReactionsRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDropReactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDropReactionsRequest) ProtoMessage() {}

func (x *GetDropReactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDropReactionsRequest.ProtoReflect.Descriptor instead.
func (*GetDropReactionsRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{59}
}

func (x *GetDropReactionsRequest) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

func (x *GetDropReactionsRequest) GetReactionType() ReactionType {
	if x != nil {
		return x.ReactionType
	}
	return ReactionType_REACTION_TYPE_UNSPECIFIED
}

func (x *GetDropReactionsRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Dropリアクション詳細取得レスポンス
type GetDropReactionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// リアクション一覧
	Reactions []*DropReaction `protobuf:"bytes,1,rep,name=reactions,proto3" json:"reactions,omitempty"`
	// ページネーション情報
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDropReactionsResponse) Reset() {
	*x = GetDropReactionsResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDropReactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDropReactionsResponse) ProtoMessage() {}

func (x *GetDropReactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDropReactionsResponse.ProtoReflect.Descriptor instead.
func (*GetDropReactionsResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{60}
}

func (x *GetDropReactionsResponse) GetReactions() []*DropReaction {
	if x != nil {
		return x.Reactions
	}
	return nil
}

func (x *GetDropReactionsResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ユーザーのブックマーク一覧取得リクエスト
type ListUserBookmarksRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ページネーション
	Pagination    *v1.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserBookmarksRequest) Reset() {
	*x = ListUserBookmarksRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserBookmarksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserBookmarksRequest) ProtoMessage() {}

func (x *ListUserBookmarksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserBookmarksRequest.ProtoReflect.Descriptor instead.
func (*ListUserBookmarksRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{61}
}

func (x *ListUserBookmarksRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListUserBookmarksRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ユーザーのブックマーク一覧取得レスポンス
type ListUserBookmarksResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ブックマークしたDrop一覧
	Drops []*Drop `protobuf:"bytes,1,rep,name=drops,proto3" json:"drops,omitempty"`
	// ページネーション情報
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserBookmarksResponse) Reset() {
	*x = ListUserBookmarksResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserBookmarksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserBookmarksResponse) ProtoMessage() {}

func (x *ListUserBookmarksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserBookmarksResponse.ProtoReflect.Descriptor instead.
func (*ListUserBookmarksResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{62}
}

func (x *ListUserBookmarksResponse) GetDrops() []*Drop {
	if x != nil {
		return x.Drops
	}
	return nil
}

func (x *ListUserBookmarksResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Drop編集履歴取得リクエスト
type GetDropEditHistoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DropID
	DropId string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	// ページネーション（履歴が多い場合）
	Pagination    *v1.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDropEditHistoryRequest) Reset() {
	*x = GetDropEditHistoryRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDropEditHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDropEditHistoryRequest) ProtoMessage() {}

func (x *GetDropEditHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDropEditHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetDropEditHistoryRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{63}
}

func (x *GetDropEditHistoryRequest) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

func (x *GetDropEditHistoryRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Drop編集履歴取得レスポンス
type GetDropEditHistoryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 編集履歴一覧
	History []*EditHistory `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
	// ページネーション情報
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDropEditHistoryResponse) Reset() {
	*x = GetDropEditHistoryResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDropEditHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDropEditHistoryResponse) ProtoMessage() {}

func (x *GetDropEditHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDropEditHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetDropEditHistoryResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{64}
}

func (x *GetDropEditHistoryResponse) GetHistory() []*EditHistory {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *GetDropEditHistoryResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Drop統計情報取得リクエスト
type GetDropStatsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DropID
	DropId string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	// 期間指定（オプション）
	From          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To            *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDropStatsRequest) Reset() {
	*x = GetDropStatsRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDropStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDropStatsRequest) ProtoMessage() {}

func (x *GetDropStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDropStatsRequest.ProtoReflect.Descriptor instead.
func (*GetDropStatsRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{65}
}

func (x *GetDropStatsRequest) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

func (x *GetDropStatsRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetDropStatsRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

// Drop統計情報取得レスポンス
type GetDropStatsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 統計情報
	Stats         *DropStats `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDropStatsResponse) Reset() {
	*x = GetDropStatsResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDropStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDropStatsResponse) ProtoMessage() {}

func (x *GetDropStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDropStatsResponse.ProtoReflect.Descriptor instead.
func (*GetDropStatsResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{66}
}

func (x *GetDropStatsResponse) GetStats() *DropStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// 複数Drop一括取得リクエスト
type BatchGetDropsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 取得するDropID一覧（最大100個）
	DropIds []string `protobuf:"bytes,1,rep,name=drop_ids,json=dropIds,proto3" json:"drop_ids,omitempty"`
	// 削除されたDropも含むか
	IncludeDeleted bool `protobuf:"varint,2,opt,name=include_deleted,json=includeDeleted,proto3" json:"include_deleted,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BatchGetDropsRequest) Reset() {
	*x = BatchGetDropsRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetDropsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetDropsRequest) ProtoMessage() {}

func (x *BatchGetDropsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetDropsRequest.ProtoReflect.Descriptor instead.
func (*BatchGetDropsRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{67}
}

func (x *BatchGetDropsRequest) GetDropIds() []string {
	if x != nil {
		return x.DropIds
	}
	return nil
}

func (x *BatchGetDropsRequest) GetIncludeDeleted() bool {
	if x != nil {
		return x.IncludeDeleted
	}
	return false
}

// 複数Drop一括取得レスポンス
type BatchGetDropsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 取得したDrop一覧
	Drops []*Drop `protobuf:"bytes,1,rep,name=drops,proto3" json:"drops,omitempty"`
	// 見つからなかったDropID一覧
	NotFoundIds   []string `protobuf:"bytes,2,rep,name=not_found_ids,json=notFoundIds,proto3" json:"not_found_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetDropsResponse) Reset() {
	*x = BatchGetDropsResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetDropsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetDropsResponse) ProtoMessage() {}

func (x *BatchGetDropsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetDropsResponse.ProtoReflect.Descriptor instead.
func (*BatchGetDropsResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{68}
}

func (x *BatchGetDropsResponse) GetDrops() []*Drop {
	if x != nil {
		return x.Drops
	}
	return nil
}

func (x *BatchGetDropsResponse) GetNotFoundIds() []string {
	if x != nil {
		return x.NotFoundIds
	}
	return nil
}

// 複数Drop一括削除リクエスト
type BatchDeleteDropsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 削除するDropID一覧（最大50個）
	DropIds []string `protobuf:"bytes,1,rep,name=drop_ids,json=dropIds,proto3" json:"drop_ids,omitempty"`
	// 削除を実行するユーザーID（権限確認用）
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 物理削除するか（デフォルトはソフト削除）
	HardDelete    bool `protobuf:"varint,3,opt,name=hard_delete,json=hardDelete,proto3" json:"hard_delete,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteDropsRequest) Reset() {
	*x = BatchDeleteDropsRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteDropsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteDropsRequest) ProtoMessage() {}

func (x *BatchDeleteDropsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteDropsRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteDropsRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{69}
}

func (x *BatchDeleteDropsRequest) GetDropIds() []string {
	if x != nil {
		return x.DropIds
	}
	return nil
}

func (x *BatchDeleteDropsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BatchDeleteDropsRequest) GetHardDelete() bool {
	if x != nil {
		return x.HardDelete
	}
	return false
}

// 複数Drop一括削除レスポンス
type BatchDeleteDropsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 削除成功したDropID一覧
	DeletedIds []string `protobuf:"bytes,1,rep,name=deleted_ids,json=deletedIds,proto3" json:"deleted_ids,omitempty"`
	// 削除失敗したDropID一覧
	FailedIds []string `protobuf:"bytes,2,rep,name=failed_ids,json=failedIds,proto3" json:"failed_ids,omitempty"`
	// エラー詳細
	Errors        map[string]string `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteDropsResponse) Reset() {
	*x = BatchDeleteDropsResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteDropsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteDropsResponse) ProtoMessage() {}

func (x *BatchDeleteDropsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteDropsResponse.ProtoReflect.Descriptor instead.
func (*BatchDeleteDropsResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{70}
}

func (x *BatchDeleteDropsResponse) GetDeletedIds() []string {
	if x != nil {
		return x.DeletedIds
	}
	return nil
}

func (x *BatchDeleteDropsResponse) GetFailedIds() []string {
	if x != nil {
		return x.FailedIds
	}
	return nil
}

func (x *BatchDeleteDropsResponse) GetErrors() map[string]string {
	if x != nil {
		return x.Errors
	}
	return nil
}

// 複数Dropステータス一括更新リクエスト
type BatchUpdateDropStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新するDropID一覧（最大100個）
	DropIds []string `protobuf:"bytes,1,rep,name=drop_ids,json=dropIds,proto3" json:"drop_ids,omitempty"`
	// 新しいステータス
	NewStatus DropStatus `protobuf:"varint,2,opt,name=new_status,json=newStatus,proto3,enum=avion.drop.v1.DropStatus" json:"new_status,omitempty"`
	// 更新を実行するユーザーID（権限確認用）
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 更新理由（監査用）
	Reason        string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateDropStatusRequest) Reset() {
	*x = BatchUpdateDropStatusRequest{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpdateDropStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateDropStatusRequest) ProtoMessage() {}

func (x *BatchUpdateDropStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateDropStatusRequest.ProtoReflect.Descriptor instead.
func (*BatchUpdateDropStatusRequest) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{71}
}

func (x *BatchUpdateDropStatusRequest) GetDropIds() []string {
	if x != nil {
		return x.DropIds
	}
	return nil
}

func (x *BatchUpdateDropStatusRequest) GetNewStatus() DropStatus {
	if x != nil {
		return x.NewStatus
	}
	return DropStatus_DROP_STATUS_UNSPECIFIED
}

func (x *BatchUpdateDropStatusRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BatchUpdateDropStatusRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 複数Dropステータス一括更新レスポンス
type BatchUpdateDropStatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新成功したDropID一覧
	UpdatedIds []string `protobuf:"bytes,1,rep,name=updated_ids,json=updatedIds,proto3" json:"updated_ids,omitempty"`
	// 更新失敗したDropID一覧
	FailedIds []string `protobuf:"bytes,2,rep,name=failed_ids,json=failedIds,proto3" json:"failed_ids,omitempty"`
	// エラー詳細
	Errors        map[string]string `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateDropStatusResponse) Reset() {
	*x = BatchUpdateDropStatusResponse{}
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpdateDropStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateDropStatusResponse) ProtoMessage() {}

func (x *BatchUpdateDropStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_drop_v1_drop_service_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateDropStatusResponse.ProtoReflect.Descriptor instead.
func (*BatchUpdateDropStatusResponse) Descriptor() ([]byte, []int) {
	return file_avion_drop_v1_drop_service_proto_rawDescGZIP(), []int{72}
}

func (x *BatchUpdateDropStatusResponse) GetUpdatedIds() []string {
	if x != nil {
		return x.UpdatedIds
	}
	return nil
}

func (x *BatchUpdateDropStatusResponse) GetFailedIds() []string {
	if x != nil {
		return x.FailedIds
	}
	return nil
}

func (x *BatchUpdateDropStatusResponse) GetErrors() map[string]string {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_avion_drop_v1_drop_service_proto protoreflect.FileDescriptor

const file_avion_drop_v1_drop_service_proto_rawDesc = "" +
	"\n" +
	" avion/drop/v1/drop_service.proto\x12\ravion.drop.v1\x1a\x18avion/drop/v1/drop.proto\x1a avion/common/v1/pagination.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc5\x02\n" +
	"\x11CreateDropRequest\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12=\n" +
	"\n" +
	"visibility\x18\x02 \x01(\x0e2\x1d.avion.drop.v1.DropVisibilityR\n" +
	"visibility\x12\x1e\n" +
	"\vreply_to_id\x18\x03 \x01(\tR\treplyToId\x12\"\n" +
	"\rquote_drop_id\x18\x04 \x01(\tR\vquoteDropId\x12K\n" +
	"\x11media_attachments\x18\x05 \x03(\v2\x1e.avion.drop.v1.MediaAttachmentR\x10mediaAttachments\x12F\n" +
	"\x0fcontent_warning\x18\x06 \x01(\v2\x1d.avion.drop.v1.ContentWarningR\x0econtentWarning\"\xa7\x01\n" +
	"\x0fMediaAttachment\x12\x1b\n" +
	"\tmedia_url\x18\x01 \x01(\tR\bmediaUrl\x127\n" +
	"\n" +
	"media_type\x18\x02 \x01(\x0e2\x18.avion.drop.v1.MediaTypeR\tmediaType\x12#\n" +
	"\rthumbnail_url\x18\x03 \x01(\tR\fthumbnailUrl\x12\x19\n" +
	"\balt_text\x18\x04 \x01(\tR\aaltText\"=\n" +
	"\x12CreateDropResponse\x12'\n" +
	"\x04drop\x18\x01 \x01(\v2\x13.avion.drop.v1.DropR\x04drop\" \n" +
	"\x0eGetDropRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xda\x01\n" +
	"\x0fGetDropResponse\x12'\n" +
	"\x04drop\x18\x01 \x01(\v2\x13.avion.drop.v1.DropR\x04drop\x12.\n" +
	"\x05media\x18\x02 \x03(\v2\x18.avion.drop.v1.DropMediaR\x05media\x126\n" +
	"\bhashtags\x18\x03 \x03(\v2\x1a.avion.drop.v1.DropHashtagR\bhashtags\x126\n" +
	"\bmentions\x18\x04 \x03(\v2\x1a.avion.drop.v1.DropMentionR\bmentions\"\xe5\x01\n" +
	"\x11UpdateDropRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12=\n" +
	"\n" +
	"visibility\x18\x03 \x01(\x0e2\x1d.avion.drop.v1.DropVisibilityR\n" +
	"visibility\x12F\n" +
	"\x0fcontent_warning\x18\x04 \x01(\v2\x1d.avion.drop.v1.ContentWarningR\x0econtentWarning\x12\x1f\n" +
	"\vedit_reason\x18\x05 \x01(\tR\n" +
	"editReason\"=\n" +
	"\x12UpdateDropResponse\x12'\n" +
	"\x04drop\x18\x01 \x01(\v2\x13.avion.drop.v1.DropR\x04drop\"#\n" +
	"\x11DeleteDropRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\".\n" +
	"\x12DeleteDropResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x89\x01\n" +
	"\x10ListDropsRequest\x12B\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\x121\n" +
	"\x06filter\x18\x02 \x01(\v2\x19.avion.drop.v1.DropFilterR\x06filter\"\xc1\x01\n" +
	"\n" +
	"DropFilter\x12=\n" +
	"\n" +
	"visibility\x18\x01 \x01(\x0e2\x1d.avion.drop.v1.DropVisibilityR\n" +
	"visibility\x12.\n" +
	"\x04from\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04from\x12*\n" +
	"\x02to\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x02to\x12\x18\n" +
	"\ahashtag\x18\x04 \x01(\tR\ahashtag\"\x83\x01\n" +
	"\x11ListDropsResponse\x12)\n" +
	"\x05drops\x18\x01 \x03(\v2\x13.avion.drop.v1.DropR\x05drops\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\"\xc5\x01\n" +
	"\x14ListUserDropsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12B\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\x12'\n" +
	"\x0finclude_replies\x18\x03 \x01(\bR\x0eincludeReplies\x12'\n" +
	"\x0finclude_redrops\x18\x04 \x01(\bR\x0eincludeRedrops\"\x87\x01\n" +
	"\x15ListUserDropsResponse\x12)\n" +
	"\x05drops\x18\x01 \x03(\v2\x13.avion.drop.v1.DropR\x05drops\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\")\n" +
	"\x0eAddLikeRequest\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\"J\n" +
	"\x0fAddLikeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"like_count\x18\x02 \x01(\x05R\tlikeCount\",\n" +
	"\x11RemoveLikeRequest\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\"M\n" +
	"\x12RemoveLikeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"like_count\x18\x02 \x01(\x05R\tlikeCount\"+\n" +
	"\x10AddRedropRequest\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\"P\n" +
	"\x11AddRedropResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fredrop_count\x18\x02 \x01(\x05R\vredropCount\".\n" +
	"\x13RemoveRedropRequest\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\"S\n" +
	"\x14RemoveRedropResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fredrop_count\x18\x02 \x01(\x05R\vredropCount\"-\n" +
	"\x12AddBookmarkRequest\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\"V\n" +
	"\x13AddBookmarkResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0ebookmark_count\x18\x02 \x01(\x05R\rbookmarkCount\"0\n" +
	"\x15RemoveBookmarkRequest\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\"Y\n" +
	"\x16RemoveBookmarkResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0ebookmark_count\x18\x02 \x01(\x05R\rbookmarkCount\"\xda\x01\n" +
	"\x12ReplyToDropRequest\x12\x1e\n" +
	"\vreply_to_id\x18\x01 \x01(\tR\treplyToId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12=\n" +
	"\n" +
	"visibility\x18\x03 \x01(\x0e2\x1d.avion.drop.v1.DropVisibilityR\n" +
	"visibility\x12K\n" +
	"\x11media_attachments\x18\x04 \x03(\v2\x1e.avion.drop.v1.MediaAttachmentR\x10mediaAttachments\">\n" +
	"\x13ReplyToDropResponse\x12'\n" +
	"\x04drop\x18\x01 \x01(\v2\x13.avion.drop.v1.DropR\x04drop\"\xdc\x01\n" +
	"\x10QuoteDropRequest\x12\"\n" +
	"\rquote_drop_id\x18\x01 \x01(\tR\vquoteDropId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12=\n" +
	"\n" +
	"visibility\x18\x03 \x01(\x0e2\x1d.avion.drop.v1.DropVisibilityR\n" +
	"visibility\x12K\n" +
	"\x11media_attachments\x18\x04 \x03(\v2\x1e.avion.drop.v1.MediaAttachmentR\x10mediaAttachments\"<\n" +
	"\x11QuoteDropResponse\x12'\n" +
	"\x04drop\x18\x01 \x01(\v2\x13.avion.drop.v1.DropR\x04drop\"\xa3\x01\n" +
	"\x12SearchDropsRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12B\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\x123\n" +
	"\x06filter\x18\x03 \x01(\v2\x1b.avion.drop.v1.SearchFilterR\x06filter\"\xbc\x01\n" +
	"\fSearchFilter\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bhashtags\x18\x02 \x03(\tR\bhashtags\x12.\n" +
	"\x04from\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04from\x12*\n" +
	"\x02to\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x02to\x12\x1b\n" +
	"\thas_media\x18\x05 \x01(\bR\bhasMedia\"\xaa\x01\n" +
	"\x13SearchDropsResponse\x12)\n" +
	"\x05drops\x18\x01 \x03(\v2\x13.avion.drop.v1.DropR\x05drops\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\x12#\n" +
	"\rtotal_results\x18\x03 \x01(\x05R\ftotalResults\"E\n" +
	"\x14GetDropThreadRequest\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\x12\x14\n" +
	"\x05depth\x18\x02 \x01(\x05R\x05depth\"~\n" +
	"\x15GetDropThreadResponse\x120\n" +
	"\troot_drop\x18\x01 \x01(\v2\x13.avion.drop.v1.DropR\brootDrop\x123\n" +
	"\areplies\x18\x02 \x03(\v2\x19.avion.drop.v1.ThreadNodeR\areplies\"\x82\x01\n" +
	"\n" +
	"ThreadNode\x12'\n" +
	"\x04drop\x18\x01 \x01(\v2\x13.avion.drop.v1.DropR\x04drop\x125\n" +
	"\bchildren\x18\x02 \x03(\v2\x19.avion.drop.v1.ThreadNodeR\bchildren\x12\x14\n" +
	"\x05depth\x18\x03 \x01(\x05R\x05depth\"\xbd\x02\n" +
	"\x12CreateDraftRequest\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12=\n" +
	"\n" +
	"visibility\x18\x02 \x01(\x0e2\x1d.avion.drop.v1.DropVisibilityR\n" +
	"visibility\x12\x1e\n" +
	"\vreply_to_id\x18\x03 \x01(\tR\treplyToId\x12\"\n" +
	"\rquote_drop_id\x18\x04 \x01(\tR\vquoteDropId\x12K\n" +
	"\x11media_attachments\x18\x05 \x03(\v2\x1e.avion.drop.v1.MediaAttachmentR\x10mediaAttachments\x12=\n" +
	"\fscheduled_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vscheduledAt\"E\n" +
	"\x13CreateDraftResponse\x12.\n" +
	"\x05draft\x18\x01 \x01(\v2\x18.avion.drop.v1.DropDraftR\x05draft\"E\n" +
	"\x0fGetDraftRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"B\n" +
	"\x10GetDraftResponse\x12.\n" +
	"\x05draft\x18\x01 \x01(\v2\x18.avion.drop.v1.DropDraftR\x05draft\"\xe1\x02\n" +
	"\x12UpdateDraftRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12=\n" +
	"\n" +
	"visibility\x18\x04 \x01(\x0e2\x1d.avion.drop.v1.DropVisibilityR\n" +
	"visibility\x12K\n" +
	"\x11media_attachments\x18\x05 \x03(\v2\x1e.avion.drop.v1.MediaAttachmentR\x10mediaAttachments\x12=\n" +
	"\fscheduled_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vscheduledAt\x122\n" +
	"\x06status\x18\a \x01(\x0e2\x1a.avion.drop.v1.DraftStatusR\x06status\"E\n" +
	"\x13UpdateDraftResponse\x12.\n" +
	"\x05draft\x18\x01 \x01(\v2\x18.avion.drop.v1.DropDraftR\x05draft\"H\n" +
	"\x12DeleteDraftRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"/\n" +
	"\x13DeleteDraftResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xa4\x01\n" +
	"\x11ListDraftsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12B\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\x122\n" +
	"\x06filter\x18\x03 \x01(\v2\x1a.avion.drop.v1.DraftFilterR\x06filter\"\xc4\x01\n" +
	"\vDraftFilter\x122\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1a.avion.drop.v1.DraftStatusR\x06status\x12%\n" +
	"\x0escheduled_only\x18\x02 \x01(\bR\rscheduledOnly\x12.\n" +
	"\x04from\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04from\x12*\n" +
	"\x02to\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x02to\"\x8b\x01\n" +
	"\x12ListDraftsResponse\x120\n" +
	"\x06drafts\x18\x01 \x03(\v2\x18.avion.drop.v1.DropDraftR\x06drafts\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\"\xa2\x01\n" +
	"\x13PublishDraftRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12=\n" +
	"\n" +
	"visibility\x18\x04 \x01(\x0e2\x1d.avion.drop.v1.DropVisibilityR\n" +
	"visibility\"o\n" +
	"\x14PublishDraftResponse\x12'\n" +
	"\x04drop\x18\x01 \x01(\v2\x13.avion.drop.v1.DropR\x04drop\x12.\n" +
	"\x05draft\x18\x02 \x01(\v2\x18.avion.drop.v1.DropDraftR\x05draft\"\xae\x02\n" +
	"\x14AutoSaveDraftRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12=\n" +
	"\n" +
	"visibility\x18\x04 \x01(\x0e2\x1d.avion.drop.v1.DropVisibilityR\n" +
	"visibility\x12\x1e\n" +
	"\vreply_to_id\x18\x05 \x01(\tR\treplyToId\x12\"\n" +
	"\rquote_drop_id\x18\x06 \x01(\tR\vquoteDropId\x12E\n" +
	"\x10client_timestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x0fclientTimestamp\"\xb8\x01\n" +
	"\x15AutoSaveDraftResponse\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12E\n" +
	"\x10server_timestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0fserverTimestamp\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"\xb2\x01\n" +
	"\x11CreatePollRequest\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\x12\x1a\n" +
	"\bquestion\x18\x02 \x01(\tR\bquestion\x12\x18\n" +
	"\aoptions\x18\x03 \x03(\tR\aoptions\x12'\n" +
	"\x0fmultiple_choice\x18\x04 \x01(\bR\x0emultipleChoice\x12%\n" +
	"\x0eduration_hours\x18\x05 \x01(\x05R\rdurationHours\"=\n" +
	"\x12CreatePollResponse\x12'\n" +
	"\x04poll\x18\x01 \x01(\v2\x13.avion.drop.v1.PollR\x04poll\"I\n" +
	"\x0fVotePollRequest\x12\x17\n" +
	"\apoll_id\x18\x01 \x01(\tR\x06pollId\x12\x1d\n" +
	"\n" +
	"option_ids\x18\x02 \x03(\tR\toptionIds\"z\n" +
	"\x10VotePollResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12'\n" +
	"\x04poll\x18\x02 \x01(\v2\x13.avion.drop.v1.PollR\x04poll\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"0\n" +
	"\x15GetPollResultsRequest\x12\x17\n" +
	"\apoll_id\x18\x01 \x01(\tR\x06pollId\"{\n" +
	"\x16GetPollResultsResponse\x12'\n" +
	"\x04poll\x18\x01 \x01(\v2\x13.avion.drop.v1.PollR\x04poll\x128\n" +
	"\tuser_vote\x18\x02 \x01(\v2\x1b.avion.drop.v1.UserPollVoteR\buserVote\"D\n" +
	"\x10ClosePollRequest\x12\x17\n" +
	"\apoll_id\x18\x01 \x01(\tR\x06pollId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"V\n" +
	"\x11ClosePollResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12'\n" +
	"\x04poll\x18\x02 \x01(\v2\x13.avion.drop.v1.PollR\x04poll\"\xb8\x01\n" +
	"\x17GetDropReactionsRequest\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\x12@\n" +
	"\rreaction_type\x18\x02 \x01(\x0e2\x1b.avion.drop.v1.ReactionTypeR\freactionType\x12B\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\"\x9a\x01\n" +
	"\x18GetDropReactionsResponse\x129\n" +
	"\treactions\x18\x01 \x03(\v2\x1b.avion.drop.v1.DropReactionR\treactions\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\"w\n" +
	"\x18ListUserBookmarksRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12B\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\"\x8b\x01\n" +
	"\x19ListUserBookmarksResponse\x12)\n" +
	"\x05drops\x18\x01 \x03(\v2\x13.avion.drop.v1.DropR\x05drops\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\"x\n" +
	"\x19GetDropEditHistoryRequest\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\x12B\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\"\x97\x01\n" +
	"\x1aGetDropEditHistoryResponse\x124\n" +
	"\ahistory\x18\x01 \x03(\v2\x1a.avion.drop.v1.EditHistoryR\ahistory\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\"\x8a\x01\n" +
	"\x13GetDropStatsRequest\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\x12.\n" +
	"\x04from\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04from\x12*\n" +
	"\x02to\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x02to\"F\n" +
	"\x14GetDropStatsResponse\x12.\n" +
	"\x05stats\x18\x01 \x01(\v2\x18.avion.drop.v1.DropStatsR\x05stats\"Z\n" +
	"\x14BatchGetDropsRequest\x12\x19\n" +
	"\bdrop_ids\x18\x01 \x03(\tR\adropIds\x12'\n" +
	"\x0finclude_deleted\x18\x02 \x01(\bR\x0eincludeDeleted\"f\n" +
	"\x15BatchGetDropsResponse\x12)\n" +
	"\x05drops\x18\x01 \x03(\v2\x13.avion.drop.v1.DropR\x05drops\x12\"\n" +
	"\rnot_found_ids\x18\x02 \x03(\tR\vnotFoundIds\"n\n" +
	"\x17BatchDeleteDropsRequest\x12\x19\n" +
	"\bdrop_ids\x18\x01 \x03(\tR\adropIds\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1f\n" +
	"\vhard_delete\x18\x03 \x01(\bR\n" +
	"hardDelete\"\xe2\x01\n" +
	"\x18BatchDeleteDropsResponse\x12\x1f\n" +
	"\vdeleted_ids\x18\x01 \x03(\tR\n" +
	"deletedIds\x12\x1d\n" +
	"\n" +
	"failed_ids\x18\x02 \x03(\tR\tfailedIds\x12K\n" +
	"\x06errors\x18\x03 \x03(\v23.avion.drop.v1.BatchDeleteDropsResponse.ErrorsEntryR\x06errors\x1a9\n" +
	"\vErrorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa4\x01\n" +
	"\x1cBatchUpdateDropStatusRequest\x12\x19\n" +
	"\bdrop_ids\x18\x01 \x03(\tR\adropIds\x128\n" +
	"\n" +
	"new_status\x18\x02 \x01(\x0e2\x19.avion.drop.v1.DropStatusR\tnewStatus\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"\xec\x01\n" +
	"\x1dBatchUpdateDropStatusResponse\x12\x1f\n" +
	"\vupdated_ids\x18\x01 \x03(\tR\n" +
	"updatedIds\x12\x1d\n" +
	"\n" +
	"failed_ids\x18\x02 \x03(\tR\tfailedIds\x12P\n" +
	"\x06errors\x18\x03 \x03(\v28.avion.drop.v1.BatchUpdateDropStatusResponse.ErrorsEntryR\x06errors\x1a9\n" +
	"\vErrorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xbf\x17\n" +
	"\vDropService\x12Q\n" +
	"\n" +
	"CreateDrop\x12 .avion.drop.v1.CreateDropRequest\x1a!.avion.drop.v1.CreateDropResponse\x12H\n" +
	"\aGetDrop\x12\x1d.avion.drop.v1.GetDropRequest\x1a\x1e.avion.drop.v1.GetDropResponse\x12Q\n" +
	"\n" +
	"UpdateDrop\x12 .avion.drop.v1.UpdateDropRequest\x1a!.avion.drop.v1.UpdateDropResponse\x12Q\n" +
	"\n" +
	"DeleteDrop\x12 .avion.drop.v1.DeleteDropRequest\x1a!.avion.drop.v1.DeleteDropResponse\x12N\n" +
	"\tListDrops\x12\x1f.avion.drop.v1.ListDropsRequest\x1a .avion.drop.v1.ListDropsResponse\x12Z\n" +
	"\rListUserDrops\x12#.avion.drop.v1.ListUserDropsRequest\x1a$.avion.drop.v1.ListUserDropsResponse\x12H\n" +
	"\aAddLike\x12\x1d.avion.drop.v1.AddLikeRequest\x1a\x1e.avion.drop.v1.AddLikeResponse\x12Q\n" +
	"\n" +
	"RemoveLike\x12 .avion.drop.v1.RemoveLikeRequest\x1a!.avion.drop.v1.RemoveLikeResponse\x12N\n" +
	"\tAddRedrop\x12\x1f.avion.drop.v1.AddRedropRequest\x1a .avion.drop.v1.AddRedropResponse\x12W\n" +
	"\fRemoveRedrop\x12\".avion.drop.v1.RemoveRedropRequest\x1a#.avion.drop.v1.RemoveRedropResponse\x12T\n" +
	"\vAddBookmark\x12!.avion.drop.v1.AddBookmarkRequest\x1a\".avion.drop.v1.AddBookmarkResponse\x12]\n" +
	"\x0eRemoveBookmark\x12$.avion.drop.v1.RemoveBookmarkRequest\x1a%.avion.drop.v1.RemoveBookmarkResponse\x12T\n" +
	"\vReplyToDrop\x12!.avion.drop.v1.ReplyToDropRequest\x1a\".avion.drop.v1.ReplyToDropResponse\x12N\n" +
	"\tQuoteDrop\x12\x1f.avion.drop.v1.QuoteDropRequest\x1a .avion.drop.v1.QuoteDropResponse\x12T\n" +
	"\vSearchDrops\x12!.avion.drop.v1.SearchDropsRequest\x1a\".avion.drop.v1.SearchDropsResponse\x12Z\n" +
	"\rGetDropThread\x12#.avion.drop.v1.GetDropThreadRequest\x1a$.avion.drop.v1.GetDropThreadResponse\x12T\n" +
	"\vCreateDraft\x12!.avion.drop.v1.CreateDraftRequest\x1a\".avion.drop.v1.CreateDraftResponse\x12K\n" +
	"\bGetDraft\x12\x1e.avion.drop.v1.GetDraftRequest\x1a\x1f.avion.drop.v1.GetDraftResponse\x12T\n" +
	"\vUpdateDraft\x12!.avion.drop.v1.UpdateDraftRequest\x1a\".avion.drop.v1.UpdateDraftResponse\x12T\n" +
	"\vDeleteDraft\x12!.avion.drop.v1.DeleteDraftRequest\x1a\".avion.drop.v1.DeleteDraftResponse\x12Q\n" +
	"\n" +
	"ListDrafts\x12 .avion.drop.v1.ListDraftsRequest\x1a!.avion.drop.v1.ListDraftsResponse\x12W\n" +
	"\fPublishDraft\x12\".avion.drop.v1.PublishDraftRequest\x1a#.avion.drop.v1.PublishDraftResponse\x12^\n" +
	"\rAutoSaveDraft\x12#.avion.drop.v1.AutoSaveDraftRequest\x1a$.avion.drop.v1.AutoSaveDraftResponse(\x010\x01\x12Q\n" +
	"\n" +
	"CreatePoll\x12 .avion.drop.v1.CreatePollRequest\x1a!.avion.drop.v1.CreatePollResponse\x12K\n" +
	"\bVotePoll\x12\x1e.avion.drop.v1.VotePollRequest\x1a\x1f.avion.drop.v1.VotePollResponse\x12]\n" +
	"\x0eGetPollResults\x12$.avion.drop.v1.GetPollResultsRequest\x1a%.avion.drop.v1.GetPollResultsResponse\x12N\n" +
	"\tClosePoll\x12\x1f.avion.drop.v1.ClosePollRequest\x1a .avion.drop.v1.ClosePollResponse\x12c\n" +
	"\x10GetDropReactions\x12&.avion.drop.v1.GetDropReactionsRequest\x1a'.avion.drop.v1.GetDropReactionsResponse\x12f\n" +
	"\x11ListUserBookmarks\x12'.avion.drop.v1.ListUserBookmarksRequest\x1a(.avion.drop.v1.ListUserBookmarksResponse\x12i\n" +
	"\x12GetDropEditHistory\x12(.avion.drop.v1.GetDropEditHistoryRequest\x1a).avion.drop.v1.GetDropEditHistoryResponse\x12W\n" +
	"\fGetDropStats\x12\".avion.drop.v1.GetDropStatsRequest\x1a#.avion.drop.v1.GetDropStatsResponse\x12Z\n" +
	"\rBatchGetDrops\x12#.avion.drop.v1.BatchGetDropsRequest\x1a$.avion.drop.v1.BatchGetDropsResponse\x12c\n" +
	"\x10BatchDeleteDrops\x12&.avion.drop.v1.BatchDeleteDropsRequest\x1a'.avion.drop.v1.BatchDeleteDropsResponse\x12r\n" +
	"\x15BatchUpdateDropStatus\x12+.avion.drop.v1.BatchUpdateDropStatusRequest\x1a,.avion.drop.v1.BatchUpdateDropStatusResponseB\xb0\x01\n" +
	"\x11com.avion.drop.v1B\x10DropServiceProtoP\x01Z3github.com/na2na-p/avion/proto/avion/drop/v1;dropv1\xa2\x02\x03ADX\xaa\x02\rAvion.Drop.V1\xca\x02\rAvion\\Drop\\V1\xe2\x02\x19Avion\\Drop\\V1\\GPBMetadata\xea\x02\x0fAvion::Drop::V1b\x06proto3"

var (
	file_avion_drop_v1_drop_service_proto_rawDescOnce sync.Once
	file_avion_drop_v1_drop_service_proto_rawDescData []byte
)

func file_avion_drop_v1_drop_service_proto_rawDescGZIP() []byte {
	file_avion_drop_v1_drop_service_proto_rawDescOnce.Do(func() {
		file_avion_drop_v1_drop_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_avion_drop_v1_drop_service_proto_rawDesc), len(file_avion_drop_v1_drop_service_proto_rawDesc)))
	})
	return file_avion_drop_v1_drop_service_proto_rawDescData
}

var file_avion_drop_v1_drop_service_proto_msgTypes = make([]protoimpl.MessageInfo, 75)
var file_avion_drop_v1_drop_service_proto_goTypes = []any{
	(*CreateDropRequest)(nil),             // 0: avion.drop.v1.CreateDropRequest
	(*MediaAttachment)(nil),               // 1: avion.drop.v1.MediaAttachment
	(*CreateDropResponse)(nil),            // 2: avion.drop.v1.CreateDropResponse
	(*GetDropRequest)(nil),                // 3: avion.drop.v1.GetDropRequest
	(*GetDropResponse)(nil),               // 4: avion.drop.v1.GetDropResponse
	(*UpdateDropRequest)(nil),             // 5: avion.drop.v1.UpdateDropRequest
	(*UpdateDropResponse)(nil),            // 6: avion.drop.v1.UpdateDropResponse
	(*DeleteDropRequest)(nil),             // 7: avion.drop.v1.DeleteDropRequest
	(*DeleteDropResponse)(nil),            // 8: avion.drop.v1.DeleteDropResponse
	(*ListDropsRequest)(nil),              // 9: avion.drop.v1.ListDropsRequest
	(*DropFilter)(nil),                    // 10: avion.drop.v1.DropFilter
	(*ListDropsResponse)(nil),             // 11: avion.drop.v1.ListDropsResponse
	(*ListUserDropsRequest)(nil),          // 12: avion.drop.v1.ListUserDropsRequest
	(*ListUserDropsResponse)(nil),         // 13: avion.drop.v1.ListUserDropsResponse
	(*AddLikeRequest)(nil),                // 14: avion.drop.v1.AddLikeRequest
	(*AddLikeResponse)(nil),               // 15: avion.drop.v1.AddLikeResponse
	(*RemoveLikeRequest)(nil),             // 16: avion.drop.v1.RemoveLikeRequest
	(*RemoveLikeResponse)(nil),            // 17: avion.drop.v1.RemoveLikeResponse
	(*AddRedropRequest)(nil),              // 18: avion.drop.v1.AddRedropRequest
	(*AddRedropResponse)(nil),             // 19: avion.drop.v1.AddRedropResponse
	(*RemoveRedropRequest)(nil),           // 20: avion.drop.v1.RemoveRedropRequest
	(*RemoveRedropResponse)(nil),          // 21: avion.drop.v1.RemoveRedropResponse
	(*AddBookmarkRequest)(nil),            // 22: avion.drop.v1.AddBookmarkRequest
	(*AddBookmarkResponse)(nil),           // 23: avion.drop.v1.AddBookmarkResponse
	(*RemoveBookmarkRequest)(nil),         // 24: avion.drop.v1.RemoveBookmarkRequest
	(*RemoveBookmarkResponse)(nil),        // 25: avion.drop.v1.RemoveBookmarkResponse
	(*ReplyToDropRequest)(nil),            // 26: avion.drop.v1.ReplyToDropRequest
	(*ReplyToDropResponse)(nil),           // 27: avion.drop.v1.ReplyToDropResponse
	(*QuoteDropRequest)(nil),              // 28: avion.drop.v1.QuoteDropRequest
	(*QuoteDropResponse)(nil),             // 29: avion.drop.v1.QuoteDropResponse
	(*SearchDropsRequest)(nil),            // 30: avion.drop.v1.SearchDropsRequest
	(*SearchFilter)(nil),                  // 31: avion.drop.v1.SearchFilter
	(*SearchDropsResponse)(nil),           // 32: avion.drop.v1.SearchDropsResponse
	(*GetDropThreadRequest)(nil),          // 33: avion.drop.v1.GetDropThreadRequest
	(*GetDropThreadResponse)(nil),         // 34: avion.drop.v1.GetDropThreadResponse
	(*ThreadNode)(nil),                    // 35: avion.drop.v1.ThreadNode
	(*CreateDraftRequest)(nil),            // 36: avion.drop.v1.CreateDraftRequest
	(*CreateDraftResponse)(nil),           // 37: avion.drop.v1.CreateDraftResponse
	(*GetDraftRequest)(nil),               // 38: avion.drop.v1.GetDraftRequest
	(*GetDraftResponse)(nil),              // 39: avion.drop.v1.GetDraftResponse
	(*UpdateDraftRequest)(nil),            // 40: avion.drop.v1.UpdateDraftRequest
	(*UpdateDraftResponse)(nil),           // 41: avion.drop.v1.UpdateDraftResponse
	(*DeleteDraftRequest)(nil),            // 42: avion.drop.v1.DeleteDraftRequest
	(*DeleteDraftResponse)(nil),           // 43: avion.drop.v1.DeleteDraftResponse
	(*ListDraftsRequest)(nil),             // 44: avion.drop.v1.ListDraftsRequest
	(*DraftFilter)(nil),                   // 45: avion.drop.v1.DraftFilter
	(*ListDraftsResponse)(nil),            // 46: avion.drop.v1.ListDraftsResponse
	(*PublishDraftRequest)(nil),           // 47: avion.drop.v1.PublishDraftRequest
	(*PublishDraftResponse)(nil),          // 48: avion.drop.v1.PublishDraftResponse
	(*AutoSaveDraftRequest)(nil),          // 49: avion.drop.v1.AutoSaveDraftRequest
	(*AutoSaveDraftResponse)(nil),         // 50: avion.drop.v1.AutoSaveDraftResponse
	(*CreatePollRequest)(nil),             // 51: avion.drop.v1.CreatePollRequest
	(*CreatePollResponse)(nil),            // 52: avion.drop.v1.CreatePollResponse
	(*VotePollRequest)(nil),               // 53: avion.drop.v1.VotePollRequest
	(*VotePollResponse)(nil),              // 54: avion.drop.v1.VotePollResponse
	(*GetPollResultsRequest)(nil),         // 55: avion.drop.v1.GetPollResultsRequest
	(*GetPollResultsResponse)(nil),        // 56: avion.drop.v1.GetPollResultsResponse
	(*ClosePollRequest)(nil),              // 57: avion.drop.v1.ClosePollRequest
	(*ClosePollResponse)(nil),             // 58: avion.drop.v1.ClosePollResponse
	(*GetDropReactionsRequest)(nil),       // 59: avion.drop.v1.GetDropReactionsRequest
	(*GetDropReactionsResponse)(nil),      // 60: avion.drop.v1.GetDropReactionsResponse
	(*ListUserBookmarksRequest)(nil),      // 61: avion.drop.v1.ListUserBookmarksRequest
	(*ListUserBookmarksResponse)(nil),     // 62: avion.drop.v1.ListUserBookmarksResponse
	(*GetDropEditHistoryRequest)(nil),     // 63: avion.drop.v1.GetDropEditHistoryRequest
	(*GetDropEditHistoryResponse)(nil),    // 64: avion.drop.v1.GetDropEditHistoryResponse
	(*GetDropStatsRequest)(nil),           // 65: avion.drop.v1.GetDropStatsRequest
	(*GetDropStatsResponse)(nil),          // 66: avion.drop.v1.GetDropStatsResponse
	(*BatchGetDropsRequest)(nil),          // 67: avion.drop.v1.BatchGetDropsRequest
	(*BatchGetDropsResponse)(nil),         // 68: avion.drop.v1.BatchGetDropsResponse
	(*BatchDeleteDropsRequest)(nil),       // 69: avion.drop.v1.BatchDeleteDropsRequest
	(*BatchDeleteDropsResponse)(nil),      // 70: avion.drop.v1.BatchDeleteDropsResponse
	(*BatchUpdateDropStatusRequest)(nil),  // 71: avion.drop.v1.BatchUpdateDropStatusRequest
	(*BatchUpdateDropStatusResponse)(nil), // 72: avion.drop.v1.BatchUpdateDropStatusResponse
	nil,                                   // 73: avion.drop.v1.BatchDeleteDropsResponse.ErrorsEntry
	nil,                                   // 74: avion.drop.v1.BatchUpdateDropStatusResponse.ErrorsEntry
	(DropVisibility)(0),                   // 75: avion.drop.v1.DropVisibility
	(*ContentWarning)(nil),                // 76: avion.drop.v1.ContentWarning
	(MediaType)(0),                        // 77: avion.drop.v1.MediaType
	(*Drop)(nil),                          // 78: avion.drop.v1.Drop
	(*DropMedia)(nil),                     // 79: avion.drop.v1.DropMedia
	(*DropHashtag)(nil),                   // 80: avion.drop.v1.DropHashtag
	(*DropMention)(nil),                   // 81: avion.drop.v1.DropMention
	(*v1.PaginationRequest)(nil),          // 82: avion.common.v1.PaginationRequest
	(*timestamppb.Timestamp)(nil),         // 83: google.protobuf.Timestamp
	(*v1.PaginationResponse)(nil),         // 84: avion.common.v1.PaginationResponse
	(*DropDraft)(nil),                     // 85: avion.drop.v1.DropDraft
	(DraftStatus)(0),                      // 86: avion.drop.v1.DraftStatus
	(*Poll)(nil),                          // 87: avion.drop.v1.Poll
	(*UserPollVote)(nil),                  // 88: avion.drop.v1.UserPollVote
	(ReactionType)(0),                     // 89: avion.drop.v1.ReactionType
	(*DropReaction)(nil),                  // 90: avion.drop.v1.DropReaction
	(*EditHistory)(nil),                   // 91: avion.drop.v1.EditHistory
	(*DropStats)(nil),                     // 92: avion.drop.v1.DropStats
	(DropStatus)(0),                       // 93: avion.drop.v1.DropStatus
}
var file_avion_drop_v1_drop_service_proto_depIdxs = []int32{
	75,  // 0: avion.drop.v1.CreateDropRequest.visibility:type_name -> avion.drop.v1.DropVisibility
	1,   // 1: avion.drop.v1.CreateDropRequest.media_attachments:type_name -> avion.drop.v1.MediaAttachment
	76,  // 2: avion.drop.v1.CreateDropRequest.content_warning:type_name -> avion.drop.v1.ContentWarning
	77,  // 3: avion.drop.v1.MediaAttachment.media_type:type_name -> avion.drop.v1.MediaType
	78,  // 4: avion.drop.v1.CreateDropResponse.drop:type_name -> avion.drop.v1.Drop
	78,  // 5: avion.drop.v1.GetDropResponse.drop:type_name -> avion.drop.v1.Drop
	79,  // 6: avion.drop.v1.GetDropResponse.media:type_name -> avion.drop.v1.DropMedia
	80,  // 7: avion.drop.v1.GetDropResponse.hashtags:type_name -> avion.drop.v1.DropHashtag
	81,  // 8: avion.drop.v1.GetDropResponse.mentions:type_name -> avion.drop.v1.DropMention
	75,  // 9: avion.drop.v1.UpdateDropRequest.visibility:type_name -> avion.drop.v1.DropVisibility
	76,  // 10: avion.drop.v1.UpdateDropRequest.content_warning:type_name -> avion.drop.v1.ContentWarning
	78,  // 11: avion.drop.v1.UpdateDropResponse.drop:type_name -> avion.drop.v1.Drop
	82,  // 12: avion.drop.v1.ListDropsRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	10,  // 13: avion.drop.v1.ListDropsRequest.filter:type_name -> avion.drop.v1.DropFilter
	75,  // 14: avion.drop.v1.DropFilter.visibility:type_name -> avion.drop.v1.DropVisibility
	83,  // 15: avion.drop.v1.DropFilter.from:type_name -> google.protobuf.Timestamp
	83,  // 16: avion.drop.v1.DropFilter.to:type_name -> google.protobuf.Timestamp
	78,  // 17: avion.drop.v1.ListDropsResponse.drops:type_name -> avion.drop.v1.Drop
	84,  // 18: avion.drop.v1.ListDropsResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	82,  // 19: avion.drop.v1.ListUserDropsRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	78,  // 20: avion.drop.v1.ListUserDropsResponse.drops:type_name -> avion.drop.v1.Drop
	84,  // 21: avion.drop.v1.ListUserDropsResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	75,  // 22: avion.drop.v1.ReplyToDropRequest.visibility:type_name -> avion.drop.v1.DropVisibility
	1,   // 23: avion.drop.v1.ReplyToDropRequest.media_attachments:type_name -> avion.drop.v1.MediaAttachment
	78,  // 24: avion.drop.v1.ReplyToDropResponse.drop:type_name -> avion.drop.v1.Drop
	75,  // 25: avion.drop.v1.QuoteDropRequest.visibility:type_name -> avion.drop.v1.DropVisibility
	1,   // 26: avion.drop.v1.QuoteDropRequest.media_attachments:type_name -> avion.drop.v1.MediaAttachment
	78,  // 27: avion.drop.v1.QuoteDropResponse.drop:type_name -> avion.drop.v1.Drop
	82,  // 28: avion.drop.v1.SearchDropsRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	31,  // 29: avion.drop.v1.SearchDropsRequest.filter:type_name -> avion.drop.v1.SearchFilter
	83,  // 30: avion.drop.v1.SearchFilter.from:type_name -> google.protobuf.Timestamp
	83,  // 31: avion.drop.v1.SearchFilter.to:type_name -> google.protobuf.Timestamp
	78,  // 32: avion.drop.v1.SearchDropsResponse.drops:type_name -> avion.drop.v1.Drop
	84,  // 33: avion.drop.v1.SearchDropsResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	78,  // 34: avion.drop.v1.GetDropThreadResponse.root_drop:type_name -> avion.drop.v1.Drop
	35,  // 35: avion.drop.v1.GetDropThreadResponse.replies:type_name -> avion.drop.v1.ThreadNode
	78,  // 36: avion.drop.v1.ThreadNode.drop:type_name -> avion.drop.v1.Drop
	35,  // 37: avion.drop.v1.ThreadNode.children:type_name -> avion.drop.v1.ThreadNode
	75,  // 38: avion.drop.v1.CreateDraftRequest.visibility:type_name -> avion.drop.v1.DropVisibility
	1,   // 39: avion.drop.v1.CreateDraftRequest.media_attachments:type_name -> avion.drop.v1.MediaAttachment
	83,  // 40: avion.drop.v1.CreateDraftRequest.scheduled_at:type_name -> google.protobuf.Timestamp
	85,  // 41: avion.drop.v1.CreateDraftResponse.draft:type_name -> avion.drop.v1.DropDraft
	85,  // 42: avion.drop.v1.GetDraftResponse.draft:type_name -> avion.drop.v1.DropDraft
	75,  // 43: avion.drop.v1.UpdateDraftRequest.visibility:type_name -> avion.drop.v1.DropVisibility
	1,   // 44: avion.drop.v1.UpdateDraftRequest.media_attachments:type_name -> avion.drop.v1.MediaAttachment
	83,  // 45: avion.drop.v1.UpdateDraftRequest.scheduled_at:type_name -> google.protobuf.Timestamp
	86,  // 46: avion.drop.v1.UpdateDraftRequest.status:type_name -> avion.drop.v1.DraftStatus
	85,  // 47: avion.drop.v1.UpdateDraftResponse.draft:type_name -> avion.drop.v1.DropDraft
	82,  // 48: avion.drop.v1.ListDraftsRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	45,  // 49: avion.drop.v1.ListDraftsRequest.filter:type_name -> avion.drop.v1.DraftFilter
	86,  // 50: avion.drop.v1.DraftFilter.status:type_name -> avion.drop.v1.DraftStatus
	83,  // 51: avion.drop.v1.DraftFilter.from:type_name -> google.protobuf.Timestamp
	83,  // 52: avion.drop.v1.DraftFilter.to:type_name -> google.protobuf.Timestamp
	85,  // 53: avion.drop.v1.ListDraftsResponse.drafts:type_name -> avion.drop.v1.DropDraft
	84,  // 54: avion.drop.v1.ListDraftsResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	75,  // 55: avion.drop.v1.PublishDraftRequest.visibility:type_name -> avion.drop.v1.DropVisibility
	78,  // 56: avion.drop.v1.PublishDraftResponse.drop:type_name -> avion.drop.v1.Drop
	85,  // 57: avion.drop.v1.PublishDraftResponse.draft:type_name -> avion.drop.v1.DropDraft
	75,  // 58: avion.drop.v1.AutoSaveDraftRequest.visibility:type_name -> avion.drop.v1.DropVisibility
	83,  // 59: avion.drop.v1.AutoSaveDraftRequest.client_timestamp:type_name -> google.protobuf.Timestamp
	83,  // 60: avion.drop.v1.AutoSaveDraftResponse.server_timestamp:type_name -> google.protobuf.Timestamp
	87,  // 61: avion.drop.v1.CreatePollResponse.poll:type_name -> avion.drop.v1.Poll
	87,  // 62: avion.drop.v1.VotePollResponse.poll:type_name -> avion.drop.v1.Poll
	87,  // 63: avion.drop.v1.GetPollResultsResponse.poll:type_name -> avion.drop.v1.Poll
	88,  // 64: avion.drop.v1.GetPollResultsResponse.user_vote:type_name -> avion.drop.v1.UserPollVote
	87,  // 65: avion.drop.v1.ClosePollResponse.poll:type_name -> avion.drop.v1.Poll
	89,  // 66: avion.drop.v1.GetDropReactionsRequest.reaction_type:type_name -> avion.drop.v1.ReactionType
	82,  // 67: avion.drop.v1.GetDropReactionsRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	90,  // 68: avion.drop.v1.GetDropReactionsResponse.reactions:type_name -> avion.drop.v1.DropReaction
	84,  // 69: avion.drop.v1.GetDropReactionsResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	82,  // 70: avion.drop.v1.ListUserBookmarksRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	78,  // 71: avion.drop.v1.ListUserBookmarksResponse.drops:type_name -> avion.drop.v1.Drop
	84,  // 72: avion.drop.v1.ListUserBookmarksResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	82,  // 73: avion.drop.v1.GetDropEditHistoryRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	91,  // 74: avion.drop.v1.GetDropEditHistoryResponse.history:type_name -> avion.drop.v1.EditHistory
	84,  // 75: avion.drop.v1.GetDropEditHistoryResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	83,  // 76: avion.drop.v1.GetDropStatsRequest.from:type_name -> google.protobuf.Timestamp
	83,  // 77: avion.drop.v1.GetDropStatsRequest.to:type_name -> google.protobuf.Timestamp
	92,  // 78: avion.drop.v1.GetDropStatsResponse.stats:type_name -> avion.drop.v1.DropStats
	78,  // 79: avion.drop.v1.BatchGetDropsResponse.drops:type_name -> avion.drop.v1.Drop
	73,  // 80: avion.drop.v1.BatchDeleteDropsResponse.errors:type_name -> avion.drop.v1.BatchDeleteDropsResponse.ErrorsEntry
	93,  // 81: avion.drop.v1.BatchUpdateDropStatusRequest.new_status:type_name -> avion.drop.v1.DropStatus
	74,  // 82: avion.drop.v1.BatchUpdateDropStatusResponse.errors:type_name -> avion.drop.v1.BatchUpdateDropStatusResponse.ErrorsEntry
	0,   // 83: avion.drop.v1.DropService.CreateDrop:input_type -> avion.drop.v1.CreateDropRequest
	3,   // 84: avion.drop.v1.DropService.GetDrop:input_type -> avion.drop.v1.GetDropRequest
	5,   // 85: avion.drop.v1.DropService.UpdateDrop:input_type -> avion.drop.v1.UpdateDropRequest
	7,   // 86: avion.drop.v1.DropService.DeleteDrop:input_type -> avion.drop.v1.DeleteDropRequest
	9,   // 87: avion.drop.v1.DropService.ListDrops:input_type -> avion.drop.v1.ListDropsRequest
	12,  // 88: avion.drop.v1.DropService.ListUserDrops:input_type -> avion.drop.v1.ListUserDropsRequest
	14,  // 89: avion.drop.v1.DropService.AddLike:input_type -> avion.drop.v1.AddLikeRequest
	16,  // 90: avion.drop.v1.DropService.RemoveLike:input_type -> avion.drop.v1.RemoveLikeRequest
	18,  // 91: avion.drop.v1.DropService.AddRedrop:input_type -> avion.drop.v1.AddRedropRequest
	20,  // 92: avion.drop.v1.DropService.RemoveRedrop:input_type -> avion.drop.v1.RemoveRedropRequest
	22,  // 93: avion.drop.v1.DropService.AddBookmark:input_type -> avion.drop.v1.AddBookmarkRequest
	24,  // 94: avion.drop.v1.DropService.RemoveBookmark:input_type -> avion.drop.v1.RemoveBookmarkRequest
	26,  // 95: avion.drop.v1.DropService.ReplyToDrop:input_type -> avion.drop.v1.ReplyToDropRequest
	28,  // 96: avion.drop.v1.DropService.QuoteDrop:input_type -> avion.drop.v1.QuoteDropRequest
	30,  // 97: avion.drop.v1.DropService.SearchDrops:input_type -> avion.drop.v1.SearchDropsRequest
	33,  // 98: avion.drop.v1.DropService.GetDropThread:input_type -> avion.drop.v1.GetDropThreadRequest
	36,  // 99: avion.drop.v1.DropService.CreateDraft:input_type -> avion.drop.v1.CreateDraftRequest
	38,  // 100: avion.drop.v1.DropService.GetDraft:input_type -> avion.drop.v1.GetDraftRequest
	40,  // 101: avion.drop.v1.DropService.UpdateDraft:input_type -> avion.drop.v1.UpdateDraftRequest
	42,  // 102: avion.drop.v1.DropService.DeleteDraft:input_type -> avion.drop.v1.DeleteDraftRequest
	44,  // 103: avion.drop.v1.DropService.ListDrafts:input_type -> avion.drop.v1.ListDraftsRequest
	47,  // 104: avion.drop.v1.DropService.PublishDraft:input_type -> avion.drop.v1.PublishDraftRequest
	49,  // 105: avion.drop.v1.DropService.AutoSaveDraft:input_type -> avion.drop.v1.AutoSaveDraftRequest
	51,  // 106: avion.drop.v1.DropService.CreatePoll:input_type -> avion.drop.v1.CreatePollRequest
	53,  // 107: avion.drop.v1.DropService.VotePoll:input_type -> avion.drop.v1.VotePollRequest
	55,  // 108: avion.drop.v1.DropService.GetPollResults:input_type -> avion.drop.v1.GetPollResultsRequest
	57,  // 109: avion.drop.v1.DropService.ClosePoll:input_type -> avion.drop.v1.ClosePollRequest
	59,  // 110: avion.drop.v1.DropService.GetDropReactions:input_type -> avion.drop.v1.GetDropReactionsRequest
	61,  // 111: avion.drop.v1.DropService.ListUserBookmarks:input_type -> avion.drop.v1.ListUserBookmarksRequest
	63,  // 112: avion.drop.v1.DropService.GetDropEditHistory:input_type -> avion.drop.v1.GetDropEditHistoryRequest
	65,  // 113: avion.drop.v1.DropService.GetDropStats:input_type -> avion.drop.v1.GetDropStatsRequest
	67,  // 114: avion.drop.v1.DropService.BatchGetDrops:input_type -> avion.drop.v1.BatchGetDropsRequest
	69,  // 115: avion.drop.v1.DropService.BatchDeleteDrops:input_type -> avion.drop.v1.BatchDeleteDropsRequest
	71,  // 116: avion.drop.v1.DropService.BatchUpdateDropStatus:input_type -> avion.drop.v1.BatchUpdateDropStatusRequest
	2,   // 117: avion.drop.v1.DropService.CreateDrop:output_type -> avion.drop.v1.CreateDropResponse
	4,   // 118: avion.drop.v1.DropService.GetDrop:output_type -> avion.drop.v1.GetDropResponse
	6,   // 119: avion.drop.v1.DropService.UpdateDrop:output_type -> avion.drop.v1.UpdateDropResponse
	8,   // 120: avion.drop.v1.DropService.DeleteDrop:output_type -> avion.drop.v1.DeleteDropResponse
	11,  // 121: avion.drop.v1.DropService.ListDrops:output_type -> avion.drop.v1.ListDropsResponse
	13,  // 122: avion.drop.v1.DropService.ListUserDrops:output_type -> avion.drop.v1.ListUserDropsResponse
	15,  // 123: avion.drop.v1.DropService.AddLike:output_type -> avion.drop.v1.AddLikeResponse
	17,  // 124: avion.drop.v1.DropService.RemoveLike:output_type -> avion.drop.v1.RemoveLikeResponse
	19,  // 125: avion.drop.v1.DropService.AddRedrop:output_type -> avion.drop.v1.AddRedropResponse
	21,  // 126: avion.drop.v1.DropService.RemoveRedrop:output_type -> avion.drop.v1.RemoveRedropResponse
	23,  // 127: avion.drop.v1.DropService.AddBookmark:output_type -> avion.drop.v1.AddBookmarkResponse
	25,  // 128: avion.drop.v1.DropService.RemoveBookmark:output_type -> avion.drop.v1.RemoveBookmarkResponse
	27,  // 129: avion.drop.v1.DropService.ReplyToDrop:output_type -> avion.drop.v1.ReplyToDropResponse
	29,  // 130: avion.drop.v1.DropService.QuoteDrop:output_type -> avion.drop.v1.QuoteDropResponse
	32,  // 131: avion.drop.v1.DropService.SearchDrops:output_type -> avion.drop.v1.SearchDropsResponse
	34,  // 132: avion.drop.v1.DropService.GetDropThread:output_type -> avion.drop.v1.GetDropThreadResponse
	37,  // 133: avion.drop.v1.DropService.CreateDraft:output_type -> avion.drop.v1.CreateDraftResponse
	39,  // 134: avion.drop.v1.DropService.GetDraft:output_type -> avion.drop.v1.GetDraftResponse
	41,  // 135: avion.drop.v1.DropService.UpdateDraft:output_type -> avion.drop.v1.UpdateDraftResponse
	43,  // 136: avion.drop.v1.DropService.DeleteDraft:output_type -> avion.drop.v1.DeleteDraftResponse
	46,  // 137: avion.drop.v1.DropService.ListDrafts:output_type -> avion.drop.v1.ListDraftsResponse
	48,  // 138: avion.drop.v1.DropService.PublishDraft:output_type -> avion.drop.v1.PublishDraftResponse
	50,  // 139: avion.drop.v1.DropService.AutoSaveDraft:output_type -> avion.drop.v1.AutoSaveDraftResponse
	52,  // 140: avion.drop.v1.DropService.CreatePoll:output_type -> avion.drop.v1.CreatePollResponse
	54,  // 141: avion.drop.v1.DropService.VotePoll:output_type -> avion.drop.v1.VotePollResponse
	56,  // 142: avion.drop.v1.DropService.GetPollResults:output_type -> avion.drop.v1.GetPollResultsResponse
	58,  // 143: avion.drop.v1.DropService.ClosePoll:output_type -> avion.drop.v1.ClosePollResponse
	60,  // 144: avion.drop.v1.DropService.GetDropReactions:output_type -> avion.drop.v1.GetDropReactionsResponse
	62,  // 145: avion.drop.v1.DropService.ListUserBookmarks:output_type -> avion.drop.v1.ListUserBookmarksResponse
	64,  // 146: avion.drop.v1.DropService.GetDropEditHistory:output_type -> avion.drop.v1.GetDropEditHistoryResponse
	66,  // 147: avion.drop.v1.DropService.GetDropStats:output_type -> avion.drop.v1.GetDropStatsResponse
	68,  // 148: avion.drop.v1.DropService.BatchGetDrops:output_type -> avion.drop.v1.BatchGetDropsResponse
	70,  // 149: avion.drop.v1.DropService.BatchDeleteDrops:output_type -> avion.drop.v1.BatchDeleteDropsResponse
	72,  // 150: avion.drop.v1.DropService.BatchUpdateDropStatus:output_type -> avion.drop.v1.BatchUpdateDropStatusResponse
	117, // [117:151] is the sub-list for method output_type
	83,  // [83:117] is the sub-list for method input_type
	83,  // [83:83] is the sub-list for extension type_name
	83,  // [83:83] is the sub-list for extension extendee
	0,   // [0:83] is the sub-list for field type_name
}

func init() { file_avion_drop_v1_drop_service_proto_init() }
func file_avion_drop_v1_drop_service_proto_init() {
	if File_avion_drop_v1_drop_service_proto != nil {
		return
	}
	file_avion_drop_v1_drop_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_avion_drop_v1_drop_service_proto_rawDesc), len(file_avion_drop_v1_drop_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   75,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_avion_drop_v1_drop_service_proto_goTypes,
		DependencyIndexes: file_avion_drop_v1_drop_service_proto_depIdxs,
		MessageInfos:      file_avion_drop_v1_drop_service_proto_msgTypes,
	}.Build()
	File_avion_drop_v1_drop_service_proto = out.File
	file_avion_drop_v1_drop_service_proto_goTypes = nil
	file_avion_drop_v1_drop_service_proto_depIdxs = nil
}
