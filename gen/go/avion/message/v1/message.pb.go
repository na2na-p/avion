// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: avion/message/v1/message.proto

package messagev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// メッセージステータス
type MessageStatus int32

const (
	// 未指定
	MessageStatus_MESSAGE_STATUS_UNSPECIFIED MessageStatus = 0
	// 送信中
	MessageStatus_MESSAGE_STATUS_SENDING MessageStatus = 1
	// 送信済み
	MessageStatus_MESSAGE_STATUS_SENT MessageStatus = 2
	// 配信済み
	MessageStatus_MESSAGE_STATUS_DELIVERED MessageStatus = 3
	// 既読
	MessageStatus_MESSAGE_STATUS_READ MessageStatus = 4
	// 送信失敗
	MessageStatus_MESSAGE_STATUS_FAILED MessageStatus = 5
)

// Enum value maps for MessageStatus.
var (
	MessageStatus_name = map[int32]string{
		0: "MESSAGE_STATUS_UNSPECIFIED",
		1: "MESSAGE_STATUS_SENDING",
		2: "MESSAGE_STATUS_SENT",
		3: "MESSAGE_STATUS_DELIVERED",
		4: "MESSAGE_STATUS_READ",
		5: "MESSAGE_STATUS_FAILED",
	}
	MessageStatus_value = map[string]int32{
		"MESSAGE_STATUS_UNSPECIFIED": 0,
		"MESSAGE_STATUS_SENDING":     1,
		"MESSAGE_STATUS_SENT":        2,
		"MESSAGE_STATUS_DELIVERED":   3,
		"MESSAGE_STATUS_READ":        4,
		"MESSAGE_STATUS_FAILED":      5,
	}
)

func (x MessageStatus) Enum() *MessageStatus {
	p := new(MessageStatus)
	*p = x
	return p
}

func (x MessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_message_v1_message_proto_enumTypes[0].Descriptor()
}

func (MessageStatus) Type() protoreflect.EnumType {
	return &file_avion_message_v1_message_proto_enumTypes[0]
}

func (x MessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageStatus.Descriptor instead.
func (MessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{0}
}

// 会話タイプ
type ConversationType int32

const (
	// 未指定
	ConversationType_CONVERSATION_TYPE_UNSPECIFIED ConversationType = 0
	// ダイレクトメッセージ（1対1）
	ConversationType_CONVERSATION_TYPE_DIRECT ConversationType = 1
	// グループメッセージ
	ConversationType_CONVERSATION_TYPE_GROUP ConversationType = 2
	// システムメッセージ
	ConversationType_CONVERSATION_TYPE_SYSTEM ConversationType = 3
)

// Enum value maps for ConversationType.
var (
	ConversationType_name = map[int32]string{
		0: "CONVERSATION_TYPE_UNSPECIFIED",
		1: "CONVERSATION_TYPE_DIRECT",
		2: "CONVERSATION_TYPE_GROUP",
		3: "CONVERSATION_TYPE_SYSTEM",
	}
	ConversationType_value = map[string]int32{
		"CONVERSATION_TYPE_UNSPECIFIED": 0,
		"CONVERSATION_TYPE_DIRECT":      1,
		"CONVERSATION_TYPE_GROUP":       2,
		"CONVERSATION_TYPE_SYSTEM":      3,
	}
)

func (x ConversationType) Enum() *ConversationType {
	p := new(ConversationType)
	*p = x
	return p
}

func (x ConversationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConversationType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_message_v1_message_proto_enumTypes[1].Descriptor()
}

func (ConversationType) Type() protoreflect.EnumType {
	return &file_avion_message_v1_message_proto_enumTypes[1]
}

func (x ConversationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConversationType.Descriptor instead.
func (ConversationType) EnumDescriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{1}
}

// 添付ファイルタイプ
type AttachmentType int32

const (
	// 未指定
	AttachmentType_ATTACHMENT_TYPE_UNSPECIFIED AttachmentType = 0
	// 画像
	AttachmentType_ATTACHMENT_TYPE_IMAGE AttachmentType = 1
	// 動画
	AttachmentType_ATTACHMENT_TYPE_VIDEO AttachmentType = 2
	// 音声
	AttachmentType_ATTACHMENT_TYPE_AUDIO AttachmentType = 3
	// ファイル
	AttachmentType_ATTACHMENT_TYPE_FILE AttachmentType = 4
	// リンクプレビュー
	AttachmentType_ATTACHMENT_TYPE_LINK_PREVIEW AttachmentType = 5
)

// Enum value maps for AttachmentType.
var (
	AttachmentType_name = map[int32]string{
		0: "ATTACHMENT_TYPE_UNSPECIFIED",
		1: "ATTACHMENT_TYPE_IMAGE",
		2: "ATTACHMENT_TYPE_VIDEO",
		3: "ATTACHMENT_TYPE_AUDIO",
		4: "ATTACHMENT_TYPE_FILE",
		5: "ATTACHMENT_TYPE_LINK_PREVIEW",
	}
	AttachmentType_value = map[string]int32{
		"ATTACHMENT_TYPE_UNSPECIFIED":  0,
		"ATTACHMENT_TYPE_IMAGE":        1,
		"ATTACHMENT_TYPE_VIDEO":        2,
		"ATTACHMENT_TYPE_AUDIO":        3,
		"ATTACHMENT_TYPE_FILE":         4,
		"ATTACHMENT_TYPE_LINK_PREVIEW": 5,
	}
)

func (x AttachmentType) Enum() *AttachmentType {
	p := new(AttachmentType)
	*p = x
	return p
}

func (x AttachmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttachmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_message_v1_message_proto_enumTypes[2].Descriptor()
}

func (AttachmentType) Type() protoreflect.EnumType {
	return &file_avion_message_v1_message_proto_enumTypes[2]
}

func (x AttachmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttachmentType.Descriptor instead.
func (AttachmentType) EnumDescriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{2}
}

// 暗号化タイプ
type EncryptionType int32

const (
	// 未指定
	EncryptionType_ENCRYPTION_TYPE_UNSPECIFIED EncryptionType = 0
	// 暗号化なし
	EncryptionType_ENCRYPTION_TYPE_NONE EncryptionType = 1
	// トランスポート層暗号化のみ
	EncryptionType_ENCRYPTION_TYPE_TRANSPORT EncryptionType = 2
	// End-to-End暗号化
	EncryptionType_ENCRYPTION_TYPE_E2E EncryptionType = 3
)

// Enum value maps for EncryptionType.
var (
	EncryptionType_name = map[int32]string{
		0: "ENCRYPTION_TYPE_UNSPECIFIED",
		1: "ENCRYPTION_TYPE_NONE",
		2: "ENCRYPTION_TYPE_TRANSPORT",
		3: "ENCRYPTION_TYPE_E2E",
	}
	EncryptionType_value = map[string]int32{
		"ENCRYPTION_TYPE_UNSPECIFIED": 0,
		"ENCRYPTION_TYPE_NONE":        1,
		"ENCRYPTION_TYPE_TRANSPORT":   2,
		"ENCRYPTION_TYPE_E2E":         3,
	}
)

func (x EncryptionType) Enum() *EncryptionType {
	p := new(EncryptionType)
	*p = x
	return p
}

func (x EncryptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncryptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_message_v1_message_proto_enumTypes[3].Descriptor()
}

func (EncryptionType) Type() protoreflect.EnumType {
	return &file_avion_message_v1_message_proto_enumTypes[3]
}

func (x EncryptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncryptionType.Descriptor instead.
func (EncryptionType) EnumDescriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{3}
}

// リアクションタイプ
type ReactionType int32

const (
	// 未指定
	ReactionType_REACTION_TYPE_UNSPECIFIED ReactionType = 0
	// いいね
	ReactionType_REACTION_TYPE_LIKE ReactionType = 1
	// ハート
	ReactionType_REACTION_TYPE_HEART ReactionType = 2
	// 笑顔
	ReactionType_REACTION_TYPE_LAUGH ReactionType = 3
	// 驚き
	ReactionType_REACTION_TYPE_SURPRISE ReactionType = 4
	// 悲しい
	ReactionType_REACTION_TYPE_SAD ReactionType = 5
	// 怒り
	ReactionType_REACTION_TYPE_ANGRY ReactionType = 6
	// カスタム絵文字
	ReactionType_REACTION_TYPE_CUSTOM ReactionType = 99
)

// Enum value maps for ReactionType.
var (
	ReactionType_name = map[int32]string{
		0:  "REACTION_TYPE_UNSPECIFIED",
		1:  "REACTION_TYPE_LIKE",
		2:  "REACTION_TYPE_HEART",
		3:  "REACTION_TYPE_LAUGH",
		4:  "REACTION_TYPE_SURPRISE",
		5:  "REACTION_TYPE_SAD",
		6:  "REACTION_TYPE_ANGRY",
		99: "REACTION_TYPE_CUSTOM",
	}
	ReactionType_value = map[string]int32{
		"REACTION_TYPE_UNSPECIFIED": 0,
		"REACTION_TYPE_LIKE":        1,
		"REACTION_TYPE_HEART":       2,
		"REACTION_TYPE_LAUGH":       3,
		"REACTION_TYPE_SURPRISE":    4,
		"REACTION_TYPE_SAD":         5,
		"REACTION_TYPE_ANGRY":       6,
		"REACTION_TYPE_CUSTOM":      99,
	}
)

func (x ReactionType) Enum() *ReactionType {
	p := new(ReactionType)
	*p = x
	return p
}

func (x ReactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_message_v1_message_proto_enumTypes[4].Descriptor()
}

func (ReactionType) Type() protoreflect.EnumType {
	return &file_avion_message_v1_message_proto_enumTypes[4]
}

func (x ReactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReactionType.Descriptor instead.
func (ReactionType) EnumDescriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{4}
}

// メッセージ
type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// メッセージID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 会話ID
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 送信者ID
	SenderId string `protobuf:"bytes,3,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	// メッセージ本文
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	// メッセージステータス
	Status MessageStatus `protobuf:"varint,5,opt,name=status,proto3,enum=avion.message.v1.MessageStatus" json:"status,omitempty"`
	// 作成日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新日時
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// 削除日時
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	// 編集済みフラグ
	IsEdited bool `protobuf:"varint,9,opt,name=is_edited,json=isEdited,proto3" json:"is_edited,omitempty"`
	// 編集日時
	EditedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=edited_at,json=editedAt,proto3" json:"edited_at,omitempty"`
	// 返信先メッセージID
	ReplyToMessageId string `protobuf:"bytes,11,opt,name=reply_to_message_id,json=replyToMessageId,proto3" json:"reply_to_message_id,omitempty"`
	// 転送元メッセージID
	ForwardedFromMessageId string `protobuf:"bytes,12,opt,name=forwarded_from_message_id,json=forwardedFromMessageId,proto3" json:"forwarded_from_message_id,omitempty"`
	// 添付ファイル
	Attachments []*MessageAttachment `protobuf:"bytes,13,rep,name=attachments,proto3" json:"attachments,omitempty"`
	// メンション対象ユーザーID
	MentionedUserIds []string `protobuf:"bytes,14,rep,name=mentioned_user_ids,json=mentionedUserIds,proto3" json:"mentioned_user_ids,omitempty"`
	// 暗号化タイプ
	EncryptionType EncryptionType `protobuf:"varint,15,opt,name=encryption_type,json=encryptionType,proto3,enum=avion.message.v1.EncryptionType" json:"encryption_type,omitempty"`
	// 暗号化メタデータ（E2E暗号化時のキー情報等）
	EncryptionMetadata *EncryptionMetadata `protobuf:"bytes,16,opt,name=encryption_metadata,json=encryptionMetadata,proto3" json:"encryption_metadata,omitempty"`
	// リアクション
	Reactions []*MessageReaction `protobuf:"bytes,17,rep,name=reactions,proto3" json:"reactions,omitempty"`
	// システムメッセージフラグ
	IsSystemMessage bool `protobuf:"varint,18,opt,name=is_system_message,json=isSystemMessage,proto3" json:"is_system_message,omitempty"`
	// システムメッセージタイプ（参加、退出、タイトル変更等）
	SystemMessageType string `protobuf:"bytes,19,opt,name=system_message_type,json=systemMessageType,proto3" json:"system_message_type,omitempty"`
	// メタデータ（拡張用）
	Metadata      map[string]string `protobuf:"bytes,20,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_avion_message_v1_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_avion_message_v1_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *Message) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageStatus_MESSAGE_STATUS_UNSPECIFIED
}

func (x *Message) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Message) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Message) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Message) GetIsEdited() bool {
	if x != nil {
		return x.IsEdited
	}
	return false
}

func (x *Message) GetEditedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EditedAt
	}
	return nil
}

func (x *Message) GetReplyToMessageId() string {
	if x != nil {
		return x.ReplyToMessageId
	}
	return ""
}

func (x *Message) GetForwardedFromMessageId() string {
	if x != nil {
		return x.ForwardedFromMessageId
	}
	return ""
}

func (x *Message) GetAttachments() []*MessageAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Message) GetMentionedUserIds() []string {
	if x != nil {
		return x.MentionedUserIds
	}
	return nil
}

func (x *Message) GetEncryptionType() EncryptionType {
	if x != nil {
		return x.EncryptionType
	}
	return EncryptionType_ENCRYPTION_TYPE_UNSPECIFIED
}

func (x *Message) GetEncryptionMetadata() *EncryptionMetadata {
	if x != nil {
		return x.EncryptionMetadata
	}
	return nil
}

func (x *Message) GetReactions() []*MessageReaction {
	if x != nil {
		return x.Reactions
	}
	return nil
}

func (x *Message) GetIsSystemMessage() bool {
	if x != nil {
		return x.IsSystemMessage
	}
	return false
}

func (x *Message) GetSystemMessageType() string {
	if x != nil {
		return x.SystemMessageType
	}
	return ""
}

func (x *Message) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 会話
type Conversation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会話ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 会話タイプ
	Type ConversationType `protobuf:"varint,2,opt,name=type,proto3,enum=avion.message.v1.ConversationType" json:"type,omitempty"`
	// 会話タイトル（グループの場合）
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 会話の説明
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// アイコンURL
	IconUrl string `protobuf:"bytes,5,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	// 参加者IDリスト
	ParticipantIds []string `protobuf:"bytes,6,rep,name=participant_ids,json=participantIds,proto3" json:"participant_ids,omitempty"`
	// 参加者情報
	Participants []*ConversationParticipant `protobuf:"bytes,7,rep,name=participants,proto3" json:"participants,omitempty"`
	// 作成者ID
	CreatorId string `protobuf:"bytes,8,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	// 最新メッセージ
	LastMessage *Message `protobuf:"bytes,9,opt,name=last_message,json=lastMessage,proto3" json:"last_message,omitempty"`
	// 最新メッセージ日時
	LastMessageAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_message_at,json=lastMessageAt,proto3" json:"last_message_at,omitempty"`
	// 未読メッセージ数（リクエストユーザー視点）
	UnreadCount int32 `protobuf:"varint,11,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	// 作成日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新日時
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// アーカイブフラグ（リクエストユーザー視点）
	IsArchived bool `protobuf:"varint,14,opt,name=is_archived,json=isArchived,proto3" json:"is_archived,omitempty"`
	// ミュートフラグ（リクエストユーザー視点）
	IsMuted bool `protobuf:"varint,15,opt,name=is_muted,json=isMuted,proto3" json:"is_muted,omitempty"`
	// ピン留めフラグ（リクエストユーザー視点）
	IsPinned bool `protobuf:"varint,16,opt,name=is_pinned,json=isPinned,proto3" json:"is_pinned,omitempty"`
	// 暗号化設定
	EncryptionType EncryptionType `protobuf:"varint,17,opt,name=encryption_type,json=encryptionType,proto3,enum=avion.message.v1.EncryptionType" json:"encryption_type,omitempty"`
	// 会話設定
	Settings *ConversationSettings `protobuf:"bytes,18,opt,name=settings,proto3" json:"settings,omitempty"`
	// メタデータ
	Metadata      map[string]string `protobuf:"bytes,19,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_avion_message_v1_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_avion_message_v1_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *Conversation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Conversation) GetType() ConversationType {
	if x != nil {
		return x.Type
	}
	return ConversationType_CONVERSATION_TYPE_UNSPECIFIED
}

func (x *Conversation) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Conversation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Conversation) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *Conversation) GetParticipantIds() []string {
	if x != nil {
		return x.ParticipantIds
	}
	return nil
}

func (x *Conversation) GetParticipants() []*ConversationParticipant {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *Conversation) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *Conversation) GetLastMessage() *Message {
	if x != nil {
		return x.LastMessage
	}
	return nil
}

func (x *Conversation) GetLastMessageAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastMessageAt
	}
	return nil
}

func (x *Conversation) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *Conversation) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Conversation) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Conversation) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

func (x *Conversation) GetIsMuted() bool {
	if x != nil {
		return x.IsMuted
	}
	return false
}

func (x *Conversation) GetIsPinned() bool {
	if x != nil {
		return x.IsPinned
	}
	return false
}

func (x *Conversation) GetEncryptionType() EncryptionType {
	if x != nil {
		return x.EncryptionType
	}
	return EncryptionType_ENCRYPTION_TYPE_UNSPECIFIED
}

func (x *Conversation) GetSettings() *ConversationSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *Conversation) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 会話参加者
type ConversationParticipant struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ユーザー名
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// 表示名
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// アバターURL
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	// ロール（admin, member等）
	Role string `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	// 参加日時
	JoinedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	// 最終既読メッセージID
	LastReadMessageId string `protobuf:"bytes,7,opt,name=last_read_message_id,json=lastReadMessageId,proto3" json:"last_read_message_id,omitempty"`
	// 最終既読日時
	LastReadAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_read_at,json=lastReadAt,proto3" json:"last_read_at,omitempty"`
	// オンライン状態
	IsOnline bool `protobuf:"varint,9,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	// 最終アクティブ日時
	LastActiveAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_active_at,json=lastActiveAt,proto3" json:"last_active_at,omitempty"`
	// タイピング中フラグ
	IsTyping      bool `protobuf:"varint,11,opt,name=is_typing,json=isTyping,proto3" json:"is_typing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConversationParticipant) Reset() {
	*x = ConversationParticipant{}
	mi := &file_avion_message_v1_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationParticipant) ProtoMessage() {}

func (x *ConversationParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_avion_message_v1_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationParticipant.ProtoReflect.Descriptor instead.
func (*ConversationParticipant) Descriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{2}
}

func (x *ConversationParticipant) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConversationParticipant) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ConversationParticipant) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ConversationParticipant) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *ConversationParticipant) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ConversationParticipant) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

func (x *ConversationParticipant) GetLastReadMessageId() string {
	if x != nil {
		return x.LastReadMessageId
	}
	return ""
}

func (x *ConversationParticipant) GetLastReadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastReadAt
	}
	return nil
}

func (x *ConversationParticipant) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *ConversationParticipant) GetLastActiveAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActiveAt
	}
	return nil
}

func (x *ConversationParticipant) GetIsTyping() bool {
	if x != nil {
		return x.IsTyping
	}
	return false
}

// 会話設定
type ConversationSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// メンバー追加可能フラグ
	AllowMemberAdd bool `protobuf:"varint,1,opt,name=allow_member_add,json=allowMemberAdd,proto3" json:"allow_member_add,omitempty"`
	// メンバー削除可能フラグ
	AllowMemberRemove bool `protobuf:"varint,2,opt,name=allow_member_remove,json=allowMemberRemove,proto3" json:"allow_member_remove,omitempty"`
	// メッセージ編集可能フラグ
	AllowMessageEdit bool `protobuf:"varint,3,opt,name=allow_message_edit,json=allowMessageEdit,proto3" json:"allow_message_edit,omitempty"`
	// メッセージ削除可能フラグ
	AllowMessageDelete bool `protobuf:"varint,4,opt,name=allow_message_delete,json=allowMessageDelete,proto3" json:"allow_message_delete,omitempty"`
	// リアクション可能フラグ
	AllowReactions bool `protobuf:"varint,5,opt,name=allow_reactions,json=allowReactions,proto3" json:"allow_reactions,omitempty"`
	// ファイル共有可能フラグ
	AllowFileSharing bool `protobuf:"varint,6,opt,name=allow_file_sharing,json=allowFileSharing,proto3" json:"allow_file_sharing,omitempty"`
	// 最大参加者数（グループの場合）
	MaxParticipants int32 `protobuf:"varint,7,opt,name=max_participants,json=maxParticipants,proto3" json:"max_participants,omitempty"`
	// メッセージ保持期間（日数、0は無期限）
	MessageRetentionDays int32 `protobuf:"varint,8,opt,name=message_retention_days,json=messageRetentionDays,proto3" json:"message_retention_days,omitempty"`
	// 自動削除タイマー（秒、0は無効）
	AutoDeleteTimerSeconds int32 `protobuf:"varint,9,opt,name=auto_delete_timer_seconds,json=autoDeleteTimerSeconds,proto3" json:"auto_delete_timer_seconds,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ConversationSettings) Reset() {
	*x = ConversationSettings{}
	mi := &file_avion_message_v1_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationSettings) ProtoMessage() {}

func (x *ConversationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_avion_message_v1_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationSettings.ProtoReflect.Descriptor instead.
func (*ConversationSettings) Descriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{3}
}

func (x *ConversationSettings) GetAllowMemberAdd() bool {
	if x != nil {
		return x.AllowMemberAdd
	}
	return false
}

func (x *ConversationSettings) GetAllowMemberRemove() bool {
	if x != nil {
		return x.AllowMemberRemove
	}
	return false
}

func (x *ConversationSettings) GetAllowMessageEdit() bool {
	if x != nil {
		return x.AllowMessageEdit
	}
	return false
}

func (x *ConversationSettings) GetAllowMessageDelete() bool {
	if x != nil {
		return x.AllowMessageDelete
	}
	return false
}

func (x *ConversationSettings) GetAllowReactions() bool {
	if x != nil {
		return x.AllowReactions
	}
	return false
}

func (x *ConversationSettings) GetAllowFileSharing() bool {
	if x != nil {
		return x.AllowFileSharing
	}
	return false
}

func (x *ConversationSettings) GetMaxParticipants() int32 {
	if x != nil {
		return x.MaxParticipants
	}
	return 0
}

func (x *ConversationSettings) GetMessageRetentionDays() int32 {
	if x != nil {
		return x.MessageRetentionDays
	}
	return 0
}

func (x *ConversationSettings) GetAutoDeleteTimerSeconds() int32 {
	if x != nil {
		return x.AutoDeleteTimerSeconds
	}
	return 0
}

// メッセージ添付ファイル
type MessageAttachment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 添付ファイルID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// メッセージID
	MessageId string `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// ファイルタイプ
	Type AttachmentType `protobuf:"varint,3,opt,name=type,proto3,enum=avion.message.v1.AttachmentType" json:"type,omitempty"`
	// ファイル名
	Filename string `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
	// MIMEタイプ
	MimeType string `protobuf:"bytes,5,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// ファイルサイズ（バイト）
	Size int64 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	// ファイルURL
	Url string `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	// サムネイルURL
	ThumbnailUrl string `protobuf:"bytes,8,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	// 幅（画像・動画の場合）
	Width int32 `protobuf:"varint,9,opt,name=width,proto3" json:"width,omitempty"`
	// 高さ（画像・動画の場合）
	Height int32 `protobuf:"varint,10,opt,name=height,proto3" json:"height,omitempty"`
	// 再生時間（動画・音声の場合、秒）
	Duration int32 `protobuf:"varint,11,opt,name=duration,proto3" json:"duration,omitempty"`
	// アップロード日時
	UploadedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=uploaded_at,json=uploadedAt,proto3" json:"uploaded_at,omitempty"`
	// メタデータ
	Metadata      map[string]string `protobuf:"bytes,13,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageAttachment) Reset() {
	*x = MessageAttachment{}
	mi := &file_avion_message_v1_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAttachment) ProtoMessage() {}

func (x *MessageAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_avion_message_v1_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAttachment.ProtoReflect.Descriptor instead.
func (*MessageAttachment) Descriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{4}
}

func (x *MessageAttachment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageAttachment) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageAttachment) GetType() AttachmentType {
	if x != nil {
		return x.Type
	}
	return AttachmentType_ATTACHMENT_TYPE_UNSPECIFIED
}

func (x *MessageAttachment) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *MessageAttachment) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *MessageAttachment) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MessageAttachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MessageAttachment) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *MessageAttachment) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MessageAttachment) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MessageAttachment) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *MessageAttachment) GetUploadedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UploadedAt
	}
	return nil
}

func (x *MessageAttachment) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 既読レシート
type ReadReceipt struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// メッセージID
	MessageId string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 既読日時
	ReadAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=read_at,json=readAt,proto3" json:"read_at,omitempty"`
	// デバイスID
	DeviceId      string `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadReceipt) Reset() {
	*x = ReadReceipt{}
	mi := &file_avion_message_v1_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReceipt) ProtoMessage() {}

func (x *ReadReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_avion_message_v1_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReceipt.ProtoReflect.Descriptor instead.
func (*ReadReceipt) Descriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{5}
}

func (x *ReadReceipt) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ReadReceipt) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReadReceipt) GetReadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReadAt
	}
	return nil
}

func (x *ReadReceipt) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

// タイピングインジケーター
type TypingIndicator struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会話ID
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// タイピング開始日時
	StartedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// タイピング中フラグ
	IsTyping      bool `protobuf:"varint,4,opt,name=is_typing,json=isTyping,proto3" json:"is_typing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypingIndicator) Reset() {
	*x = TypingIndicator{}
	mi := &file_avion_message_v1_message_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypingIndicator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingIndicator) ProtoMessage() {}

func (x *TypingIndicator) ProtoReflect() protoreflect.Message {
	mi := &file_avion_message_v1_message_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingIndicator.ProtoReflect.Descriptor instead.
func (*TypingIndicator) Descriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{6}
}

func (x *TypingIndicator) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *TypingIndicator) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TypingIndicator) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *TypingIndicator) GetIsTyping() bool {
	if x != nil {
		return x.IsTyping
	}
	return false
}

// メッセージリアクション
type MessageReaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// リアクションID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// メッセージID
	MessageId string `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// リアクションタイプ
	Type ReactionType `protobuf:"varint,4,opt,name=type,proto3,enum=avion.message.v1.ReactionType" json:"type,omitempty"`
	// カスタム絵文字（REACTION_TYPE_CUSTOMの場合）
	CustomEmoji string `protobuf:"bytes,5,opt,name=custom_emoji,json=customEmoji,proto3" json:"custom_emoji,omitempty"`
	// 作成日時
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageReaction) Reset() {
	*x = MessageReaction{}
	mi := &file_avion_message_v1_message_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReaction) ProtoMessage() {}

func (x *MessageReaction) ProtoReflect() protoreflect.Message {
	mi := &file_avion_message_v1_message_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReaction.ProtoReflect.Descriptor instead.
func (*MessageReaction) Descriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{7}
}

func (x *MessageReaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageReaction) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageReaction) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MessageReaction) GetType() ReactionType {
	if x != nil {
		return x.Type
	}
	return ReactionType_REACTION_TYPE_UNSPECIFIED
}

func (x *MessageReaction) GetCustomEmoji() string {
	if x != nil {
		return x.CustomEmoji
	}
	return ""
}

func (x *MessageReaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// 暗号化メタデータ
type EncryptionMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 暗号化アルゴリズム
	Algorithm string `protobuf:"bytes,1,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	// 公開鍵ID
	PublicKeyId string `protobuf:"bytes,2,opt,name=public_key_id,json=publicKeyId,proto3" json:"public_key_id,omitempty"`
	// セッションID（E2E暗号化セッション）
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// 暗号化されたセッションキー（受信者ごと）
	EncryptedSessionKeys map[string]string `protobuf:"bytes,4,rep,name=encrypted_session_keys,json=encryptedSessionKeys,proto3" json:"encrypted_session_keys,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 初期化ベクトル
	InitializationVector string `protobuf:"bytes,5,opt,name=initialization_vector,json=initializationVector,proto3" json:"initialization_vector,omitempty"`
	// メッセージ認証コード
	MessageAuthenticationCode string `protobuf:"bytes,6,opt,name=message_authentication_code,json=messageAuthenticationCode,proto3" json:"message_authentication_code,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *EncryptionMetadata) Reset() {
	*x = EncryptionMetadata{}
	mi := &file_avion_message_v1_message_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionMetadata) ProtoMessage() {}

func (x *EncryptionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_avion_message_v1_message_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptionMetadata.ProtoReflect.Descriptor instead.
func (*EncryptionMetadata) Descriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{8}
}

func (x *EncryptionMetadata) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *EncryptionMetadata) GetPublicKeyId() string {
	if x != nil {
		return x.PublicKeyId
	}
	return ""
}

func (x *EncryptionMetadata) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *EncryptionMetadata) GetEncryptedSessionKeys() map[string]string {
	if x != nil {
		return x.EncryptedSessionKeys
	}
	return nil
}

func (x *EncryptionMetadata) GetInitializationVector() string {
	if x != nil {
		return x.InitializationVector
	}
	return ""
}

func (x *EncryptionMetadata) GetMessageAuthenticationCode() string {
	if x != nil {
		return x.MessageAuthenticationCode
	}
	return ""
}

// メッセージ検索フィルター
type MessageSearchFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 検索クエリ
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// 会話ID（特定の会話内検索）
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 送信者ID
	SenderId string `protobuf:"bytes,3,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	// 期間（開始）
	StartTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 期間（終了）
	EndTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 添付ファイルありフラグ
	HasAttachments bool `protobuf:"varint,6,opt,name=has_attachments,json=hasAttachments,proto3" json:"has_attachments,omitempty"`
	// メディアタイプフィルター
	AttachmentTypes []AttachmentType `protobuf:"varint,7,rep,packed,name=attachment_types,json=attachmentTypes,proto3,enum=avion.message.v1.AttachmentType" json:"attachment_types,omitempty"`
	// メンション対象ユーザーID
	MentionedUserIds []string `protobuf:"bytes,8,rep,name=mentioned_user_ids,json=mentionedUserIds,proto3" json:"mentioned_user_ids,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MessageSearchFilter) Reset() {
	*x = MessageSearchFilter{}
	mi := &file_avion_message_v1_message_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageSearchFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSearchFilter) ProtoMessage() {}

func (x *MessageSearchFilter) ProtoReflect() protoreflect.Message {
	mi := &file_avion_message_v1_message_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSearchFilter.ProtoReflect.Descriptor instead.
func (*MessageSearchFilter) Descriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{9}
}

func (x *MessageSearchFilter) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *MessageSearchFilter) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *MessageSearchFilter) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *MessageSearchFilter) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *MessageSearchFilter) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *MessageSearchFilter) GetHasAttachments() bool {
	if x != nil {
		return x.HasAttachments
	}
	return false
}

func (x *MessageSearchFilter) GetAttachmentTypes() []AttachmentType {
	if x != nil {
		return x.AttachmentTypes
	}
	return nil
}

func (x *MessageSearchFilter) GetMentionedUserIds() []string {
	if x != nil {
		return x.MentionedUserIds
	}
	return nil
}

// メッセージ統計
type MessageStatistics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会話ID
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 総メッセージ数
	TotalMessages int64 `protobuf:"varint,2,opt,name=total_messages,json=totalMessages,proto3" json:"total_messages,omitempty"`
	// 総添付ファイル数
	TotalAttachments int64 `protobuf:"varint,3,opt,name=total_attachments,json=totalAttachments,proto3" json:"total_attachments,omitempty"`
	// 総ファイルサイズ（バイト）
	TotalFileSize int64 `protobuf:"varint,4,opt,name=total_file_size,json=totalFileSize,proto3" json:"total_file_size,omitempty"`
	// アクティブ参加者数
	ActiveParticipants int32 `protobuf:"varint,5,opt,name=active_participants,json=activeParticipants,proto3" json:"active_participants,omitempty"`
	// 最も活発な時間帯
	PeakHour int32 `protobuf:"varint,6,opt,name=peak_hour,json=peakHour,proto3" json:"peak_hour,omitempty"`
	// 平均応答時間（秒）
	AverageResponseTime int64 `protobuf:"varint,7,opt,name=average_response_time,json=averageResponseTime,proto3" json:"average_response_time,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MessageStatistics) Reset() {
	*x = MessageStatistics{}
	mi := &file_avion_message_v1_message_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageStatistics) ProtoMessage() {}

func (x *MessageStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_avion_message_v1_message_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageStatistics.ProtoReflect.Descriptor instead.
func (*MessageStatistics) Descriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{10}
}

func (x *MessageStatistics) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *MessageStatistics) GetTotalMessages() int64 {
	if x != nil {
		return x.TotalMessages
	}
	return 0
}

func (x *MessageStatistics) GetTotalAttachments() int64 {
	if x != nil {
		return x.TotalAttachments
	}
	return 0
}

func (x *MessageStatistics) GetTotalFileSize() int64 {
	if x != nil {
		return x.TotalFileSize
	}
	return 0
}

func (x *MessageStatistics) GetActiveParticipants() int32 {
	if x != nil {
		return x.ActiveParticipants
	}
	return 0
}

func (x *MessageStatistics) GetPeakHour() int32 {
	if x != nil {
		return x.PeakHour
	}
	return 0
}

func (x *MessageStatistics) GetAverageResponseTime() int64 {
	if x != nil {
		return x.AverageResponseTime
	}
	return 0
}

// プッシュ通知設定
type MessageNotificationSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// すべてのメッセージ通知
	NotifyAllMessages bool `protobuf:"varint,2,opt,name=notify_all_messages,json=notifyAllMessages,proto3" json:"notify_all_messages,omitempty"`
	// メンションのみ通知
	NotifyMentionsOnly bool `protobuf:"varint,3,opt,name=notify_mentions_only,json=notifyMentionsOnly,proto3" json:"notify_mentions_only,omitempty"`
	// ダイレクトメッセージ通知
	NotifyDirectMessages bool `protobuf:"varint,4,opt,name=notify_direct_messages,json=notifyDirectMessages,proto3" json:"notify_direct_messages,omitempty"`
	// グループメッセージ通知
	NotifyGroupMessages bool `protobuf:"varint,5,opt,name=notify_group_messages,json=notifyGroupMessages,proto3" json:"notify_group_messages,omitempty"`
	// ミュート中の会話ID
	MutedConversationIds []string `protobuf:"bytes,6,rep,name=muted_conversation_ids,json=mutedConversationIds,proto3" json:"muted_conversation_ids,omitempty"`
	// 通知スケジュール（勤務時間中のみ等）
	Schedule      *NotificationSchedule `protobuf:"bytes,7,opt,name=schedule,proto3" json:"schedule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageNotificationSettings) Reset() {
	*x = MessageNotificationSettings{}
	mi := &file_avion_message_v1_message_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageNotificationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageNotificationSettings) ProtoMessage() {}

func (x *MessageNotificationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_avion_message_v1_message_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageNotificationSettings.ProtoReflect.Descriptor instead.
func (*MessageNotificationSettings) Descriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{11}
}

func (x *MessageNotificationSettings) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MessageNotificationSettings) GetNotifyAllMessages() bool {
	if x != nil {
		return x.NotifyAllMessages
	}
	return false
}

func (x *MessageNotificationSettings) GetNotifyMentionsOnly() bool {
	if x != nil {
		return x.NotifyMentionsOnly
	}
	return false
}

func (x *MessageNotificationSettings) GetNotifyDirectMessages() bool {
	if x != nil {
		return x.NotifyDirectMessages
	}
	return false
}

func (x *MessageNotificationSettings) GetNotifyGroupMessages() bool {
	if x != nil {
		return x.NotifyGroupMessages
	}
	return false
}

func (x *MessageNotificationSettings) GetMutedConversationIds() []string {
	if x != nil {
		return x.MutedConversationIds
	}
	return nil
}

func (x *MessageNotificationSettings) GetSchedule() *NotificationSchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

// 通知スケジュール
type NotificationSchedule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 有効フラグ
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// 開始時刻（HH:MM形式）
	StartTime string `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 終了時刻（HH:MM形式）
	EndTime string `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 有効な曜日（0=日曜、6=土曜）
	DaysOfWeek []int32 `protobuf:"varint,4,rep,packed,name=days_of_week,json=daysOfWeek,proto3" json:"days_of_week,omitempty"`
	// タイムゾーン
	Timezone      string `protobuf:"bytes,5,opt,name=timezone,proto3" json:"timezone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationSchedule) Reset() {
	*x = NotificationSchedule{}
	mi := &file_avion_message_v1_message_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSchedule) ProtoMessage() {}

func (x *NotificationSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_avion_message_v1_message_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSchedule.ProtoReflect.Descriptor instead.
func (*NotificationSchedule) Descriptor() ([]byte, []int) {
	return file_avion_message_v1_message_proto_rawDescGZIP(), []int{12}
}

func (x *NotificationSchedule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *NotificationSchedule) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *NotificationSchedule) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *NotificationSchedule) GetDaysOfWeek() []int32 {
	if x != nil {
		return x.DaysOfWeek
	}
	return nil
}

func (x *NotificationSchedule) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

var File_avion_message_v1_message_proto protoreflect.FileDescriptor

const file_avion_message_v1_message_proto_rawDesc = "" +
	"\n" +
	"\x1eavion/message/v1/message.proto\x12\x10avion.message.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd9\b\n" +
	"\aMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\x12\x1b\n" +
	"\tsender_id\x18\x03 \x01(\tR\bsenderId\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x127\n" +
	"\x06status\x18\x05 \x01(\x0e2\x1f.avion.message.v1.MessageStatusR\x06status\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x129\n" +
	"\n" +
	"deleted_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tdeletedAt\x12\x1b\n" +
	"\tis_edited\x18\t \x01(\bR\bisEdited\x127\n" +
	"\tedited_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\beditedAt\x12-\n" +
	"\x13reply_to_message_id\x18\v \x01(\tR\x10replyToMessageId\x129\n" +
	"\x19forwarded_from_message_id\x18\f \x01(\tR\x16forwardedFromMessageId\x12E\n" +
	"\vattachments\x18\r \x03(\v2#.avion.message.v1.MessageAttachmentR\vattachments\x12,\n" +
	"\x12mentioned_user_ids\x18\x0e \x03(\tR\x10mentionedUserIds\x12I\n" +
	"\x0fencryption_type\x18\x0f \x01(\x0e2 .avion.message.v1.EncryptionTypeR\x0eencryptionType\x12U\n" +
	"\x13encryption_metadata\x18\x10 \x01(\v2$.avion.message.v1.EncryptionMetadataR\x12encryptionMetadata\x12?\n" +
	"\treactions\x18\x11 \x03(\v2!.avion.message.v1.MessageReactionR\treactions\x12*\n" +
	"\x11is_system_message\x18\x12 \x01(\bR\x0fisSystemMessage\x12.\n" +
	"\x13system_message_type\x18\x13 \x01(\tR\x11systemMessageType\x12C\n" +
	"\bmetadata\x18\x14 \x03(\v2'.avion.message.v1.Message.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xca\a\n" +
	"\fConversation\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x126\n" +
	"\x04type\x18\x02 \x01(\x0e2\".avion.message.v1.ConversationTypeR\x04type\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x19\n" +
	"\bicon_url\x18\x05 \x01(\tR\aiconUrl\x12'\n" +
	"\x0fparticipant_ids\x18\x06 \x03(\tR\x0eparticipantIds\x12M\n" +
	"\fparticipants\x18\a \x03(\v2).avion.message.v1.ConversationParticipantR\fparticipants\x12\x1d\n" +
	"\n" +
	"creator_id\x18\b \x01(\tR\tcreatorId\x12<\n" +
	"\flast_message\x18\t \x01(\v2\x19.avion.message.v1.MessageR\vlastMessage\x12B\n" +
	"\x0flast_message_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\rlastMessageAt\x12!\n" +
	"\funread_count\x18\v \x01(\x05R\vunreadCount\x129\n" +
	"\n" +
	"created_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1f\n" +
	"\vis_archived\x18\x0e \x01(\bR\n" +
	"isArchived\x12\x19\n" +
	"\bis_muted\x18\x0f \x01(\bR\aisMuted\x12\x1b\n" +
	"\tis_pinned\x18\x10 \x01(\bR\bisPinned\x12I\n" +
	"\x0fencryption_type\x18\x11 \x01(\x0e2 .avion.message.v1.EncryptionTypeR\x0eencryptionType\x12B\n" +
	"\bsettings\x18\x12 \x01(\v2&.avion.message.v1.ConversationSettingsR\bsettings\x12H\n" +
	"\bmetadata\x18\x13 \x03(\v2,.avion.message.v1.Conversation.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc8\x03\n" +
	"\x17ConversationParticipant\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x04 \x01(\tR\tavatarUrl\x12\x12\n" +
	"\x04role\x18\x05 \x01(\tR\x04role\x127\n" +
	"\tjoined_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\bjoinedAt\x12/\n" +
	"\x14last_read_message_id\x18\a \x01(\tR\x11lastReadMessageId\x12<\n" +
	"\flast_read_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastReadAt\x12\x1b\n" +
	"\tis_online\x18\t \x01(\bR\bisOnline\x12@\n" +
	"\x0elast_active_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\flastActiveAt\x12\x1b\n" +
	"\tis_typing\x18\v \x01(\bR\bisTyping\"\xc3\x03\n" +
	"\x14ConversationSettings\x12(\n" +
	"\x10allow_member_add\x18\x01 \x01(\bR\x0eallowMemberAdd\x12.\n" +
	"\x13allow_member_remove\x18\x02 \x01(\bR\x11allowMemberRemove\x12,\n" +
	"\x12allow_message_edit\x18\x03 \x01(\bR\x10allowMessageEdit\x120\n" +
	"\x14allow_message_delete\x18\x04 \x01(\bR\x12allowMessageDelete\x12'\n" +
	"\x0fallow_reactions\x18\x05 \x01(\bR\x0eallowReactions\x12,\n" +
	"\x12allow_file_sharing\x18\x06 \x01(\bR\x10allowFileSharing\x12)\n" +
	"\x10max_participants\x18\a \x01(\x05R\x0fmaxParticipants\x124\n" +
	"\x16message_retention_days\x18\b \x01(\x05R\x14messageRetentionDays\x129\n" +
	"\x19auto_delete_timer_seconds\x18\t \x01(\x05R\x16autoDeleteTimerSeconds\"\x8f\x04\n" +
	"\x11MessageAttachment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x124\n" +
	"\x04type\x18\x03 \x01(\x0e2 .avion.message.v1.AttachmentTypeR\x04type\x12\x1a\n" +
	"\bfilename\x18\x04 \x01(\tR\bfilename\x12\x1b\n" +
	"\tmime_type\x18\x05 \x01(\tR\bmimeType\x12\x12\n" +
	"\x04size\x18\x06 \x01(\x03R\x04size\x12\x10\n" +
	"\x03url\x18\a \x01(\tR\x03url\x12#\n" +
	"\rthumbnail_url\x18\b \x01(\tR\fthumbnailUrl\x12\x14\n" +
	"\x05width\x18\t \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\n" +
	" \x01(\x05R\x06height\x12\x1a\n" +
	"\bduration\x18\v \x01(\x05R\bduration\x12;\n" +
	"\vuploaded_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"uploadedAt\x12M\n" +
	"\bmetadata\x18\r \x03(\v21.avion.message.v1.MessageAttachment.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x97\x01\n" +
	"\vReadReceipt\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x123\n" +
	"\aread_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x06readAt\x12\x1b\n" +
	"\tdevice_id\x18\x04 \x01(\tR\bdeviceId\"\xab\x01\n" +
	"\x0fTypingIndicator\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x129\n" +
	"\n" +
	"started_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12\x1b\n" +
	"\tis_typing\x18\x04 \x01(\bR\bisTyping\"\xeb\x01\n" +
	"\x0fMessageReaction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x122\n" +
	"\x04type\x18\x04 \x01(\x0e2\x1e.avion.message.v1.ReactionTypeR\x04type\x12!\n" +
	"\fcustom_emoji\x18\x05 \x01(\tR\vcustomEmoji\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xa9\x03\n" +
	"\x12EncryptionMetadata\x12\x1c\n" +
	"\talgorithm\x18\x01 \x01(\tR\talgorithm\x12\"\n" +
	"\rpublic_key_id\x18\x02 \x01(\tR\vpublicKeyId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tR\tsessionId\x12t\n" +
	"\x16encrypted_session_keys\x18\x04 \x03(\v2>.avion.message.v1.EncryptionMetadata.EncryptedSessionKeysEntryR\x14encryptedSessionKeys\x123\n" +
	"\x15initialization_vector\x18\x05 \x01(\tR\x14initializationVector\x12>\n" +
	"\x1bmessage_authentication_code\x18\x06 \x01(\tR\x19messageAuthenticationCode\x1aG\n" +
	"\x19EncryptedSessionKeysEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x87\x03\n" +
	"\x13MessageSearchFilter\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\x12\x1b\n" +
	"\tsender_id\x18\x03 \x01(\tR\bsenderId\x129\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12'\n" +
	"\x0fhas_attachments\x18\x06 \x01(\bR\x0ehasAttachments\x12K\n" +
	"\x10attachment_types\x18\a \x03(\x0e2 .avion.message.v1.AttachmentTypeR\x0fattachmentTypes\x12,\n" +
	"\x12mentioned_user_ids\x18\b \x03(\tR\x10mentionedUserIds\"\xba\x02\n" +
	"\x11MessageStatistics\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12%\n" +
	"\x0etotal_messages\x18\x02 \x01(\x03R\rtotalMessages\x12+\n" +
	"\x11total_attachments\x18\x03 \x01(\x03R\x10totalAttachments\x12&\n" +
	"\x0ftotal_file_size\x18\x04 \x01(\x03R\rtotalFileSize\x12/\n" +
	"\x13active_participants\x18\x05 \x01(\x05R\x12activeParticipants\x12\x1b\n" +
	"\tpeak_hour\x18\x06 \x01(\x05R\bpeakHour\x122\n" +
	"\x15average_response_time\x18\a \x01(\x03R\x13averageResponseTime\"\xfc\x02\n" +
	"\x1bMessageNotificationSettings\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12.\n" +
	"\x13notify_all_messages\x18\x02 \x01(\bR\x11notifyAllMessages\x120\n" +
	"\x14notify_mentions_only\x18\x03 \x01(\bR\x12notifyMentionsOnly\x124\n" +
	"\x16notify_direct_messages\x18\x04 \x01(\bR\x14notifyDirectMessages\x122\n" +
	"\x15notify_group_messages\x18\x05 \x01(\bR\x13notifyGroupMessages\x124\n" +
	"\x16muted_conversation_ids\x18\x06 \x03(\tR\x14mutedConversationIds\x12B\n" +
	"\bschedule\x18\a \x01(\v2&.avion.message.v1.NotificationScheduleR\bschedule\"\xa8\x01\n" +
	"\x14NotificationSchedule\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1d\n" +
	"\n" +
	"start_time\x18\x02 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x03 \x01(\tR\aendTime\x12 \n" +
	"\fdays_of_week\x18\x04 \x03(\x05R\n" +
	"daysOfWeek\x12\x1a\n" +
	"\btimezone\x18\x05 \x01(\tR\btimezone*\xb6\x01\n" +
	"\rMessageStatus\x12\x1e\n" +
	"\x1aMESSAGE_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16MESSAGE_STATUS_SENDING\x10\x01\x12\x17\n" +
	"\x13MESSAGE_STATUS_SENT\x10\x02\x12\x1c\n" +
	"\x18MESSAGE_STATUS_DELIVERED\x10\x03\x12\x17\n" +
	"\x13MESSAGE_STATUS_READ\x10\x04\x12\x19\n" +
	"\x15MESSAGE_STATUS_FAILED\x10\x05*\x8e\x01\n" +
	"\x10ConversationType\x12!\n" +
	"\x1dCONVERSATION_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18CONVERSATION_TYPE_DIRECT\x10\x01\x12\x1b\n" +
	"\x17CONVERSATION_TYPE_GROUP\x10\x02\x12\x1c\n" +
	"\x18CONVERSATION_TYPE_SYSTEM\x10\x03*\xbe\x01\n" +
	"\x0eAttachmentType\x12\x1f\n" +
	"\x1bATTACHMENT_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15ATTACHMENT_TYPE_IMAGE\x10\x01\x12\x19\n" +
	"\x15ATTACHMENT_TYPE_VIDEO\x10\x02\x12\x19\n" +
	"\x15ATTACHMENT_TYPE_AUDIO\x10\x03\x12\x18\n" +
	"\x14ATTACHMENT_TYPE_FILE\x10\x04\x12 \n" +
	"\x1cATTACHMENT_TYPE_LINK_PREVIEW\x10\x05*\x83\x01\n" +
	"\x0eEncryptionType\x12\x1f\n" +
	"\x1bENCRYPTION_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14ENCRYPTION_TYPE_NONE\x10\x01\x12\x1d\n" +
	"\x19ENCRYPTION_TYPE_TRANSPORT\x10\x02\x12\x17\n" +
	"\x13ENCRYPTION_TYPE_E2E\x10\x03*\xdd\x01\n" +
	"\fReactionType\x12\x1d\n" +
	"\x19REACTION_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12REACTION_TYPE_LIKE\x10\x01\x12\x17\n" +
	"\x13REACTION_TYPE_HEART\x10\x02\x12\x17\n" +
	"\x13REACTION_TYPE_LAUGH\x10\x03\x12\x1a\n" +
	"\x16REACTION_TYPE_SURPRISE\x10\x04\x12\x15\n" +
	"\x11REACTION_TYPE_SAD\x10\x05\x12\x17\n" +
	"\x13REACTION_TYPE_ANGRY\x10\x06\x12\x18\n" +
	"\x14REACTION_TYPE_CUSTOM\x10cB\xc1\x01\n" +
	"\x14com.avion.message.v1B\fMessageProtoP\x01Z9github.com/na2na-p/avion/proto/avion/message/v1;messagev1\xa2\x02\x03AMX\xaa\x02\x10Avion.Message.V1\xca\x02\x10Avion\\Message\\V1\xe2\x02\x1cAvion\\Message\\V1\\GPBMetadata\xea\x02\x12Avion::Message::V1b\x06proto3"

var (
	file_avion_message_v1_message_proto_rawDescOnce sync.Once
	file_avion_message_v1_message_proto_rawDescData []byte
)

func file_avion_message_v1_message_proto_rawDescGZIP() []byte {
	file_avion_message_v1_message_proto_rawDescOnce.Do(func() {
		file_avion_message_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_avion_message_v1_message_proto_rawDesc), len(file_avion_message_v1_message_proto_rawDesc)))
	})
	return file_avion_message_v1_message_proto_rawDescData
}

var file_avion_message_v1_message_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_avion_message_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_avion_message_v1_message_proto_goTypes = []any{
	(MessageStatus)(0),                  // 0: avion.message.v1.MessageStatus
	(ConversationType)(0),               // 1: avion.message.v1.ConversationType
	(AttachmentType)(0),                 // 2: avion.message.v1.AttachmentType
	(EncryptionType)(0),                 // 3: avion.message.v1.EncryptionType
	(ReactionType)(0),                   // 4: avion.message.v1.ReactionType
	(*Message)(nil),                     // 5: avion.message.v1.Message
	(*Conversation)(nil),                // 6: avion.message.v1.Conversation
	(*ConversationParticipant)(nil),     // 7: avion.message.v1.ConversationParticipant
	(*ConversationSettings)(nil),        // 8: avion.message.v1.ConversationSettings
	(*MessageAttachment)(nil),           // 9: avion.message.v1.MessageAttachment
	(*ReadReceipt)(nil),                 // 10: avion.message.v1.ReadReceipt
	(*TypingIndicator)(nil),             // 11: avion.message.v1.TypingIndicator
	(*MessageReaction)(nil),             // 12: avion.message.v1.MessageReaction
	(*EncryptionMetadata)(nil),          // 13: avion.message.v1.EncryptionMetadata
	(*MessageSearchFilter)(nil),         // 14: avion.message.v1.MessageSearchFilter
	(*MessageStatistics)(nil),           // 15: avion.message.v1.MessageStatistics
	(*MessageNotificationSettings)(nil), // 16: avion.message.v1.MessageNotificationSettings
	(*NotificationSchedule)(nil),        // 17: avion.message.v1.NotificationSchedule
	nil,                                 // 18: avion.message.v1.Message.MetadataEntry
	nil,                                 // 19: avion.message.v1.Conversation.MetadataEntry
	nil,                                 // 20: avion.message.v1.MessageAttachment.MetadataEntry
	nil,                                 // 21: avion.message.v1.EncryptionMetadata.EncryptedSessionKeysEntry
	(*timestamppb.Timestamp)(nil),       // 22: google.protobuf.Timestamp
}
var file_avion_message_v1_message_proto_depIdxs = []int32{
	0,  // 0: avion.message.v1.Message.status:type_name -> avion.message.v1.MessageStatus
	22, // 1: avion.message.v1.Message.created_at:type_name -> google.protobuf.Timestamp
	22, // 2: avion.message.v1.Message.updated_at:type_name -> google.protobuf.Timestamp
	22, // 3: avion.message.v1.Message.deleted_at:type_name -> google.protobuf.Timestamp
	22, // 4: avion.message.v1.Message.edited_at:type_name -> google.protobuf.Timestamp
	9,  // 5: avion.message.v1.Message.attachments:type_name -> avion.message.v1.MessageAttachment
	3,  // 6: avion.message.v1.Message.encryption_type:type_name -> avion.message.v1.EncryptionType
	13, // 7: avion.message.v1.Message.encryption_metadata:type_name -> avion.message.v1.EncryptionMetadata
	12, // 8: avion.message.v1.Message.reactions:type_name -> avion.message.v1.MessageReaction
	18, // 9: avion.message.v1.Message.metadata:type_name -> avion.message.v1.Message.MetadataEntry
	1,  // 10: avion.message.v1.Conversation.type:type_name -> avion.message.v1.ConversationType
	7,  // 11: avion.message.v1.Conversation.participants:type_name -> avion.message.v1.ConversationParticipant
	5,  // 12: avion.message.v1.Conversation.last_message:type_name -> avion.message.v1.Message
	22, // 13: avion.message.v1.Conversation.last_message_at:type_name -> google.protobuf.Timestamp
	22, // 14: avion.message.v1.Conversation.created_at:type_name -> google.protobuf.Timestamp
	22, // 15: avion.message.v1.Conversation.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 16: avion.message.v1.Conversation.encryption_type:type_name -> avion.message.v1.EncryptionType
	8,  // 17: avion.message.v1.Conversation.settings:type_name -> avion.message.v1.ConversationSettings
	19, // 18: avion.message.v1.Conversation.metadata:type_name -> avion.message.v1.Conversation.MetadataEntry
	22, // 19: avion.message.v1.ConversationParticipant.joined_at:type_name -> google.protobuf.Timestamp
	22, // 20: avion.message.v1.ConversationParticipant.last_read_at:type_name -> google.protobuf.Timestamp
	22, // 21: avion.message.v1.ConversationParticipant.last_active_at:type_name -> google.protobuf.Timestamp
	2,  // 22: avion.message.v1.MessageAttachment.type:type_name -> avion.message.v1.AttachmentType
	22, // 23: avion.message.v1.MessageAttachment.uploaded_at:type_name -> google.protobuf.Timestamp
	20, // 24: avion.message.v1.MessageAttachment.metadata:type_name -> avion.message.v1.MessageAttachment.MetadataEntry
	22, // 25: avion.message.v1.ReadReceipt.read_at:type_name -> google.protobuf.Timestamp
	22, // 26: avion.message.v1.TypingIndicator.started_at:type_name -> google.protobuf.Timestamp
	4,  // 27: avion.message.v1.MessageReaction.type:type_name -> avion.message.v1.ReactionType
	22, // 28: avion.message.v1.MessageReaction.created_at:type_name -> google.protobuf.Timestamp
	21, // 29: avion.message.v1.EncryptionMetadata.encrypted_session_keys:type_name -> avion.message.v1.EncryptionMetadata.EncryptedSessionKeysEntry
	22, // 30: avion.message.v1.MessageSearchFilter.start_time:type_name -> google.protobuf.Timestamp
	22, // 31: avion.message.v1.MessageSearchFilter.end_time:type_name -> google.protobuf.Timestamp
	2,  // 32: avion.message.v1.MessageSearchFilter.attachment_types:type_name -> avion.message.v1.AttachmentType
	17, // 33: avion.message.v1.MessageNotificationSettings.schedule:type_name -> avion.message.v1.NotificationSchedule
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_avion_message_v1_message_proto_init() }
func file_avion_message_v1_message_proto_init() {
	if File_avion_message_v1_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_avion_message_v1_message_proto_rawDesc), len(file_avion_message_v1_message_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_avion_message_v1_message_proto_goTypes,
		DependencyIndexes: file_avion_message_v1_message_proto_depIdxs,
		EnumInfos:         file_avion_message_v1_message_proto_enumTypes,
		MessageInfos:      file_avion_message_v1_message_proto_msgTypes,
	}.Build()
	File_avion_message_v1_message_proto = out.File
	file_avion_message_v1_message_proto_goTypes = nil
	file_avion_message_v1_message_proto_depIdxs = nil
}
