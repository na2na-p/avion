// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: avion/media/v1/media.proto

package mediav1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// メディアタイプ
type MediaType int32

const (
	// 未指定
	MediaType_MEDIA_TYPE_UNSPECIFIED MediaType = 0
	// 画像
	MediaType_MEDIA_TYPE_IMAGE MediaType = 1
	// 動画
	MediaType_MEDIA_TYPE_VIDEO MediaType = 2
	// 音声
	MediaType_MEDIA_TYPE_AUDIO MediaType = 3
	// ドキュメント
	MediaType_MEDIA_TYPE_DOCUMENT MediaType = 4
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "MEDIA_TYPE_UNSPECIFIED",
		1: "MEDIA_TYPE_IMAGE",
		2: "MEDIA_TYPE_VIDEO",
		3: "MEDIA_TYPE_AUDIO",
		4: "MEDIA_TYPE_DOCUMENT",
	}
	MediaType_value = map[string]int32{
		"MEDIA_TYPE_UNSPECIFIED": 0,
		"MEDIA_TYPE_IMAGE":       1,
		"MEDIA_TYPE_VIDEO":       2,
		"MEDIA_TYPE_AUDIO":       3,
		"MEDIA_TYPE_DOCUMENT":    4,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_media_v1_media_proto_enumTypes[0].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_avion_media_v1_media_proto_enumTypes[0]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{0}
}

// メディア処理状態
type MediaProcessingStatus int32

const (
	// 未指定
	MediaProcessingStatus_MEDIA_PROCESSING_STATUS_UNSPECIFIED MediaProcessingStatus = 0
	// アップロード中
	MediaProcessingStatus_MEDIA_PROCESSING_STATUS_UPLOADING MediaProcessingStatus = 1
	// 処理待ち
	MediaProcessingStatus_MEDIA_PROCESSING_STATUS_PENDING MediaProcessingStatus = 2
	// 処理中
	MediaProcessingStatus_MEDIA_PROCESSING_STATUS_PROCESSING MediaProcessingStatus = 3
	// 処理完了
	MediaProcessingStatus_MEDIA_PROCESSING_STATUS_COMPLETED MediaProcessingStatus = 4
	// エラー
	MediaProcessingStatus_MEDIA_PROCESSING_STATUS_ERROR MediaProcessingStatus = 5
	// 削除済み
	MediaProcessingStatus_MEDIA_PROCESSING_STATUS_DELETED MediaProcessingStatus = 6
)

// Enum value maps for MediaProcessingStatus.
var (
	MediaProcessingStatus_name = map[int32]string{
		0: "MEDIA_PROCESSING_STATUS_UNSPECIFIED",
		1: "MEDIA_PROCESSING_STATUS_UPLOADING",
		2: "MEDIA_PROCESSING_STATUS_PENDING",
		3: "MEDIA_PROCESSING_STATUS_PROCESSING",
		4: "MEDIA_PROCESSING_STATUS_COMPLETED",
		5: "MEDIA_PROCESSING_STATUS_ERROR",
		6: "MEDIA_PROCESSING_STATUS_DELETED",
	}
	MediaProcessingStatus_value = map[string]int32{
		"MEDIA_PROCESSING_STATUS_UNSPECIFIED": 0,
		"MEDIA_PROCESSING_STATUS_UPLOADING":   1,
		"MEDIA_PROCESSING_STATUS_PENDING":     2,
		"MEDIA_PROCESSING_STATUS_PROCESSING":  3,
		"MEDIA_PROCESSING_STATUS_COMPLETED":   4,
		"MEDIA_PROCESSING_STATUS_ERROR":       5,
		"MEDIA_PROCESSING_STATUS_DELETED":     6,
	}
)

func (x MediaProcessingStatus) Enum() *MediaProcessingStatus {
	p := new(MediaProcessingStatus)
	*p = x
	return p
}

func (x MediaProcessingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaProcessingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_media_v1_media_proto_enumTypes[1].Descriptor()
}

func (MediaProcessingStatus) Type() protoreflect.EnumType {
	return &file_avion_media_v1_media_proto_enumTypes[1]
}

func (x MediaProcessingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaProcessingStatus.Descriptor instead.
func (MediaProcessingStatus) EnumDescriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{1}
}

// 画像フォーマット
type ImageFormat int32

const (
	// 未指定
	ImageFormat_IMAGE_FORMAT_UNSPECIFIED ImageFormat = 0
	// JPEG
	ImageFormat_IMAGE_FORMAT_JPEG ImageFormat = 1
	// PNG
	ImageFormat_IMAGE_FORMAT_PNG ImageFormat = 2
	// WEBP
	ImageFormat_IMAGE_FORMAT_WEBP ImageFormat = 3
	// GIF
	ImageFormat_IMAGE_FORMAT_GIF ImageFormat = 4
	// AVIF
	ImageFormat_IMAGE_FORMAT_AVIF ImageFormat = 5
)

// Enum value maps for ImageFormat.
var (
	ImageFormat_name = map[int32]string{
		0: "IMAGE_FORMAT_UNSPECIFIED",
		1: "IMAGE_FORMAT_JPEG",
		2: "IMAGE_FORMAT_PNG",
		3: "IMAGE_FORMAT_WEBP",
		4: "IMAGE_FORMAT_GIF",
		5: "IMAGE_FORMAT_AVIF",
	}
	ImageFormat_value = map[string]int32{
		"IMAGE_FORMAT_UNSPECIFIED": 0,
		"IMAGE_FORMAT_JPEG":        1,
		"IMAGE_FORMAT_PNG":         2,
		"IMAGE_FORMAT_WEBP":        3,
		"IMAGE_FORMAT_GIF":         4,
		"IMAGE_FORMAT_AVIF":        5,
	}
)

func (x ImageFormat) Enum() *ImageFormat {
	p := new(ImageFormat)
	*p = x
	return p
}

func (x ImageFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_media_v1_media_proto_enumTypes[2].Descriptor()
}

func (ImageFormat) Type() protoreflect.EnumType {
	return &file_avion_media_v1_media_proto_enumTypes[2]
}

func (x ImageFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageFormat.Descriptor instead.
func (ImageFormat) EnumDescriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{2}
}

// 動画フォーマット
type VideoFormat int32

const (
	// 未指定
	VideoFormat_VIDEO_FORMAT_UNSPECIFIED VideoFormat = 0
	// MP4
	VideoFormat_VIDEO_FORMAT_MP4 VideoFormat = 1
	// WEBM
	VideoFormat_VIDEO_FORMAT_WEBM VideoFormat = 2
	// MOV
	VideoFormat_VIDEO_FORMAT_MOV VideoFormat = 3
	// AVI
	VideoFormat_VIDEO_FORMAT_AVI VideoFormat = 4
	// MKV
	VideoFormat_VIDEO_FORMAT_MKV VideoFormat = 5
)

// Enum value maps for VideoFormat.
var (
	VideoFormat_name = map[int32]string{
		0: "VIDEO_FORMAT_UNSPECIFIED",
		1: "VIDEO_FORMAT_MP4",
		2: "VIDEO_FORMAT_WEBM",
		3: "VIDEO_FORMAT_MOV",
		4: "VIDEO_FORMAT_AVI",
		5: "VIDEO_FORMAT_MKV",
	}
	VideoFormat_value = map[string]int32{
		"VIDEO_FORMAT_UNSPECIFIED": 0,
		"VIDEO_FORMAT_MP4":         1,
		"VIDEO_FORMAT_WEBM":        2,
		"VIDEO_FORMAT_MOV":         3,
		"VIDEO_FORMAT_AVI":         4,
		"VIDEO_FORMAT_MKV":         5,
	}
)

func (x VideoFormat) Enum() *VideoFormat {
	p := new(VideoFormat)
	*p = x
	return p
}

func (x VideoFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VideoFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_media_v1_media_proto_enumTypes[3].Descriptor()
}

func (VideoFormat) Type() protoreflect.EnumType {
	return &file_avion_media_v1_media_proto_enumTypes[3]
}

func (x VideoFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VideoFormat.Descriptor instead.
func (VideoFormat) EnumDescriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{3}
}

// 音声フォーマット
type AudioFormat int32

const (
	// 未指定
	AudioFormat_AUDIO_FORMAT_UNSPECIFIED AudioFormat = 0
	// MP3
	AudioFormat_AUDIO_FORMAT_MP3 AudioFormat = 1
	// WAV
	AudioFormat_AUDIO_FORMAT_WAV AudioFormat = 2
	// OGG
	AudioFormat_AUDIO_FORMAT_OGG AudioFormat = 3
	// M4A
	AudioFormat_AUDIO_FORMAT_M4A AudioFormat = 4
	// FLAC
	AudioFormat_AUDIO_FORMAT_FLAC AudioFormat = 5
)

// Enum value maps for AudioFormat.
var (
	AudioFormat_name = map[int32]string{
		0: "AUDIO_FORMAT_UNSPECIFIED",
		1: "AUDIO_FORMAT_MP3",
		2: "AUDIO_FORMAT_WAV",
		3: "AUDIO_FORMAT_OGG",
		4: "AUDIO_FORMAT_M4A",
		5: "AUDIO_FORMAT_FLAC",
	}
	AudioFormat_value = map[string]int32{
		"AUDIO_FORMAT_UNSPECIFIED": 0,
		"AUDIO_FORMAT_MP3":         1,
		"AUDIO_FORMAT_WAV":         2,
		"AUDIO_FORMAT_OGG":         3,
		"AUDIO_FORMAT_M4A":         4,
		"AUDIO_FORMAT_FLAC":        5,
	}
)

func (x AudioFormat) Enum() *AudioFormat {
	p := new(AudioFormat)
	*p = x
	return p
}

func (x AudioFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AudioFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_media_v1_media_proto_enumTypes[4].Descriptor()
}

func (AudioFormat) Type() protoreflect.EnumType {
	return &file_avion_media_v1_media_proto_enumTypes[4]
}

func (x AudioFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AudioFormat.Descriptor instead.
func (AudioFormat) EnumDescriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{4}
}

// サムネイルサイズ
type ThumbnailSize int32

const (
	// 未指定
	ThumbnailSize_THUMBNAIL_SIZE_UNSPECIFIED ThumbnailSize = 0
	// 小（150x150）
	ThumbnailSize_THUMBNAIL_SIZE_SMALL ThumbnailSize = 1
	// 中（300x300）
	ThumbnailSize_THUMBNAIL_SIZE_MEDIUM ThumbnailSize = 2
	// 大（600x600）
	ThumbnailSize_THUMBNAIL_SIZE_LARGE ThumbnailSize = 3
	// カスタム
	ThumbnailSize_THUMBNAIL_SIZE_CUSTOM ThumbnailSize = 4
)

// Enum value maps for ThumbnailSize.
var (
	ThumbnailSize_name = map[int32]string{
		0: "THUMBNAIL_SIZE_UNSPECIFIED",
		1: "THUMBNAIL_SIZE_SMALL",
		2: "THUMBNAIL_SIZE_MEDIUM",
		3: "THUMBNAIL_SIZE_LARGE",
		4: "THUMBNAIL_SIZE_CUSTOM",
	}
	ThumbnailSize_value = map[string]int32{
		"THUMBNAIL_SIZE_UNSPECIFIED": 0,
		"THUMBNAIL_SIZE_SMALL":       1,
		"THUMBNAIL_SIZE_MEDIUM":      2,
		"THUMBNAIL_SIZE_LARGE":       3,
		"THUMBNAIL_SIZE_CUSTOM":      4,
	}
)

func (x ThumbnailSize) Enum() *ThumbnailSize {
	p := new(ThumbnailSize)
	*p = x
	return p
}

func (x ThumbnailSize) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThumbnailSize) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_media_v1_media_proto_enumTypes[5].Descriptor()
}

func (ThumbnailSize) Type() protoreflect.EnumType {
	return &file_avion_media_v1_media_proto_enumTypes[5]
}

func (x ThumbnailSize) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThumbnailSize.Descriptor instead.
func (ThumbnailSize) EnumDescriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{5}
}

// 処理タイプ
type ProcessingType int32

const (
	// 未指定
	ProcessingType_PROCESSING_TYPE_UNSPECIFIED ProcessingType = 0
	// サムネイル生成
	ProcessingType_PROCESSING_TYPE_THUMBNAIL ProcessingType = 1
	// 画像リサイズ
	ProcessingType_PROCESSING_TYPE_RESIZE ProcessingType = 2
	// 動画エンコード
	ProcessingType_PROCESSING_TYPE_TRANSCODE ProcessingType = 3
	// 画像フォーマット変換
	ProcessingType_PROCESSING_TYPE_CONVERT ProcessingType = 4
	// ウォーターマーク追加
	ProcessingType_PROCESSING_TYPE_WATERMARK ProcessingType = 5
	// メタデータ抽出
	ProcessingType_PROCESSING_TYPE_EXTRACT_METADATA ProcessingType = 6
	// ウイルススキャン
	ProcessingType_PROCESSING_TYPE_VIRUS_SCAN ProcessingType = 7
	// コンテンツモデレーション
	ProcessingType_PROCESSING_TYPE_MODERATION ProcessingType = 8
)

// Enum value maps for ProcessingType.
var (
	ProcessingType_name = map[int32]string{
		0: "PROCESSING_TYPE_UNSPECIFIED",
		1: "PROCESSING_TYPE_THUMBNAIL",
		2: "PROCESSING_TYPE_RESIZE",
		3: "PROCESSING_TYPE_TRANSCODE",
		4: "PROCESSING_TYPE_CONVERT",
		5: "PROCESSING_TYPE_WATERMARK",
		6: "PROCESSING_TYPE_EXTRACT_METADATA",
		7: "PROCESSING_TYPE_VIRUS_SCAN",
		8: "PROCESSING_TYPE_MODERATION",
	}
	ProcessingType_value = map[string]int32{
		"PROCESSING_TYPE_UNSPECIFIED":      0,
		"PROCESSING_TYPE_THUMBNAIL":        1,
		"PROCESSING_TYPE_RESIZE":           2,
		"PROCESSING_TYPE_TRANSCODE":        3,
		"PROCESSING_TYPE_CONVERT":          4,
		"PROCESSING_TYPE_WATERMARK":        5,
		"PROCESSING_TYPE_EXTRACT_METADATA": 6,
		"PROCESSING_TYPE_VIRUS_SCAN":       7,
		"PROCESSING_TYPE_MODERATION":       8,
	}
)

func (x ProcessingType) Enum() *ProcessingType {
	p := new(ProcessingType)
	*p = x
	return p
}

func (x ProcessingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessingType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_media_v1_media_proto_enumTypes[6].Descriptor()
}

func (ProcessingType) Type() protoreflect.EnumType {
	return &file_avion_media_v1_media_proto_enumTypes[6]
}

func (x ProcessingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessingType.Descriptor instead.
func (ProcessingType) EnumDescriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{6}
}

// メディア情報
type Media struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// メディアID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 所有者ユーザーID
	OwnerId string `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// メディアタイプ
	Type MediaType `protobuf:"varint,3,opt,name=type,proto3,enum=avion.media.v1.MediaType" json:"type,omitempty"`
	// オリジナルファイル名
	OriginalFilename string `protobuf:"bytes,4,opt,name=original_filename,json=originalFilename,proto3" json:"original_filename,omitempty"`
	// MIMEタイプ
	MimeType string `protobuf:"bytes,5,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// ファイルサイズ（バイト）
	Size int64 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	// メディアURL（CDN）
	Url string `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	// サムネイルURL
	ThumbnailUrl string `protobuf:"bytes,8,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	// 処理状態
	Status MediaProcessingStatus `protobuf:"varint,9,opt,name=status,proto3,enum=avion.media.v1.MediaProcessingStatus" json:"status,omitempty"`
	// メタデータ
	Metadata *MediaMetadata `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// 作成日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新日時
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// 有効期限（一時的なメディアの場合）
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// 公開フラグ
	IsPublic bool `protobuf:"varint,14,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	// 説明文
	Description string `protobuf:"bytes,15,opt,name=description,proto3" json:"description,omitempty"`
	// タグ
	Tags []string `protobuf:"bytes,16,rep,name=tags,proto3" json:"tags,omitempty"`
	// ハッシュ値（重複検出用）
	Hash          string `protobuf:"bytes,17,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Media) Reset() {
	*x = Media{}
	mi := &file_avion_media_v1_media_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_avion_media_v1_media_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{0}
}

func (x *Media) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Media) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Media) GetType() MediaType {
	if x != nil {
		return x.Type
	}
	return MediaType_MEDIA_TYPE_UNSPECIFIED
}

func (x *Media) GetOriginalFilename() string {
	if x != nil {
		return x.OriginalFilename
	}
	return ""
}

func (x *Media) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Media) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Media) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Media) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *Media) GetStatus() MediaProcessingStatus {
	if x != nil {
		return x.Status
	}
	return MediaProcessingStatus_MEDIA_PROCESSING_STATUS_UNSPECIFIED
}

func (x *Media) GetMetadata() *MediaMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Media) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Media) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Media) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Media) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *Media) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Media) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Media) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

// メディアメタデータ
type MediaMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 画像メタデータ
	Image *ImageMetadata `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// 動画メタデータ
	Video *VideoMetadata `protobuf:"bytes,2,opt,name=video,proto3" json:"video,omitempty"`
	// 音声メタデータ
	Audio *AudioMetadata `protobuf:"bytes,3,opt,name=audio,proto3" json:"audio,omitempty"`
	// 場所情報
	Location *LocationInfo `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	// カメラ情報
	Camera        *CameraInfo `protobuf:"bytes,5,opt,name=camera,proto3" json:"camera,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaMetadata) Reset() {
	*x = MediaMetadata{}
	mi := &file_avion_media_v1_media_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaMetadata) ProtoMessage() {}

func (x *MediaMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_avion_media_v1_media_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaMetadata.ProtoReflect.Descriptor instead.
func (*MediaMetadata) Descriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{1}
}

func (x *MediaMetadata) GetImage() *ImageMetadata {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *MediaMetadata) GetVideo() *VideoMetadata {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *MediaMetadata) GetAudio() *AudioMetadata {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *MediaMetadata) GetLocation() *LocationInfo {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *MediaMetadata) GetCamera() *CameraInfo {
	if x != nil {
		return x.Camera
	}
	return nil
}

// 画像メタデータ
type ImageMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 幅（ピクセル）
	Width int32 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	// 高さ（ピクセル）
	Height int32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// フォーマット
	Format ImageFormat `protobuf:"varint,3,opt,name=format,proto3,enum=avion.media.v1.ImageFormat" json:"format,omitempty"`
	// 色深度
	ColorDepth int32 `protobuf:"varint,4,opt,name=color_depth,json=colorDepth,proto3" json:"color_depth,omitempty"`
	// DPI
	Dpi int32 `protobuf:"varint,5,opt,name=dpi,proto3" json:"dpi,omitempty"`
	// アニメーションフラグ（GIF等）
	IsAnimated bool `protobuf:"varint,6,opt,name=is_animated,json=isAnimated,proto3" json:"is_animated,omitempty"`
	// フレーム数（アニメーションの場合）
	FrameCount    int32 `protobuf:"varint,7,opt,name=frame_count,json=frameCount,proto3" json:"frame_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageMetadata) Reset() {
	*x = ImageMetadata{}
	mi := &file_avion_media_v1_media_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageMetadata) ProtoMessage() {}

func (x *ImageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_avion_media_v1_media_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageMetadata.ProtoReflect.Descriptor instead.
func (*ImageMetadata) Descriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{2}
}

func (x *ImageMetadata) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageMetadata) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ImageMetadata) GetFormat() ImageFormat {
	if x != nil {
		return x.Format
	}
	return ImageFormat_IMAGE_FORMAT_UNSPECIFIED
}

func (x *ImageMetadata) GetColorDepth() int32 {
	if x != nil {
		return x.ColorDepth
	}
	return 0
}

func (x *ImageMetadata) GetDpi() int32 {
	if x != nil {
		return x.Dpi
	}
	return 0
}

func (x *ImageMetadata) GetIsAnimated() bool {
	if x != nil {
		return x.IsAnimated
	}
	return false
}

func (x *ImageMetadata) GetFrameCount() int32 {
	if x != nil {
		return x.FrameCount
	}
	return 0
}

// 動画メタデータ
type VideoMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 幅（ピクセル）
	Width int32 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	// 高さ（ピクセル）
	Height int32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// フォーマット
	Format VideoFormat `protobuf:"varint,3,opt,name=format,proto3,enum=avion.media.v1.VideoFormat" json:"format,omitempty"`
	// 再生時間
	Duration *durationpb.Duration `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
	// フレームレート
	FrameRate float32 `protobuf:"fixed32,5,opt,name=frame_rate,json=frameRate,proto3" json:"frame_rate,omitempty"`
	// ビットレート（bps）
	Bitrate int64 `protobuf:"varint,6,opt,name=bitrate,proto3" json:"bitrate,omitempty"`
	// コーデック
	Codec string `protobuf:"bytes,7,opt,name=codec,proto3" json:"codec,omitempty"`
	// 音声トラック有無
	HasAudio      bool `protobuf:"varint,8,opt,name=has_audio,json=hasAudio,proto3" json:"has_audio,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VideoMetadata) Reset() {
	*x = VideoMetadata{}
	mi := &file_avion_media_v1_media_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMetadata) ProtoMessage() {}

func (x *VideoMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_avion_media_v1_media_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMetadata.ProtoReflect.Descriptor instead.
func (*VideoMetadata) Descriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{3}
}

func (x *VideoMetadata) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *VideoMetadata) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VideoMetadata) GetFormat() VideoFormat {
	if x != nil {
		return x.Format
	}
	return VideoFormat_VIDEO_FORMAT_UNSPECIFIED
}

func (x *VideoMetadata) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *VideoMetadata) GetFrameRate() float32 {
	if x != nil {
		return x.FrameRate
	}
	return 0
}

func (x *VideoMetadata) GetBitrate() int64 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *VideoMetadata) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *VideoMetadata) GetHasAudio() bool {
	if x != nil {
		return x.HasAudio
	}
	return false
}

// 音声メタデータ
type AudioMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// フォーマット
	Format AudioFormat `protobuf:"varint,1,opt,name=format,proto3,enum=avion.media.v1.AudioFormat" json:"format,omitempty"`
	// 再生時間
	Duration *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	// ビットレート（bps）
	Bitrate int64 `protobuf:"varint,3,opt,name=bitrate,proto3" json:"bitrate,omitempty"`
	// サンプリングレート（Hz）
	SampleRate int32 `protobuf:"varint,4,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"`
	// チャンネル数
	Channels int32 `protobuf:"varint,5,opt,name=channels,proto3" json:"channels,omitempty"`
	// コーデック
	Codec         string `protobuf:"bytes,6,opt,name=codec,proto3" json:"codec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioMetadata) Reset() {
	*x = AudioMetadata{}
	mi := &file_avion_media_v1_media_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioMetadata) ProtoMessage() {}

func (x *AudioMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_avion_media_v1_media_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioMetadata.ProtoReflect.Descriptor instead.
func (*AudioMetadata) Descriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{4}
}

func (x *AudioMetadata) GetFormat() AudioFormat {
	if x != nil {
		return x.Format
	}
	return AudioFormat_AUDIO_FORMAT_UNSPECIFIED
}

func (x *AudioMetadata) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *AudioMetadata) GetBitrate() int64 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *AudioMetadata) GetSampleRate() int32 {
	if x != nil {
		return x.SampleRate
	}
	return 0
}

func (x *AudioMetadata) GetChannels() int32 {
	if x != nil {
		return x.Channels
	}
	return 0
}

func (x *AudioMetadata) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

// 場所情報
type LocationInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 緯度
	Latitude float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// 経度
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// 高度（メートル）
	Altitude float64 `protobuf:"fixed64,3,opt,name=altitude,proto3" json:"altitude,omitempty"`
	// 場所名
	PlaceName     string `protobuf:"bytes,4,opt,name=place_name,json=placeName,proto3" json:"place_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationInfo) Reset() {
	*x = LocationInfo{}
	mi := &file_avion_media_v1_media_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationInfo) ProtoMessage() {}

func (x *LocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_avion_media_v1_media_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationInfo.ProtoReflect.Descriptor instead.
func (*LocationInfo) Descriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{5}
}

func (x *LocationInfo) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *LocationInfo) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *LocationInfo) GetAltitude() float64 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *LocationInfo) GetPlaceName() string {
	if x != nil {
		return x.PlaceName
	}
	return ""
}

// カメラ情報
type CameraInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// カメラメーカー
	Make string `protobuf:"bytes,1,opt,name=make,proto3" json:"make,omitempty"`
	// カメラモデル
	Model string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	// ISO感度
	Iso int32 `protobuf:"varint,3,opt,name=iso,proto3" json:"iso,omitempty"`
	// F値
	Aperture float32 `protobuf:"fixed32,4,opt,name=aperture,proto3" json:"aperture,omitempty"`
	// シャッタースピード
	ShutterSpeed string `protobuf:"bytes,5,opt,name=shutter_speed,json=shutterSpeed,proto3" json:"shutter_speed,omitempty"`
	// 焦点距離（mm）
	FocalLength float32 `protobuf:"fixed32,6,opt,name=focal_length,json=focalLength,proto3" json:"focal_length,omitempty"`
	// レンズ情報
	Lens string `protobuf:"bytes,7,opt,name=lens,proto3" json:"lens,omitempty"`
	// 撮影日時
	TakenAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=taken_at,json=takenAt,proto3" json:"taken_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CameraInfo) Reset() {
	*x = CameraInfo{}
	mi := &file_avion_media_v1_media_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CameraInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameraInfo) ProtoMessage() {}

func (x *CameraInfo) ProtoReflect() protoreflect.Message {
	mi := &file_avion_media_v1_media_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameraInfo.ProtoReflect.Descriptor instead.
func (*CameraInfo) Descriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{6}
}

func (x *CameraInfo) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *CameraInfo) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CameraInfo) GetIso() int32 {
	if x != nil {
		return x.Iso
	}
	return 0
}

func (x *CameraInfo) GetAperture() float32 {
	if x != nil {
		return x.Aperture
	}
	return 0
}

func (x *CameraInfo) GetShutterSpeed() string {
	if x != nil {
		return x.ShutterSpeed
	}
	return ""
}

func (x *CameraInfo) GetFocalLength() float32 {
	if x != nil {
		return x.FocalLength
	}
	return 0
}

func (x *CameraInfo) GetLens() string {
	if x != nil {
		return x.Lens
	}
	return ""
}

func (x *CameraInfo) GetTakenAt() *timestamppb.Timestamp {
	if x != nil {
		return x.TakenAt
	}
	return nil
}

// サムネイル情報
type Thumbnail struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// サムネイルURL
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// サイズタイプ
	Size ThumbnailSize `protobuf:"varint,2,opt,name=size,proto3,enum=avion.media.v1.ThumbnailSize" json:"size,omitempty"`
	// 幅（ピクセル）
	Width int32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	// 高さ（ピクセル）
	Height int32 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	// ファイルサイズ（バイト）
	FileSize      int64 `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Thumbnail) Reset() {
	*x = Thumbnail{}
	mi := &file_avion_media_v1_media_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Thumbnail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thumbnail) ProtoMessage() {}

func (x *Thumbnail) ProtoReflect() protoreflect.Message {
	mi := &file_avion_media_v1_media_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thumbnail.ProtoReflect.Descriptor instead.
func (*Thumbnail) Descriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{7}
}

func (x *Thumbnail) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Thumbnail) GetSize() ThumbnailSize {
	if x != nil {
		return x.Size
	}
	return ThumbnailSize_THUMBNAIL_SIZE_UNSPECIFIED
}

func (x *Thumbnail) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Thumbnail) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Thumbnail) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

// アップロードセッション
type UploadSession struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// セッションID
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// メディアID
	MediaId string `protobuf:"bytes,2,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	// アップロードURL
	UploadUrl string `protobuf:"bytes,3,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"`
	// 有効期限
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// 最大ファイルサイズ
	MaxFileSize int64 `protobuf:"varint,5,opt,name=max_file_size,json=maxFileSize,proto3" json:"max_file_size,omitempty"`
	// 許可されるMIMEタイプ
	AllowedMimeTypes []string `protobuf:"bytes,6,rep,name=allowed_mime_types,json=allowedMimeTypes,proto3" json:"allowed_mime_types,omitempty"`
	// アップロード済みバイト数
	UploadedBytes int64 `protobuf:"varint,7,opt,name=uploaded_bytes,json=uploadedBytes,proto3" json:"uploaded_bytes,omitempty"`
	// 総バイト数
	TotalBytes    int64 `protobuf:"varint,8,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadSession) Reset() {
	*x = UploadSession{}
	mi := &file_avion_media_v1_media_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSession) ProtoMessage() {}

func (x *UploadSession) ProtoReflect() protoreflect.Message {
	mi := &file_avion_media_v1_media_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSession.ProtoReflect.Descriptor instead.
func (*UploadSession) Descriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{8}
}

func (x *UploadSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UploadSession) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *UploadSession) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

func (x *UploadSession) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *UploadSession) GetMaxFileSize() int64 {
	if x != nil {
		return x.MaxFileSize
	}
	return 0
}

func (x *UploadSession) GetAllowedMimeTypes() []string {
	if x != nil {
		return x.AllowedMimeTypes
	}
	return nil
}

func (x *UploadSession) GetUploadedBytes() int64 {
	if x != nil {
		return x.UploadedBytes
	}
	return 0
}

func (x *UploadSession) GetTotalBytes() int64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

// メディア処理ジョブ
type MediaProcessingJob struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ジョブID
	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// メディアID
	MediaId string `protobuf:"bytes,2,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	// 処理タイプ
	Type ProcessingType `protobuf:"varint,3,opt,name=type,proto3,enum=avion.media.v1.ProcessingType" json:"type,omitempty"`
	// 処理状態
	Status MediaProcessingStatus `protobuf:"varint,4,opt,name=status,proto3,enum=avion.media.v1.MediaProcessingStatus" json:"status,omitempty"`
	// 処理パラメータ（JSON形式）
	Parameters string `protobuf:"bytes,5,opt,name=parameters,proto3" json:"parameters,omitempty"`
	// エラーメッセージ
	ErrorMessage string `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// 開始日時
	StartedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// 完了日時
	CompletedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	// リトライ回数
	RetryCount    int32 `protobuf:"varint,9,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaProcessingJob) Reset() {
	*x = MediaProcessingJob{}
	mi := &file_avion_media_v1_media_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaProcessingJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaProcessingJob) ProtoMessage() {}

func (x *MediaProcessingJob) ProtoReflect() protoreflect.Message {
	mi := &file_avion_media_v1_media_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaProcessingJob.ProtoReflect.Descriptor instead.
func (*MediaProcessingJob) Descriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{9}
}

func (x *MediaProcessingJob) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *MediaProcessingJob) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *MediaProcessingJob) GetType() ProcessingType {
	if x != nil {
		return x.Type
	}
	return ProcessingType_PROCESSING_TYPE_UNSPECIFIED
}

func (x *MediaProcessingJob) GetStatus() MediaProcessingStatus {
	if x != nil {
		return x.Status
	}
	return MediaProcessingStatus_MEDIA_PROCESSING_STATUS_UNSPECIFIED
}

func (x *MediaProcessingJob) GetParameters() string {
	if x != nil {
		return x.Parameters
	}
	return ""
}

func (x *MediaProcessingJob) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MediaProcessingJob) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *MediaProcessingJob) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *MediaProcessingJob) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

// メディア使用統計
type MediaUsageStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 総使用容量（バイト）
	TotalStorageBytes int64 `protobuf:"varint,2,opt,name=total_storage_bytes,json=totalStorageBytes,proto3" json:"total_storage_bytes,omitempty"`
	// 総メディア数
	TotalMediaCount int64 `protobuf:"varint,3,opt,name=total_media_count,json=totalMediaCount,proto3" json:"total_media_count,omitempty"`
	// タイプ別統計
	TypeStats map[string]*TypeUsageStats `protobuf:"bytes,4,rep,name=type_stats,json=typeStats,proto3" json:"type_stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 月間アップロード容量（バイト）
	MonthlyUploadBytes int64 `protobuf:"varint,5,opt,name=monthly_upload_bytes,json=monthlyUploadBytes,proto3" json:"monthly_upload_bytes,omitempty"`
	// 月間ダウンロード容量（バイト）
	MonthlyDownloadBytes int64 `protobuf:"varint,6,opt,name=monthly_download_bytes,json=monthlyDownloadBytes,proto3" json:"monthly_download_bytes,omitempty"`
	// 最終更新日時
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaUsageStats) Reset() {
	*x = MediaUsageStats{}
	mi := &file_avion_media_v1_media_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaUsageStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaUsageStats) ProtoMessage() {}

func (x *MediaUsageStats) ProtoReflect() protoreflect.Message {
	mi := &file_avion_media_v1_media_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaUsageStats.ProtoReflect.Descriptor instead.
func (*MediaUsageStats) Descriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{10}
}

func (x *MediaUsageStats) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MediaUsageStats) GetTotalStorageBytes() int64 {
	if x != nil {
		return x.TotalStorageBytes
	}
	return 0
}

func (x *MediaUsageStats) GetTotalMediaCount() int64 {
	if x != nil {
		return x.TotalMediaCount
	}
	return 0
}

func (x *MediaUsageStats) GetTypeStats() map[string]*TypeUsageStats {
	if x != nil {
		return x.TypeStats
	}
	return nil
}

func (x *MediaUsageStats) GetMonthlyUploadBytes() int64 {
	if x != nil {
		return x.MonthlyUploadBytes
	}
	return 0
}

func (x *MediaUsageStats) GetMonthlyDownloadBytes() int64 {
	if x != nil {
		return x.MonthlyDownloadBytes
	}
	return 0
}

func (x *MediaUsageStats) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// タイプ別使用統計
type TypeUsageStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// メディア数
	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// 使用容量（バイト）
	StorageBytes  int64 `protobuf:"varint,2,opt,name=storage_bytes,json=storageBytes,proto3" json:"storage_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypeUsageStats) Reset() {
	*x = TypeUsageStats{}
	mi := &file_avion_media_v1_media_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeUsageStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeUsageStats) ProtoMessage() {}

func (x *TypeUsageStats) ProtoReflect() protoreflect.Message {
	mi := &file_avion_media_v1_media_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeUsageStats.ProtoReflect.Descriptor instead.
func (*TypeUsageStats) Descriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{11}
}

func (x *TypeUsageStats) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TypeUsageStats) GetStorageBytes() int64 {
	if x != nil {
		return x.StorageBytes
	}
	return 0
}

// CDN設定
type CDNConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CDNプロバイダー
	Provider string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	// ベースURL
	BaseUrl string `protobuf:"bytes,2,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	// カスタムドメイン
	CustomDomain string `protobuf:"bytes,3,opt,name=custom_domain,json=customDomain,proto3" json:"custom_domain,omitempty"`
	// キャッシュTTL（秒）
	CacheTtl int32 `protobuf:"varint,4,opt,name=cache_ttl,json=cacheTtl,proto3" json:"cache_ttl,omitempty"`
	// セキュアURL生成有無
	UseSecureUrls bool `protobuf:"varint,5,opt,name=use_secure_urls,json=useSecureUrls,proto3" json:"use_secure_urls,omitempty"`
	// 署名キー
	SigningKey    string `protobuf:"bytes,6,opt,name=signing_key,json=signingKey,proto3" json:"signing_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CDNConfig) Reset() {
	*x = CDNConfig{}
	mi := &file_avion_media_v1_media_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDNConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDNConfig) ProtoMessage() {}

func (x *CDNConfig) ProtoReflect() protoreflect.Message {
	mi := &file_avion_media_v1_media_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDNConfig.ProtoReflect.Descriptor instead.
func (*CDNConfig) Descriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{12}
}

func (x *CDNConfig) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CDNConfig) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *CDNConfig) GetCustomDomain() string {
	if x != nil {
		return x.CustomDomain
	}
	return ""
}

func (x *CDNConfig) GetCacheTtl() int32 {
	if x != nil {
		return x.CacheTtl
	}
	return 0
}

func (x *CDNConfig) GetUseSecureUrls() bool {
	if x != nil {
		return x.UseSecureUrls
	}
	return false
}

func (x *CDNConfig) GetSigningKey() string {
	if x != nil {
		return x.SigningKey
	}
	return ""
}

// メディアクォータ
type MediaQuota struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 最大ストレージ容量（バイト）
	MaxStorageBytes int64 `protobuf:"varint,2,opt,name=max_storage_bytes,json=maxStorageBytes,proto3" json:"max_storage_bytes,omitempty"`
	// 最大ファイルサイズ（バイト）
	MaxFileSizeBytes int64 `protobuf:"varint,3,opt,name=max_file_size_bytes,json=maxFileSizeBytes,proto3" json:"max_file_size_bytes,omitempty"`
	// 月間最大アップロード容量（バイト）
	MaxMonthlyUploadBytes int64 `protobuf:"varint,4,opt,name=max_monthly_upload_bytes,json=maxMonthlyUploadBytes,proto3" json:"max_monthly_upload_bytes,omitempty"`
	// 最大メディア数
	MaxMediaCount int64 `protobuf:"varint,5,opt,name=max_media_count,json=maxMediaCount,proto3" json:"max_media_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaQuota) Reset() {
	*x = MediaQuota{}
	mi := &file_avion_media_v1_media_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaQuota) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaQuota) ProtoMessage() {}

func (x *MediaQuota) ProtoReflect() protoreflect.Message {
	mi := &file_avion_media_v1_media_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaQuota.ProtoReflect.Descriptor instead.
func (*MediaQuota) Descriptor() ([]byte, []int) {
	return file_avion_media_v1_media_proto_rawDescGZIP(), []int{13}
}

func (x *MediaQuota) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MediaQuota) GetMaxStorageBytes() int64 {
	if x != nil {
		return x.MaxStorageBytes
	}
	return 0
}

func (x *MediaQuota) GetMaxFileSizeBytes() int64 {
	if x != nil {
		return x.MaxFileSizeBytes
	}
	return 0
}

func (x *MediaQuota) GetMaxMonthlyUploadBytes() int64 {
	if x != nil {
		return x.MaxMonthlyUploadBytes
	}
	return 0
}

func (x *MediaQuota) GetMaxMediaCount() int64 {
	if x != nil {
		return x.MaxMediaCount
	}
	return 0
}

var File_avion_media_v1_media_proto protoreflect.FileDescriptor

const file_avion_media_v1_media_proto_rawDesc = "" +
	"\n" +
	"\x1aavion/media/v1/media.proto\x12\x0eavion.media.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"\x88\x05\n" +
	"\x05Media\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bowner_id\x18\x02 \x01(\tR\aownerId\x12-\n" +
	"\x04type\x18\x03 \x01(\x0e2\x19.avion.media.v1.MediaTypeR\x04type\x12+\n" +
	"\x11original_filename\x18\x04 \x01(\tR\x10originalFilename\x12\x1b\n" +
	"\tmime_type\x18\x05 \x01(\tR\bmimeType\x12\x12\n" +
	"\x04size\x18\x06 \x01(\x03R\x04size\x12\x10\n" +
	"\x03url\x18\a \x01(\tR\x03url\x12#\n" +
	"\rthumbnail_url\x18\b \x01(\tR\fthumbnailUrl\x12=\n" +
	"\x06status\x18\t \x01(\x0e2%.avion.media.v1.MediaProcessingStatusR\x06status\x129\n" +
	"\bmetadata\x18\n" +
	" \x01(\v2\x1d.avion.media.v1.MediaMetadataR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x129\n" +
	"\n" +
	"expires_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12\x1b\n" +
	"\tis_public\x18\x0e \x01(\bR\bisPublic\x12 \n" +
	"\vdescription\x18\x0f \x01(\tR\vdescription\x12\x12\n" +
	"\x04tags\x18\x10 \x03(\tR\x04tags\x12\x12\n" +
	"\x04hash\x18\x11 \x01(\tR\x04hash\"\x9c\x02\n" +
	"\rMediaMetadata\x123\n" +
	"\x05image\x18\x01 \x01(\v2\x1d.avion.media.v1.ImageMetadataR\x05image\x123\n" +
	"\x05video\x18\x02 \x01(\v2\x1d.avion.media.v1.VideoMetadataR\x05video\x123\n" +
	"\x05audio\x18\x03 \x01(\v2\x1d.avion.media.v1.AudioMetadataR\x05audio\x128\n" +
	"\blocation\x18\x04 \x01(\v2\x1c.avion.media.v1.LocationInfoR\blocation\x122\n" +
	"\x06camera\x18\x05 \x01(\v2\x1a.avion.media.v1.CameraInfoR\x06camera\"\xe7\x01\n" +
	"\rImageMetadata\x12\x14\n" +
	"\x05width\x18\x01 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x05R\x06height\x123\n" +
	"\x06format\x18\x03 \x01(\x0e2\x1b.avion.media.v1.ImageFormatR\x06format\x12\x1f\n" +
	"\vcolor_depth\x18\x04 \x01(\x05R\n" +
	"colorDepth\x12\x10\n" +
	"\x03dpi\x18\x05 \x01(\x05R\x03dpi\x12\x1f\n" +
	"\vis_animated\x18\x06 \x01(\bR\n" +
	"isAnimated\x12\x1f\n" +
	"\vframe_count\x18\a \x01(\x05R\n" +
	"frameCount\"\x95\x02\n" +
	"\rVideoMetadata\x12\x14\n" +
	"\x05width\x18\x01 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x05R\x06height\x123\n" +
	"\x06format\x18\x03 \x01(\x0e2\x1b.avion.media.v1.VideoFormatR\x06format\x125\n" +
	"\bduration\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\bduration\x12\x1d\n" +
	"\n" +
	"frame_rate\x18\x05 \x01(\x02R\tframeRate\x12\x18\n" +
	"\abitrate\x18\x06 \x01(\x03R\abitrate\x12\x14\n" +
	"\x05codec\x18\a \x01(\tR\x05codec\x12\x1b\n" +
	"\thas_audio\x18\b \x01(\bR\bhasAudio\"\xe8\x01\n" +
	"\rAudioMetadata\x123\n" +
	"\x06format\x18\x01 \x01(\x0e2\x1b.avion.media.v1.AudioFormatR\x06format\x125\n" +
	"\bduration\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\bduration\x12\x18\n" +
	"\abitrate\x18\x03 \x01(\x03R\abitrate\x12\x1f\n" +
	"\vsample_rate\x18\x04 \x01(\x05R\n" +
	"sampleRate\x12\x1a\n" +
	"\bchannels\x18\x05 \x01(\x05R\bchannels\x12\x14\n" +
	"\x05codec\x18\x06 \x01(\tR\x05codec\"\x83\x01\n" +
	"\fLocationInfo\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude\x12\x1a\n" +
	"\baltitude\x18\x03 \x01(\x01R\baltitude\x12\x1d\n" +
	"\n" +
	"place_name\x18\x04 \x01(\tR\tplaceName\"\xf7\x01\n" +
	"\n" +
	"CameraInfo\x12\x12\n" +
	"\x04make\x18\x01 \x01(\tR\x04make\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x12\x10\n" +
	"\x03iso\x18\x03 \x01(\x05R\x03iso\x12\x1a\n" +
	"\baperture\x18\x04 \x01(\x02R\baperture\x12#\n" +
	"\rshutter_speed\x18\x05 \x01(\tR\fshutterSpeed\x12!\n" +
	"\ffocal_length\x18\x06 \x01(\x02R\vfocalLength\x12\x12\n" +
	"\x04lens\x18\a \x01(\tR\x04lens\x125\n" +
	"\btaken_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\atakenAt\"\x9b\x01\n" +
	"\tThumbnail\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x121\n" +
	"\x04size\x18\x02 \x01(\x0e2\x1d.avion.media.v1.ThumbnailSizeR\x04size\x12\x14\n" +
	"\x05width\x18\x03 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\x05R\x06height\x12\x1b\n" +
	"\tfile_size\x18\x05 \x01(\x03R\bfileSize\"\xbd\x02\n" +
	"\rUploadSession\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x19\n" +
	"\bmedia_id\x18\x02 \x01(\tR\amediaId\x12\x1d\n" +
	"\n" +
	"upload_url\x18\x03 \x01(\tR\tuploadUrl\x129\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12\"\n" +
	"\rmax_file_size\x18\x05 \x01(\x03R\vmaxFileSize\x12,\n" +
	"\x12allowed_mime_types\x18\x06 \x03(\tR\x10allowedMimeTypes\x12%\n" +
	"\x0euploaded_bytes\x18\a \x01(\x03R\ruploadedBytes\x12\x1f\n" +
	"\vtotal_bytes\x18\b \x01(\x03R\n" +
	"totalBytes\"\x99\x03\n" +
	"\x12MediaProcessingJob\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x19\n" +
	"\bmedia_id\x18\x02 \x01(\tR\amediaId\x122\n" +
	"\x04type\x18\x03 \x01(\x0e2\x1e.avion.media.v1.ProcessingTypeR\x04type\x12=\n" +
	"\x06status\x18\x04 \x01(\x0e2%.avion.media.v1.MediaProcessingStatusR\x06status\x12\x1e\n" +
	"\n" +
	"parameters\x18\x05 \x01(\tR\n" +
	"parameters\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\x129\n" +
	"\n" +
	"started_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12\x1f\n" +
	"\vretry_count\x18\t \x01(\x05R\n" +
	"retryCount\"\xd6\x03\n" +
	"\x0fMediaUsageStats\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12.\n" +
	"\x13total_storage_bytes\x18\x02 \x01(\x03R\x11totalStorageBytes\x12*\n" +
	"\x11total_media_count\x18\x03 \x01(\x03R\x0ftotalMediaCount\x12M\n" +
	"\n" +
	"type_stats\x18\x04 \x03(\v2..avion.media.v1.MediaUsageStats.TypeStatsEntryR\ttypeStats\x120\n" +
	"\x14monthly_upload_bytes\x18\x05 \x01(\x03R\x12monthlyUploadBytes\x124\n" +
	"\x16monthly_download_bytes\x18\x06 \x01(\x03R\x14monthlyDownloadBytes\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a\\\n" +
	"\x0eTypeStatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.avion.media.v1.TypeUsageStatsR\x05value:\x028\x01\"K\n" +
	"\x0eTypeUsageStats\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\x12#\n" +
	"\rstorage_bytes\x18\x02 \x01(\x03R\fstorageBytes\"\xcd\x01\n" +
	"\tCDNConfig\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12\x19\n" +
	"\bbase_url\x18\x02 \x01(\tR\abaseUrl\x12#\n" +
	"\rcustom_domain\x18\x03 \x01(\tR\fcustomDomain\x12\x1b\n" +
	"\tcache_ttl\x18\x04 \x01(\x05R\bcacheTtl\x12&\n" +
	"\x0fuse_secure_urls\x18\x05 \x01(\bR\ruseSecureUrls\x12\x1f\n" +
	"\vsigning_key\x18\x06 \x01(\tR\n" +
	"signingKey\"\xe1\x01\n" +
	"\n" +
	"MediaQuota\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12*\n" +
	"\x11max_storage_bytes\x18\x02 \x01(\x03R\x0fmaxStorageBytes\x12-\n" +
	"\x13max_file_size_bytes\x18\x03 \x01(\x03R\x10maxFileSizeBytes\x127\n" +
	"\x18max_monthly_upload_bytes\x18\x04 \x01(\x03R\x15maxMonthlyUploadBytes\x12&\n" +
	"\x0fmax_media_count\x18\x05 \x01(\x03R\rmaxMediaCount*\x82\x01\n" +
	"\tMediaType\x12\x1a\n" +
	"\x16MEDIA_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10MEDIA_TYPE_IMAGE\x10\x01\x12\x14\n" +
	"\x10MEDIA_TYPE_VIDEO\x10\x02\x12\x14\n" +
	"\x10MEDIA_TYPE_AUDIO\x10\x03\x12\x17\n" +
	"\x13MEDIA_TYPE_DOCUMENT\x10\x04*\xa3\x02\n" +
	"\x15MediaProcessingStatus\x12'\n" +
	"#MEDIA_PROCESSING_STATUS_UNSPECIFIED\x10\x00\x12%\n" +
	"!MEDIA_PROCESSING_STATUS_UPLOADING\x10\x01\x12#\n" +
	"\x1fMEDIA_PROCESSING_STATUS_PENDING\x10\x02\x12&\n" +
	"\"MEDIA_PROCESSING_STATUS_PROCESSING\x10\x03\x12%\n" +
	"!MEDIA_PROCESSING_STATUS_COMPLETED\x10\x04\x12!\n" +
	"\x1dMEDIA_PROCESSING_STATUS_ERROR\x10\x05\x12#\n" +
	"\x1fMEDIA_PROCESSING_STATUS_DELETED\x10\x06*\x9c\x01\n" +
	"\vImageFormat\x12\x1c\n" +
	"\x18IMAGE_FORMAT_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11IMAGE_FORMAT_JPEG\x10\x01\x12\x14\n" +
	"\x10IMAGE_FORMAT_PNG\x10\x02\x12\x15\n" +
	"\x11IMAGE_FORMAT_WEBP\x10\x03\x12\x14\n" +
	"\x10IMAGE_FORMAT_GIF\x10\x04\x12\x15\n" +
	"\x11IMAGE_FORMAT_AVIF\x10\x05*\x9a\x01\n" +
	"\vVideoFormat\x12\x1c\n" +
	"\x18VIDEO_FORMAT_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10VIDEO_FORMAT_MP4\x10\x01\x12\x15\n" +
	"\x11VIDEO_FORMAT_WEBM\x10\x02\x12\x14\n" +
	"\x10VIDEO_FORMAT_MOV\x10\x03\x12\x14\n" +
	"\x10VIDEO_FORMAT_AVI\x10\x04\x12\x14\n" +
	"\x10VIDEO_FORMAT_MKV\x10\x05*\x9a\x01\n" +
	"\vAudioFormat\x12\x1c\n" +
	"\x18AUDIO_FORMAT_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10AUDIO_FORMAT_MP3\x10\x01\x12\x14\n" +
	"\x10AUDIO_FORMAT_WAV\x10\x02\x12\x14\n" +
	"\x10AUDIO_FORMAT_OGG\x10\x03\x12\x14\n" +
	"\x10AUDIO_FORMAT_M4A\x10\x04\x12\x15\n" +
	"\x11AUDIO_FORMAT_FLAC\x10\x05*\x99\x01\n" +
	"\rThumbnailSize\x12\x1e\n" +
	"\x1aTHUMBNAIL_SIZE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14THUMBNAIL_SIZE_SMALL\x10\x01\x12\x19\n" +
	"\x15THUMBNAIL_SIZE_MEDIUM\x10\x02\x12\x18\n" +
	"\x14THUMBNAIL_SIZE_LARGE\x10\x03\x12\x19\n" +
	"\x15THUMBNAIL_SIZE_CUSTOM\x10\x04*\xad\x02\n" +
	"\x0eProcessingType\x12\x1f\n" +
	"\x1bPROCESSING_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19PROCESSING_TYPE_THUMBNAIL\x10\x01\x12\x1a\n" +
	"\x16PROCESSING_TYPE_RESIZE\x10\x02\x12\x1d\n" +
	"\x19PROCESSING_TYPE_TRANSCODE\x10\x03\x12\x1b\n" +
	"\x17PROCESSING_TYPE_CONVERT\x10\x04\x12\x1d\n" +
	"\x19PROCESSING_TYPE_WATERMARK\x10\x05\x12$\n" +
	" PROCESSING_TYPE_EXTRACT_METADATA\x10\x06\x12\x1e\n" +
	"\x1aPROCESSING_TYPE_VIRUS_SCAN\x10\a\x12\x1e\n" +
	"\x1aPROCESSING_TYPE_MODERATION\x10\bB\xb1\x01\n" +
	"\x12com.avion.media.v1B\n" +
	"MediaProtoP\x01Z5github.com/na2na-p/avion/proto/avion/media/v1;mediav1\xa2\x02\x03AMX\xaa\x02\x0eAvion.Media.V1\xca\x02\x0eAvion\\Media\\V1\xe2\x02\x1aAvion\\Media\\V1\\GPBMetadata\xea\x02\x10Avion::Media::V1b\x06proto3"

var (
	file_avion_media_v1_media_proto_rawDescOnce sync.Once
	file_avion_media_v1_media_proto_rawDescData []byte
)

func file_avion_media_v1_media_proto_rawDescGZIP() []byte {
	file_avion_media_v1_media_proto_rawDescOnce.Do(func() {
		file_avion_media_v1_media_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_avion_media_v1_media_proto_rawDesc), len(file_avion_media_v1_media_proto_rawDesc)))
	})
	return file_avion_media_v1_media_proto_rawDescData
}

var file_avion_media_v1_media_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_avion_media_v1_media_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_avion_media_v1_media_proto_goTypes = []any{
	(MediaType)(0),                // 0: avion.media.v1.MediaType
	(MediaProcessingStatus)(0),    // 1: avion.media.v1.MediaProcessingStatus
	(ImageFormat)(0),              // 2: avion.media.v1.ImageFormat
	(VideoFormat)(0),              // 3: avion.media.v1.VideoFormat
	(AudioFormat)(0),              // 4: avion.media.v1.AudioFormat
	(ThumbnailSize)(0),            // 5: avion.media.v1.ThumbnailSize
	(ProcessingType)(0),           // 6: avion.media.v1.ProcessingType
	(*Media)(nil),                 // 7: avion.media.v1.Media
	(*MediaMetadata)(nil),         // 8: avion.media.v1.MediaMetadata
	(*ImageMetadata)(nil),         // 9: avion.media.v1.ImageMetadata
	(*VideoMetadata)(nil),         // 10: avion.media.v1.VideoMetadata
	(*AudioMetadata)(nil),         // 11: avion.media.v1.AudioMetadata
	(*LocationInfo)(nil),          // 12: avion.media.v1.LocationInfo
	(*CameraInfo)(nil),            // 13: avion.media.v1.CameraInfo
	(*Thumbnail)(nil),             // 14: avion.media.v1.Thumbnail
	(*UploadSession)(nil),         // 15: avion.media.v1.UploadSession
	(*MediaProcessingJob)(nil),    // 16: avion.media.v1.MediaProcessingJob
	(*MediaUsageStats)(nil),       // 17: avion.media.v1.MediaUsageStats
	(*TypeUsageStats)(nil),        // 18: avion.media.v1.TypeUsageStats
	(*CDNConfig)(nil),             // 19: avion.media.v1.CDNConfig
	(*MediaQuota)(nil),            // 20: avion.media.v1.MediaQuota
	nil,                           // 21: avion.media.v1.MediaUsageStats.TypeStatsEntry
	(*timestamppb.Timestamp)(nil), // 22: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 23: google.protobuf.Duration
}
var file_avion_media_v1_media_proto_depIdxs = []int32{
	0,  // 0: avion.media.v1.Media.type:type_name -> avion.media.v1.MediaType
	1,  // 1: avion.media.v1.Media.status:type_name -> avion.media.v1.MediaProcessingStatus
	8,  // 2: avion.media.v1.Media.metadata:type_name -> avion.media.v1.MediaMetadata
	22, // 3: avion.media.v1.Media.created_at:type_name -> google.protobuf.Timestamp
	22, // 4: avion.media.v1.Media.updated_at:type_name -> google.protobuf.Timestamp
	22, // 5: avion.media.v1.Media.expires_at:type_name -> google.protobuf.Timestamp
	9,  // 6: avion.media.v1.MediaMetadata.image:type_name -> avion.media.v1.ImageMetadata
	10, // 7: avion.media.v1.MediaMetadata.video:type_name -> avion.media.v1.VideoMetadata
	11, // 8: avion.media.v1.MediaMetadata.audio:type_name -> avion.media.v1.AudioMetadata
	12, // 9: avion.media.v1.MediaMetadata.location:type_name -> avion.media.v1.LocationInfo
	13, // 10: avion.media.v1.MediaMetadata.camera:type_name -> avion.media.v1.CameraInfo
	2,  // 11: avion.media.v1.ImageMetadata.format:type_name -> avion.media.v1.ImageFormat
	3,  // 12: avion.media.v1.VideoMetadata.format:type_name -> avion.media.v1.VideoFormat
	23, // 13: avion.media.v1.VideoMetadata.duration:type_name -> google.protobuf.Duration
	4,  // 14: avion.media.v1.AudioMetadata.format:type_name -> avion.media.v1.AudioFormat
	23, // 15: avion.media.v1.AudioMetadata.duration:type_name -> google.protobuf.Duration
	22, // 16: avion.media.v1.CameraInfo.taken_at:type_name -> google.protobuf.Timestamp
	5,  // 17: avion.media.v1.Thumbnail.size:type_name -> avion.media.v1.ThumbnailSize
	22, // 18: avion.media.v1.UploadSession.expires_at:type_name -> google.protobuf.Timestamp
	6,  // 19: avion.media.v1.MediaProcessingJob.type:type_name -> avion.media.v1.ProcessingType
	1,  // 20: avion.media.v1.MediaProcessingJob.status:type_name -> avion.media.v1.MediaProcessingStatus
	22, // 21: avion.media.v1.MediaProcessingJob.started_at:type_name -> google.protobuf.Timestamp
	22, // 22: avion.media.v1.MediaProcessingJob.completed_at:type_name -> google.protobuf.Timestamp
	21, // 23: avion.media.v1.MediaUsageStats.type_stats:type_name -> avion.media.v1.MediaUsageStats.TypeStatsEntry
	22, // 24: avion.media.v1.MediaUsageStats.updated_at:type_name -> google.protobuf.Timestamp
	18, // 25: avion.media.v1.MediaUsageStats.TypeStatsEntry.value:type_name -> avion.media.v1.TypeUsageStats
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_avion_media_v1_media_proto_init() }
func file_avion_media_v1_media_proto_init() {
	if File_avion_media_v1_media_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_avion_media_v1_media_proto_rawDesc), len(file_avion_media_v1_media_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_avion_media_v1_media_proto_goTypes,
		DependencyIndexes: file_avion_media_v1_media_proto_depIdxs,
		EnumInfos:         file_avion_media_v1_media_proto_enumTypes,
		MessageInfos:      file_avion_media_v1_media_proto_msgTypes,
	}.Build()
	File_avion_media_v1_media_proto = out.File
	file_avion_media_v1_media_proto_goTypes = nil
	file_avion_media_v1_media_proto_depIdxs = nil
}
