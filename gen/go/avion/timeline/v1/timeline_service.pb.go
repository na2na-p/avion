// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: avion/timeline/v1/timeline_service.proto

package timelinev1

import (
	v1 "github.com/na2na-p/avion/proto/avion/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// タイムライン更新イベントタイプ
type TimelineUpdateEventType int32

const (
	// 未指定
	TimelineUpdateEventType_TIMELINE_UPDATE_EVENT_TYPE_UNSPECIFIED TimelineUpdateEventType = 0
	// 新規エントリー追加
	TimelineUpdateEventType_TIMELINE_UPDATE_EVENT_TYPE_ENTRY_ADDED TimelineUpdateEventType = 1
	// エントリー削除
	TimelineUpdateEventType_TIMELINE_UPDATE_EVENT_TYPE_ENTRY_REMOVED TimelineUpdateEventType = 2
	// エントリー更新（リアクション追加等）
	TimelineUpdateEventType_TIMELINE_UPDATE_EVENT_TYPE_ENTRY_UPDATED TimelineUpdateEventType = 3
	// タイムライン全体のリフレッシュ
	TimelineUpdateEventType_TIMELINE_UPDATE_EVENT_TYPE_TIMELINE_REFRESHED TimelineUpdateEventType = 4
)

// Enum value maps for TimelineUpdateEventType.
var (
	TimelineUpdateEventType_name = map[int32]string{
		0: "TIMELINE_UPDATE_EVENT_TYPE_UNSPECIFIED",
		1: "TIMELINE_UPDATE_EVENT_TYPE_ENTRY_ADDED",
		2: "TIMELINE_UPDATE_EVENT_TYPE_ENTRY_REMOVED",
		3: "TIMELINE_UPDATE_EVENT_TYPE_ENTRY_UPDATED",
		4: "TIMELINE_UPDATE_EVENT_TYPE_TIMELINE_REFRESHED",
	}
	TimelineUpdateEventType_value = map[string]int32{
		"TIMELINE_UPDATE_EVENT_TYPE_UNSPECIFIED":        0,
		"TIMELINE_UPDATE_EVENT_TYPE_ENTRY_ADDED":        1,
		"TIMELINE_UPDATE_EVENT_TYPE_ENTRY_REMOVED":      2,
		"TIMELINE_UPDATE_EVENT_TYPE_ENTRY_UPDATED":      3,
		"TIMELINE_UPDATE_EVENT_TYPE_TIMELINE_REFRESHED": 4,
	}
)

func (x TimelineUpdateEventType) Enum() *TimelineUpdateEventType {
	p := new(TimelineUpdateEventType)
	*p = x
	return p
}

func (x TimelineUpdateEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimelineUpdateEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_timeline_v1_timeline_service_proto_enumTypes[0].Descriptor()
}

func (TimelineUpdateEventType) Type() protoreflect.EnumType {
	return &file_avion_timeline_v1_timeline_service_proto_enumTypes[0]
}

func (x TimelineUpdateEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimelineUpdateEventType.Descriptor instead.
func (TimelineUpdateEventType) EnumDescriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{0}
}

// ホームタイムライン取得リクエスト
type GetHomeTimelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ページネーション
	Pagination *v1.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// フィルター
	Filter        *TimelineFilter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHomeTimelineRequest) Reset() {
	*x = GetHomeTimelineRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHomeTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomeTimelineRequest) ProtoMessage() {}

func (x *GetHomeTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomeTimelineRequest.ProtoReflect.Descriptor instead.
func (*GetHomeTimelineRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetHomeTimelineRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetHomeTimelineRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetHomeTimelineRequest) GetFilter() *TimelineFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// ホームタイムライン取得レスポンス
type GetHomeTimelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// タイムラインエントリー
	Entries []*TimelineEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// ページネーション
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHomeTimelineResponse) Reset() {
	*x = GetHomeTimelineResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHomeTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomeTimelineResponse) ProtoMessage() {}

func (x *GetHomeTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomeTimelineResponse.ProtoReflect.Descriptor instead.
func (*GetHomeTimelineResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetHomeTimelineResponse) GetEntries() []*TimelineEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *GetHomeTimelineResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ユーザータイムライン取得リクエスト
type GetUserTimelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 対象ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 閲覧者のユーザーID（権限チェック用）
	ViewerUserId string `protobuf:"bytes,2,opt,name=viewer_user_id,json=viewerUserId,proto3" json:"viewer_user_id,omitempty"`
	// ページネーション
	Pagination *v1.PaginationRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// フィルター
	Filter *TimelineFilter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	// リプライを含める
	IncludeReplies bool `protobuf:"varint,5,opt,name=include_replies,json=includeReplies,proto3" json:"include_replies,omitempty"`
	// リドロップを含める
	IncludeRedrops bool `protobuf:"varint,6,opt,name=include_redrops,json=includeRedrops,proto3" json:"include_redrops,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetUserTimelineRequest) Reset() {
	*x = GetUserTimelineRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTimelineRequest) ProtoMessage() {}

func (x *GetUserTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTimelineRequest.ProtoReflect.Descriptor instead.
func (*GetUserTimelineRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserTimelineRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserTimelineRequest) GetViewerUserId() string {
	if x != nil {
		return x.ViewerUserId
	}
	return ""
}

func (x *GetUserTimelineRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetUserTimelineRequest) GetFilter() *TimelineFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetUserTimelineRequest) GetIncludeReplies() bool {
	if x != nil {
		return x.IncludeReplies
	}
	return false
}

func (x *GetUserTimelineRequest) GetIncludeRedrops() bool {
	if x != nil {
		return x.IncludeRedrops
	}
	return false
}

// ユーザータイムライン取得レスポンス
type GetUserTimelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// タイムラインエントリー
	Entries []*TimelineEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// ページネーション
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserTimelineResponse) Reset() {
	*x = GetUserTimelineResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTimelineResponse) ProtoMessage() {}

func (x *GetUserTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTimelineResponse.ProtoReflect.Descriptor instead.
func (*GetUserTimelineResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserTimelineResponse) GetEntries() []*TimelineEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *GetUserTimelineResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// パブリックタイムライン取得リクエスト
type GetPublicTimelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 閲覧者のユーザーID（オプション）
	ViewerUserId string `protobuf:"bytes,1,opt,name=viewer_user_id,json=viewerUserId,proto3" json:"viewer_user_id,omitempty"`
	// ページネーション
	Pagination *v1.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// フィルター
	Filter        *TimelineFilter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPublicTimelineRequest) Reset() {
	*x = GetPublicTimelineRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublicTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicTimelineRequest) ProtoMessage() {}

func (x *GetPublicTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicTimelineRequest.ProtoReflect.Descriptor instead.
func (*GetPublicTimelineRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetPublicTimelineRequest) GetViewerUserId() string {
	if x != nil {
		return x.ViewerUserId
	}
	return ""
}

func (x *GetPublicTimelineRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetPublicTimelineRequest) GetFilter() *TimelineFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// パブリックタイムライン取得レスポンス
type GetPublicTimelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// タイムラインエントリー
	Entries []*TimelineEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// ページネーション
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPublicTimelineResponse) Reset() {
	*x = GetPublicTimelineResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublicTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicTimelineResponse) ProtoMessage() {}

func (x *GetPublicTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicTimelineResponse.ProtoReflect.Descriptor instead.
func (*GetPublicTimelineResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetPublicTimelineResponse) GetEntries() []*TimelineEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *GetPublicTimelineResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// リストタイムライン取得リクエスト
type GetListTimelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// リストID
	ListId string `protobuf:"bytes,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	// 閲覧者のユーザーID
	ViewerUserId string `protobuf:"bytes,2,opt,name=viewer_user_id,json=viewerUserId,proto3" json:"viewer_user_id,omitempty"`
	// ページネーション
	Pagination *v1.PaginationRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// フィルター
	Filter        *TimelineFilter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListTimelineRequest) Reset() {
	*x = GetListTimelineRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTimelineRequest) ProtoMessage() {}

func (x *GetListTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTimelineRequest.ProtoReflect.Descriptor instead.
func (*GetListTimelineRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetListTimelineRequest) GetListId() string {
	if x != nil {
		return x.ListId
	}
	return ""
}

func (x *GetListTimelineRequest) GetViewerUserId() string {
	if x != nil {
		return x.ViewerUserId
	}
	return ""
}

func (x *GetListTimelineRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetListTimelineRequest) GetFilter() *TimelineFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// リストタイムライン取得レスポンス
type GetListTimelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// タイムラインエントリー
	Entries []*TimelineEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// ページネーション
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListTimelineResponse) Reset() {
	*x = GetListTimelineResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTimelineResponse) ProtoMessage() {}

func (x *GetListTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTimelineResponse.ProtoReflect.Descriptor instead.
func (*GetListTimelineResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetListTimelineResponse) GetEntries() []*TimelineEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *GetListTimelineResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ハッシュタグタイムライン取得リクエスト
type GetHashtagTimelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ハッシュタグ（#を含む）
	Hashtag string `protobuf:"bytes,1,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	// 閲覧者のユーザーID（オプション）
	ViewerUserId string `protobuf:"bytes,2,opt,name=viewer_user_id,json=viewerUserId,proto3" json:"viewer_user_id,omitempty"`
	// ページネーション
	Pagination *v1.PaginationRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// フィルター
	Filter        *TimelineFilter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHashtagTimelineRequest) Reset() {
	*x = GetHashtagTimelineRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHashtagTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHashtagTimelineRequest) ProtoMessage() {}

func (x *GetHashtagTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHashtagTimelineRequest.ProtoReflect.Descriptor instead.
func (*GetHashtagTimelineRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetHashtagTimelineRequest) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *GetHashtagTimelineRequest) GetViewerUserId() string {
	if x != nil {
		return x.ViewerUserId
	}
	return ""
}

func (x *GetHashtagTimelineRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetHashtagTimelineRequest) GetFilter() *TimelineFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// ハッシュタグタイムライン取得レスポンス
type GetHashtagTimelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// タイムラインエントリー
	Entries []*TimelineEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// ページネーション
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHashtagTimelineResponse) Reset() {
	*x = GetHashtagTimelineResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHashtagTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHashtagTimelineResponse) ProtoMessage() {}

func (x *GetHashtagTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHashtagTimelineResponse.ProtoReflect.Descriptor instead.
func (*GetHashtagTimelineResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetHashtagTimelineResponse) GetEntries() []*TimelineEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *GetHashtagTimelineResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// タイムライン追加リクエスト
type AddToTimelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DropのID
	DropId string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	// 投稿者のユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 対象タイムラインタイプ
	TimelineType TimelineType `protobuf:"varint,3,opt,name=timeline_type,json=timelineType,proto3,enum=avion.timeline.v1.TimelineType" json:"timeline_type,omitempty"`
	// タイムライン所有者のユーザーID（ホームタイムラインの場合）
	OwnerUserId string `protobuf:"bytes,4,opt,name=owner_user_id,json=ownerUserId,proto3" json:"owner_user_id,omitempty"`
	// エントリータイプ
	EntryType TimelineEntryType `protobuf:"varint,5,opt,name=entry_type,json=entryType,proto3,enum=avion.timeline.v1.TimelineEntryType" json:"entry_type,omitempty"`
	// リドロップしたユーザーID（リドロップの場合）
	RedroppedByUserId string `protobuf:"bytes,6,opt,name=redropped_by_user_id,json=redroppedByUserId,proto3" json:"redropped_by_user_id,omitempty"`
	// スコア（オプション、指定しない場合は現在時刻から計算）
	Score float64 `protobuf:"fixed64,7,opt,name=score,proto3" json:"score,omitempty"`
	// ファンアウト戦略
	FanoutStrategy FanoutStrategy `protobuf:"varint,8,opt,name=fanout_strategy,json=fanoutStrategy,proto3,enum=avion.timeline.v1.FanoutStrategy" json:"fanout_strategy,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddToTimelineRequest) Reset() {
	*x = AddToTimelineRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddToTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToTimelineRequest) ProtoMessage() {}

func (x *AddToTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToTimelineRequest.ProtoReflect.Descriptor instead.
func (*AddToTimelineRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{10}
}

func (x *AddToTimelineRequest) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

func (x *AddToTimelineRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddToTimelineRequest) GetTimelineType() TimelineType {
	if x != nil {
		return x.TimelineType
	}
	return TimelineType_TIMELINE_TYPE_UNSPECIFIED
}

func (x *AddToTimelineRequest) GetOwnerUserId() string {
	if x != nil {
		return x.OwnerUserId
	}
	return ""
}

func (x *AddToTimelineRequest) GetEntryType() TimelineEntryType {
	if x != nil {
		return x.EntryType
	}
	return TimelineEntryType_TIMELINE_ENTRY_TYPE_UNSPECIFIED
}

func (x *AddToTimelineRequest) GetRedroppedByUserId() string {
	if x != nil {
		return x.RedroppedByUserId
	}
	return ""
}

func (x *AddToTimelineRequest) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *AddToTimelineRequest) GetFanoutStrategy() FanoutStrategy {
	if x != nil {
		return x.FanoutStrategy
	}
	return FanoutStrategy_FANOUT_STRATEGY_UNSPECIFIED
}

// タイムライン追加レスポンス
type AddToTimelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 作成されたタイムラインエントリー
	Entry         *TimelineEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddToTimelineResponse) Reset() {
	*x = AddToTimelineResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddToTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToTimelineResponse) ProtoMessage() {}

func (x *AddToTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToTimelineResponse.ProtoReflect.Descriptor instead.
func (*AddToTimelineResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{11}
}

func (x *AddToTimelineResponse) GetEntry() *TimelineEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// タイムライン削除リクエスト
type RemoveFromTimelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DropのID
	DropId string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	// タイムラインタイプ
	TimelineType TimelineType `protobuf:"varint,2,opt,name=timeline_type,json=timelineType,proto3,enum=avion.timeline.v1.TimelineType" json:"timeline_type,omitempty"`
	// タイムライン所有者のユーザーID（ホームタイムラインの場合）
	OwnerUserId   string `protobuf:"bytes,3,opt,name=owner_user_id,json=ownerUserId,proto3" json:"owner_user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFromTimelineRequest) Reset() {
	*x = RemoveFromTimelineRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFromTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromTimelineRequest) ProtoMessage() {}

func (x *RemoveFromTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromTimelineRequest.ProtoReflect.Descriptor instead.
func (*RemoveFromTimelineRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveFromTimelineRequest) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

func (x *RemoveFromTimelineRequest) GetTimelineType() TimelineType {
	if x != nil {
		return x.TimelineType
	}
	return TimelineType_TIMELINE_TYPE_UNSPECIFIED
}

func (x *RemoveFromTimelineRequest) GetOwnerUserId() string {
	if x != nil {
		return x.OwnerUserId
	}
	return ""
}

// タイムライン削除レスポンス
type RemoveFromTimelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 処理の成功/失敗
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 処理結果の詳細メッセージ（オプション）
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFromTimelineResponse) Reset() {
	*x = RemoveFromTimelineResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFromTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromTimelineResponse) ProtoMessage() {}

func (x *RemoveFromTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromTimelineResponse.ProtoReflect.Descriptor instead.
func (*RemoveFromTimelineResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{13}
}

func (x *RemoveFromTimelineResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveFromTimelineResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 既読マークリクエスト
type MarkAsReadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// タイムラインタイプ
	TimelineType TimelineType `protobuf:"varint,2,opt,name=timeline_type,json=timelineType,proto3,enum=avion.timeline.v1.TimelineType" json:"timeline_type,omitempty"`
	// 既読にするDropのID（複数可）
	DropIds []string `protobuf:"bytes,3,rep,name=drop_ids,json=dropIds,proto3" json:"drop_ids,omitempty"`
	// 指定日時以前のすべてを既読にする（drop_idsが空の場合）
	MarkUntil     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=mark_until,json=markUntil,proto3" json:"mark_until,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsReadRequest) Reset() {
	*x = MarkAsReadRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadRequest) ProtoMessage() {}

func (x *MarkAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAsReadRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{14}
}

func (x *MarkAsReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MarkAsReadRequest) GetTimelineType() TimelineType {
	if x != nil {
		return x.TimelineType
	}
	return TimelineType_TIMELINE_TYPE_UNSPECIFIED
}

func (x *MarkAsReadRequest) GetDropIds() []string {
	if x != nil {
		return x.DropIds
	}
	return nil
}

func (x *MarkAsReadRequest) GetMarkUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.MarkUntil
	}
	return nil
}

// 既読マークレスポンス
type MarkAsReadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 処理の成功/失敗
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 処理結果の詳細メッセージ（オプション）
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsReadResponse) Reset() {
	*x = MarkAsReadResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadResponse) ProtoMessage() {}

func (x *MarkAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkAsReadResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{15}
}

func (x *MarkAsReadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MarkAsReadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// タイムライン統計情報取得リクエスト
type GetTimelineStatisticsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID（ホーム/ユーザータイムラインの場合）
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// タイムラインタイプ
	TimelineType TimelineType `protobuf:"varint,2,opt,name=timeline_type,json=timelineType,proto3,enum=avion.timeline.v1.TimelineType" json:"timeline_type,omitempty"`
	// リストID（リストタイムラインの場合）
	ListId string `protobuf:"bytes,3,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	// ハッシュタグ（ハッシュタグタイムラインの場合）
	Hashtag       string `protobuf:"bytes,4,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTimelineStatisticsRequest) Reset() {
	*x = GetTimelineStatisticsRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineStatisticsRequest) ProtoMessage() {}

func (x *GetTimelineStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineStatisticsRequest.ProtoReflect.Descriptor instead.
func (*GetTimelineStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetTimelineStatisticsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetTimelineStatisticsRequest) GetTimelineType() TimelineType {
	if x != nil {
		return x.TimelineType
	}
	return TimelineType_TIMELINE_TYPE_UNSPECIFIED
}

func (x *GetTimelineStatisticsRequest) GetListId() string {
	if x != nil {
		return x.ListId
	}
	return ""
}

func (x *GetTimelineStatisticsRequest) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

// タイムライン統計情報取得レスポンス
type GetTimelineStatisticsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 統計情報
	Statistics    *TimelineStatistics `protobuf:"bytes,1,opt,name=statistics,proto3" json:"statistics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTimelineStatisticsResponse) Reset() {
	*x = GetTimelineStatisticsResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineStatisticsResponse) ProtoMessage() {}

func (x *GetTimelineStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineStatisticsResponse.ProtoReflect.Descriptor instead.
func (*GetTimelineStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetTimelineStatisticsResponse) GetStatistics() *TimelineStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

// タイムライン設定取得リクエスト
type GetTimelineSettingsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// タイムラインタイプ
	TimelineType  TimelineType `protobuf:"varint,2,opt,name=timeline_type,json=timelineType,proto3,enum=avion.timeline.v1.TimelineType" json:"timeline_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTimelineSettingsRequest) Reset() {
	*x = GetTimelineSettingsRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineSettingsRequest) ProtoMessage() {}

func (x *GetTimelineSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetTimelineSettingsRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetTimelineSettingsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetTimelineSettingsRequest) GetTimelineType() TimelineType {
	if x != nil {
		return x.TimelineType
	}
	return TimelineType_TIMELINE_TYPE_UNSPECIFIED
}

// タイムライン設定取得レスポンス
type GetTimelineSettingsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// タイムライン設定
	Settings      *TimelineSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTimelineSettingsResponse) Reset() {
	*x = GetTimelineSettingsResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineSettingsResponse) ProtoMessage() {}

func (x *GetTimelineSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetTimelineSettingsResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetTimelineSettingsResponse) GetSettings() *TimelineSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// タイムライン設定更新リクエスト
type UpdateTimelineSettingsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新する設定
	Settings      *TimelineSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTimelineSettingsRequest) Reset() {
	*x = UpdateTimelineSettingsRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTimelineSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTimelineSettingsRequest) ProtoMessage() {}

func (x *UpdateTimelineSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTimelineSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateTimelineSettingsRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateTimelineSettingsRequest) GetSettings() *TimelineSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// タイムライン設定更新レスポンス
type UpdateTimelineSettingsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 更新後の設定
	Settings      *TimelineSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTimelineSettingsResponse) Reset() {
	*x = UpdateTimelineSettingsResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTimelineSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTimelineSettingsResponse) ProtoMessage() {}

func (x *UpdateTimelineSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTimelineSettingsResponse.ProtoReflect.Descriptor instead.
func (*UpdateTimelineSettingsResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateTimelineSettingsResponse) GetSettings() *TimelineSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// バッチタイムライン追加リクエスト
type BatchAddToTimelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 追加するエントリー
	Entries       []*AddToTimelineRequest `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchAddToTimelineRequest) Reset() {
	*x = BatchAddToTimelineRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAddToTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddToTimelineRequest) ProtoMessage() {}

func (x *BatchAddToTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddToTimelineRequest.ProtoReflect.Descriptor instead.
func (*BatchAddToTimelineRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{22}
}

func (x *BatchAddToTimelineRequest) GetEntries() []*AddToTimelineRequest {
	if x != nil {
		return x.Entries
	}
	return nil
}

// バッチタイムライン追加レスポンス
type BatchAddToTimelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 作成されたエントリー
	Entries []*TimelineEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// 失敗したエントリーのインデックス
	FailedIndices []int32 `protobuf:"varint,2,rep,packed,name=failed_indices,json=failedIndices,proto3" json:"failed_indices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchAddToTimelineResponse) Reset() {
	*x = BatchAddToTimelineResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAddToTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddToTimelineResponse) ProtoMessage() {}

func (x *BatchAddToTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddToTimelineResponse.ProtoReflect.Descriptor instead.
func (*BatchAddToTimelineResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{23}
}

func (x *BatchAddToTimelineResponse) GetEntries() []*TimelineEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *BatchAddToTimelineResponse) GetFailedIndices() []int32 {
	if x != nil {
		return x.FailedIndices
	}
	return nil
}

// タイムラインクリアリクエスト
type ClearTimelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// タイムラインタイプ
	TimelineType TimelineType `protobuf:"varint,2,opt,name=timeline_type,json=timelineType,proto3,enum=avion.timeline.v1.TimelineType" json:"timeline_type,omitempty"`
	// 指定日時以前のエントリーのみ削除（オプション）
	Before        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=before,proto3" json:"before,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearTimelineRequest) Reset() {
	*x = ClearTimelineRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearTimelineRequest) ProtoMessage() {}

func (x *ClearTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearTimelineRequest.ProtoReflect.Descriptor instead.
func (*ClearTimelineRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{24}
}

func (x *ClearTimelineRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ClearTimelineRequest) GetTimelineType() TimelineType {
	if x != nil {
		return x.TimelineType
	}
	return TimelineType_TIMELINE_TYPE_UNSPECIFIED
}

func (x *ClearTimelineRequest) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

// タイムラインクリアレスポンス
type ClearTimelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 処理の成功/失敗
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 処理結果の詳細メッセージ（オプション）
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearTimelineResponse) Reset() {
	*x = ClearTimelineResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearTimelineResponse) ProtoMessage() {}

func (x *ClearTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearTimelineResponse.ProtoReflect.Descriptor instead.
func (*ClearTimelineResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{25}
}

func (x *ClearTimelineResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ClearTimelineResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// タイムライン再構築リクエスト
type RebuildTimelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// タイムラインタイプ
	TimelineType TimelineType `protobuf:"varint,2,opt,name=timeline_type,json=timelineType,proto3,enum=avion.timeline.v1.TimelineType" json:"timeline_type,omitempty"`
	// ファンアウト戦略
	FanoutStrategy FanoutStrategy `protobuf:"varint,3,opt,name=fanout_strategy,json=fanoutStrategy,proto3,enum=avion.timeline.v1.FanoutStrategy" json:"fanout_strategy,omitempty"`
	// 再構築する期間の開始日時
	Since *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=since,proto3" json:"since,omitempty"`
	// 再構築する期間の終了日時
	Until         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=until,proto3" json:"until,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebuildTimelineRequest) Reset() {
	*x = RebuildTimelineRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebuildTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildTimelineRequest) ProtoMessage() {}

func (x *RebuildTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildTimelineRequest.ProtoReflect.Descriptor instead.
func (*RebuildTimelineRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{26}
}

func (x *RebuildTimelineRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RebuildTimelineRequest) GetTimelineType() TimelineType {
	if x != nil {
		return x.TimelineType
	}
	return TimelineType_TIMELINE_TYPE_UNSPECIFIED
}

func (x *RebuildTimelineRequest) GetFanoutStrategy() FanoutStrategy {
	if x != nil {
		return x.FanoutStrategy
	}
	return FanoutStrategy_FANOUT_STRATEGY_UNSPECIFIED
}

func (x *RebuildTimelineRequest) GetSince() *timestamppb.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

func (x *RebuildTimelineRequest) GetUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.Until
	}
	return nil
}

// タイムライン再構築レスポンス
type RebuildTimelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 再構築されたエントリー数
	RebuiltEntries int32 `protobuf:"varint,1,opt,name=rebuilt_entries,json=rebuiltEntries,proto3" json:"rebuilt_entries,omitempty"`
	// 処理時間（ミリ秒）
	ProcessingTimeMs int64 `protobuf:"varint,2,opt,name=processing_time_ms,json=processingTimeMs,proto3" json:"processing_time_ms,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RebuildTimelineResponse) Reset() {
	*x = RebuildTimelineResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebuildTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildTimelineResponse) ProtoMessage() {}

func (x *RebuildTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildTimelineResponse.ProtoReflect.Descriptor instead.
func (*RebuildTimelineResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{27}
}

func (x *RebuildTimelineResponse) GetRebuiltEntries() int32 {
	if x != nil {
		return x.RebuiltEntries
	}
	return 0
}

func (x *RebuildTimelineResponse) GetProcessingTimeMs() int64 {
	if x != nil {
		return x.ProcessingTimeMs
	}
	return 0
}

// タイムライン更新ストリーミングリクエスト
type StreamTimelineUpdatesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// タイムラインタイプ
	TimelineType TimelineType `protobuf:"varint,2,opt,name=timeline_type,json=timelineType,proto3,enum=avion.timeline.v1.TimelineType" json:"timeline_type,omitempty"`
	// リストID（リストタイムラインの場合）
	ListId string `protobuf:"bytes,3,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	// ハッシュタグ（ハッシュタグタイムラインの場合）
	Hashtag string `protobuf:"bytes,4,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	// フィルター（オプション）
	Filter *TimelineFilter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	// 最初の取得件数（ストリーミング開始時に既存エントリーを送信）
	InitialFetchCount int32 `protobuf:"varint,6,opt,name=initial_fetch_count,json=initialFetchCount,proto3" json:"initial_fetch_count,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StreamTimelineUpdatesRequest) Reset() {
	*x = StreamTimelineUpdatesRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTimelineUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTimelineUpdatesRequest) ProtoMessage() {}

func (x *StreamTimelineUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTimelineUpdatesRequest.ProtoReflect.Descriptor instead.
func (*StreamTimelineUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{28}
}

func (x *StreamTimelineUpdatesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *StreamTimelineUpdatesRequest) GetTimelineType() TimelineType {
	if x != nil {
		return x.TimelineType
	}
	return TimelineType_TIMELINE_TYPE_UNSPECIFIED
}

func (x *StreamTimelineUpdatesRequest) GetListId() string {
	if x != nil {
		return x.ListId
	}
	return ""
}

func (x *StreamTimelineUpdatesRequest) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *StreamTimelineUpdatesRequest) GetFilter() *TimelineFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *StreamTimelineUpdatesRequest) GetInitialFetchCount() int32 {
	if x != nil {
		return x.InitialFetchCount
	}
	return 0
}

// タイムライン更新ストリーミングレスポンス
type StreamTimelineUpdatesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// イベントタイプ
	EventType TimelineUpdateEventType `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=avion.timeline.v1.TimelineUpdateEventType" json:"event_type,omitempty"`
	// タイムラインエントリー（追加/更新の場合）
	Entry *TimelineEntry `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
	// 削除されたDropのID（削除の場合）
	RemovedDropId string `protobuf:"bytes,3,opt,name=removed_drop_id,json=removedDropId,proto3" json:"removed_drop_id,omitempty"`
	// イベント発生時刻
	EventTimestamp *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=event_timestamp,json=eventTimestamp,proto3" json:"event_timestamp,omitempty"`
	// シーケンス番号（順序保証用）
	SequenceNumber int64 `protobuf:"varint,5,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StreamTimelineUpdatesResponse) Reset() {
	*x = StreamTimelineUpdatesResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTimelineUpdatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTimelineUpdatesResponse) ProtoMessage() {}

func (x *StreamTimelineUpdatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTimelineUpdatesResponse.ProtoReflect.Descriptor instead.
func (*StreamTimelineUpdatesResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{29}
}

func (x *StreamTimelineUpdatesResponse) GetEventType() TimelineUpdateEventType {
	if x != nil {
		return x.EventType
	}
	return TimelineUpdateEventType_TIMELINE_UPDATE_EVENT_TYPE_UNSPECIFIED
}

func (x *StreamTimelineUpdatesResponse) GetEntry() *TimelineEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *StreamTimelineUpdatesResponse) GetRemovedDropId() string {
	if x != nil {
		return x.RemovedDropId
	}
	return ""
}

func (x *StreamTimelineUpdatesResponse) GetEventTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTimestamp
	}
	return nil
}

func (x *StreamTimelineUpdatesResponse) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

// 複数タイムラインストリーミングリクエスト
type StreamMultipleTimelinesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 購読するタイムライン
	Subscriptions []*TimelineSubscription `protobuf:"bytes,2,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	// グローバルフィルター（すべてのタイムラインに適用）
	GlobalFilter  *TimelineFilter `protobuf:"bytes,3,opt,name=global_filter,json=globalFilter,proto3" json:"global_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamMultipleTimelinesRequest) Reset() {
	*x = StreamMultipleTimelinesRequest{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMultipleTimelinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMultipleTimelinesRequest) ProtoMessage() {}

func (x *StreamMultipleTimelinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMultipleTimelinesRequest.ProtoReflect.Descriptor instead.
func (*StreamMultipleTimelinesRequest) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{30}
}

func (x *StreamMultipleTimelinesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *StreamMultipleTimelinesRequest) GetSubscriptions() []*TimelineSubscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

func (x *StreamMultipleTimelinesRequest) GetGlobalFilter() *TimelineFilter {
	if x != nil {
		return x.GlobalFilter
	}
	return nil
}

// タイムライン購読設定
type TimelineSubscription struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// タイムラインタイプ
	TimelineType TimelineType `protobuf:"varint,1,opt,name=timeline_type,json=timelineType,proto3,enum=avion.timeline.v1.TimelineType" json:"timeline_type,omitempty"`
	// リストID（リストタイムラインの場合）
	ListId string `protobuf:"bytes,2,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	// ハッシュタグ（ハッシュタグタイムラインの場合）
	Hashtag string `protobuf:"bytes,3,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	// タイムライン固有のフィルター（オプション）
	Filter *TimelineFilter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	// 購読ID（レスポンスでの識別用）
	SubscriptionId string `protobuf:"bytes,5,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TimelineSubscription) Reset() {
	*x = TimelineSubscription{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimelineSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineSubscription) ProtoMessage() {}

func (x *TimelineSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineSubscription.ProtoReflect.Descriptor instead.
func (*TimelineSubscription) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{31}
}

func (x *TimelineSubscription) GetTimelineType() TimelineType {
	if x != nil {
		return x.TimelineType
	}
	return TimelineType_TIMELINE_TYPE_UNSPECIFIED
}

func (x *TimelineSubscription) GetListId() string {
	if x != nil {
		return x.ListId
	}
	return ""
}

func (x *TimelineSubscription) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *TimelineSubscription) GetFilter() *TimelineFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *TimelineSubscription) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

// 複数タイムラインストリーミングレスポンス
type StreamMultipleTimelinesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 購読ID（どのタイムラインのイベントか識別）
	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	// タイムラインタイプ
	TimelineType TimelineType `protobuf:"varint,2,opt,name=timeline_type,json=timelineType,proto3,enum=avion.timeline.v1.TimelineType" json:"timeline_type,omitempty"`
	// イベントタイプ
	EventType TimelineUpdateEventType `protobuf:"varint,3,opt,name=event_type,json=eventType,proto3,enum=avion.timeline.v1.TimelineUpdateEventType" json:"event_type,omitempty"`
	// タイムラインエントリー（追加/更新の場合）
	Entry *TimelineEntry `protobuf:"bytes,4,opt,name=entry,proto3" json:"entry,omitempty"`
	// 削除されたDropのID（削除の場合）
	RemovedDropId string `protobuf:"bytes,5,opt,name=removed_drop_id,json=removedDropId,proto3" json:"removed_drop_id,omitempty"`
	// イベント発生時刻
	EventTimestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=event_timestamp,json=eventTimestamp,proto3" json:"event_timestamp,omitempty"`
	// シーケンス番号（順序保証用）
	SequenceNumber int64 `protobuf:"varint,7,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StreamMultipleTimelinesResponse) Reset() {
	*x = StreamMultipleTimelinesResponse{}
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMultipleTimelinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMultipleTimelinesResponse) ProtoMessage() {}

func (x *StreamMultipleTimelinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMultipleTimelinesResponse.ProtoReflect.Descriptor instead.
func (*StreamMultipleTimelinesResponse) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_service_proto_rawDescGZIP(), []int{32}
}

func (x *StreamMultipleTimelinesResponse) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *StreamMultipleTimelinesResponse) GetTimelineType() TimelineType {
	if x != nil {
		return x.TimelineType
	}
	return TimelineType_TIMELINE_TYPE_UNSPECIFIED
}

func (x *StreamMultipleTimelinesResponse) GetEventType() TimelineUpdateEventType {
	if x != nil {
		return x.EventType
	}
	return TimelineUpdateEventType_TIMELINE_UPDATE_EVENT_TYPE_UNSPECIFIED
}

func (x *StreamMultipleTimelinesResponse) GetEntry() *TimelineEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *StreamMultipleTimelinesResponse) GetRemovedDropId() string {
	if x != nil {
		return x.RemovedDropId
	}
	return ""
}

func (x *StreamMultipleTimelinesResponse) GetEventTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTimestamp
	}
	return nil
}

func (x *StreamMultipleTimelinesResponse) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

var File_avion_timeline_v1_timeline_service_proto protoreflect.FileDescriptor

const file_avion_timeline_v1_timeline_service_proto_rawDesc = "" +
	"\n" +
	"(avion/timeline/v1/timeline_service.proto\x12\x11avion.timeline.v1\x1a avion/common/v1/pagination.proto\x1a avion/timeline/v1/timeline.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb0\x01\n" +
	"\x16GetHomeTimelineRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12B\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\x129\n" +
	"\x06filter\x18\x03 \x01(\v2!.avion.timeline.v1.TimelineFilterR\x06filter\"\x9a\x01\n" +
	"\x17GetHomeTimelineResponse\x12:\n" +
	"\aentries\x18\x01 \x03(\v2 .avion.timeline.v1.TimelineEntryR\aentries\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\"\xa8\x02\n" +
	"\x16GetUserTimelineRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12$\n" +
	"\x0eviewer_user_id\x18\x02 \x01(\tR\fviewerUserId\x12B\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\x129\n" +
	"\x06filter\x18\x04 \x01(\v2!.avion.timeline.v1.TimelineFilterR\x06filter\x12'\n" +
	"\x0finclude_replies\x18\x05 \x01(\bR\x0eincludeReplies\x12'\n" +
	"\x0finclude_redrops\x18\x06 \x01(\bR\x0eincludeRedrops\"\x9a\x01\n" +
	"\x17GetUserTimelineResponse\x12:\n" +
	"\aentries\x18\x01 \x03(\v2 .avion.timeline.v1.TimelineEntryR\aentries\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\"\xbf\x01\n" +
	"\x18GetPublicTimelineRequest\x12$\n" +
	"\x0eviewer_user_id\x18\x01 \x01(\tR\fviewerUserId\x12B\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\x129\n" +
	"\x06filter\x18\x03 \x01(\v2!.avion.timeline.v1.TimelineFilterR\x06filter\"\x9c\x01\n" +
	"\x19GetPublicTimelineResponse\x12:\n" +
	"\aentries\x18\x01 \x03(\v2 .avion.timeline.v1.TimelineEntryR\aentries\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\"\xd6\x01\n" +
	"\x16GetListTimelineRequest\x12\x17\n" +
	"\alist_id\x18\x01 \x01(\tR\x06listId\x12$\n" +
	"\x0eviewer_user_id\x18\x02 \x01(\tR\fviewerUserId\x12B\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\x129\n" +
	"\x06filter\x18\x04 \x01(\v2!.avion.timeline.v1.TimelineFilterR\x06filter\"\x9a\x01\n" +
	"\x17GetListTimelineResponse\x12:\n" +
	"\aentries\x18\x01 \x03(\v2 .avion.timeline.v1.TimelineEntryR\aentries\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\"\xda\x01\n" +
	"\x19GetHashtagTimelineRequest\x12\x18\n" +
	"\ahashtag\x18\x01 \x01(\tR\ahashtag\x12$\n" +
	"\x0eviewer_user_id\x18\x02 \x01(\tR\fviewerUserId\x12B\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\".avion.common.v1.PaginationRequestR\n" +
	"pagination\x129\n" +
	"\x06filter\x18\x04 \x01(\v2!.avion.timeline.v1.TimelineFilterR\x06filter\"\x9d\x01\n" +
	"\x1aGetHashtagTimelineResponse\x12:\n" +
	"\aentries\x18\x01 \x03(\v2 .avion.timeline.v1.TimelineEntryR\aentries\x12C\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2#.avion.common.v1.PaginationResponseR\n" +
	"pagination\"\x8a\x03\n" +
	"\x14AddToTimelineRequest\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12D\n" +
	"\rtimeline_type\x18\x03 \x01(\x0e2\x1f.avion.timeline.v1.TimelineTypeR\ftimelineType\x12\"\n" +
	"\rowner_user_id\x18\x04 \x01(\tR\vownerUserId\x12C\n" +
	"\n" +
	"entry_type\x18\x05 \x01(\x0e2$.avion.timeline.v1.TimelineEntryTypeR\tentryType\x12/\n" +
	"\x14redropped_by_user_id\x18\x06 \x01(\tR\x11redroppedByUserId\x12\x14\n" +
	"\x05score\x18\a \x01(\x01R\x05score\x12J\n" +
	"\x0ffanout_strategy\x18\b \x01(\x0e2!.avion.timeline.v1.FanoutStrategyR\x0efanoutStrategy\"O\n" +
	"\x15AddToTimelineResponse\x126\n" +
	"\x05entry\x18\x01 \x01(\v2 .avion.timeline.v1.TimelineEntryR\x05entry\"\x9e\x01\n" +
	"\x19RemoveFromTimelineRequest\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\x12D\n" +
	"\rtimeline_type\x18\x02 \x01(\x0e2\x1f.avion.timeline.v1.TimelineTypeR\ftimelineType\x12\"\n" +
	"\rowner_user_id\x18\x03 \x01(\tR\vownerUserId\"P\n" +
	"\x1aRemoveFromTimelineResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xc8\x01\n" +
	"\x11MarkAsReadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12D\n" +
	"\rtimeline_type\x18\x02 \x01(\x0e2\x1f.avion.timeline.v1.TimelineTypeR\ftimelineType\x12\x19\n" +
	"\bdrop_ids\x18\x03 \x03(\tR\adropIds\x129\n" +
	"\n" +
	"mark_until\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tmarkUntil\"H\n" +
	"\x12MarkAsReadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xb0\x01\n" +
	"\x1cGetTimelineStatisticsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12D\n" +
	"\rtimeline_type\x18\x02 \x01(\x0e2\x1f.avion.timeline.v1.TimelineTypeR\ftimelineType\x12\x17\n" +
	"\alist_id\x18\x03 \x01(\tR\x06listId\x12\x18\n" +
	"\ahashtag\x18\x04 \x01(\tR\ahashtag\"f\n" +
	"\x1dGetTimelineStatisticsResponse\x12E\n" +
	"\n" +
	"statistics\x18\x01 \x01(\v2%.avion.timeline.v1.TimelineStatisticsR\n" +
	"statistics\"{\n" +
	"\x1aGetTimelineSettingsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12D\n" +
	"\rtimeline_type\x18\x02 \x01(\x0e2\x1f.avion.timeline.v1.TimelineTypeR\ftimelineType\"^\n" +
	"\x1bGetTimelineSettingsResponse\x12?\n" +
	"\bsettings\x18\x01 \x01(\v2#.avion.timeline.v1.TimelineSettingsR\bsettings\"`\n" +
	"\x1dUpdateTimelineSettingsRequest\x12?\n" +
	"\bsettings\x18\x01 \x01(\v2#.avion.timeline.v1.TimelineSettingsR\bsettings\"a\n" +
	"\x1eUpdateTimelineSettingsResponse\x12?\n" +
	"\bsettings\x18\x01 \x01(\v2#.avion.timeline.v1.TimelineSettingsR\bsettings\"^\n" +
	"\x19BatchAddToTimelineRequest\x12A\n" +
	"\aentries\x18\x01 \x03(\v2'.avion.timeline.v1.AddToTimelineRequestR\aentries\"\x7f\n" +
	"\x1aBatchAddToTimelineResponse\x12:\n" +
	"\aentries\x18\x01 \x03(\v2 .avion.timeline.v1.TimelineEntryR\aentries\x12%\n" +
	"\x0efailed_indices\x18\x02 \x03(\x05R\rfailedIndices\"\xa9\x01\n" +
	"\x14ClearTimelineRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12D\n" +
	"\rtimeline_type\x18\x02 \x01(\x0e2\x1f.avion.timeline.v1.TimelineTypeR\ftimelineType\x122\n" +
	"\x06before\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x06before\"K\n" +
	"\x15ClearTimelineResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xa7\x02\n" +
	"\x16RebuildTimelineRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12D\n" +
	"\rtimeline_type\x18\x02 \x01(\x0e2\x1f.avion.timeline.v1.TimelineTypeR\ftimelineType\x12J\n" +
	"\x0ffanout_strategy\x18\x03 \x01(\x0e2!.avion.timeline.v1.FanoutStrategyR\x0efanoutStrategy\x120\n" +
	"\x05since\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x05since\x120\n" +
	"\x05until\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x05until\"p\n" +
	"\x17RebuildTimelineResponse\x12'\n" +
	"\x0frebuilt_entries\x18\x01 \x01(\x05R\x0erebuiltEntries\x12,\n" +
	"\x12processing_time_ms\x18\x02 \x01(\x03R\x10processingTimeMs\"\x9b\x02\n" +
	"\x1cStreamTimelineUpdatesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12D\n" +
	"\rtimeline_type\x18\x02 \x01(\x0e2\x1f.avion.timeline.v1.TimelineTypeR\ftimelineType\x12\x17\n" +
	"\alist_id\x18\x03 \x01(\tR\x06listId\x12\x18\n" +
	"\ahashtag\x18\x04 \x01(\tR\ahashtag\x129\n" +
	"\x06filter\x18\x05 \x01(\v2!.avion.timeline.v1.TimelineFilterR\x06filter\x12.\n" +
	"\x13initial_fetch_count\x18\x06 \x01(\x05R\x11initialFetchCount\"\xb8\x02\n" +
	"\x1dStreamTimelineUpdatesResponse\x12I\n" +
	"\n" +
	"event_type\x18\x01 \x01(\x0e2*.avion.timeline.v1.TimelineUpdateEventTypeR\teventType\x126\n" +
	"\x05entry\x18\x02 \x01(\v2 .avion.timeline.v1.TimelineEntryR\x05entry\x12&\n" +
	"\x0fremoved_drop_id\x18\x03 \x01(\tR\rremovedDropId\x12C\n" +
	"\x0fevent_timestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0eeventTimestamp\x12'\n" +
	"\x0fsequence_number\x18\x05 \x01(\x03R\x0esequenceNumber\"\xd0\x01\n" +
	"\x1eStreamMultipleTimelinesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12M\n" +
	"\rsubscriptions\x18\x02 \x03(\v2'.avion.timeline.v1.TimelineSubscriptionR\rsubscriptions\x12F\n" +
	"\rglobal_filter\x18\x03 \x01(\v2!.avion.timeline.v1.TimelineFilterR\fglobalFilter\"\xf3\x01\n" +
	"\x14TimelineSubscription\x12D\n" +
	"\rtimeline_type\x18\x01 \x01(\x0e2\x1f.avion.timeline.v1.TimelineTypeR\ftimelineType\x12\x17\n" +
	"\alist_id\x18\x02 \x01(\tR\x06listId\x12\x18\n" +
	"\ahashtag\x18\x03 \x01(\tR\ahashtag\x129\n" +
	"\x06filter\x18\x04 \x01(\v2!.avion.timeline.v1.TimelineFilterR\x06filter\x12'\n" +
	"\x0fsubscription_id\x18\x05 \x01(\tR\x0esubscriptionId\"\xa9\x03\n" +
	"\x1fStreamMultipleTimelinesResponse\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x12D\n" +
	"\rtimeline_type\x18\x02 \x01(\x0e2\x1f.avion.timeline.v1.TimelineTypeR\ftimelineType\x12I\n" +
	"\n" +
	"event_type\x18\x03 \x01(\x0e2*.avion.timeline.v1.TimelineUpdateEventTypeR\teventType\x126\n" +
	"\x05entry\x18\x04 \x01(\v2 .avion.timeline.v1.TimelineEntryR\x05entry\x12&\n" +
	"\x0fremoved_drop_id\x18\x05 \x01(\tR\rremovedDropId\x12C\n" +
	"\x0fevent_timestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x0eeventTimestamp\x12'\n" +
	"\x0fsequence_number\x18\a \x01(\x03R\x0esequenceNumber*\x80\x02\n" +
	"\x17TimelineUpdateEventType\x12*\n" +
	"&TIMELINE_UPDATE_EVENT_TYPE_UNSPECIFIED\x10\x00\x12*\n" +
	"&TIMELINE_UPDATE_EVENT_TYPE_ENTRY_ADDED\x10\x01\x12,\n" +
	"(TIMELINE_UPDATE_EVENT_TYPE_ENTRY_REMOVED\x10\x02\x12,\n" +
	"(TIMELINE_UPDATE_EVENT_TYPE_ENTRY_UPDATED\x10\x03\x121\n" +
	"-TIMELINE_UPDATE_EVENT_TYPE_TIMELINE_REFRESHED\x10\x042\x99\x0e\n" +
	"\x0fTimelineService\x12h\n" +
	"\x0fGetHomeTimeline\x12).avion.timeline.v1.GetHomeTimelineRequest\x1a*.avion.timeline.v1.GetHomeTimelineResponse\x12h\n" +
	"\x0fGetUserTimeline\x12).avion.timeline.v1.GetUserTimelineRequest\x1a*.avion.timeline.v1.GetUserTimelineResponse\x12n\n" +
	"\x11GetPublicTimeline\x12+.avion.timeline.v1.GetPublicTimelineRequest\x1a,.avion.timeline.v1.GetPublicTimelineResponse\x12h\n" +
	"\x0fGetListTimeline\x12).avion.timeline.v1.GetListTimelineRequest\x1a*.avion.timeline.v1.GetListTimelineResponse\x12q\n" +
	"\x12GetHashtagTimeline\x12,.avion.timeline.v1.GetHashtagTimelineRequest\x1a-.avion.timeline.v1.GetHashtagTimelineResponse\x12b\n" +
	"\rAddToTimeline\x12'.avion.timeline.v1.AddToTimelineRequest\x1a(.avion.timeline.v1.AddToTimelineResponse\x12q\n" +
	"\x12RemoveFromTimeline\x12,.avion.timeline.v1.RemoveFromTimelineRequest\x1a-.avion.timeline.v1.RemoveFromTimelineResponse\x12Y\n" +
	"\n" +
	"MarkAsRead\x12$.avion.timeline.v1.MarkAsReadRequest\x1a%.avion.timeline.v1.MarkAsReadResponse\x12z\n" +
	"\x15GetTimelineStatistics\x12/.avion.timeline.v1.GetTimelineStatisticsRequest\x1a0.avion.timeline.v1.GetTimelineStatisticsResponse\x12t\n" +
	"\x13GetTimelineSettings\x12-.avion.timeline.v1.GetTimelineSettingsRequest\x1a..avion.timeline.v1.GetTimelineSettingsResponse\x12}\n" +
	"\x16UpdateTimelineSettings\x120.avion.timeline.v1.UpdateTimelineSettingsRequest\x1a1.avion.timeline.v1.UpdateTimelineSettingsResponse\x12q\n" +
	"\x12BatchAddToTimeline\x12,.avion.timeline.v1.BatchAddToTimelineRequest\x1a-.avion.timeline.v1.BatchAddToTimelineResponse\x12b\n" +
	"\rClearTimeline\x12'.avion.timeline.v1.ClearTimelineRequest\x1a(.avion.timeline.v1.ClearTimelineResponse\x12h\n" +
	"\x0fRebuildTimeline\x12).avion.timeline.v1.RebuildTimelineRequest\x1a*.avion.timeline.v1.RebuildTimelineResponse\x12|\n" +
	"\x15StreamTimelineUpdates\x12/.avion.timeline.v1.StreamTimelineUpdatesRequest\x1a0.avion.timeline.v1.StreamTimelineUpdatesResponse0\x01\x12\x82\x01\n" +
	"\x17StreamMultipleTimelines\x121.avion.timeline.v1.StreamMultipleTimelinesRequest\x1a2.avion.timeline.v1.StreamMultipleTimelinesResponse0\x01B\xd0\x01\n" +
	"\x15com.avion.timeline.v1B\x14TimelineServiceProtoP\x01Z;github.com/na2na-p/avion/proto/avion/timeline/v1;timelinev1\xa2\x02\x03ATX\xaa\x02\x11Avion.Timeline.V1\xca\x02\x11Avion\\Timeline\\V1\xe2\x02\x1dAvion\\Timeline\\V1\\GPBMetadata\xea\x02\x13Avion::Timeline::V1b\x06proto3"

var (
	file_avion_timeline_v1_timeline_service_proto_rawDescOnce sync.Once
	file_avion_timeline_v1_timeline_service_proto_rawDescData []byte
)

func file_avion_timeline_v1_timeline_service_proto_rawDescGZIP() []byte {
	file_avion_timeline_v1_timeline_service_proto_rawDescOnce.Do(func() {
		file_avion_timeline_v1_timeline_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_avion_timeline_v1_timeline_service_proto_rawDesc), len(file_avion_timeline_v1_timeline_service_proto_rawDesc)))
	})
	return file_avion_timeline_v1_timeline_service_proto_rawDescData
}

var file_avion_timeline_v1_timeline_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_avion_timeline_v1_timeline_service_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_avion_timeline_v1_timeline_service_proto_goTypes = []any{
	(TimelineUpdateEventType)(0),            // 0: avion.timeline.v1.TimelineUpdateEventType
	(*GetHomeTimelineRequest)(nil),          // 1: avion.timeline.v1.GetHomeTimelineRequest
	(*GetHomeTimelineResponse)(nil),         // 2: avion.timeline.v1.GetHomeTimelineResponse
	(*GetUserTimelineRequest)(nil),          // 3: avion.timeline.v1.GetUserTimelineRequest
	(*GetUserTimelineResponse)(nil),         // 4: avion.timeline.v1.GetUserTimelineResponse
	(*GetPublicTimelineRequest)(nil),        // 5: avion.timeline.v1.GetPublicTimelineRequest
	(*GetPublicTimelineResponse)(nil),       // 6: avion.timeline.v1.GetPublicTimelineResponse
	(*GetListTimelineRequest)(nil),          // 7: avion.timeline.v1.GetListTimelineRequest
	(*GetListTimelineResponse)(nil),         // 8: avion.timeline.v1.GetListTimelineResponse
	(*GetHashtagTimelineRequest)(nil),       // 9: avion.timeline.v1.GetHashtagTimelineRequest
	(*GetHashtagTimelineResponse)(nil),      // 10: avion.timeline.v1.GetHashtagTimelineResponse
	(*AddToTimelineRequest)(nil),            // 11: avion.timeline.v1.AddToTimelineRequest
	(*AddToTimelineResponse)(nil),           // 12: avion.timeline.v1.AddToTimelineResponse
	(*RemoveFromTimelineRequest)(nil),       // 13: avion.timeline.v1.RemoveFromTimelineRequest
	(*RemoveFromTimelineResponse)(nil),      // 14: avion.timeline.v1.RemoveFromTimelineResponse
	(*MarkAsReadRequest)(nil),               // 15: avion.timeline.v1.MarkAsReadRequest
	(*MarkAsReadResponse)(nil),              // 16: avion.timeline.v1.MarkAsReadResponse
	(*GetTimelineStatisticsRequest)(nil),    // 17: avion.timeline.v1.GetTimelineStatisticsRequest
	(*GetTimelineStatisticsResponse)(nil),   // 18: avion.timeline.v1.GetTimelineStatisticsResponse
	(*GetTimelineSettingsRequest)(nil),      // 19: avion.timeline.v1.GetTimelineSettingsRequest
	(*GetTimelineSettingsResponse)(nil),     // 20: avion.timeline.v1.GetTimelineSettingsResponse
	(*UpdateTimelineSettingsRequest)(nil),   // 21: avion.timeline.v1.UpdateTimelineSettingsRequest
	(*UpdateTimelineSettingsResponse)(nil),  // 22: avion.timeline.v1.UpdateTimelineSettingsResponse
	(*BatchAddToTimelineRequest)(nil),       // 23: avion.timeline.v1.BatchAddToTimelineRequest
	(*BatchAddToTimelineResponse)(nil),      // 24: avion.timeline.v1.BatchAddToTimelineResponse
	(*ClearTimelineRequest)(nil),            // 25: avion.timeline.v1.ClearTimelineRequest
	(*ClearTimelineResponse)(nil),           // 26: avion.timeline.v1.ClearTimelineResponse
	(*RebuildTimelineRequest)(nil),          // 27: avion.timeline.v1.RebuildTimelineRequest
	(*RebuildTimelineResponse)(nil),         // 28: avion.timeline.v1.RebuildTimelineResponse
	(*StreamTimelineUpdatesRequest)(nil),    // 29: avion.timeline.v1.StreamTimelineUpdatesRequest
	(*StreamTimelineUpdatesResponse)(nil),   // 30: avion.timeline.v1.StreamTimelineUpdatesResponse
	(*StreamMultipleTimelinesRequest)(nil),  // 31: avion.timeline.v1.StreamMultipleTimelinesRequest
	(*TimelineSubscription)(nil),            // 32: avion.timeline.v1.TimelineSubscription
	(*StreamMultipleTimelinesResponse)(nil), // 33: avion.timeline.v1.StreamMultipleTimelinesResponse
	(*v1.PaginationRequest)(nil),            // 34: avion.common.v1.PaginationRequest
	(*TimelineFilter)(nil),                  // 35: avion.timeline.v1.TimelineFilter
	(*TimelineEntry)(nil),                   // 36: avion.timeline.v1.TimelineEntry
	(*v1.PaginationResponse)(nil),           // 37: avion.common.v1.PaginationResponse
	(TimelineType)(0),                       // 38: avion.timeline.v1.TimelineType
	(TimelineEntryType)(0),                  // 39: avion.timeline.v1.TimelineEntryType
	(FanoutStrategy)(0),                     // 40: avion.timeline.v1.FanoutStrategy
	(*timestamppb.Timestamp)(nil),           // 41: google.protobuf.Timestamp
	(*TimelineStatistics)(nil),              // 42: avion.timeline.v1.TimelineStatistics
	(*TimelineSettings)(nil),                // 43: avion.timeline.v1.TimelineSettings
}
var file_avion_timeline_v1_timeline_service_proto_depIdxs = []int32{
	34, // 0: avion.timeline.v1.GetHomeTimelineRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	35, // 1: avion.timeline.v1.GetHomeTimelineRequest.filter:type_name -> avion.timeline.v1.TimelineFilter
	36, // 2: avion.timeline.v1.GetHomeTimelineResponse.entries:type_name -> avion.timeline.v1.TimelineEntry
	37, // 3: avion.timeline.v1.GetHomeTimelineResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	34, // 4: avion.timeline.v1.GetUserTimelineRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	35, // 5: avion.timeline.v1.GetUserTimelineRequest.filter:type_name -> avion.timeline.v1.TimelineFilter
	36, // 6: avion.timeline.v1.GetUserTimelineResponse.entries:type_name -> avion.timeline.v1.TimelineEntry
	37, // 7: avion.timeline.v1.GetUserTimelineResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	34, // 8: avion.timeline.v1.GetPublicTimelineRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	35, // 9: avion.timeline.v1.GetPublicTimelineRequest.filter:type_name -> avion.timeline.v1.TimelineFilter
	36, // 10: avion.timeline.v1.GetPublicTimelineResponse.entries:type_name -> avion.timeline.v1.TimelineEntry
	37, // 11: avion.timeline.v1.GetPublicTimelineResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	34, // 12: avion.timeline.v1.GetListTimelineRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	35, // 13: avion.timeline.v1.GetListTimelineRequest.filter:type_name -> avion.timeline.v1.TimelineFilter
	36, // 14: avion.timeline.v1.GetListTimelineResponse.entries:type_name -> avion.timeline.v1.TimelineEntry
	37, // 15: avion.timeline.v1.GetListTimelineResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	34, // 16: avion.timeline.v1.GetHashtagTimelineRequest.pagination:type_name -> avion.common.v1.PaginationRequest
	35, // 17: avion.timeline.v1.GetHashtagTimelineRequest.filter:type_name -> avion.timeline.v1.TimelineFilter
	36, // 18: avion.timeline.v1.GetHashtagTimelineResponse.entries:type_name -> avion.timeline.v1.TimelineEntry
	37, // 19: avion.timeline.v1.GetHashtagTimelineResponse.pagination:type_name -> avion.common.v1.PaginationResponse
	38, // 20: avion.timeline.v1.AddToTimelineRequest.timeline_type:type_name -> avion.timeline.v1.TimelineType
	39, // 21: avion.timeline.v1.AddToTimelineRequest.entry_type:type_name -> avion.timeline.v1.TimelineEntryType
	40, // 22: avion.timeline.v1.AddToTimelineRequest.fanout_strategy:type_name -> avion.timeline.v1.FanoutStrategy
	36, // 23: avion.timeline.v1.AddToTimelineResponse.entry:type_name -> avion.timeline.v1.TimelineEntry
	38, // 24: avion.timeline.v1.RemoveFromTimelineRequest.timeline_type:type_name -> avion.timeline.v1.TimelineType
	38, // 25: avion.timeline.v1.MarkAsReadRequest.timeline_type:type_name -> avion.timeline.v1.TimelineType
	41, // 26: avion.timeline.v1.MarkAsReadRequest.mark_until:type_name -> google.protobuf.Timestamp
	38, // 27: avion.timeline.v1.GetTimelineStatisticsRequest.timeline_type:type_name -> avion.timeline.v1.TimelineType
	42, // 28: avion.timeline.v1.GetTimelineStatisticsResponse.statistics:type_name -> avion.timeline.v1.TimelineStatistics
	38, // 29: avion.timeline.v1.GetTimelineSettingsRequest.timeline_type:type_name -> avion.timeline.v1.TimelineType
	43, // 30: avion.timeline.v1.GetTimelineSettingsResponse.settings:type_name -> avion.timeline.v1.TimelineSettings
	43, // 31: avion.timeline.v1.UpdateTimelineSettingsRequest.settings:type_name -> avion.timeline.v1.TimelineSettings
	43, // 32: avion.timeline.v1.UpdateTimelineSettingsResponse.settings:type_name -> avion.timeline.v1.TimelineSettings
	11, // 33: avion.timeline.v1.BatchAddToTimelineRequest.entries:type_name -> avion.timeline.v1.AddToTimelineRequest
	36, // 34: avion.timeline.v1.BatchAddToTimelineResponse.entries:type_name -> avion.timeline.v1.TimelineEntry
	38, // 35: avion.timeline.v1.ClearTimelineRequest.timeline_type:type_name -> avion.timeline.v1.TimelineType
	41, // 36: avion.timeline.v1.ClearTimelineRequest.before:type_name -> google.protobuf.Timestamp
	38, // 37: avion.timeline.v1.RebuildTimelineRequest.timeline_type:type_name -> avion.timeline.v1.TimelineType
	40, // 38: avion.timeline.v1.RebuildTimelineRequest.fanout_strategy:type_name -> avion.timeline.v1.FanoutStrategy
	41, // 39: avion.timeline.v1.RebuildTimelineRequest.since:type_name -> google.protobuf.Timestamp
	41, // 40: avion.timeline.v1.RebuildTimelineRequest.until:type_name -> google.protobuf.Timestamp
	38, // 41: avion.timeline.v1.StreamTimelineUpdatesRequest.timeline_type:type_name -> avion.timeline.v1.TimelineType
	35, // 42: avion.timeline.v1.StreamTimelineUpdatesRequest.filter:type_name -> avion.timeline.v1.TimelineFilter
	0,  // 43: avion.timeline.v1.StreamTimelineUpdatesResponse.event_type:type_name -> avion.timeline.v1.TimelineUpdateEventType
	36, // 44: avion.timeline.v1.StreamTimelineUpdatesResponse.entry:type_name -> avion.timeline.v1.TimelineEntry
	41, // 45: avion.timeline.v1.StreamTimelineUpdatesResponse.event_timestamp:type_name -> google.protobuf.Timestamp
	32, // 46: avion.timeline.v1.StreamMultipleTimelinesRequest.subscriptions:type_name -> avion.timeline.v1.TimelineSubscription
	35, // 47: avion.timeline.v1.StreamMultipleTimelinesRequest.global_filter:type_name -> avion.timeline.v1.TimelineFilter
	38, // 48: avion.timeline.v1.TimelineSubscription.timeline_type:type_name -> avion.timeline.v1.TimelineType
	35, // 49: avion.timeline.v1.TimelineSubscription.filter:type_name -> avion.timeline.v1.TimelineFilter
	38, // 50: avion.timeline.v1.StreamMultipleTimelinesResponse.timeline_type:type_name -> avion.timeline.v1.TimelineType
	0,  // 51: avion.timeline.v1.StreamMultipleTimelinesResponse.event_type:type_name -> avion.timeline.v1.TimelineUpdateEventType
	36, // 52: avion.timeline.v1.StreamMultipleTimelinesResponse.entry:type_name -> avion.timeline.v1.TimelineEntry
	41, // 53: avion.timeline.v1.StreamMultipleTimelinesResponse.event_timestamp:type_name -> google.protobuf.Timestamp
	1,  // 54: avion.timeline.v1.TimelineService.GetHomeTimeline:input_type -> avion.timeline.v1.GetHomeTimelineRequest
	3,  // 55: avion.timeline.v1.TimelineService.GetUserTimeline:input_type -> avion.timeline.v1.GetUserTimelineRequest
	5,  // 56: avion.timeline.v1.TimelineService.GetPublicTimeline:input_type -> avion.timeline.v1.GetPublicTimelineRequest
	7,  // 57: avion.timeline.v1.TimelineService.GetListTimeline:input_type -> avion.timeline.v1.GetListTimelineRequest
	9,  // 58: avion.timeline.v1.TimelineService.GetHashtagTimeline:input_type -> avion.timeline.v1.GetHashtagTimelineRequest
	11, // 59: avion.timeline.v1.TimelineService.AddToTimeline:input_type -> avion.timeline.v1.AddToTimelineRequest
	13, // 60: avion.timeline.v1.TimelineService.RemoveFromTimeline:input_type -> avion.timeline.v1.RemoveFromTimelineRequest
	15, // 61: avion.timeline.v1.TimelineService.MarkAsRead:input_type -> avion.timeline.v1.MarkAsReadRequest
	17, // 62: avion.timeline.v1.TimelineService.GetTimelineStatistics:input_type -> avion.timeline.v1.GetTimelineStatisticsRequest
	19, // 63: avion.timeline.v1.TimelineService.GetTimelineSettings:input_type -> avion.timeline.v1.GetTimelineSettingsRequest
	21, // 64: avion.timeline.v1.TimelineService.UpdateTimelineSettings:input_type -> avion.timeline.v1.UpdateTimelineSettingsRequest
	23, // 65: avion.timeline.v1.TimelineService.BatchAddToTimeline:input_type -> avion.timeline.v1.BatchAddToTimelineRequest
	25, // 66: avion.timeline.v1.TimelineService.ClearTimeline:input_type -> avion.timeline.v1.ClearTimelineRequest
	27, // 67: avion.timeline.v1.TimelineService.RebuildTimeline:input_type -> avion.timeline.v1.RebuildTimelineRequest
	29, // 68: avion.timeline.v1.TimelineService.StreamTimelineUpdates:input_type -> avion.timeline.v1.StreamTimelineUpdatesRequest
	31, // 69: avion.timeline.v1.TimelineService.StreamMultipleTimelines:input_type -> avion.timeline.v1.StreamMultipleTimelinesRequest
	2,  // 70: avion.timeline.v1.TimelineService.GetHomeTimeline:output_type -> avion.timeline.v1.GetHomeTimelineResponse
	4,  // 71: avion.timeline.v1.TimelineService.GetUserTimeline:output_type -> avion.timeline.v1.GetUserTimelineResponse
	6,  // 72: avion.timeline.v1.TimelineService.GetPublicTimeline:output_type -> avion.timeline.v1.GetPublicTimelineResponse
	8,  // 73: avion.timeline.v1.TimelineService.GetListTimeline:output_type -> avion.timeline.v1.GetListTimelineResponse
	10, // 74: avion.timeline.v1.TimelineService.GetHashtagTimeline:output_type -> avion.timeline.v1.GetHashtagTimelineResponse
	12, // 75: avion.timeline.v1.TimelineService.AddToTimeline:output_type -> avion.timeline.v1.AddToTimelineResponse
	14, // 76: avion.timeline.v1.TimelineService.RemoveFromTimeline:output_type -> avion.timeline.v1.RemoveFromTimelineResponse
	16, // 77: avion.timeline.v1.TimelineService.MarkAsRead:output_type -> avion.timeline.v1.MarkAsReadResponse
	18, // 78: avion.timeline.v1.TimelineService.GetTimelineStatistics:output_type -> avion.timeline.v1.GetTimelineStatisticsResponse
	20, // 79: avion.timeline.v1.TimelineService.GetTimelineSettings:output_type -> avion.timeline.v1.GetTimelineSettingsResponse
	22, // 80: avion.timeline.v1.TimelineService.UpdateTimelineSettings:output_type -> avion.timeline.v1.UpdateTimelineSettingsResponse
	24, // 81: avion.timeline.v1.TimelineService.BatchAddToTimeline:output_type -> avion.timeline.v1.BatchAddToTimelineResponse
	26, // 82: avion.timeline.v1.TimelineService.ClearTimeline:output_type -> avion.timeline.v1.ClearTimelineResponse
	28, // 83: avion.timeline.v1.TimelineService.RebuildTimeline:output_type -> avion.timeline.v1.RebuildTimelineResponse
	30, // 84: avion.timeline.v1.TimelineService.StreamTimelineUpdates:output_type -> avion.timeline.v1.StreamTimelineUpdatesResponse
	33, // 85: avion.timeline.v1.TimelineService.StreamMultipleTimelines:output_type -> avion.timeline.v1.StreamMultipleTimelinesResponse
	70, // [70:86] is the sub-list for method output_type
	54, // [54:70] is the sub-list for method input_type
	54, // [54:54] is the sub-list for extension type_name
	54, // [54:54] is the sub-list for extension extendee
	0,  // [0:54] is the sub-list for field type_name
}

func init() { file_avion_timeline_v1_timeline_service_proto_init() }
func file_avion_timeline_v1_timeline_service_proto_init() {
	if File_avion_timeline_v1_timeline_service_proto != nil {
		return
	}
	file_avion_timeline_v1_timeline_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_avion_timeline_v1_timeline_service_proto_rawDesc), len(file_avion_timeline_v1_timeline_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_avion_timeline_v1_timeline_service_proto_goTypes,
		DependencyIndexes: file_avion_timeline_v1_timeline_service_proto_depIdxs,
		EnumInfos:         file_avion_timeline_v1_timeline_service_proto_enumTypes,
		MessageInfos:      file_avion_timeline_v1_timeline_service_proto_msgTypes,
	}.Build()
	File_avion_timeline_v1_timeline_service_proto = out.File
	file_avion_timeline_v1_timeline_service_proto_goTypes = nil
	file_avion_timeline_v1_timeline_service_proto_depIdxs = nil
}
