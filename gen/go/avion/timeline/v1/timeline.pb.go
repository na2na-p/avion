// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: avion/timeline/v1/timeline.proto

package timelinev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// タイムラインタイプ
type TimelineType int32

const (
	// 未指定
	TimelineType_TIMELINE_TYPE_UNSPECIFIED TimelineType = 0
	// ホームタイムライン（フォローしているユーザーの投稿）
	TimelineType_TIMELINE_TYPE_HOME TimelineType = 1
	// ユーザータイムライン（特定ユーザーの投稿）
	TimelineType_TIMELINE_TYPE_USER TimelineType = 2
	// パブリックタイムライン（全体公開投稿）
	TimelineType_TIMELINE_TYPE_PUBLIC TimelineType = 3
	// リストタイムライン（リストメンバーの投稿）
	TimelineType_TIMELINE_TYPE_LIST TimelineType = 4
	// ハッシュタグタイムライン（特定ハッシュタグの投稿）
	TimelineType_TIMELINE_TYPE_HASHTAG TimelineType = 5
)

// Enum value maps for TimelineType.
var (
	TimelineType_name = map[int32]string{
		0: "TIMELINE_TYPE_UNSPECIFIED",
		1: "TIMELINE_TYPE_HOME",
		2: "TIMELINE_TYPE_USER",
		3: "TIMELINE_TYPE_PUBLIC",
		4: "TIMELINE_TYPE_LIST",
		5: "TIMELINE_TYPE_HASHTAG",
	}
	TimelineType_value = map[string]int32{
		"TIMELINE_TYPE_UNSPECIFIED": 0,
		"TIMELINE_TYPE_HOME":        1,
		"TIMELINE_TYPE_USER":        2,
		"TIMELINE_TYPE_PUBLIC":      3,
		"TIMELINE_TYPE_LIST":        4,
		"TIMELINE_TYPE_HASHTAG":     5,
	}
)

func (x TimelineType) Enum() *TimelineType {
	p := new(TimelineType)
	*p = x
	return p
}

func (x TimelineType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimelineType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_timeline_v1_timeline_proto_enumTypes[0].Descriptor()
}

func (TimelineType) Type() protoreflect.EnumType {
	return &file_avion_timeline_v1_timeline_proto_enumTypes[0]
}

func (x TimelineType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimelineType.Descriptor instead.
func (TimelineType) EnumDescriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_proto_rawDescGZIP(), []int{0}
}

// タイムラインエントリータイプ
type TimelineEntryType int32

const (
	// 未指定
	TimelineEntryType_TIMELINE_ENTRY_TYPE_UNSPECIFIED TimelineEntryType = 0
	// オリジナル投稿
	TimelineEntryType_TIMELINE_ENTRY_TYPE_ORIGINAL TimelineEntryType = 1
	// リドロップ（リツイート相当）
	TimelineEntryType_TIMELINE_ENTRY_TYPE_REDROP TimelineEntryType = 2
	// リプライ
	TimelineEntryType_TIMELINE_ENTRY_TYPE_REPLY TimelineEntryType = 3
	// 引用投稿
	TimelineEntryType_TIMELINE_ENTRY_TYPE_QUOTE TimelineEntryType = 4
)

// Enum value maps for TimelineEntryType.
var (
	TimelineEntryType_name = map[int32]string{
		0: "TIMELINE_ENTRY_TYPE_UNSPECIFIED",
		1: "TIMELINE_ENTRY_TYPE_ORIGINAL",
		2: "TIMELINE_ENTRY_TYPE_REDROP",
		3: "TIMELINE_ENTRY_TYPE_REPLY",
		4: "TIMELINE_ENTRY_TYPE_QUOTE",
	}
	TimelineEntryType_value = map[string]int32{
		"TIMELINE_ENTRY_TYPE_UNSPECIFIED": 0,
		"TIMELINE_ENTRY_TYPE_ORIGINAL":    1,
		"TIMELINE_ENTRY_TYPE_REDROP":      2,
		"TIMELINE_ENTRY_TYPE_REPLY":       3,
		"TIMELINE_ENTRY_TYPE_QUOTE":       4,
	}
)

func (x TimelineEntryType) Enum() *TimelineEntryType {
	p := new(TimelineEntryType)
	*p = x
	return p
}

func (x TimelineEntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimelineEntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_timeline_v1_timeline_proto_enumTypes[1].Descriptor()
}

func (TimelineEntryType) Type() protoreflect.EnumType {
	return &file_avion_timeline_v1_timeline_proto_enumTypes[1]
}

func (x TimelineEntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimelineEntryType.Descriptor instead.
func (TimelineEntryType) EnumDescriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_proto_rawDescGZIP(), []int{1}
}

// ファンアウト戦略
type FanoutStrategy int32

const (
	// 未指定
	FanoutStrategy_FANOUT_STRATEGY_UNSPECIFIED FanoutStrategy = 0
	// プッシュ型（事前にタイムラインを生成）
	FanoutStrategy_FANOUT_STRATEGY_PUSH FanoutStrategy = 1
	// プル型（リクエスト時に動的生成）
	FanoutStrategy_FANOUT_STRATEGY_PULL FanoutStrategy = 2
	// ハイブリッド型（プッシュとプルの組み合わせ）
	FanoutStrategy_FANOUT_STRATEGY_HYBRID FanoutStrategy = 3
)

// Enum value maps for FanoutStrategy.
var (
	FanoutStrategy_name = map[int32]string{
		0: "FANOUT_STRATEGY_UNSPECIFIED",
		1: "FANOUT_STRATEGY_PUSH",
		2: "FANOUT_STRATEGY_PULL",
		3: "FANOUT_STRATEGY_HYBRID",
	}
	FanoutStrategy_value = map[string]int32{
		"FANOUT_STRATEGY_UNSPECIFIED": 0,
		"FANOUT_STRATEGY_PUSH":        1,
		"FANOUT_STRATEGY_PULL":        2,
		"FANOUT_STRATEGY_HYBRID":      3,
	}
)

func (x FanoutStrategy) Enum() *FanoutStrategy {
	p := new(FanoutStrategy)
	*p = x
	return p
}

func (x FanoutStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FanoutStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_avion_timeline_v1_timeline_proto_enumTypes[2].Descriptor()
}

func (FanoutStrategy) Type() protoreflect.EnumType {
	return &file_avion_timeline_v1_timeline_proto_enumTypes[2]
}

func (x FanoutStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FanoutStrategy.Descriptor instead.
func (FanoutStrategy) EnumDescriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_proto_rawDescGZIP(), []int{2}
}

// タイムラインメタデータ
type TimelineMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 既読フラグ
	IsRead bool `protobuf:"varint,1,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	// ブックマーク済みフラグ
	IsBookmarked bool `protobuf:"varint,2,opt,name=is_bookmarked,json=isBookmarked,proto3" json:"is_bookmarked,omitempty"`
	// インタラクション数（いいね、リドロップ、リプライの合計）
	InteractionCount int32 `protobuf:"varint,3,opt,name=interaction_count,json=interactionCount,proto3" json:"interaction_count,omitempty"`
	// 最後のインタラクション日時
	LastInteractionAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_interaction_at,json=lastInteractionAt,proto3" json:"last_interaction_at,omitempty"`
	// リドロップしたユーザーID（リドロップの場合）
	RedroppedByUserId string `protobuf:"bytes,5,opt,name=redropped_by_user_id,json=redroppedByUserId,proto3" json:"redropped_by_user_id,omitempty"`
	// リドロップ日時（リドロップの場合）
	RedroppedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=redropped_at,json=redroppedAt,proto3" json:"redropped_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimelineMetadata) Reset() {
	*x = TimelineMetadata{}
	mi := &file_avion_timeline_v1_timeline_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimelineMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineMetadata) ProtoMessage() {}

func (x *TimelineMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineMetadata.ProtoReflect.Descriptor instead.
func (*TimelineMetadata) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_proto_rawDescGZIP(), []int{0}
}

func (x *TimelineMetadata) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *TimelineMetadata) GetIsBookmarked() bool {
	if x != nil {
		return x.IsBookmarked
	}
	return false
}

func (x *TimelineMetadata) GetInteractionCount() int32 {
	if x != nil {
		return x.InteractionCount
	}
	return 0
}

func (x *TimelineMetadata) GetLastInteractionAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastInteractionAt
	}
	return nil
}

func (x *TimelineMetadata) GetRedroppedByUserId() string {
	if x != nil {
		return x.RedroppedByUserId
	}
	return ""
}

func (x *TimelineMetadata) GetRedroppedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RedroppedAt
	}
	return nil
}

// タイムラインエントリー
type TimelineEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DropのID
	DropId string `protobuf:"bytes,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	// 投稿者のユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// タイムラインへの追加日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// スコア（ソート用、タイムスタンプやエンゲージメントに基づく）
	Score float64 `protobuf:"fixed64,4,opt,name=score,proto3" json:"score,omitempty"`
	// エントリータイプ
	EntryType TimelineEntryType `protobuf:"varint,5,opt,name=entry_type,json=entryType,proto3,enum=avion.timeline.v1.TimelineEntryType" json:"entry_type,omitempty"`
	// メタデータ
	Metadata *TimelineMetadata `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// タイムラインタイプ
	TimelineType TimelineType `protobuf:"varint,7,opt,name=timeline_type,json=timelineType,proto3,enum=avion.timeline.v1.TimelineType" json:"timeline_type,omitempty"`
	// タイムライン所有者のユーザーID（ホームタイムラインの場合）
	OwnerUserId   string `protobuf:"bytes,8,opt,name=owner_user_id,json=ownerUserId,proto3" json:"owner_user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimelineEntry) Reset() {
	*x = TimelineEntry{}
	mi := &file_avion_timeline_v1_timeline_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimelineEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineEntry) ProtoMessage() {}

func (x *TimelineEntry) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineEntry.ProtoReflect.Descriptor instead.
func (*TimelineEntry) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_proto_rawDescGZIP(), []int{1}
}

func (x *TimelineEntry) GetDropId() string {
	if x != nil {
		return x.DropId
	}
	return ""
}

func (x *TimelineEntry) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TimelineEntry) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TimelineEntry) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TimelineEntry) GetEntryType() TimelineEntryType {
	if x != nil {
		return x.EntryType
	}
	return TimelineEntryType_TIMELINE_ENTRY_TYPE_UNSPECIFIED
}

func (x *TimelineEntry) GetMetadata() *TimelineMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TimelineEntry) GetTimelineType() TimelineType {
	if x != nil {
		return x.TimelineType
	}
	return TimelineType_TIMELINE_TYPE_UNSPECIFIED
}

func (x *TimelineEntry) GetOwnerUserId() string {
	if x != nil {
		return x.OwnerUserId
	}
	return ""
}

// タイムライン統計情報
type TimelineStatistics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// タイムラインタイプ
	TimelineType TimelineType `protobuf:"varint,1,opt,name=timeline_type,json=timelineType,proto3,enum=avion.timeline.v1.TimelineType" json:"timeline_type,omitempty"`
	// 総エントリー数
	TotalEntries int64 `protobuf:"varint,2,opt,name=total_entries,json=totalEntries,proto3" json:"total_entries,omitempty"`
	// 未読エントリー数
	UnreadEntries int64 `protobuf:"varint,3,opt,name=unread_entries,json=unreadEntries,proto3" json:"unread_entries,omitempty"`
	// 今日追加されたエントリー数
	TodayEntries int64 `protobuf:"varint,4,opt,name=today_entries,json=todayEntries,proto3" json:"today_entries,omitempty"`
	// 最終更新日時
	LastUpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_updated_at,json=lastUpdatedAt,proto3" json:"last_updated_at,omitempty"`
	// アクティブユーザー数（このタイムラインに投稿したユニークユーザー数）
	ActiveUsers   int32 `protobuf:"varint,6,opt,name=active_users,json=activeUsers,proto3" json:"active_users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimelineStatistics) Reset() {
	*x = TimelineStatistics{}
	mi := &file_avion_timeline_v1_timeline_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimelineStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineStatistics) ProtoMessage() {}

func (x *TimelineStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineStatistics.ProtoReflect.Descriptor instead.
func (*TimelineStatistics) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_proto_rawDescGZIP(), []int{2}
}

func (x *TimelineStatistics) GetTimelineType() TimelineType {
	if x != nil {
		return x.TimelineType
	}
	return TimelineType_TIMELINE_TYPE_UNSPECIFIED
}

func (x *TimelineStatistics) GetTotalEntries() int64 {
	if x != nil {
		return x.TotalEntries
	}
	return 0
}

func (x *TimelineStatistics) GetUnreadEntries() int64 {
	if x != nil {
		return x.UnreadEntries
	}
	return 0
}

func (x *TimelineStatistics) GetTodayEntries() int64 {
	if x != nil {
		return x.TodayEntries
	}
	return 0
}

func (x *TimelineStatistics) GetLastUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedAt
	}
	return nil
}

func (x *TimelineStatistics) GetActiveUsers() int32 {
	if x != nil {
		return x.ActiveUsers
	}
	return 0
}

// タイムラインフィルター
type TimelineFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 開始日時（この日時以降のエントリーを取得）
	Since *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=since,proto3" json:"since,omitempty"`
	// 終了日時（この日時以前のエントリーを取得）
	Until *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=until,proto3" json:"until,omitempty"`
	// エントリータイプでフィルタ
	EntryTypes []TimelineEntryType `protobuf:"varint,3,rep,packed,name=entry_types,json=entryTypes,proto3,enum=avion.timeline.v1.TimelineEntryType" json:"entry_types,omitempty"`
	// ユーザーIDでフィルタ（特定ユーザーの投稿のみ）
	UserIds []string `protobuf:"bytes,4,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	// 除外するユーザーID（ミュート等）
	ExcludedUserIds []string `protobuf:"bytes,5,rep,name=excluded_user_ids,json=excludedUserIds,proto3" json:"excluded_user_ids,omitempty"`
	// 最小スコア
	MinScore float64 `protobuf:"fixed64,6,opt,name=min_score,json=minScore,proto3" json:"min_score,omitempty"`
	// 最大スコア
	MaxScore float64 `protobuf:"fixed64,7,opt,name=max_score,json=maxScore,proto3" json:"max_score,omitempty"`
	// 未読のみ表示
	OnlyUnread bool `protobuf:"varint,8,opt,name=only_unread,json=onlyUnread,proto3" json:"only_unread,omitempty"`
	// ブックマーク済みのみ表示
	OnlyBookmarked bool `protobuf:"varint,9,opt,name=only_bookmarked,json=onlyBookmarked,proto3" json:"only_bookmarked,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TimelineFilter) Reset() {
	*x = TimelineFilter{}
	mi := &file_avion_timeline_v1_timeline_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimelineFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineFilter) ProtoMessage() {}

func (x *TimelineFilter) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineFilter.ProtoReflect.Descriptor instead.
func (*TimelineFilter) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_proto_rawDescGZIP(), []int{3}
}

func (x *TimelineFilter) GetSince() *timestamppb.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

func (x *TimelineFilter) GetUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.Until
	}
	return nil
}

func (x *TimelineFilter) GetEntryTypes() []TimelineEntryType {
	if x != nil {
		return x.EntryTypes
	}
	return nil
}

func (x *TimelineFilter) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *TimelineFilter) GetExcludedUserIds() []string {
	if x != nil {
		return x.ExcludedUserIds
	}
	return nil
}

func (x *TimelineFilter) GetMinScore() float64 {
	if x != nil {
		return x.MinScore
	}
	return 0
}

func (x *TimelineFilter) GetMaxScore() float64 {
	if x != nil {
		return x.MaxScore
	}
	return 0
}

func (x *TimelineFilter) GetOnlyUnread() bool {
	if x != nil {
		return x.OnlyUnread
	}
	return false
}

func (x *TimelineFilter) GetOnlyBookmarked() bool {
	if x != nil {
		return x.OnlyBookmarked
	}
	return false
}

// タイムライン設定
type TimelineSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// タイムラインタイプ
	TimelineType TimelineType `protobuf:"varint,2,opt,name=timeline_type,json=timelineType,proto3,enum=avion.timeline.v1.TimelineType" json:"timeline_type,omitempty"`
	// ファンアウト戦略
	FanoutStrategy FanoutStrategy `protobuf:"varint,3,opt,name=fanout_strategy,json=fanoutStrategy,proto3,enum=avion.timeline.v1.FanoutStrategy" json:"fanout_strategy,omitempty"`
	// キャッシュTTL（秒）
	CacheTtlSeconds int32 `protobuf:"varint,4,opt,name=cache_ttl_seconds,json=cacheTtlSeconds,proto3" json:"cache_ttl_seconds,omitempty"`
	// 最大エントリー数
	MaxEntries int32 `protobuf:"varint,5,opt,name=max_entries,json=maxEntries,proto3" json:"max_entries,omitempty"`
	// 自動削除期間（日数、0は無効）
	AutoDeleteDays int32 `protobuf:"varint,6,opt,name=auto_delete_days,json=autoDeleteDays,proto3" json:"auto_delete_days,omitempty"`
	// リプライを含める
	IncludeReplies bool `protobuf:"varint,7,opt,name=include_replies,json=includeReplies,proto3" json:"include_replies,omitempty"`
	// リドロップを含める
	IncludeRedrops bool `protobuf:"varint,8,opt,name=include_redrops,json=includeRedrops,proto3" json:"include_redrops,omitempty"`
	// 作成日時
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新日時
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimelineSettings) Reset() {
	*x = TimelineSettings{}
	mi := &file_avion_timeline_v1_timeline_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimelineSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineSettings) ProtoMessage() {}

func (x *TimelineSettings) ProtoReflect() protoreflect.Message {
	mi := &file_avion_timeline_v1_timeline_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineSettings.ProtoReflect.Descriptor instead.
func (*TimelineSettings) Descriptor() ([]byte, []int) {
	return file_avion_timeline_v1_timeline_proto_rawDescGZIP(), []int{4}
}

func (x *TimelineSettings) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TimelineSettings) GetTimelineType() TimelineType {
	if x != nil {
		return x.TimelineType
	}
	return TimelineType_TIMELINE_TYPE_UNSPECIFIED
}

func (x *TimelineSettings) GetFanoutStrategy() FanoutStrategy {
	if x != nil {
		return x.FanoutStrategy
	}
	return FanoutStrategy_FANOUT_STRATEGY_UNSPECIFIED
}

func (x *TimelineSettings) GetCacheTtlSeconds() int32 {
	if x != nil {
		return x.CacheTtlSeconds
	}
	return 0
}

func (x *TimelineSettings) GetMaxEntries() int32 {
	if x != nil {
		return x.MaxEntries
	}
	return 0
}

func (x *TimelineSettings) GetAutoDeleteDays() int32 {
	if x != nil {
		return x.AutoDeleteDays
	}
	return 0
}

func (x *TimelineSettings) GetIncludeReplies() bool {
	if x != nil {
		return x.IncludeReplies
	}
	return false
}

func (x *TimelineSettings) GetIncludeRedrops() bool {
	if x != nil {
		return x.IncludeRedrops
	}
	return false
}

func (x *TimelineSettings) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TimelineSettings) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_avion_timeline_v1_timeline_proto protoreflect.FileDescriptor

const file_avion_timeline_v1_timeline_proto_rawDesc = "" +
	"\n" +
	" avion/timeline/v1/timeline.proto\x12\x11avion.timeline.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb9\x02\n" +
	"\x10TimelineMetadata\x12\x17\n" +
	"\ais_read\x18\x01 \x01(\bR\x06isRead\x12#\n" +
	"\ris_bookmarked\x18\x02 \x01(\bR\fisBookmarked\x12+\n" +
	"\x11interaction_count\x18\x03 \x01(\x05R\x10interactionCount\x12J\n" +
	"\x13last_interaction_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x11lastInteractionAt\x12/\n" +
	"\x14redropped_by_user_id\x18\x05 \x01(\tR\x11redroppedByUserId\x12=\n" +
	"\fredropped_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vredroppedAt\"\x82\x03\n" +
	"\rTimelineEntry\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\tR\x06dropId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x14\n" +
	"\x05score\x18\x04 \x01(\x01R\x05score\x12C\n" +
	"\n" +
	"entry_type\x18\x05 \x01(\x0e2$.avion.timeline.v1.TimelineEntryTypeR\tentryType\x12?\n" +
	"\bmetadata\x18\x06 \x01(\v2#.avion.timeline.v1.TimelineMetadataR\bmetadata\x12D\n" +
	"\rtimeline_type\x18\a \x01(\x0e2\x1f.avion.timeline.v1.TimelineTypeR\ftimelineType\x12\"\n" +
	"\rowner_user_id\x18\b \x01(\tR\vownerUserId\"\xb2\x02\n" +
	"\x12TimelineStatistics\x12D\n" +
	"\rtimeline_type\x18\x01 \x01(\x0e2\x1f.avion.timeline.v1.TimelineTypeR\ftimelineType\x12#\n" +
	"\rtotal_entries\x18\x02 \x01(\x03R\ftotalEntries\x12%\n" +
	"\x0eunread_entries\x18\x03 \x01(\x03R\runreadEntries\x12#\n" +
	"\rtoday_entries\x18\x04 \x01(\x03R\ftodayEntries\x12B\n" +
	"\x0flast_updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\rlastUpdatedAt\x12!\n" +
	"\factive_users\x18\x06 \x01(\x05R\vactiveUsers\"\x86\x03\n" +
	"\x0eTimelineFilter\x120\n" +
	"\x05since\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x05since\x120\n" +
	"\x05until\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x05until\x12E\n" +
	"\ventry_types\x18\x03 \x03(\x0e2$.avion.timeline.v1.TimelineEntryTypeR\n" +
	"entryTypes\x12\x19\n" +
	"\buser_ids\x18\x04 \x03(\tR\auserIds\x12*\n" +
	"\x11excluded_user_ids\x18\x05 \x03(\tR\x0fexcludedUserIds\x12\x1b\n" +
	"\tmin_score\x18\x06 \x01(\x01R\bminScore\x12\x1b\n" +
	"\tmax_score\x18\a \x01(\x01R\bmaxScore\x12\x1f\n" +
	"\vonly_unread\x18\b \x01(\bR\n" +
	"onlyUnread\x12'\n" +
	"\x0fonly_bookmarked\x18\t \x01(\bR\x0eonlyBookmarked\"\xfc\x03\n" +
	"\x10TimelineSettings\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12D\n" +
	"\rtimeline_type\x18\x02 \x01(\x0e2\x1f.avion.timeline.v1.TimelineTypeR\ftimelineType\x12J\n" +
	"\x0ffanout_strategy\x18\x03 \x01(\x0e2!.avion.timeline.v1.FanoutStrategyR\x0efanoutStrategy\x12*\n" +
	"\x11cache_ttl_seconds\x18\x04 \x01(\x05R\x0fcacheTtlSeconds\x12\x1f\n" +
	"\vmax_entries\x18\x05 \x01(\x05R\n" +
	"maxEntries\x12(\n" +
	"\x10auto_delete_days\x18\x06 \x01(\x05R\x0eautoDeleteDays\x12'\n" +
	"\x0finclude_replies\x18\a \x01(\bR\x0eincludeReplies\x12'\n" +
	"\x0finclude_redrops\x18\b \x01(\bR\x0eincludeRedrops\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt*\xaa\x01\n" +
	"\fTimelineType\x12\x1d\n" +
	"\x19TIMELINE_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12TIMELINE_TYPE_HOME\x10\x01\x12\x16\n" +
	"\x12TIMELINE_TYPE_USER\x10\x02\x12\x18\n" +
	"\x14TIMELINE_TYPE_PUBLIC\x10\x03\x12\x16\n" +
	"\x12TIMELINE_TYPE_LIST\x10\x04\x12\x19\n" +
	"\x15TIMELINE_TYPE_HASHTAG\x10\x05*\xb8\x01\n" +
	"\x11TimelineEntryType\x12#\n" +
	"\x1fTIMELINE_ENTRY_TYPE_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cTIMELINE_ENTRY_TYPE_ORIGINAL\x10\x01\x12\x1e\n" +
	"\x1aTIMELINE_ENTRY_TYPE_REDROP\x10\x02\x12\x1d\n" +
	"\x19TIMELINE_ENTRY_TYPE_REPLY\x10\x03\x12\x1d\n" +
	"\x19TIMELINE_ENTRY_TYPE_QUOTE\x10\x04*\x81\x01\n" +
	"\x0eFanoutStrategy\x12\x1f\n" +
	"\x1bFANOUT_STRATEGY_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14FANOUT_STRATEGY_PUSH\x10\x01\x12\x18\n" +
	"\x14FANOUT_STRATEGY_PULL\x10\x02\x12\x1a\n" +
	"\x16FANOUT_STRATEGY_HYBRID\x10\x03B\xc9\x01\n" +
	"\x15com.avion.timeline.v1B\rTimelineProtoP\x01Z;github.com/na2na-p/avion/proto/avion/timeline/v1;timelinev1\xa2\x02\x03ATX\xaa\x02\x11Avion.Timeline.V1\xca\x02\x11Avion\\Timeline\\V1\xe2\x02\x1dAvion\\Timeline\\V1\\GPBMetadata\xea\x02\x13Avion::Timeline::V1b\x06proto3"

var (
	file_avion_timeline_v1_timeline_proto_rawDescOnce sync.Once
	file_avion_timeline_v1_timeline_proto_rawDescData []byte
)

func file_avion_timeline_v1_timeline_proto_rawDescGZIP() []byte {
	file_avion_timeline_v1_timeline_proto_rawDescOnce.Do(func() {
		file_avion_timeline_v1_timeline_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_avion_timeline_v1_timeline_proto_rawDesc), len(file_avion_timeline_v1_timeline_proto_rawDesc)))
	})
	return file_avion_timeline_v1_timeline_proto_rawDescData
}

var file_avion_timeline_v1_timeline_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_avion_timeline_v1_timeline_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_avion_timeline_v1_timeline_proto_goTypes = []any{
	(TimelineType)(0),             // 0: avion.timeline.v1.TimelineType
	(TimelineEntryType)(0),        // 1: avion.timeline.v1.TimelineEntryType
	(FanoutStrategy)(0),           // 2: avion.timeline.v1.FanoutStrategy
	(*TimelineMetadata)(nil),      // 3: avion.timeline.v1.TimelineMetadata
	(*TimelineEntry)(nil),         // 4: avion.timeline.v1.TimelineEntry
	(*TimelineStatistics)(nil),    // 5: avion.timeline.v1.TimelineStatistics
	(*TimelineFilter)(nil),        // 6: avion.timeline.v1.TimelineFilter
	(*TimelineSettings)(nil),      // 7: avion.timeline.v1.TimelineSettings
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_avion_timeline_v1_timeline_proto_depIdxs = []int32{
	8,  // 0: avion.timeline.v1.TimelineMetadata.last_interaction_at:type_name -> google.protobuf.Timestamp
	8,  // 1: avion.timeline.v1.TimelineMetadata.redropped_at:type_name -> google.protobuf.Timestamp
	8,  // 2: avion.timeline.v1.TimelineEntry.created_at:type_name -> google.protobuf.Timestamp
	1,  // 3: avion.timeline.v1.TimelineEntry.entry_type:type_name -> avion.timeline.v1.TimelineEntryType
	3,  // 4: avion.timeline.v1.TimelineEntry.metadata:type_name -> avion.timeline.v1.TimelineMetadata
	0,  // 5: avion.timeline.v1.TimelineEntry.timeline_type:type_name -> avion.timeline.v1.TimelineType
	0,  // 6: avion.timeline.v1.TimelineStatistics.timeline_type:type_name -> avion.timeline.v1.TimelineType
	8,  // 7: avion.timeline.v1.TimelineStatistics.last_updated_at:type_name -> google.protobuf.Timestamp
	8,  // 8: avion.timeline.v1.TimelineFilter.since:type_name -> google.protobuf.Timestamp
	8,  // 9: avion.timeline.v1.TimelineFilter.until:type_name -> google.protobuf.Timestamp
	1,  // 10: avion.timeline.v1.TimelineFilter.entry_types:type_name -> avion.timeline.v1.TimelineEntryType
	0,  // 11: avion.timeline.v1.TimelineSettings.timeline_type:type_name -> avion.timeline.v1.TimelineType
	2,  // 12: avion.timeline.v1.TimelineSettings.fanout_strategy:type_name -> avion.timeline.v1.FanoutStrategy
	8,  // 13: avion.timeline.v1.TimelineSettings.created_at:type_name -> google.protobuf.Timestamp
	8,  // 14: avion.timeline.v1.TimelineSettings.updated_at:type_name -> google.protobuf.Timestamp
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_avion_timeline_v1_timeline_proto_init() }
func file_avion_timeline_v1_timeline_proto_init() {
	if File_avion_timeline_v1_timeline_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_avion_timeline_v1_timeline_proto_rawDesc), len(file_avion_timeline_v1_timeline_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_avion_timeline_v1_timeline_proto_goTypes,
		DependencyIndexes: file_avion_timeline_v1_timeline_proto_depIdxs,
		EnumInfos:         file_avion_timeline_v1_timeline_proto_enumTypes,
		MessageInfos:      file_avion_timeline_v1_timeline_proto_msgTypes,
	}.Build()
	File_avion_timeline_v1_timeline_proto = out.File
	file_avion_timeline_v1_timeline_proto_goTypes = nil
	file_avion_timeline_v1_timeline_proto_depIdxs = nil
}
